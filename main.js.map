{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.filter.pipe.ts","webpack:///./src/app/app.module.ts","webpack:///./src/core/action/action.js","webpack:///./src/core/action/action.model.js","webpack:///./src/core/animation/animation.model.js","webpack:///./src/core/body/body.ctrl.js","webpack:///./src/core/body/body.model.js","webpack:///./src/core/body/body.view.js","webpack:///./src/core/box/box.ctrl.js","webpack:///./src/core/cell/cell.selector.js","webpack:///./src/core/cell/td.ctrl.js","webpack:///./src/core/cell/th.ctrl.js","webpack:///./src/core/column-list/column.list.ctrl.js","webpack:///./src/core/column-list/column.list.generate.js","webpack:///./src/core/column-list/column.list.model.js","webpack:///./src/core/column-list/column.list.sort.js","webpack:///./src/core/column-type/array.column.js","webpack:///./src/core/column-type/bool.column.js","webpack:///./src/core/column-type/cohort.column.js","webpack:///./src/core/column-type/column.model.js","webpack:///./src/core/column-type/currency.column.js","webpack:///./src/core/column-type/data.column.model.js","webpack:///./src/core/column-type/date.column.js","webpack:///./src/core/column-type/email.column.js","webpack:///./src/core/column-type/file.column.js","webpack:///./src/core/column-type/filter.row.column.js","webpack:///./src/core/column-type/group.column.js","webpack:///./src/core/column-type/group.summary.column.js","webpack:///./src/core/column-type/id.column.js","webpack:///./src/core/column-type/image.column.js","webpack:///./src/core/column-type/number.column.js","webpack:///./src/core/column-type/pad.column.js","webpack:///./src/core/column-type/password.column.js","webpack:///./src/core/column-type/pivot.column.js","webpack:///./src/core/column-type/reference.column.js","webpack:///./src/core/column-type/row.details.column.js","webpack:///./src/core/column-type/row.expand.column.js","webpack:///./src/core/column-type/row.indicator.column.js","webpack:///./src/core/column-type/row.number.column.js","webpack:///./src/core/column-type/row.options.column.js","webpack:///./src/core/column-type/select.column.js","webpack:///./src/core/column-type/text.column.js","webpack:///./src/core/column-type/time.column.js","webpack:///./src/core/column-type/url.column.js","webpack:///./src/core/column/column.factory.js","webpack:///./src/core/column/column.matrix.js","webpack:///./src/core/column/column.service.js","webpack:///./src/core/command/command.js","webpack:///./src/core/command/command.manager.js","webpack:///./src/core/command/composite.command.manager.js","webpack:///./src/core/command/table.command.manager.js","webpack:///./src/core/data/data.model.js","webpack:///./src/core/definition.js","webpack:///./src/core/dom/bag.js","webpack:///./src/core/dom/body.js","webpack:///./src/core/dom/box.js","webpack:///./src/core/dom/cell.js","webpack:///./src/core/dom/column.js","webpack:///./src/core/dom/container.js","webpack:///./src/core/dom/data.js","webpack:///./src/core/dom/element.js","webpack:///./src/core/dom/fake/class.list.js","webpack:///./src/core/dom/fake/element.js","webpack:///./src/core/dom/fake/layer.js","webpack:///./src/core/dom/foot.js","webpack:///./src/core/dom/head.js","webpack:///./src/core/dom/row.js","webpack:///./src/core/dom/selector/matrix.js","webpack:///./src/core/dom/selector/selector.factory.js","webpack:///./src/core/dom/selector/selector.js","webpack:///./src/core/dom/selector/selector.mark.js","webpack:///./src/core/dom/selector/selector.mediate.js","webpack:///./src/core/dom/selector/unit.factory.js","webpack:///./src/core/dom/table.js","webpack:///./src/core/dom/td.js","webpack:///./src/core/dom/tr.js","webpack:///./src/core/dom/unit.js","webpack:///./src/core/dom/view.js","webpack:///./src/core/dom/virtual/box.js","webpack:///./src/core/dom/virtual/cell.box.js","webpack:///./src/core/dom/virtual/cell.js","webpack:///./src/core/dom/virtual/column.box.js","webpack:///./src/core/dom/virtual/column.js","webpack:///./src/core/dom/virtual/element.js","webpack:///./src/core/dom/virtual/row.box.js","webpack:///./src/core/dom/virtual/row.js","webpack:///./src/core/dom/virtual/style.box.js","webpack:///./src/core/drag/drag.model.js","webpack:///./src/core/drag/drag.service.js","webpack:///./src/core/edit/edit.cell.editor.js","webpack:///./src/core/edit/edit.cell.view.js","webpack:///./src/core/edit/edit.model.js","webpack:///./src/core/edit/edit.row.editor.js","webpack:///./src/core/edit/edit.row.view.js","webpack:///./src/core/edit/edit.service.js","webpack:///./src/core/edit/edit.view.js","webpack:///./src/core/export/csv/csv.js","webpack:///./src/core/export/export.model.js","webpack:///./src/core/export/export.service.js","webpack:///./src/core/export/json/json.js","webpack:///./src/core/export/xml/xml.js","webpack:///./src/core/expression/expression.build.js","webpack:///./src/core/expression/expression.visitor.js","webpack:///./src/core/expression/markup.visitor.js","webpack:///./src/core/expression/predicate.visitor.js","webpack:///./src/core/fetch/fetch.model.js","webpack:///./src/core/filter/filter.model.js","webpack:///./src/core/filter/filter.view.js","webpack:///./src/core/filter/match.js","webpack:///./src/core/focus/focus.model.js","webpack:///./src/core/focus/focus.service.js","webpack:///./src/core/foot/foot.model.js","webpack:///./src/core/foot/foot.view.js","webpack:///./src/core/format/format.service.js","webpack:///./src/core/grid/grid.ctrl.js","webpack:///./src/core/grid/grid.model.js","webpack:///./src/core/group/group.build.js","webpack:///./src/core/group/group.model.js","webpack:///./src/core/group/group.service.js","webpack:///./src/core/group/group.view.js","webpack:///./src/core/head/head.ctrl.js","webpack:///./src/core/head/head.model.js","webpack:///./src/core/head/head.view.js","webpack:///./src/core/highlight/highlight.model.js","webpack:///./src/core/highlight/highlight.view.js","webpack:///./src/core/import/csv/csv.js","webpack:///./src/core/import/import.model.js","webpack:///./src/core/import/json/json.js","webpack:///./src/core/import/xml/xml.js","webpack:///./src/core/infrastructure/cache.js","webpack:///./src/core/infrastructure/composite.js","webpack:///./src/core/infrastructure/defer.js","webpack:///./src/core/infrastructure/disposable.js","webpack:///./src/core/infrastructure/error.js","webpack:///./src/core/infrastructure/event.js","webpack:///./src/core/infrastructure/event.listener.js","webpack:///./src/core/infrastructure/event.manager.js","webpack:///./src/core/infrastructure/fetch.js","webpack:///./src/core/infrastructure/guard.js","webpack:///./src/core/infrastructure/log.js","webpack:///./src/core/infrastructure/model.bind.js","webpack:///./src/core/infrastructure/model.builder.js","webpack:///./src/core/infrastructure/model.js","webpack:///./src/core/infrastructure/model.proxy.js","webpack:///./src/core/infrastructure/range.js","webpack:///./src/core/io/char.reader.js","webpack:///./src/core/io/keyboard.js","webpack:///./src/core/layer/layer.model.js","webpack:///./src/core/layout/layout.model.js","webpack:///./src/core/layout/layout.view.js","webpack:///./src/core/mouse/mouse.code.js","webpack:///./src/core/navigation/navigation.js","webpack:///./src/core/navigation/navigation.model.js","webpack:///./src/core/navigation/navigation.view.js","webpack:///./src/core/node/node.build.js","webpack:///./src/core/node/node.js","webpack:///./src/core/node/node.service.js","webpack:///./src/core/pagination/pagination.model.js","webpack:///./src/core/pagination/pagination.view.js","webpack:///./src/core/path/path.service.js","webpack:///./src/core/persistence/persistence.model.js","webpack:///./src/core/persistence/persistence.service.js","webpack:///./src/core/persistence/persistence.storage.js","webpack:///./src/core/pipe/column.index.pipe.js","webpack:///./src/core/pipe/column.pipe.js","webpack:///./src/core/pipe/data.pipe.js","webpack:///./src/core/pipe/filter.pipe.js","webpack:///./src/core/pipe/group.pipe.js","webpack:///./src/core/pipe/memo.pipe.js","webpack:///./src/core/pipe/pagination.pipe.js","webpack:///./src/core/pipe/pipe.build.js","webpack:///./src/core/pipe/pipe.js","webpack:///./src/core/pipe/pipe.model.js","webpack:///./src/core/pipe/pipe.unit.js","webpack:///./src/core/pipe/pivot.pipe.js","webpack:///./src/core/pipe/sort.pipe.js","webpack:///./src/core/pipe/units/column.index.pipe.unit.js","webpack:///./src/core/pipe/units/column.pipe.unit.js","webpack:///./src/core/pipe/units/default.pipe.unit.js","webpack:///./src/core/pipe/units/group.pipe.unit.js","webpack:///./src/core/pipe/units/row.details.pipe.unit.js","webpack:///./src/core/pipe/units/row.pipe.unit.js","webpack:///./src/core/pipe/units/view.pipe.unit.js","webpack:///./src/core/pipe/view.pipe.js","webpack:///./src/core/pivot/pivot.build.js","webpack:///./src/core/pivot/pivot.form.js","webpack:///./src/core/pivot/pivot.js","webpack:///./src/core/pivot/pivot.model.js","webpack:///./src/core/plugin/plugin.model.js","webpack:///./src/core/plugin/plugin.service.js","webpack:///./src/core/progress/progress.model.js","webpack:///./src/core/resource/resource.enumerable.js","webpack:///./src/core/resource/resource.js","webpack:///./src/core/rest/get.serialize.js","webpack:///./src/core/rest/post.serialize.js","webpack:///./src/core/rest/rest.model.js","webpack:///./src/core/row-details/row.details.js","webpack:///./src/core/row-details/row.details.service.js","webpack:///./src/core/row-details/row.details.status.js","webpack:///./src/core/row-details/row.details.view.js","webpack:///./src/core/row-list/row.list.model.js","webpack:///./src/core/row-list/row.list.sort.js","webpack:///./src/core/row/row.model.js","webpack:///./src/core/row/row.view.js","webpack:///./src/core/scene/render/cache.strategy.js","webpack:///./src/core/scene/render/data.row.js","webpack:///./src/core/scene/render/details.row.js","webpack:///./src/core/scene/render/node.row.js","webpack:///./src/core/scene/render/pivot.row.js","webpack:///./src/core/scene/render/render.js","webpack:///./src/core/scene/scene.js","webpack:///./src/core/scene/scene.model.js","webpack:///./src/core/scene/view/column.view.js","webpack:///./src/core/scroll/scroll.model.js","webpack:///./src/core/scroll/scroll.view.js","webpack:///./src/core/selection/selection.command.manager.js","webpack:///./src/core/selection/selection.model.js","webpack:///./src/core/selection/selection.range.js","webpack:///./src/core/selection/selection.service.js","webpack:///./src/core/selection/selection.view.js","webpack:///./src/core/selection/state/multiple.selection.state.js","webpack:///./src/core/selection/state/range.selection.state.js","webpack:///./src/core/selection/state/selection.state.factory.js","webpack:///./src/core/selection/state/selection.state.js","webpack:///./src/core/selection/state/single.selection.state.js","webpack:///./src/core/services/aggregation.js","webpack:///./src/core/services/convert.js","webpack:///./src/core/services/css.js","webpack:///./src/core/services/dom.js","webpack:///./src/core/services/fastdom.js","webpack:///./src/core/services/file.js","webpack:///./src/core/services/grid.js","webpack:///./src/core/services/guid.js","webpack:///./src/core/services/job.line.js","webpack:///./src/core/services/label.js","webpack:///./src/core/services/markup.js","webpack:///./src/core/services/merge.js","webpack:///./src/core/services/middleware.js","webpack:///./src/core/services/model.stringify.js","webpack:///./src/core/services/path.js","webpack:///./src/core/services/predicate.js","webpack:///./src/core/services/scheduler.js","webpack:///./src/core/services/title.js","webpack:///./src/core/services/upload.js","webpack:///./src/core/services/value.js","webpack:///./src/core/shortcut/shortcut.dispatcher.js","webpack:///./src/core/shortcut/shortcut.js","webpack:///./src/core/sort/sort.model.js","webpack:///./src/core/sort/sort.service.js","webpack:///./src/core/sort/sort.view.js","webpack:///./src/core/style/style.model.js","webpack:///./src/core/style/style.monitor.js","webpack:///./src/core/style/style.service.js","webpack:///./src/core/style/style.view.js","webpack:///./src/core/style/style.virtual.js","webpack:///./src/core/template/template.model.js","webpack:///./src/core/template/template.path.js","webpack:///./src/core/toolbar/toolbar.model.js","webpack:///./src/core/utility/kit.js","webpack:///./src/core/validation/validation.model.js","webpack:///./src/core/validation/validation.service.js","webpack:///./src/core/view/view.ctrl.js","webpack:///./src/core/view/view.factory.js","webpack:///./src/core/view/view.model.js","webpack:///./src/core/visibility/visibility.model.js","webpack:///./src/environments/environment.ts","webpack:///./src/examples/action-bar-basic/example-action-bar-basic.component.html","webpack:///./src/examples/action-bar-basic/example-action-bar-basic.component.scss","webpack:///./src/examples/action-bar-basic/example-action-bar-basic.component.ts","webpack:///./src/examples/action-bar-on-enter/example-action-bar-on-enter.component.html","webpack:///./src/examples/action-bar-on-enter/example-action-bar-on-enter.component.scss","webpack:///./src/examples/action-bar-on-enter/example-action-bar-on-enter.component.ts","webpack:///./src/examples/action-bar-template/example-action-bar-template.component.html","webpack:///./src/examples/action-bar-template/example-action-bar-template.component.scss","webpack:///./src/examples/action-bar-template/example-action-bar-template.component.ts","webpack:///./src/examples/aggregate-column-basic/example-aggregate-column-basic.component.html","webpack:///./src/examples/aggregate-column-basic/example-aggregate-column-basic.component.scss","webpack:///./src/examples/aggregate-column-basic/example-aggregate-column-basic.component.ts","webpack:///./src/examples/column-array-basic/example-column-array-basic.component.html","webpack:///./src/examples/column-array-basic/example-column-array-basic.component.scss","webpack:///./src/examples/column-array-basic/example-column-array-basic.component.ts","webpack:///./src/examples/column-autocomplete-basic/example-column-autocomplete-basic.component.html","webpack:///./src/examples/column-autocomplete-basic/example-column-autocomplete-basic.component.scss","webpack:///./src/examples/column-autocomplete-basic/example-column-autocomplete-basic.component.ts","webpack:///./src/examples/column-bool-basic/example-column-bool-basic.component.html","webpack:///./src/examples/column-bool-basic/example-column-bool-basic.component.scss","webpack:///./src/examples/column-bool-basic/example-column-bool-basic.component.ts","webpack:///./src/examples/column-currency-basic/example-column-currency-basic.component.html","webpack:///./src/examples/column-currency-basic/example-column-currency-basic.component.scss","webpack:///./src/examples/column-currency-basic/example-column-currency-basic.component.ts","webpack:///./src/examples/column-data-safe/example-column-data-safe.component.html","webpack:///./src/examples/column-data-safe/example-column-data-safe.component.scss","webpack:///./src/examples/column-data-safe/example-column-data-safe.component.ts","webpack:///./src/examples/column-date-basic/example-column-date-basic.component.html","webpack:///./src/examples/column-date-basic/example-column-date-basic.component.scss","webpack:///./src/examples/column-date-basic/example-column-date-basic.component.ts","webpack:///./src/examples/column-dropdown-basic/example-column-dropdown-basic.component.html","webpack:///./src/examples/column-dropdown-basic/example-column-dropdown-basic.component.scss","webpack:///./src/examples/column-dropdown-basic/example-column-dropdown-basic.component.ts","webpack:///./src/examples/column-email-basic/example-column-email-basic.component.html","webpack:///./src/examples/column-email-basic/example-column-email-basic.component.scss","webpack:///./src/examples/column-email-basic/example-column-email-basic.component.ts","webpack:///./src/examples/column-file-basic/example-column-file-basic.component.html","webpack:///./src/examples/column-file-basic/example-column-file-basic.component.scss","webpack:///./src/examples/column-file-basic/example-column-file-basic.component.ts","webpack:///./src/examples/column-id-basic/example-column-id-basic.component.html","webpack:///./src/examples/column-id-basic/example-column-id-basic.component.scss","webpack:///./src/examples/column-id-basic/example-column-id-basic.component.ts","webpack:///./src/examples/column-image-basic/example-column-image-basic.component.html","webpack:///./src/examples/column-image-basic/example-column-image-basic.component.scss","webpack:///./src/examples/column-image-basic/example-column-image-basic.component.ts","webpack:///./src/examples/column-list-basic/example-column-list-basic.component.html","webpack:///./src/examples/column-list-basic/example-column-list-basic.component.scss","webpack:///./src/examples/column-list-basic/example-column-list-basic.component.ts","webpack:///./src/examples/column-list-loop/example-column-list-loop.component.html","webpack:///./src/examples/column-list-loop/example-column-list-loop.component.scss","webpack:///./src/examples/column-list-loop/example-column-list-loop.component.ts","webpack:///./src/examples/column-number-basic/example-column-number-basic.component.html","webpack:///./src/examples/column-number-basic/example-column-number-basic.component.scss","webpack:///./src/examples/column-number-basic/example-column-number-basic.component.ts","webpack:///./src/examples/column-password-basic/example-column-password-basic.component.html","webpack:///./src/examples/column-password-basic/example-column-password-basic.component.scss","webpack:///./src/examples/column-password-basic/example-column-password-basic.component.ts","webpack:///./src/examples/column-reference-basic/example-column-reference-basic.component.html","webpack:///./src/examples/column-reference-basic/example-column-reference-basic.component.scss","webpack:///./src/examples/column-reference-basic/example-column-reference-basic.component.ts","webpack:///./src/examples/column-row-indicator-basic/example-column-row-indicator-basic.component.html","webpack:///./src/examples/column-row-indicator-basic/example-column-row-indicator-basic.component.scss","webpack:///./src/examples/column-row-indicator-basic/example-column-row-indicator-basic.component.ts","webpack:///./src/examples/column-row-number-basic/example-column-row-number-basic.component.html","webpack:///./src/examples/column-row-number-basic/example-column-row-number-basic.component.scss","webpack:///./src/examples/column-row-number-basic/example-column-row-number-basic.component.ts","webpack:///./src/examples/column-row-options-basic/example-column-row-options-basic.component.html","webpack:///./src/examples/column-row-options-basic/example-column-row-options-basic.component.scss","webpack:///./src/examples/column-row-options-basic/example-column-row-options-basic.component.ts","webpack:///./src/examples/column-text-basic/example-column-text-basic.component.html","webpack:///./src/examples/column-text-basic/example-column-text-basic.component.scss","webpack:///./src/examples/column-text-basic/example-column-text-basic.component.ts","webpack:///./src/examples/column-time-basic/example-column-time-basic.component.html","webpack:///./src/examples/column-time-basic/example-column-time-basic.component.scss","webpack:///./src/examples/column-time-basic/example-column-time-basic.component.ts","webpack:///./src/examples/column-tooltip-basic/example-column-tooltip-basic.component.html","webpack:///./src/examples/column-tooltip-basic/example-column-tooltip-basic.component.scss","webpack:///./src/examples/column-tooltip-basic/example-column-tooltip-basic.component.ts","webpack:///./src/examples/column-type-safe/example-column-type-safe.component.html","webpack:///./src/examples/column-type-safe/example-column-type-safe.component.scss","webpack:///./src/examples/column-type-safe/example-column-type-safe.component.ts","webpack:///./src/examples/column-url-basic/example-column-url-basic.component.html","webpack:///./src/examples/column-url-basic/example-column-url-basic.component.scss","webpack:///./src/examples/column-url-basic/example-column-url-basic.component.ts","webpack:///./src/examples/data-row-add/example-data-row-add.component.html","webpack:///./src/examples/data-row-add/example-data-row-add.component.scss","webpack:///./src/examples/data-row-add/example-data-row-add.component.ts","webpack:///./src/examples/data-row-delete/example-data-row-delete.component.html","webpack:///./src/examples/data-row-delete/example-data-row-delete.component.scss","webpack:///./src/examples/data-row-delete/example-data-row-delete.component.ts","webpack:///./src/examples/data.service.ts","webpack:///./src/examples/define-column-async/example-define-column-async.component.html","webpack:///./src/examples/define-column-async/example-define-column-async.component.scss","webpack:///./src/examples/define-column-async/example-define-column-async.component.ts","webpack:///./src/examples/define-column-basic/example-define-column-basic.component.html","webpack:///./src/examples/define-column-basic/example-define-column-basic.component.scss","webpack:///./src/examples/define-column-basic/example-define-column-basic.component.ts","webpack:///./src/examples/define-column-hybrid/example-define-column-hybrid.component.html","webpack:///./src/examples/define-column-hybrid/example-define-column-hybrid.component.scss","webpack:///./src/examples/define-column-hybrid/example-define-column-hybrid.component.ts","webpack:///./src/examples/destroy-grid-basic/example-destroy-grid-basic.component.html","webpack:///./src/examples/destroy-grid-basic/example-destroy-grid-basic.component.scss","webpack:///./src/examples/destroy-grid-basic/example-destroy-grid-basic.component.ts","webpack:///./src/examples/destroy-grid-model/example-destroy-grid-model.component.html","webpack:///./src/examples/destroy-grid-model/example-destroy-grid-model.component.scss","webpack:///./src/examples/destroy-grid-model/example-destroy-grid-model.component.ts","webpack:///./src/examples/details-row-all/example-details-row-all.component.html","webpack:///./src/examples/details-row-all/example-details-row-all.component.scss","webpack:///./src/examples/details-row-all/example-details-row-all.component.ts","webpack:///./src/examples/details-row-api/example-details-row-api.component.html","webpack:///./src/examples/details-row-api/example-details-row-api.component.scss","webpack:///./src/examples/details-row-api/example-details-row-api.component.ts","webpack:///./src/examples/details-row-basic/example-details-row-basic.component.html","webpack:///./src/examples/details-row-basic/example-details-row-basic.component.scss","webpack:///./src/examples/details-row-basic/example-details-row-basic.component.ts","webpack:///./src/examples/details-row-grid/example-details-row-grid.component.html","webpack:///./src/examples/details-row-grid/example-details-row-grid.component.scss","webpack:///./src/examples/details-row-grid/example-details-row-grid.component.ts","webpack:///./src/examples/details-row-pin/example-details-row-pin.component.html","webpack:///./src/examples/details-row-pin/example-details-row-pin.component.scss","webpack:///./src/examples/details-row-pin/example-details-row-pin.component.ts","webpack:///./src/examples/details-row-start/example-details-row-start.component.html","webpack:///./src/examples/details-row-start/example-details-row-start.component.scss","webpack:///./src/examples/details-row-start/example-details-row-start.component.ts","webpack:///./src/examples/drag-column-basic/example-drag-column-basic.component.html","webpack:///./src/examples/drag-column-basic/example-drag-column-basic.component.scss","webpack:///./src/examples/drag-column-basic/example-drag-column-basic.component.ts","webpack:///./src/examples/drag-row-basic/example-drag-row-basic.component.html","webpack:///./src/examples/drag-row-basic/example-drag-row-basic.component.scss","webpack:///./src/examples/drag-row-basic/example-drag-row-basic.component.ts","webpack:///./src/examples/drag-row-node/example-drag-row-node.component.html","webpack:///./src/examples/drag-row-node/example-drag-row-node.component.scss","webpack:///./src/examples/drag-row-node/example-drag-row-node.component.ts","webpack:///./src/examples/dynamic-column-model/example-dynamic-column-model.component.html","webpack:///./src/examples/dynamic-column-model/example-dynamic-column-model.component.scss","webpack:///./src/examples/dynamic-column-model/example-dynamic-column-model.component.ts","webpack:///./src/examples/edit-cell-basic/example-edit-cell-basic.component.html","webpack:///./src/examples/edit-cell-basic/example-edit-cell-basic.component.scss","webpack:///./src/examples/edit-cell-basic/example-edit-cell-basic.component.ts","webpack:///./src/examples/edit-cell-batch/example-edit-cell-batch.component.html","webpack:///./src/examples/edit-cell-batch/example-edit-cell-batch.component.scss","webpack:///./src/examples/edit-cell-batch/example-edit-cell-batch.component.ts","webpack:///./src/examples/edit-row-basic/example-edit-row-basic.component.html","webpack:///./src/examples/edit-row-basic/example-edit-row-basic.component.scss","webpack:///./src/examples/edit-row-basic/example-edit-row-basic.component.ts","webpack:///./src/examples/example.module.ts","webpack:///./src/examples/export-basic/example-export-basic.component.html","webpack:///./src/examples/export-basic/example-export-basic.component.scss","webpack:///./src/examples/export-basic/example-export-basic.component.ts","webpack:///./src/examples/export-csv/example-export-csv.component.html","webpack:///./src/examples/export-csv/example-export-csv.component.scss","webpack:///./src/examples/export-csv/example-export-csv.component.ts","webpack:///./src/examples/filter-column-fetch/example-filter-column-fetch.component.html","webpack:///./src/examples/filter-column-fetch/example-filter-column-fetch.component.scss","webpack:///./src/examples/filter-column-fetch/example-filter-column-fetch.component.ts","webpack:///./src/examples/filter-condition-basic/example-filter-condition-basic.component.html","webpack:///./src/examples/filter-condition-basic/example-filter-condition-basic.component.scss","webpack:///./src/examples/filter-condition-basic/example-filter-condition-basic.component.ts","webpack:///./src/examples/filter-row-basic/example-filter-row-basic.component.html","webpack:///./src/examples/filter-row-basic/example-filter-row-basic.component.scss","webpack:///./src/examples/filter-row-basic/example-filter-row-basic.component.ts","webpack:///./src/examples/filter-row-custom/example-filter-row-custom.component.html","webpack:///./src/examples/filter-row-custom/example-filter-row-custom.component.scss","webpack:///./src/examples/filter-row-custom/example-filter-row-custom.component.ts","webpack:///./src/examples/floating-rows-basic/example-floating-rows-basic.component.html","webpack:///./src/examples/floating-rows-basic/example-floating-rows-basic.component.scss","webpack:///./src/examples/floating-rows-basic/example-floating-rows-basic.component.ts","webpack:///./src/examples/focus-cell-auto/example-focus-cell-auto.component.html","webpack:///./src/examples/focus-cell-auto/example-focus-cell-auto.component.scss","webpack:///./src/examples/focus-cell-auto/example-focus-cell-auto.component.ts","webpack:///./src/examples/focus-cell-basic/example-focus-cell-basic.component.html","webpack:///./src/examples/focus-cell-basic/example-focus-cell-basic.component.scss","webpack:///./src/examples/focus-cell-basic/example-focus-cell-basic.component.ts","webpack:///./src/examples/focus-cell-custom/example-focus-cell-custom.component.html","webpack:///./src/examples/focus-cell-custom/example-focus-cell-custom.component.scss","webpack:///./src/examples/focus-cell-custom/example-focus-cell-custom.component.ts","webpack:///./src/examples/generate-column-check/example-generate-column-check.component.html","webpack:///./src/examples/generate-column-check/example-generate-column-check.component.scss","webpack:///./src/examples/generate-column-check/example-generate-column-check.component.ts","webpack:///./src/examples/generate-column-cohort/example-generate-column-cohort.component.html","webpack:///./src/examples/generate-column-cohort/example-generate-column-cohort.component.scss","webpack:///./src/examples/generate-column-cohort/example-generate-column-cohort.component.ts","webpack:///./src/examples/generate-column-deep/example-generate-column-deep.component.html","webpack:///./src/examples/generate-column-deep/example-generate-column-deep.component.scss","webpack:///./src/examples/generate-column-deep/example-generate-column-deep.component.ts","webpack:///./src/examples/generate-column-shallow/example-generate-column-shallow.component.html","webpack:///./src/examples/generate-column-shallow/example-generate-column-shallow.component.scss","webpack:///./src/examples/generate-column-shallow/example-generate-column-shallow.component.ts","webpack:///./src/examples/grid-list-basic/example-grid-list-basic.component.html","webpack:///./src/examples/grid-list-basic/example-grid-list-basic.component.scss","webpack:///./src/examples/grid-list-basic/example-grid-list-basic.component.ts","webpack:///./src/examples/group-column-basic/example-group-column-basic.component.html","webpack:///./src/examples/group-column-basic/example-group-column-basic.component.scss","webpack:///./src/examples/group-column-basic/example-group-column-basic.component.ts","webpack:///./src/examples/group-row-aggregation/example-group-row-aggregation.component.html","webpack:///./src/examples/group-row-aggregation/example-group-row-aggregation.component.scss","webpack:///./src/examples/group-row-aggregation/example-group-row-aggregation.component.ts","webpack:///./src/examples/group-row-basic/example-group-row-basic.component.html","webpack:///./src/examples/group-row-basic/example-group-row-basic.component.scss","webpack:///./src/examples/group-row-basic/example-group-row-basic.component.ts","webpack:///./src/examples/group-row-edit/example-group-row-edit.component.html","webpack:///./src/examples/group-row-edit/example-group-row-edit.component.scss","webpack:///./src/examples/group-row-edit/example-group-row-edit.component.ts","webpack:///./src/examples/group-row-flat/example-group-row-flat.component.html","webpack:///./src/examples/group-row-flat/example-group-row-flat.component.scss","webpack:///./src/examples/group-row-flat/example-group-row-flat.component.ts","webpack:///./src/examples/group-row-rowspan/example-group-row-rowspan.component.html","webpack:///./src/examples/group-row-rowspan/example-group-row-rowspan.component.scss","webpack:///./src/examples/group-row-rowspan/example-group-row-rowspan.component.ts","webpack:///./src/examples/group-row-subhead/example-group-row-subhead.component.html","webpack:///./src/examples/group-row-subhead/example-group-row-subhead.component.scss","webpack:///./src/examples/group-row-subhead/example-group-row-subhead.component.ts","webpack:///./src/examples/group-row-summary/example-group-row-summary.component.html","webpack:///./src/examples/group-row-summary/example-group-row-summary.component.scss","webpack:///./src/examples/group-row-summary/example-group-row-summary.component.ts","webpack:///./src/examples/hierarchy-browser-basic/example-hierarchy-browser-basic.component.html","webpack:///./src/examples/hierarchy-browser-basic/example-hierarchy-browser-basic.component.scss","webpack:///./src/examples/hierarchy-browser-basic/example-hierarchy-browser-basic.component.ts","webpack:///./src/examples/import-basic/example-import-basic.component.html","webpack:///./src/examples/import-basic/example-import-basic.component.scss","webpack:///./src/examples/import-basic/example-import-basic.component.ts","webpack:///./src/examples/import-csv/example-import-csv.component.html","webpack:///./src/examples/import-csv/example-import-csv.component.scss","webpack:///./src/examples/import-csv/example-import-csv.component.ts","webpack:///./src/examples/index-column-basic/example-index-column-basic.component.html","webpack:///./src/examples/index-column-basic/example-index-column-basic.component.scss","webpack:///./src/examples/index-column-basic/example-index-column-basic.component.ts","webpack:///./src/examples/index-column-hybrid/example-index-column-hybrid.component.html","webpack:///./src/examples/index-column-hybrid/example-index-column-hybrid.component.scss","webpack:///./src/examples/index-column-hybrid/example-index-column-hybrid.component.ts","webpack:///./src/examples/index-column-model/example-index-column-model.component.html","webpack:///./src/examples/index-column-model/example-index-column-model.component.scss","webpack:///./src/examples/index-column-model/example-index-column-model.component.ts","webpack:///./src/examples/interaction-mode-detached/example-interaction-mode-detached.component.html","webpack:///./src/examples/interaction-mode-detached/example-interaction-mode-detached.component.scss","webpack:///./src/examples/interaction-mode-detached/example-interaction-mode-detached.component.ts","webpack:///./src/examples/interaction-mode-readonly/example-interaction-mode-readonly.component.html","webpack:///./src/examples/interaction-mode-readonly/example-interaction-mode-readonly.component.scss","webpack:///./src/examples/interaction-mode-readonly/example-interaction-mode-readonly.component.ts","webpack:///./src/examples/key-with-symbols/example-key-with-symbols.component.html","webpack:///./src/examples/key-with-symbols/example-key-with-symbols.component.scss","webpack:///./src/examples/key-with-symbols/example-key-with-symbols.component.ts","webpack:///./src/examples/layer-grid-blank/example-layer-grid-blank.component.html","webpack:///./src/examples/layer-grid-blank/example-layer-grid-blank.component.scss","webpack:///./src/examples/layer-grid-blank/example-layer-grid-blank.component.ts","webpack:///./src/examples/legend-grid-basic/example-legend-grid-basic.component.html","webpack:///./src/examples/legend-grid-basic/example-legend-grid-basic.component.scss","webpack:///./src/examples/legend-grid-basic/example-legend-grid-basic.component.ts","webpack:///./src/examples/live-data-basic/example-live-data-basic.component.html","webpack:///./src/examples/live-data-basic/example-live-data-basic.component.scss","webpack:///./src/examples/live-data-basic/example-live-data-basic.component.ts","webpack:///./src/examples/look-atoms-basic/example-look-atoms-basic.component.html","webpack:///./src/examples/look-atoms-basic/example-look-atoms-basic.component.scss","webpack:///./src/examples/look-atoms-basic/example-look-atoms-basic.component.ts","webpack:///./src/examples/look-atoms-customized/example-look-atoms-customized.component.html","webpack:///./src/examples/look-atoms-customized/example-look-atoms-customized.component.scss","webpack:///./src/examples/look-atoms-customized/example-look-atoms-customized.component.ts","webpack:///./src/examples/look-atoms-id/example-look-atoms-id.component.html","webpack:///./src/examples/look-atoms-id/example-look-atoms-id.component.scss","webpack:///./src/examples/look-atoms-id/example-look-atoms-id.component.ts","webpack:///./src/examples/look-atoms-model/example-look-atoms-model.component.html","webpack:///./src/examples/look-atoms-model/example-look-atoms-model.component.scss","webpack:///./src/examples/look-atoms-model/example-look-atoms-model.component.ts","webpack:///./src/examples/look-people-basic/example-look-people-basic.component.html","webpack:///./src/examples/look-people-basic/example-look-people-basic.component.scss","webpack:///./src/examples/look-people-basic/example-look-people-basic.component.ts","webpack:///./src/examples/look-people-model/example-look-people-model.component.html","webpack:///./src/examples/look-people-model/example-look-people-model.component.scss","webpack:///./src/examples/look-people-model/example-look-people-model.component.ts","webpack:///./src/examples/look-quotes-basic/example-look-quotes-basic.component.html","webpack:///./src/examples/look-quotes-basic/example-look-quotes-basic.component.scss","webpack:///./src/examples/look-quotes-basic/example-look-quotes-basic.component.ts","webpack:///./src/examples/look-quotes-model/example-look-quotes-model.component.html","webpack:///./src/examples/look-quotes-model/example-look-quotes-model.component.scss","webpack:///./src/examples/look-quotes-model/example-look-quotes-model.component.ts","webpack:///./src/examples/manipulate-data-basic/example-manipulate-data-basic.component.html","webpack:///./src/examples/manipulate-data-basic/example-manipulate-data-basic.component.scss","webpack:///./src/examples/manipulate-data-basic/example-manipulate-data-basic.component.ts","webpack:///./src/examples/master-details-basic/example-master-details-basic.component.html","webpack:///./src/examples/master-details-basic/example-master-details-basic.component.scss","webpack:///./src/examples/master-details-basic/example-master-details-basic.component.ts","webpack:///./src/examples/on-push-basic/example-on-push-basic.component.html","webpack:///./src/examples/on-push-basic/example-on-push-basic.component.scss","webpack:///./src/examples/on-push-basic/example-on-push-basic.component.ts","webpack:///./src/examples/pagination-basic/example-pagination-basic.component.html","webpack:///./src/examples/pagination-basic/example-pagination-basic.component.scss","webpack:///./src/examples/pagination-basic/example-pagination-basic.component.ts","webpack:///./src/examples/pane-basic/example-pane-basic.component.html","webpack:///./src/examples/pane-basic/example-pane-basic.component.scss","webpack:///./src/examples/pane-basic/example-pane-basic.component.ts","webpack:///./src/examples/pane-trigger/example-pane-trigger.component.html","webpack:///./src/examples/pane-trigger/example-pane-trigger.component.scss","webpack:///./src/examples/pane-trigger/example-pane-trigger.component.ts","webpack:///./src/examples/persistence-basic/example-persistence-basic.component.html","webpack:///./src/examples/persistence-basic/example-persistence-basic.component.scss","webpack:///./src/examples/persistence-basic/example-persistence-basic.component.ts","webpack:///./src/examples/persistence-server/example-persistence-server.component.html","webpack:///./src/examples/persistence-server/example-persistence-server.component.scss","webpack:///./src/examples/persistence-server/example-persistence-server.component.ts","webpack:///./src/examples/pin-column-basic/example-pin-column-basic.component.html","webpack:///./src/examples/pin-column-basic/example-pin-column-basic.component.scss","webpack:///./src/examples/pin-column-basic/example-pin-column-basic.component.ts","webpack:///./src/examples/pipe-grid-basic/example-pipe-grid-basic.component.html","webpack:///./src/examples/pipe-grid-basic/example-pipe-grid-basic.component.scss","webpack:///./src/examples/pipe-grid-basic/example-pipe-grid-basic.component.ts","webpack:///./src/examples/pivot-column-basic/example-pivot-column-basic.component.html","webpack:///./src/examples/pivot-column-basic/example-pivot-column-basic.component.scss","webpack:///./src/examples/pivot-column-basic/example-pivot-column-basic.component.ts","webpack:///./src/examples/pivot-column-cohort/example-pivot-column-cohort.component.html","webpack:///./src/examples/pivot-column-cohort/example-pivot-column-cohort.component.scss","webpack:///./src/examples/pivot-column-cohort/example-pivot-column-cohort.component.ts","webpack:///./src/examples/pivot-column-group/example-pivot-column-group.component.html","webpack:///./src/examples/pivot-column-group/example-pivot-column-group.component.scss","webpack:///./src/examples/pivot-column-group/example-pivot-column-group.component.ts","webpack:///./src/examples/pivot-column-template/example-pivot-column-template.component.html","webpack:///./src/examples/pivot-column-template/example-pivot-column-template.component.scss","webpack:///./src/examples/pivot-column-template/example-pivot-column-template.component.ts","webpack:///./src/examples/plugin-grid-basic/example-plugin-grid-basic.component.html","webpack:///./src/examples/plugin-grid-basic/example-plugin-grid-basic.component.scss","webpack:///./src/examples/plugin-grid-basic/example-plugin-grid-basic.component.ts","webpack:///./src/examples/plugin-grid-basic/example-plugin-my-pager.component.html","webpack:///./src/examples/plugin-grid-basic/example-plugin-my-pager.component.scss","webpack:///./src/examples/plugin-grid-basic/example-plugin-my-pager.component.ts","webpack:///./src/examples/rest-api-basic/example-rest-api-basic.component.html","webpack:///./src/examples/rest-api-basic/example-rest-api-basic.component.scss","webpack:///./src/examples/rest-api-basic/example-rest-api-basic.component.ts","webpack:///./src/examples/scroll-virtual-basic/example-scroll-virtual-basic.component.html","webpack:///./src/examples/scroll-virtual-basic/example-scroll-virtual-basic.component.scss","webpack:///./src/examples/scroll-virtual-basic/example-scroll-virtual-basic.component.ts","webpack:///./src/examples/scroll-virtual-details/example-scroll-virtual-details.component.html","webpack:///./src/examples/scroll-virtual-details/example-scroll-virtual-details.component.scss","webpack:///./src/examples/scroll-virtual-details/example-scroll-virtual-details.component.ts","webpack:///./src/examples/scroll-virtual-drag/example-scroll-virtual-drag.component.html","webpack:///./src/examples/scroll-virtual-drag/example-scroll-virtual-drag.component.scss","webpack:///./src/examples/scroll-virtual-drag/example-scroll-virtual-drag.component.ts","webpack:///./src/examples/scroll-virtual-edit/example-scroll-virtual-edit.component.html","webpack:///./src/examples/scroll-virtual-edit/example-scroll-virtual-edit.component.scss","webpack:///./src/examples/scroll-virtual-edit/example-scroll-virtual-edit.component.ts","webpack:///./src/examples/scroll-virtual-group/example-scroll-virtual-group.component.html","webpack:///./src/examples/scroll-virtual-group/example-scroll-virtual-group.component.scss","webpack:///./src/examples/scroll-virtual-group/example-scroll-virtual-group.component.ts","webpack:///./src/examples/scroll-virtual-height/example-scroll-virtual-height.component.html","webpack:///./src/examples/scroll-virtual-height/example-scroll-virtual-height.component.scss","webpack:///./src/examples/scroll-virtual-height/example-scroll-virtual-height.component.ts","webpack:///./src/examples/scroll-virtual-infinite/example-scroll-virtual-infinite.component.html","webpack:///./src/examples/scroll-virtual-infinite/example-scroll-virtual-infinite.component.scss","webpack:///./src/examples/scroll-virtual-infinite/example-scroll-virtual-infinite.component.ts","webpack:///./src/examples/scroll-virtual-list-infinite/example-scroll-virtual-list-infinite.component.html","webpack:///./src/examples/scroll-virtual-list-infinite/example-scroll-virtual-list-infinite.component.scss","webpack:///./src/examples/scroll-virtual-list-infinite/example-scroll-virtual-list-infinite.component.ts","webpack:///./src/examples/scroll-virtual-list/example-scroll-virtual-list.component.html","webpack:///./src/examples/scroll-virtual-list/example-scroll-virtual-list.component.scss","webpack:///./src/examples/scroll-virtual-list/example-scroll-virtual-list.component.ts","webpack:///./src/examples/scroll-virtual-selection/example-scroll-virtual-selection.component.html","webpack:///./src/examples/scroll-virtual-selection/example-scroll-virtual-selection.component.scss","webpack:///./src/examples/scroll-virtual-selection/example-scroll-virtual-selection.component.ts","webpack:///./src/examples/scroll-virtual-style/example-scroll-virtual-style.component.html","webpack:///./src/examples/scroll-virtual-style/example-scroll-virtual-style.component.scss","webpack:///./src/examples/scroll-virtual-style/example-scroll-virtual-style.component.ts","webpack:///./src/examples/select-cell-basic/example-select-cell-basic.component.html","webpack:///./src/examples/select-cell-basic/example-select-cell-basic.component.scss","webpack:///./src/examples/select-cell-basic/example-select-cell-basic.component.ts","webpack:///./src/examples/select-column-basic/example-select-column-basic.component.html","webpack:///./src/examples/select-column-basic/example-select-column-basic.component.scss","webpack:///./src/examples/select-column-basic/example-select-column-basic.component.ts","webpack:///./src/examples/select-mix-basic/example-select-mix-basic.component.html","webpack:///./src/examples/select-mix-basic/example-select-mix-basic.component.scss","webpack:///./src/examples/select-mix-basic/example-select-mix-basic.component.ts","webpack:///./src/examples/select-row-basic/example-select-row-basic.component.html","webpack:///./src/examples/select-row-basic/example-select-row-basic.component.scss","webpack:///./src/examples/select-row-basic/example-select-row-basic.component.ts","webpack:///./src/examples/select-row-command/example-select-row-command.component.html","webpack:///./src/examples/select-row-command/example-select-row-command.component.scss","webpack:///./src/examples/select-row-command/example-select-row-command.component.ts","webpack:///./src/examples/select-row-disable-unselect/example-select-row-disable-unselect.component.html","webpack:///./src/examples/select-row-disable-unselect/example-select-row-disable-unselect.component.scss","webpack:///./src/examples/select-row-disable-unselect/example-select-row-disable-unselect.component.ts","webpack:///./src/examples/select-row-disable/example-select-row-disable.component.html","webpack:///./src/examples/select-row-disable/example-select-row-disable.component.scss","webpack:///./src/examples/select-row-disable/example-select-row-disable.component.ts","webpack:///./src/examples/select-row-single/example-select-row-single.component.html","webpack:///./src/examples/select-row-single/example-select-row-single.component.scss","webpack:///./src/examples/select-row-single/example-select-row-single.component.ts","webpack:///./src/examples/size-column-absolute/example-size-column-absolute.component.html","webpack:///./src/examples/size-column-absolute/example-size-column-absolute.component.scss","webpack:///./src/examples/size-column-absolute/example-size-column-absolute.component.ts","webpack:///./src/examples/size-column-basic/example-size-column-basic.component.html","webpack:///./src/examples/size-column-basic/example-size-column-basic.component.scss","webpack:///./src/examples/size-column-basic/example-size-column-basic.component.ts","webpack:///./src/examples/size-column-full/example-size-column-full.component.html","webpack:///./src/examples/size-column-full/example-size-column-full.component.scss","webpack:///./src/examples/size-column-full/example-size-column-full.component.ts","webpack:///./src/examples/size-row-basic/example-size-row-basic.component.html","webpack:///./src/examples/size-row-basic/example-size-row-basic.component.scss","webpack:///./src/examples/size-row-basic/example-size-row-basic.component.ts","webpack:///./src/examples/sort-row-basic/example-sort-row-basic.component.html","webpack:///./src/examples/sort-row-basic/example-sort-row-basic.component.scss","webpack:///./src/examples/sort-row-basic/example-sort-row-basic.component.ts","webpack:///./src/examples/style-cell-basic/example-style-cell-basic.component.html","webpack:///./src/examples/style-cell-basic/example-style-cell-basic.component.scss","webpack:///./src/examples/style-cell-basic/example-style-cell-basic.component.ts","webpack:///./src/examples/style-row-basic/example-style-row-basic.component.html","webpack:///./src/examples/style-row-basic/example-style-row-basic.component.scss","webpack:///./src/examples/style-row-basic/example-style-row-basic.component.ts","webpack:///./src/examples/summary-column-aggregation/example-summary-column-aggregation.component.html","webpack:///./src/examples/summary-column-aggregation/example-summary-column-aggregation.component.scss","webpack:///./src/examples/summary-column-aggregation/example-summary-column-aggregation.component.ts","webpack:///./src/examples/summary-column-basic/example-summary-column-basic.component.html","webpack:///./src/examples/summary-column-basic/example-summary-column-basic.component.scss","webpack:///./src/examples/summary-column-basic/example-summary-column-basic.component.ts","webpack:///./src/examples/theme-grid-dark/example-theme-grid-dark.component.html","webpack:///./src/examples/theme-grid-dark/example-theme-grid-dark.component.scss","webpack:///./src/examples/theme-grid-dark/example-theme-grid-dark.component.ts","webpack:///./src/examples/theme-grid-embed/example-theme-grid-embed.component.html","webpack:///./src/examples/theme-grid-embed/example-theme-grid-embed.component.scss","webpack:///./src/examples/theme-grid-embed/example-theme-grid-embed.component.ts","webpack:///./src/examples/validation-basic/example-validation-basic.component.html","webpack:///./src/examples/validation-basic/example-validation-basic.component.scss","webpack:///./src/examples/validation-basic/example-validation-basic.component.ts","webpack:///./src/examples/visibility-basic/example-visibility-basic.component.html","webpack:///./src/examples/visibility-basic/example-visibility-basic.component.scss","webpack:///./src/examples/visibility-basic/example-visibility-basic.component.ts","webpack:///./src/examples/visibility-model/example-visibility-model.component.html","webpack:///./src/examples/visibility-model/example-visibility-model.component.scss","webpack:///./src/examples/visibility-model/example-visibility-model.component.ts","webpack:///./src/lib/assets/index.scss","webpack:///./src/lib/common/command/command.directive.ts","webpack:///./src/lib/common/command/command.module.ts","webpack:///./src/lib/common/common.module.ts","webpack:///./src/lib/common/date/date.directive.ts","webpack:///./src/lib/common/date/date.module.ts","webpack:///./src/lib/common/dnd/dnd.module.ts","webpack:///./src/lib/common/dnd/drag.directive.ts","webpack:///./src/lib/common/dnd/drop.directive.ts","webpack:///./src/lib/common/file/file.directive.ts","webpack:///./src/lib/common/file/file.module.ts","webpack:///./src/lib/common/focus/autofocus.directive.ts","webpack:///./src/lib/common/focus/blur.directive.ts","webpack:///./src/lib/common/focus/focus.directive.ts","webpack:///./src/lib/common/focus/focus.module.ts","webpack:///./src/lib/common/focus/focus.service.ts","webpack:///./src/lib/common/input/input.module.ts","webpack:///./src/lib/common/layout/layout.module.ts","webpack:///./src/lib/common/layout/position.directive.ts","webpack:///./src/lib/common/layout/stop-propagate.directive.ts","webpack:///./src/lib/common/raise/raise.directive.ts","webpack:///./src/lib/common/raise/raise.module.ts","webpack:///./src/lib/common/resize/autosize.directive.ts","webpack:///./src/lib/common/resize/resize.directive.ts","webpack:///./src/lib/common/resize/resize.module.ts","webpack:///./src/lib/common/time/time.directive.ts","webpack:///./src/lib/common/time/time.module.ts","webpack:///./src/lib/common/vscroll/vscroll-column.directive.ts","webpack:///./src/lib/common/vscroll/vscroll-mark.directive.ts","webpack:///./src/lib/common/vscroll/vscroll-port-x.directive.ts","webpack:///./src/lib/common/vscroll/vscroll-port-y.directive.ts","webpack:///./src/lib/common/vscroll/vscroll-row.directive.ts","webpack:///./src/lib/common/vscroll/vscroll.box.ts","webpack:///./src/lib/common/vscroll/vscroll.container.ts","webpack:///./src/lib/common/vscroll/vscroll.context.ts","webpack:///./src/lib/common/vscroll/vscroll.directive.ts","webpack:///./src/lib/common/vscroll/vscroll.layout.ts","webpack:///./src/lib/common/vscroll/vscroll.link.ts","webpack:///./src/lib/common/vscroll/vscroll.module.ts","webpack:///./src/lib/common/vscroll/vscroll.pipe.ts","webpack:///./src/lib/common/vscroll/vscroll.port.ts","webpack:///./src/lib/common/vscroll/vscroll.position.ts","webpack:///./src/lib/common/vscroll/vscroll.service.ts","webpack:///./src/lib/common/vscroll/vscroll.settings.ts","webpack:///./src/lib/common/vscroll/vscroll.utility.ts","webpack:///./src/lib/grid.module.ts","webpack:///./src/lib/infrastructure/component/model.component.ts","webpack:///./src/lib/infrastructure/component/ng.component.ts","webpack:///./src/lib/infrastructure/component/root.component.ts","webpack:///./src/lib/infrastructure/component/root.service.ts","webpack:///./src/lib/main/box/box.component.ts","webpack:///./src/lib/main/column/column-list.component.ts","webpack:///./src/lib/main/column/column-list.service.ts","webpack:///./src/lib/main/column/column.component.ts","webpack:///./src/lib/main/column/column.service.ts","webpack:///./src/lib/main/core/body/body-core.component.html","webpack:///./src/lib/main/core/body/body-core.component.ts","webpack:///./src/lib/main/core/body/td-core-align.directive.ts","webpack:///./src/lib/main/core/body/td-core.directive.ts","webpack:///./src/lib/main/core/cell/cell-handler.component.html","webpack:///./src/lib/main/core/cell/cell-handler.component.ts","webpack:///./src/lib/main/core/cell/cell.service.ts","webpack:///./src/lib/main/core/core.module.ts","webpack:///./src/lib/main/core/foot/foot-core.component.html","webpack:///./src/lib/main/core/foot/foot-core.component.ts","webpack:///./src/lib/main/core/foot/tf-core.directive.ts","webpack:///./src/lib/main/core/head/head-core.component.html","webpack:///./src/lib/main/core/head/head-core.component.ts","webpack:///./src/lib/main/core/head/th-core.directive.ts","webpack:///./src/lib/main/core/layer/layer-core.component.html","webpack:///./src/lib/main/core/layer/layer-core.component.ts","webpack:///./src/lib/main/core/layer/layer-core.directive.ts","webpack:///./src/lib/main/core/layer/layer.service.ts","webpack:///./src/lib/main/core/layer/layer.ts","webpack:///./src/lib/main/core/markup/markup.directive.ts","webpack:///./src/lib/main/core/row/row.component.ts","webpack:///./src/lib/main/core/row/tr-core.directive.ts","webpack:///./src/lib/main/core/row/trh-core.directive.ts","webpack:///./src/lib/main/core/scroll/vscroll.service.ts","webpack:///./src/lib/main/core/table/table-core.component.html","webpack:///./src/lib/main/core/table/table-core.component.ts","webpack:///./src/lib/main/core/table/table-core.service.ts","webpack:///./src/lib/main/core/toolbar/toolbar-core.component.html","webpack:///./src/lib/main/core/toolbar/toolbar-core.component.ts","webpack:///./src/lib/main/core/view/view-core.component.html","webpack:///./src/lib/main/core/view/view-core.component.ts","webpack:///./src/lib/main/core/view/view-core.service.ts","webpack:///./src/lib/main/grid/grid.component.html","webpack:///./src/lib/main/grid/grid.component.ts","webpack:///./src/lib/main/grid/grid.service.ts","webpack:///./src/lib/main/main.module.ts","webpack:///./src/lib/main/markup/markup.directive.ts","webpack:///./src/lib/main/model/model-builder.service.ts","webpack:///./src/lib/main/toolbar/toolbar.component.ts","webpack:///./src/lib/main/visibility/visibility.component.ts","webpack:///./src/lib/pipes/array.pipe.ts","webpack:///./src/lib/pipes/currency.pipe.ts","webpack:///./src/lib/pipes/date.pipe.ts","webpack:///./src/lib/pipes/filter.pipe.ts","webpack:///./src/lib/pipes/highlight.pipe.ts","webpack:///./src/lib/pipes/number.pipe.ts","webpack:///./src/lib/pipes/pipe.module.ts","webpack:///./src/lib/pipes/text.pipe.ts","webpack:///./src/lib/pipes/time.pipe.ts","webpack:///./src/lib/plugins/action-bar/action-bar.component.html","webpack:///./src/lib/plugins/action-bar/action-bar.component.ts","webpack:///./src/lib/plugins/action-bar/action-bar.module.ts","webpack:///./src/lib/plugins/action-bar/action-core.component.html","webpack:///./src/lib/plugins/action-bar/action-core.component.ts","webpack:///./src/lib/plugins/action-bar/action-list.component.ts","webpack:///./src/lib/plugins/action-bar/action.component.ts","webpack:///./src/lib/plugins/autocomplete-editor/autocomplete-editor.component.html","webpack:///./src/lib/plugins/autocomplete-editor/autocomplete-editor.component.ts","webpack:///./src/lib/plugins/autocomplete-editor/autocomplete-editor.module.ts","webpack:///./src/lib/plugins/backdrop/backdrop.component.html","webpack:///./src/lib/plugins/backdrop/backdrop.component.ts","webpack:///./src/lib/plugins/backdrop/backdrop.directive.ts","webpack:///./src/lib/plugins/backdrop/backdrop.module.ts","webpack:///./src/lib/plugins/backdrop/backdrop.service.ts","webpack:///./src/lib/plugins/bool-editor/bool-editor.component.html","webpack:///./src/lib/plugins/bool-editor/bool-editor.component.ts","webpack:///./src/lib/plugins/bool-editor/bool-editor.module.ts","webpack:///./src/lib/plugins/caption/caption.component.html","webpack:///./src/lib/plugins/caption/caption.component.ts","webpack:///./src/lib/plugins/caption/caption.module.ts","webpack:///./src/lib/plugins/cell-editor/cell-editor.component.html","webpack:///./src/lib/plugins/cell-editor/cell-editor.component.ts","webpack:///./src/lib/plugins/cell-editor/cell-editor.module.ts","webpack:///./src/lib/plugins/colum-chooser/column-chooser.component.html","webpack:///./src/lib/plugins/colum-chooser/column-chooser.component.ts","webpack:///./src/lib/plugins/colum-chooser/column-chooser.module.ts","webpack:///./src/lib/plugins/column-filter/column-filter-by.component.html","webpack:///./src/lib/plugins/column-filter/column-filter-by.component.ts","webpack:///./src/lib/plugins/column-filter/column-filter-item-list.directive.ts","webpack:///./src/lib/plugins/column-filter/column-filter-item.directive.ts","webpack:///./src/lib/plugins/column-filter/column-filter-trigger.component.html","webpack:///./src/lib/plugins/column-filter/column-filter-trigger.component.ts","webpack:///./src/lib/plugins/column-filter/column-filter.component.html","webpack:///./src/lib/plugins/column-filter/column-filter.component.ts","webpack:///./src/lib/plugins/column-filter/column-filter.module.ts","webpack:///./src/lib/plugins/column-sort/column-sort.component.html","webpack:///./src/lib/plugins/column-sort/column-sort.component.ts","webpack:///./src/lib/plugins/column-sort/column-sort.module.ts","webpack:///./src/lib/plugins/data-manipulation/data-manipulation.component.ts","webpack:///./src/lib/plugins/data-manipulation/data-manipulation.module.ts","webpack:///./src/lib/plugins/edit-form/edit-form-control.component.html","webpack:///./src/lib/plugins/edit-form/edit-form-control.component.ts","webpack:///./src/lib/plugins/edit-form/edit-form-trigger.component.html","webpack:///./src/lib/plugins/edit-form/edit-form-trigger.component.ts","webpack:///./src/lib/plugins/edit-form/edit-form.component.html","webpack:///./src/lib/plugins/edit-form/edit-form.component.ts","webpack:///./src/lib/plugins/edit-form/edit-form.module.ts","webpack:///./src/lib/plugins/export/export.component.html","webpack:///./src/lib/plugins/export/export.component.ts","webpack:///./src/lib/plugins/export/export.module.ts","webpack:///./src/lib/plugins/expression-builder/digest/evaluate.ts","webpack:///./src/lib/plugins/expression-builder/digest/watch.ts","webpack:///./src/lib/plugins/expression-builder/eb-class.directive.ts","webpack:///./src/lib/plugins/expression-builder/eb-expression.component.html","webpack:///./src/lib/plugins/expression-builder/eb-expression.component.ts","webpack:///./src/lib/plugins/expression-builder/eb-node.component.html","webpack:///./src/lib/plugins/expression-builder/eb-node.component.ts","webpack:///./src/lib/plugins/expression-builder/eb-node.service.ts","webpack:///./src/lib/plugins/expression-builder/eb.module.ts","webpack:///./src/lib/plugins/expression-builder/model/expression.builder.ts","webpack:///./src/lib/plugins/expression-builder/model/expression.ts","webpack:///./src/lib/plugins/expression-builder/model/group.schema.ts","webpack:///./src/lib/plugins/expression-builder/model/line.ts","webpack:///./src/lib/plugins/expression-builder/model/node.schema.ts","webpack:///./src/lib/plugins/expression-builder/model/node.ts","webpack:///./src/lib/plugins/expression-builder/model/statement.ts","webpack:///./src/lib/plugins/expression-builder/patch.ts","webpack:///./src/lib/plugins/expression-builder/serialization.service.ts","webpack:///./src/lib/plugins/expression-builder/traverse.service.ts","webpack:///./src/lib/plugins/expression-builder/utility.ts","webpack:///./src/lib/plugins/import/import.component.html","webpack:///./src/lib/plugins/import/import.component.ts","webpack:///./src/lib/plugins/import/import.module.ts","webpack:///./src/lib/plugins/layer/layer.component.ts","webpack:///./src/lib/plugins/layer/layer.module.ts","webpack:///./src/lib/plugins/legend/legend.component.html","webpack:///./src/lib/plugins/legend/legend.component.ts","webpack:///./src/lib/plugins/legend/legend.module.ts","webpack:///./src/lib/plugins/pagination/pager-target.component.html","webpack:///./src/lib/plugins/pagination/pager-target.component.ts","webpack:///./src/lib/plugins/pagination/pager.component.html","webpack:///./src/lib/plugins/pagination/pager.component.ts","webpack:///./src/lib/plugins/pagination/pager.module.ts","webpack:///./src/lib/plugins/pane/pane.component.html","webpack:///./src/lib/plugins/pane/pane.component.ts","webpack:///./src/lib/plugins/pane/pane.module.ts","webpack:///./src/lib/plugins/persistence/persistence-panel.component.html","webpack:///./src/lib/plugins/persistence/persistence-panel.component.ts","webpack:///./src/lib/plugins/persistence/persistence.component.ts","webpack:///./src/lib/plugins/persistence/persistence.module.ts","webpack:///./src/lib/plugins/plugin.module.ts","webpack:///./src/lib/plugins/plugin.service.ts","webpack:///./src/lib/plugins/progress/progress.component.html","webpack:///./src/lib/plugins/progress/progress.component.ts","webpack:///./src/lib/plugins/progress/progress.module.ts","webpack:///./src/lib/plugins/query-builder/query-builder-panel.component.html","webpack:///./src/lib/plugins/query-builder/query-builder-panel.component.ts","webpack:///./src/lib/plugins/query-builder/query-builder.component.html","webpack:///./src/lib/plugins/query-builder/query-builder.component.ts","webpack:///./src/lib/plugins/query-builder/query-builder.model.ts","webpack:///./src/lib/plugins/query-builder/query-builder.module.ts","webpack:///./src/lib/plugins/query-builder/query-builder.pipe.ts","webpack:///./src/lib/plugins/query-builder/query-builder.service.ts","webpack:///./src/lib/plugins/query-builder/schema/converter.ts","webpack:///./src/lib/plugins/query-builder/schema/operator.ts","webpack:///./src/lib/plugins/query-builder/schema/suggest.service.ts","webpack:///./src/lib/plugins/query-builder/schema/validator.ts","webpack:///./src/lib/plugins/query-builder/schema/where.schema.ts","webpack:///./src/lib/plugins/reference-editor/reference-editor.component.html","webpack:///./src/lib/plugins/reference-editor/reference-editor.component.ts","webpack:///./src/lib/plugins/reference-editor/reference-editor.module.ts","webpack:///./src/lib/plugins/reference-editor/reference.component.html","webpack:///./src/lib/plugins/reference-editor/reference.component.ts","webpack:///./src/lib/plugins/rest/rest.component.ts","webpack:///./src/lib/plugins/rest/rest.module.ts","webpack:///./src/lib/plugins/status-bar/status-bar.component.html","webpack:///./src/lib/plugins/status-bar/status-bar.component.ts","webpack:///./src/lib/plugins/status-bar/status-bar.module.ts","webpack:///./src/lib/plugins/tab-trap/tab-trap-in.directive.ts","webpack:///./src/lib/plugins/tab-trap/tab-trap.component.html","webpack:///./src/lib/plugins/tab-trap/tab-trap.component.ts","webpack:///./src/lib/plugins/tab-trap/tab-trap.module.ts","webpack:///./src/lib/plugins/title/title.component.html","webpack:///./src/lib/plugins/title/title.component.ts","webpack:///./src/lib/plugins/title/title.module.ts","webpack:///./src/lib/plugins/validation/rule.component.html","webpack:///./src/lib/plugins/validation/rule.component.ts","webpack:///./src/lib/plugins/validation/validation.component.ts","webpack:///./src/lib/plugins/validation/validation.module.ts","webpack:///./src/lib/plugins/validation/validator.component.html","webpack:///./src/lib/plugins/validation/validator.component.ts","webpack:///./src/lib/public-api.ts","webpack:///./src/lib/template/template-cache.directive.ts","webpack:///./src/lib/template/template-cache.service.ts","webpack:///./src/lib/template/template-host.service.ts","webpack:///./src/lib/template/template-link.directive.ts","webpack:///./src/lib/template/template-link.service.ts","webpack:///./src/lib/template/template-link.ts","webpack:///./src/lib/template/template.directive.ts","webpack:///./src/lib/template/template.module.ts","webpack:///./src/lib/template/template.service.ts","webpack:///./src/lib/template/theme.service.ts","webpack:///./src/main.ts","webpack:///./src/plugin/autofocus/autofocus.view.js","webpack:///./src/plugin/backdrop/backdrop.view.js","webpack:///./src/plugin/column-chooser/column.chooser.model.js","webpack:///./src/plugin/column-chooser/column.chooser.view.js","webpack:///./src/plugin/column-filter/column.filter.model.js","webpack:///./src/plugin/column-filter/column.filter.view.js","webpack:///./src/plugin/column-sort/column.sort.view.js","webpack:///./src/plugin/data-manipulation/data.manipulation.model.js","webpack:///./src/plugin/data-manipulation/data.manipulation.view.js","webpack:///./src/plugin/edit-form/edit.form.panel.view.js","webpack:///./src/plugin/export/download.js","webpack:///./src/plugin/export/export.view.js","webpack:///./src/plugin/export/pdf.js","webpack:///./src/plugin/export/xlsx.js","webpack:///./src/plugin/import/import.view.js","webpack:///./src/plugin/import/read.js","webpack:///./src/plugin/import/xlsx.js","webpack:///./src/plugin/pager/pager.view.js","webpack:///./src/plugin/persistence/persistence.view.js","webpack:///./src/plugin/position/position.view.js","webpack:///./src/plugin/rest/rest.view.js","webpack:///./src/plugin/validation/validator.view.js","webpack:///./src/theme/material/components/chips/chips-push.directive.ts","webpack:///./src/theme/material/components/chips/chips-remove.directive.ts","webpack:///./src/theme/material/components/chips/chips.directive.ts","webpack:///./src/theme/material/components/chips/chips.module.ts","webpack:///./src/theme/material/components/menu/menu-trigger.directive.ts","webpack:///./src/theme/material/components/menu/menu.directive.ts","webpack:///./src/theme/material/components/menu/menu.module.ts","webpack:///./src/theme/material/components/select/select.directive.ts","webpack:///./src/theme/material/components/select/select.module.ts","webpack:///./src/theme/material/components/theme-overlay/theme-overlay.directive.ts","webpack:///./src/theme/material/components/theme-overlay/theme-overlay.module.ts","webpack:///./src/theme/material/index.scss","webpack:///./src/theme/material/theme.component.gen.html","webpack:///./src/theme/material/theme.component.ts","webpack:///./src/theme/material/theme.module.ts","webpack:///fs (ignored)","webpack:///crypto (ignored)","webpack:///stream (ignored)"],"names":[],"mappings":"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;;AAEA;AACA,SAAS,OAAO;AAChB,SAAS,OAAO;;AAEhB,MAAM,yEAAe,IAAI,6DAAW;AACpC,0BAA0B,8DAAW;AACrC,gCAAgC,+DAAS;;AAEzC;AACA;AACA;;AAEA;AACA,UAAU,oBAAoB,GAAG,sBAAsB;AACvD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,mBAAmB;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACnOA;AAAA;AAAA;AAAA;AAAgD;AACA;;AAEzC;AACP;AACA,sBAAsB,2DAAQ;AAC9B,mBAAmB,2DAAK;AACxB;AACA,C;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAA4C;AACM;;AAE3C;AACP;AACA;AACA;AACA;;AAEA,qBAAqB,6DAAQ;;AAE7B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA,EAAE,uDAAG;;AAEL;AACA;AACA,SAAS,OAAO;;AAEhB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnDA;AAAA;AAAA;AAA4C;;AAErC;AACP;AACA,wBAAwB,uDAAW;;AAEnC;AACA;AACA;AACA,8BAA8B,uDAAW,CAAC;AAC1C;AACA;AACA,iCAAiC,uDAAW,CAAC;AAC7C;AACA;AACA,GAAG;AACH;AACA,C;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAmD;;AAE5C;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,8DAAQ,kCAAkC,oBAAoB;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AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP,iBAAiB,+DAAU;AAC3B;AACA;AACA;AACA,2BAA2B,wEAAe;AAC1C,SAAS,sDAAS;AAClB;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,8DAAO;AAC3B;;AAEA;AACA,eAAe,qEAAW;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iEAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;AACF;;;;;;;;;;;;;AC5LA;AAAA;AAAA;AAAA;AAAoC;AAC2C;;AAExE;AACP;AACA,yBAAyB;;AAEzB,mBAAmB,4EAAiB;AACpC;;AAEA,mBAAmB,+CAAI,KAAK,uEAAY;AACxC;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAkD;AACC;;AAEhB;;AAEnC;AACA;;AAEA;AACA,SAAS,SAAS;AAClB;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,+DAAI;AAC1B;AACA;;AAEA,8CAA8C,YAAY;AAC1D;AACA,SAAS,QAAQ;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA,QAAQ,+DAAI;AACZ;;AAEA;AACA;AACA;AACA;AACA;;AAEA,CAAC,sEAAW;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG,IAAI;;AAEP;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,CAAC,sEAAW;AACZ;AACA,SAAS,MAAM;AACf;AACA;AACA,mBAAmB,+DAAI;AACvB;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA,QAAQ,OAAO;AACf;AACA;;AAEA,iBAAiB,+DAAI;AACrB;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,OAAO;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,+DAAI;AACrB,SAAS,QAAQ;AACjB;AACA;;AAEA,4CAA4C,SAAS;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ,OAAO;;AAEf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACvOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACD;AACG;AACL;AACX;AACgB;;AAEzD,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAED,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAEM,+BAA+B,kEAAe;AACrD;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,2DAAQ;AACzB,OAAO,4DAAO;AACd;AACA;AACA;AACA,kBAAkB,oEAAa;AAC/B;AACA;AACA,kBAAkB,oEAAa;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEO,0BAA0B,kEAAU;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;AC7DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACD;AACG;;AAEzD,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAED,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAEM,8BAA8B,kEAAe;AACpD;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEO,yBAAyB,kEAAU;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;AC9CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACV;AACY;;AAEzD,oEAAY;AACZ;AACA;AACA,eAAe,aAAa,GAAG,cAAc;AAC7C;AACA,CAAC;;AAEM,gCAAgC,yDAAW;AAClD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,2BAA2B,kEAAU;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;AClCA;AAAA;AAAA;AAAA;AAAmD;AACM;;AAEzD,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAED,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAEM;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA,UAAU,qDAAQ;AAClB;AACA;;AAEA;AACA;AACA;AACA;;AAEA,8BAA8B;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,iBAAiB,oDAAO;;AAExB;;AAEA;AACA;;AAEA,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA,YAAY,UAAU,IAAI,WAAW;AACrC;AACA,C;;;;;;;;;;;;AC1EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACD;AACG;;AAEzD,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAED,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;;AAGM,kCAAkC,kEAAe;AACxD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEO,6BAA6B,kEAAU;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAA6C;;AAEtC,8BAA8B,yDAAW;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,C;;;;;;;;;;;;ACbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACD;AACG;;AAEzD,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAED,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAEM,8BAA8B,kEAAe;AACpD;AACA;;AAEA;AACA;AACA;;AAEO,yBAAyB,kEAAU;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;AClCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACD;AACG;;AAEzD,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAED,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAEM,+BAA+B,kEAAe;AACrD;AACA;;AAEA;AACA;AACA;;AAEO,0BAA0B,kEAAU;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;AClCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACD;AACG;AACpB;AACM;;AAE3C,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAED,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAEM,8BAA8B,kEAAe;AACpD;AACA;;AAEA,mBAAmB,gDAAG;AACtB;;AAEA,4BAA4B,8DAAO;AACnC;AACA;AACA;AACA;;AAEO,yBAAyB,kEAAU;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;ACzCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACV;AACY;;AAEzD,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAEM,mCAAmC,yDAAW;AACrD;AACA;;AAEA;;AAEA,4BAA4B,UAAU;AACtC;AACA;;AAEA;AACA;AACA;AACA;;AAEO,8BAA8B,kEAAU;AAC/C;AACA;AACA;AACA,C;;;;;;;;;;;;AC9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACV;AACY;;AAEzD,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAED,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAEM,+BAA+B,yDAAW;AACjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAU,gBAAgB;AAC1B;AACA;AACA;AACA;;AAEO,0BAA0B,kEAAU;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACnDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACD;AACG;;AAEzD,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAEM,sCAAsC,kEAAe;AAC5D;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,iCAAiC,kEAAU;AAClD;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;ACnCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACD;AACG;;AAEzD,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAED,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAEM,4BAA4B,kEAAe;AAClD;AACA;AACA;AACA;;AAEO,uBAAuB,kEAAU;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;AChCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACD;AACG;AACpB;AACM;;AAE3C,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAED,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAEM,+BAA+B,kEAAe;AACrD;AACA;;AAEA;AACA;AACA,mBAAmB,gDAAG;;AAEtB,4BAA4B,8DAAO;AACnC;AACA;;AAEO,0BAA0B,kEAAU;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACxCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACD;AACG;;AAEzD,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAED,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAEM,gCAAgC,kEAAe;AACtD;AACA;;AAEA;AACA;AACA;;AAEO,2BAA2B,kEAAU;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;AClCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACV;AACY;;AAEzD,oEAAY;AACZ;AACA;AACA,eAAe,aAAa,GAAG,cAAc;AAC7C;AACA,CAAC;;AAEM,6BAA6B,yDAAW;AAC/C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yB;AACA;AACA;AACA;;AAEO,wBAAwB,kEAAU;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;ACtCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACD;AACG;;AAEzD,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAED,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAEM,kCAAkC,kEAAe;AACxD;AACA;;AAEA;AACA;AACA;AACA;;AAEO,6BAA6B,kEAAU;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;ACnCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACV;AACY;;AAEzD,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAEM,+BAA+B,yDAAW;AACjD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,0BAA0B,kEAAU;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;ACpCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACD;AACG;AACT;;AAEhD,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAED,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAEM,mCAAmC,kEAAe;AACzD;AACA;;AAEA,wC;AACA;AACA;;AAEO,8BAA8B,kEAAU;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;ACnCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACV;AACY;;AAEzD,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAEM,oCAAoC,yDAAW;AACtD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,+BAA+B,kEAAU;AAChD;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;ACnCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACV;AACY;;AAEzD,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAEM,mCAAmC,yDAAW;AACrD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,8BAA8B,kEAAU;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;ACnCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACV;AACY;;AAEzD,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAEM,sCAAsC,yDAAW;AACxD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,iCAAiC,kEAAU;AAClD;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACV;AACY;;AAEzD,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAEM,mCAAmC,yDAAW;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,8BAA8B,kEAAU;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACD;AACG;;AAEzD,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAED,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAEM,oCAAoC,kEAAe;AAC1D;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,+BAA+B,kEAAU;AAChD;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;AC1CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACV;AACY;AACnB;;AAEtC,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAED,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAEM,gCAAgC,yDAAW;AAClD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,eAAe,iDAAI;;AAEnB;AACA;AACA;;AAEO,2BAA2B,kEAAU;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC3CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACD;AACG;;AAEzD,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAED,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAED,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAEM,8BAA8B,kEAAe;AACpD;AACA;;AAEA;AACA;AACA;;AAEO,yBAAyB,kEAAU;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;ACzCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACD;AACG;;AAEzD,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAED,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAEM,8BAA8B,kEAAe;AACpD;AACA;;AAEA;AACA;AACA;;AAEO,yBAAyB,kEAAU;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;AClCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACD;AACG;;AAEzD,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAED,oEAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;;AAEM,6BAA6B,kEAAe;AACnD;AACA;;AAEA;AACA;AACA;;AAEO,wBAAwB,kEAAU;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;AClCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACgB;AACO;AACb;AACF;AACI;AACI;AACR;AACE;AACF;AACE;AACe;AACrB;AACM;AACE;AACN;AACU;AACN;AACQ;AACG;AACF;AACM;AACN;AACE;AACT;AACJ;AACA;AACF;;AAEtD;AACA;AACA,SAAS,+DAAU,2BAA2B,gEAAW;AACzD;;AAEA,kBAAkB,0DAAK;AACvB;;AAEO;AACP,QAAQ,aAAa;AACrB;AACA,WAAW,qEAAW;AACtB,UAAU,mEAAU;AACpB,YAAY,uEAAY;AACxB,cAAc,2EAAc;AAC5B,YAAY,kEAAY;AACxB,UAAU,mEAAU;AACpB,WAAW,qEAAW;AACtB,UAAU,mEAAU;AACpB,WAAW,sEAAW;AACtB,QAAQ,gEAAQ;AAChB,WAAW,sEAAW;AACtB,YAAY,wEAAY;AACxB,SAAS,kEAAS;AAClB,cAAc,4EAAc;AAC5B,WAAW,sEAAW;AACtB,eAAe,8EAAe;AAC9B,iBAAiB,iFAAgB;AACjC,gBAAgB,+EAAe;AAC/B,mBAAmB,qFAAkB;AACrC,gBAAgB,+EAAe;AAC/B,iBAAiB,iFAAgB;AACjC,YAAY,wEAAY;AACxB,mBAAmB,qFAAkB;AACrC,UAAU,oEAAU;AACpB,UAAU,oEAAU;AACpB,SAAS,kEAAS;AAClB;;AAEA;AACA;AACA,SAAS,YAAY;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC3FA;AAAA;AAAA;AAAA;AAAA;AAA8C;;AAEvC;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,WAAW;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW,UAAU;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS,QAAQ;AACjB;AACA;AACA;;AAEA,SAAS,WAAW;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGO;AACP;AACA;AACA,sCAAsC,YAAY;AAClD;AACA;AACA,yCAAyC,WAAW;AACpD;AACA,UAAU,mBAAmB;AAC7B;AACA;AACA,kBAAkB,aAAa;AAC/B;AACA;AACA,mBAAmB,aAAa;AAChC;AACA;AACA;;AAEA;AACA,kBAAkB,iEAAY;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC/IA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACO;AACA;;AAE5C;AACP,yCAAyC,YAAY;AACrD;AACA;;AAEA,SAAS,WAAW;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAEO;AACP,6CAA6C,gBAAgB;AAC7D;AACA;AACA,WAAW;AACX;;AAEA,SAAS,WAAW;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA,EAAE,IAAI;AACN;;AAEO;AACP,QAAQ,+DAAU;AAClB;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA,eAAe,6DAAM;AACrB,SAAS,+DAAQ;AACjB;;AAEA;AACA;;AAEO;AACP,QAAQ,SAAS;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,8DAAQ,6BAA6B,IAAI;AACtD;;AAEA;AACA;AACA,C;;;;;;;;;;;;AC7IA;AAAA;AAAA;AAAqC;;AAE9B;AACP,yBAAyB;AACzB,iBAAiB,gDAAG;AACpB,oBAAoB,gDAAG;AACvB;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACnBA;AAAA;AAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACrCA;AAAA;AAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAiD;;AAE1C,kCAAkC,+DAAc;AACvD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAA6C;;AAEtC;AACP;AACA;AACA;AACA,cAAc,wDAAQ;;AAEtB;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACbA;AAAA;AAAO,6B;;;;;;;;;;;;ACAP;AAAA;AAAA;AAA0C;;AAEnC;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS,eAAe;AACxB,SAAS,iBAAiB;;AAE1B;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH,+BAA+B,sDAAW;AAC1C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS,eAAe;AACxB,SAAS,iBAAiB;;AAE1B;AACA;;AAEA;AACA;AACA,UAAU,WAAW;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACtEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACf;AAC4B;;AAEjD,mBAAmB,wCAAG;AAC7B;AACA,4BAA4B,oEAAY;AACxC;AACA;;AAEO,0BAA0B,uDAAU;AAC3C;AACA,4BAA4B,oEAAY;AACxC;AACA,C;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4B;AACM;AACJ;AACgC;;AAEvD;AACP;AACA;AACA;;AAEA,2BAA2B,0EAAe;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,wCAAG;AAChB;;AAEA;AACA,aAAa,8CAAM;AACnB;;AAEA;AACA,aAAa,0CAAI;AACjB;AACA,C;;;;;;;;;;;;ACxFA;AAAA;AAAA;AAAA;AAAoC;AACV;;AAEnB,mBAAmB,gDAAO;AACjC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,sCAAE;AACpB;AACA,C;;;;;;;;;;;;ACpBA;AAAA;AAAO;AACP;AACA;AACA;AACA;;AAEA;AACA,SAAS,UAAU;AACnB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AACH;AACM;;AAEzC;AACP;AACA;AACA;;AAEA;AACA;AACA,cAAc,wDAAG;AACjB,eAAe,wDAAG;AAClB,iBAAiB,wDAAG;AACpB,gBAAgB,wDAAG;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yDAAyD,gEAAU;AACnE;;AAEA;AACA,4DAA4D,gEAAU;AACtE;;AAEA;AACA,kEAAkE,gEAAU;AAC5E;;AAEA;AACA,SAAS,wDAAG;AACZ;;AAEA;AACA,SAAS,wDAAG;AACZ;;AAEA;AACA,SAAS,wDAAG;AACZ;;AAEA;AACA,SAAS,wDAAG;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA,EAAE,2DAAK;;AAEP;AACA;;AAEA;AACA;AACA,EAAE,2DAAK;;AAEP;AACA;;AAEA;AACA,SAAS,WAAW;AACpB;AACA;AACA;;AAEA;AACA,EAAE,2DAAK;;AAEP;AACA;AACA,C;;;;;;;;;;;;AC5FA;AAAA;AAAA;AAA0D;;AAEnD;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS,0DAAiB;AAC1B;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;AClBA;AAAA;AAAA;AAA4B;;AAErB,sBAAsB,0CAAI;AACjC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;ACZA;AAAA;AAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA,C;;;;;;;;;;;;ACTA;AAAA;AAAA;AAA2C;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAEM;AACP;AACA,uBAAuB,yDAAa;AACpC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;ACnCA;AAAA;AAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AAA4B;AAC4B;;AAEjD,mBAAmB,wCAAG;AAC7B;AACA,4BAA4B,oEAAY;AACxC;AACA,C;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAA4B;AAC4B;;AAEjD,mBAAmB,wCAAG;AAC7B;AACA,4BAA4B,oEAAY;AACxC;AACA,C;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAoC;AACV;;AAEnB,kBAAkB,gDAAO;AAChC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,sCAAE;AAChB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,C;;;;;;;;;;;;ACpCA;AAAA;AAAA;AAAA;AAAiD;AACK;;AAE/C;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kDAAkD,iBAAiB;AACnE;AACA;AACA;AACA;;AAEA;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA,+BAA+B,aAAa;AAC5C;AACA;AACA,mCAAmC,aAAa;AAChD;AACA;AACA;;AAEA;AACA,kCAAkC,iEAAY;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,YAAY;AACvC;AACA,8BAA8B,8DAAQ;AACtC;AACA,4DAA4D,MAAM,WAAW,iBAAiB;AAC9F;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACnEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACI;AACgB;AACT;AACM;;AAE5C;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,8CAAM;AAC3B;AACA;AACA;AACA,WAAW,iCAAiC;AAC5C;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,6BAA6B,yDAAW;AACxC,0BAA0B,kDAAQ;;AAElC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;;AAEA,0BAA0B,yDAAW,KAAK,2DAAK,YAAY,2DAAK;AAChE,aAAa,kEAAgB;AAC7B;AACA;;;;;;;;;;;;;AClDA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACL;AACO;;AAEzC;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yCAAyC,YAAY;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC,YAAY;AACrD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS,uBAAuB;AAChC;AACA;AACA,MAAM,gEAAW;AACjB;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH,0CAA0C,YAAY;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,YAAY;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO,gEAAW;AAClB;AACA,kDAAkD,yDAAW;;AAE7D;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2CAA2C,oDAAS;AACpD;;AAEA,yBAAyB,yDAAW;AACpC;;AAEA;AACA;AACA,qCAAqC,yDAAW;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACrIA;AAAA;AAAA;AAAmD;;AAE5C;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS,OAAO;AAChB;;AAEA;AACA,yBAAyB,UAAU,GAAG,IAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,2DAAK;AAC3B,mBAAmB,2DAAK;AACxB,KAAK;AACL;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;AC7CA;AAAA;AAA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;;;;ACrCA;AAAA;AAAA;AAAA;AAA6C;AACA;;AAE7C,wBAAwB,yDAAW;AAC5B;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kCAAkC,gEAAU;AAC5C;;AAEA;AACA,qCAAqC,gEAAU;AAC/C;;AAEA;AACA,8CAA8C,gEAAU;AACxD;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;ACnDA;AAAA;AAAA;AAAA;AAAA;AAA8B;AACe;AACA;;AAE7C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEO,mBAAmB,0CAAI;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,SAAS;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kCAAkC,gEAAU;AAC5C;AACA;;AAEA;AACA;AACA,qCAAqC,gEAAU;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4CAA4C,yDAAW;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,IAAI,gBAAgB,IAAI;AACrC;AACA;AACA;AACA;;;;;;;;;;;;;ACvNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6B;AACQ;AACI;AACU;AACJ;AACZ;AACE;AACI;AACE;AACR;;AAE5B,yBAAyB,wCAAG;AACnC;AACA;;AAEA,qBAAqB,iDAAO;AAC5B,oBAAoB,+CAAM;AAC1B,uBAAuB,qDAAS;AAChC,+BAA+B,2DAAK;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,yBAAyB;AACzD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4BAA4B;AAC5D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,wBAAwB;AACxD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,2BAA2B;AAC3D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,2BAA2B;AAC3D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,8BAA8B;AAC9D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS,SAAS;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,2CAA2C,uDAAc;AACzD;;AAEA;AACA,SAAS,SAAS;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA,gEAAgE,uDAAc;AAC9E;;AAEA;AACA,SAAS,SAAS;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,uDAAc;AACvB;AACA;AACA;;AAEA;AACA,aAAa,+CAAU;AACvB;;AAEA;AACA,aAAa,iDAAW;AACxB;;AAEA;AACA,aAAa,qDAAa;AAC1B;;AAEA;AACA,SAAS,SAAS;AAClB,oBAAoB,+DAAU;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,SAAS;AAClB,oBAAoB,+DAAU;AAC9B,SAAS,QAAQ;AACjB;AACA,SAAS,UAAU;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AC9MA;AAAA;AAAA;AAAuC;;AAEhC,sBAAsB,mDAAQ;AACrC;AACA;AACA;;AAEA;AACA,YAAY,kBAAkB,GAAG,qBAAqB;AACtD;AACA,C;;;;;;;;;;;;ACVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;AACJ;AAC2B;AACR;;AAE9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,8DAAQ;AACrB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mCAAmC,yDAAW;AAC9C;AACA;;AAEO,0BAA0B,0CAAI;AACrC;AACA;;AAEA;;AAEA,SAAS,SAAS;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAU,OAAO;AACjB,UAAU,UAAU;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,sCAAE;AACjB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;ACtFA;AAAA;AAAA;AAAuC;;AAEhC,wBAAwB,mDAAQ;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;ACVA;AAAA;AAAA;AAAmC;;AAE5B,4BAA4B,8CAAM;AACzC;AACA;;AAEA;;AAEA,SAAS,SAAS;AAClB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC5BA;AAAA;AAAA;AAAmD;;AAE5C;AACP;AACA,uBAAuB,8DAAa;AACpC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;AC3BA;AAAA;AAAA;AAAuC;;AAEhC,qBAAqB,mDAAQ;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;ACVA;AAAA;AAAA;AAA6B;;AAEtB,yBAAyB,wCAAG;AACnC;AACA;;AAEA,SAAS,SAAS;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU,OAAO;AACjB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC3CA;AAAA;AAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;ACvCA;AAAA;AAAO;AACP;AACA;AACA;AACA,C;;;;;;;;;;;;ACJA;AAAA;AAAA;AAA4C;;AAErC;AACP;AACA;;AAEA;AACA,0BAA0B,uDAAW,CAAC;AACtC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACG;AACO;;AAE1D;AACA;AACA;;AAEA;AACA;;AAEA,eAAe,iDAAI;AACnB,oBAAoB,iDAAI;AACxB;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEO;AACP;AACA;;AAEA;AACA;;AAEA,MAAM,gEAAW;AACjB;AACA;AACA;AACA,iBAAiB,sEAAY;AAC7B,4BAA4B,0DAAK;AACjC;AACA;;AAEA,eAAe,gEAAW,oBAAoB,0DAAK;AACnD;;AAEA;AACA;AACA;;AAEA;AACA,oBAAoB,iDAAI;AACxB;;AAEA;AACA;AACA;;AAEA;AACA,oBAAoB,iDAAI;AACxB;;AAEA;AACA;AACA;;AAEA;AACA,oBAAoB,iDAAI;AACxB;;AAEA;AACA,SAAS,gBAAgB;AACzB;AACA,cAAc,2DAAK;AACnB;;AAEA,aAAa,2DAAK;AAClB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;ACvFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACC;AACG;AACA;AACe;AACA;AACZ;AACpB;AACuC;;AAE/D;AACP;AACA;AACA;AACA;;AAEA,gBAAgB,4DAAU;;AAE1B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,mBAAmB,eAAe;AAClC;AACA;;AAEA;AACA,SAAS,eAAe;;AAExB;AACA,cAAc,wDAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,2DAAQ;AAC1C;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK,uDAAG;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB,4DAAU;;AAElC;AACA,mCAAmC,2DAAQ;AAC3C,qBAAqB,sEAAY;AACjC,qBAAqB,2DAAQ;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ,eAAe,wDAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0CAAE;AACX;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,8EAAiC;AACzD,4EAA4E,oBAAoB;AAChG;AACA;AACA,KAAK;AACL;AACA,KAAK,uDAAG;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,4DAAU;;AAE9B;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ,aAAa,wDAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,8EAAiC;AACzD,4EAA4E,oBAAoB;AAChG;;AAEA;AACA,KAAK;AACL;AACA,KAAK,uDAAG;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,4DAAU;AAC9B;AACA;;AAEA;AACA;AACA,IAAI;AACJ,eAAe,wDAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK,uDAAG;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,4DAAU;;AAE9B;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ,cAAc,wDAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK,uDAAG;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ,aAAa,wDAAO;AACpB;AACA;AACA;AACA,KAAK,uDAAG;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ,cAAc,wDAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK,uDAAG;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS,uEAAuE;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,wEAAY;AACf,GAAG,wEAAY;AACf;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS,OAAO;AAChB;AACA;AACA,UAAU,KAAK;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC5XA;AAAA;AAAA;AAAA;AAAgD;AACH;;AAEtC;AACP;AACA,sBAAsB,2DAAQ;AAC9B,mBAAmB;AACnB,sBAAsB;AACtB,qBAAqB;;AAErB,mBAAmB,wDAAO,EAAE,uBAAuB;AACnD,oBAAoB,wDAAO,EAAE,uBAAuB;AACpD,oBAAoB,wDAAO,EAAE,uBAAuB;AACpD,mBAAmB,wDAAO,EAAE,uBAAuB;AACnD,mBAAmB,wDAAO,EAAE,uBAAuB;;AAEnD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACK;AACqB;AACA;;;AAGnE;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,2DAAQ;AACjB;;AAEA;AACA,SAAS,2DAAQ;AACjB;;AAEA;AACA,SAAS,2DAAQ;AACjB;;AAEA;AACA,SAAS,2DAAQ;AACjB;AACA;;AAEA;AACO;AACP;AACA;;AAEA,eAAe,8DAAS;AACxB;;AAEA;AACA;AACA;AACA,uBAAuB,4DAAU;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,8DAAS;AACxB;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;ACrEA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACC;AACC;;AAEvC;AACP;AACA;AACA;AACA,gBAAgB,0DAAS;;AAEzB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wDAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK,uDAAG;AACR;AACA;AACA;;AAEA;;AAEA,uBAAuB,0DAAS;AAChC,iBAAiB,gBAAgB,GAAG,0BAA0B;AAC9D;AACA,IAAI;AACJ,eAAe,wDAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK,uDAAG;AACR;AACA;AACA;;AAEA;AACA,mBAAmB,0DAAS;AAC5B,iBAAiB,gBAAgB,GAAG,0BAA0B;AAC9D;AACA,IAAI;AACJ,eAAe,wDAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK,uDAAG;AACR;AACA;AACA;;AAEA;AACA,mBAAmB,0DAAS;AAC5B,iBAAiB,gBAAgB,GAAG,0BAA0B;AAC9D;AACA,IAAI;AACJ,cAAc,wDAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK,uDAAG;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChIA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACA;AACY;;AAErD;AACP;AACA;AACA;AACA;;AAEA;AACA,SAAS,eAAe;AACxB,SAAS,gBAAgB;AACzB,SAAS,QAAQ;;AAEjB,oBAAoB,oBAAoB;AACxC,uBAAuB,4DAAY;AACnC;;AAEA;AACA;;AAEA;AACA,wCAAwC,YAAY;AACpD,UAAU,cAAc;AACxB;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,4DAAU;AACjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1CA;AAAA;AAAA;AAAA;AAAgD;AACF;;AAEvC;AACP;AACA,kBAAkB,4DAAY;AAC9B,iBAAiB,0DAAW;AAC5B;AACA,C;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAgE;;AAEhE;;AAEA;AACA;AACA;AACA,sCAAsC,OAAO;AAC7C;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kEAAY;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,C;;;;;;;;;;;;AClCA;AAAA;AAAA;AAA8C;;AAEvC;AACP;AACA,sBAAsB,2DAAQ;AAC9B;AACA,C;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAmD;;AAEnD;AACA;;AAEA;AACA,MAAM,4DAAO;AACb;AACA;AACA;AACA;AACA;AACA,GAAG,UAAU,6DAAQ;AACrB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAA6C;;AAEtC;AACP;AACA;;AAEA;AACA,mBAAmB,gEAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAgE;;AAEhE;;AAEA;AACA;AACA;AACA,4BAA4B,QAAQ,SAAS,UAAU,UAAU,cAAc;AAC/E,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO,6DAAQ,YAAY,4DAAO,YAAY,6DAAQ;AACtD,kBAAkB,KAAK,GAAG,gBAAgB,IAAI,KAAK;AACnD,IAAI,UAAU,4DAAO;AACrB;AACA,SAAS,6DAAQ;AACjB,oBAAoB,KAAK,GAAG,aAAa,IAAI,KAAK;AAClD,MAAM;AACN,oBAAoB,KAAK,GAAG,eAAe,IAAI,KAAK;AACpD;AACA;AACA,IAAI,UAAU,6DAAQ;AACtB,kBAAkB,KAAK,GAAG,cAAc,IAAI,KAAK;AACjD;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA,yBAAyB,MAAM;AAC/B;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AC9CA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;;;AAGF;AACA;;;;;;;;;;;;;AC5FA;AAAA;AAAA;AAAmD;;AAE5C;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,sEAAQ;AAClB;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,8DAAQ;AACtB;AACA,0BAA0B,aAAa;AACvC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,C;;;;;;;;;;;;ACpGA;AAAA;AAAA;AAAA;AAA+C;AACI;;AAEnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iGAAiG,MAAM;AACvG;AACA;;AAEA;AACA;AACA;AACA;AACA,qGAAqG,MAAM;AAC3G;AACA;;AAEA;AACA,+HAA+H,MAAM;AACrI;AACA;;AAEA;AACA;AACA;AACA,6FAA6F,MAAM;AACnG;;AAEA,uHAAuH,MAAM;AAC7H;;AAEA;AACA;AACA;AACA,6FAA6F,MAAM;AACnG;;AAEA,uHAAuH,MAAM;AAC7H;;AAEO,4BAA4B,2DAAO;AAC1C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iEAAiE,EAAE,6CAA6C,SAAS,+CAA+C,EAAE;AAC1K,sDAAsD,+DAA+D,KAAK,0DAA0D;AACpL;;AAEA,kDAAkD,8BAA8B;AAChF;;AAEA;AACA;AACA;AACA,qEAAqE,2BAA2B;AAChG;AACA,qEAAqE,2BAA2B;AAChG;AACA,0BAA0B,8DAAQ,wCAAwC,aAAa;AACvF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAA0B,IAAI;AAC9B;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,8DAAQ,wCAAwC,aAAa;AACvF;;AAEA;AACA,6DAA6D,2BAA2B;AACxF,2DAA2D,GAAG;AAC9D,8DAA8D,+DAA+D;AAC7H;;AAEA;AACA;AACA,6DAA6D,2BAA2B;AACxF;AACA,8DAA8D,kEAAkE;AAChI;AACA,8DAA8D,kEAAkE;AAChI;;AAEA;AACA;AACA,6DAA6D,2BAA2B;AACxF;AACA;AACA,8DAA8D,4FAA4F;AAC1J;AACA;AACA;;;;;;;;;;;;;ACtJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACS;AACb;AACI;;AAE5C,+BAA+B,2DAAO;AAC7C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,sEAAQ;AACnB;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,iEAAO,CAAC,4DAAO;AAC5B,cAAc,sEAAY;;AAE1B,MAAM,4DAAO;AACb;AACA;AACA,IAAI;AACJ,YAAY,qDAAQ;AACpB;AACA;;AAEA,SAAS,2BAA2B;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,8DAAQ;AACtB;AACA,0BAA0B,aAAa;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1HA;AAAA;AAAO;AACP;AACA;AACA;AACA,C;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AAAgD;AAChB;AACM;;AAE/B;AACP;AACA,sBAAsB,2DAAQ;;AAE9B;AACA,eAAe,4CAAK;AACpB,eAAe,iDAAI;AACnB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,qBAAqB;AACnC;AACA;AACA;AACA,C;;;;;;;;;;;;AC9DA;AAAA;AAAA;AAAA;AAA6C;AACO;;AAE7C;AACP;AACA;;AAEA,oBAAoB,wDAAO;AAC3B;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;;AAEpB,eAAe,0DAAK;AACpB,SAAS,gEAAW;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,KAAK;AACjB;AACA,GAAG;AACH;;AAEA;AACA,SAAS,KAAK;AACd;AACA;AACA,C;;;;;;;;;;;;AC1CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACgB;AACP;AAC9B;;AAE9B;AACP,QAAQ,QAAQ;AAChB,oBAAoB,0EAAe;AACnC;AACA;AACA;AACA,oBAAoB,0DAAiB;;AAErC;AACA;AACA,sBAAsB,8EAAgB;AACtC;AACA;;AAEA,QAAQ,g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Q;AACtB;AACA,qBAAqB,IAAI;AACzB;;AAEA;AACA,QAAQ,iEAAW;AACnB,cAAc,8DAAQ;AACtB;AACA,oBAAoB,YAAY;AAChC;;AAEA;AACA,qBAAqB,iEAAW;;AAEhC;AACA,gDAAgD,eAAe;AAC/D;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,C;;;;;;;;;;;;AC9DA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACH;AACI;;AAE1C;AACP;AACA,sBAAsB,2DAAQ;AAC9B,qBAAqB;AACrB,sBAAsB;AACtB;AACA;AACA;AACA;AACA,oBAAoB,wDAAO,EAAE,wBAAwB;AACrD,uBAAuB,wDAAO,EAAE,wBAAwB;;AAExD,wBAAwB,6DAAc;AACtC;AACA,C;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAA;AAAoC;AACE;;AAE/B;AACP,QAAQ,gBAAgB;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,iDAAI;AACvB;AACA;AACA;AACA;AACA,YAAY,aAAa;AACzB,yBAAyB,+CAAI,IAAI,IAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yCAAyC,aAAa;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mBAAmB;AAC/B;AACA,2CAA2C,aAAa;AACxD,wBAAwB,+CAAI;AAC5B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;AC1EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AACkB;AACA;AACN;AACZ;AACM;AACJ;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA,sBAAsB,0DAAY;;AAElC,2BAA2B,wDAAO;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wDAAQ;AACpB,WAAW,wDAAQ;AACnB,MAAM;AACN;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;;AAEH;;AAEA,8BAA8B,wDAAO;AACrC;AACA;AACA;AACA,YAAY,QAAQ;AACpB;;AAEA,KAAK,sEAAW;AAChB;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA,YAAY,wDAAQ;AACpB,WAAW,wDAAQ;AACnB,MAAM;AACN;AACA,IAAI;AACJ;AACA,GAAG;;AAEH;AACA;;AAEA;;AAEA,uBAAuB,4EAAa;AACpC;AACA;AACA;;AAEA,iBAAiB,qDAAQ;AACzB,mBAAmB,gDAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qDAAQ;AAC7B;AACA;AACA;AACA,qBAAqB,qDAAQ;AAC7B,uBAAuB,gDAAG;AAC1B;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,OAAO;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,kEAAY;AAChC;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AClKA;AAAA;AAAA;AAAA;AAAmD;AACT;AACoB;;AAEvD;AACP;AACA;AACA;AACA;AACA;AACA,wBAAwB,8DAAW;AACnC;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,sEAAgB;AACtC;AACA,qBAAqB,6DAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA,qCAAqC,+DAAS;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,YAAY;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AC/EA;AAAA;AAAA;AAAA;AAAgD;AACA;;AAEzC;AACP;AACA,sBAAsB,2DAAQ;AAC9B,mBAAmB,2DAAK;AACxB;AACA,C;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACP;AACC;AACa;AACS;AACvB;AAC+B;AAC/B;;AAErC;AACP;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,8DAAW;;AAEpC,kBAAkB,wDAAO;AACzB;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,+DAAS;AAC1C;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,iCAAiC,+DAAS;AAC1C;AACA;AACA;;AAEA;AACA;AACA,cAAc,aAAa;AAC3B,oBAAoB,+DAAI;;AAExB,sBAAsB,+DAAI;AAC1B,sBAAsB,+DAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS,sEAAW;AACpB;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA,qBAAqB,cAAc,GAAG,sBAAsB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,qBAAqB,+DAAI;AACzB;AACA,wBAAwB,qEAAU;AAClC;AACA,iCAAiC,uDAAW,CAAC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,kBAAkB,wDAAO;AACzB;AACA;AACA;AACA,WAAW,QAAQ;AACnB,gBAAgB,+DAAI;AACpB;AACA,sBAAsB,qEAAU;AAChC;AACA,yBAAyB,uDAAW,CAAC;AACrC;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,WAAW,QAAQ;AACnB,gBAAgB,+DAAI;AACpB;AACA;AACA,GAAG;;AAEH,oBAAoB,wDAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,iBAAiB,8DAAqB;AACtC,sBAAsB,OAAO,GAAG,sBAAsB;AACtD;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA,EAAE,uDAAG;;AAEL;AACA;;AAEA;AACA,+BAA+B,uDAAW,CAAC;AAC3C,GAAG;AACH,kCAAkC,uDAAW,CAAC;AAC9C;;AAEA;AACA,4DAA4D,8EAAe;AAC3E;AACA;AACA;AACA;;;;;;;;;;;;;AC9JA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AACO;AACC;AACa;AAC5B;AACM;AACE;AACU;;AAEjD;AACP;AACA;AACA;;AAEA,0BAA0B,gEAAY;AACtC,8BAA8B,6EAAgB;;AAE9C;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,wDAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,UAAU;AAChC;AACA,MAAM;AACN;AACA;AACA,GAAG;;AAEH,iBAAiB,wDAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,OAAO;AAC7B;AACA,MAAM;AACN;AACA;AACA,GAAG;;AAEH,kBAAkB,wDAAO;AACzB;AACA;AACA;AACA,SAAS,OAAO;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,gBAAgB;AACtC;AACA,MAAM;AACN;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS,UAAU;AACnB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS,OAAO;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS,OAAO;AAChB;AACA,UAAU,OAAO;AACjB,UAAU,wBAAwB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,eAAe,sDAAe;AAC9B;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,QAAQ;AACjB,cAAc,+DAAI;AAClB;AACA,UAAU,qEAAU;AACpB;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU,iDAAI;AACd;;AAEA,SAAS,mBAAmB;AAC5B,EAAE,yDAAO;AACT;AACA;AACA;AACA,oCAAoC,uDAAW,CAAC,GAAG,IAAI;AACvD,wCAAwC,uDAAW,CAAC,GAAG,IAAI;AAC3D,wCAAwC,uDAAW,CAAC,GAAG,IAAI;AAC3D;;AAEA;AACA;AACA;AACA,4BAA4B,uDAAW,CAAC,GAAG,IAAI;AAC/C,oCAAoC,uDAAW,CAAC,GAAG,IAAI;AACvD;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,UAAU,iDAAI;AACd;;AAEA,SAAS,mBAAmB;AAC5B;AACA,GAAG,yDAAO;AACV;AACA,uCAAuC,uDAAW,CAAC,GAAG,IAAI;AAC1D,2CAA2C,uDAAW,CAAC,GAAG,IAAI;AAC9D,2CAA2C,uDAAW,CAAC,GAAG,IAAI;AAC9D,uCAAuC,uDAAW,CAAC,GAAG,IAAI;AAC1D,uCAAuC,uDAAW,CAAC,GAAG,IAAI;AAC1D;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,UAAU,iDAAI;AACd;;AAEA,SAAS,OAAO;AAChB,EAAE,yDAAO,0CAA0C,uDAAW,CAAC,GAAG,IAAI;;AAEtE;AACA;;AAEA;AACA;AACA;AACA,UAAU,iDAAI;AACd;;AAEA;AACA,eAAe,yDAAO,iCAAiC,uDAAW,CAAC,GAAG,IAAI;AAC1E;;AAEA;AACA,EAAE,yDAAO;AACT,oBAAoB,uDAAW,CAAC,GAAG,IAAI;AACvC,GAAG;;AAEH;AACA;;AAEA;AACA,eAAe,yDAAO,kCAAkC,uDAAW,CAAC,GAAG,IAAI;AAC3E;AACA,C;;;;;;;;;;;;ACxTA;AAAA;AAAA;AAAgD;;AAEzC;AACP;AACA;AACA;;AAEA;AACA,qBAAqB,0DAAU;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,aAAa,0DAAU;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe,0DAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe,0DAAU;AACzB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uCAAuC,YAAY;AACnD;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7HA;AAAA;AAAA;AAAgD;;AAEzC;AACP;AACA,sBAAsB,2DAAQ;AAC9B;AACA,C;;;;;;;;;;;;ACNA;AAAA;AAAA;AAA4C;;AAErC;AACP;AACA;AACA,MAAM,4DAAO;AACb;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACVA;AAAA;AAAA;AAA4C;;AAE5C;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,4DAAO;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;AChHA;AAAA;AAAA;AAAiC;;AAE1B;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,+CAAQ;AACrB;AACA,qCAAqC,IAAI;AACzC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,+CAAQ;AACrB;AACA,qCAAqC,IAAI;AACzC;;AAEA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;ACjDA;AAAA;AAAA;AAAA;AAA6C;AACP;;AAE/B;AACP,4BAA4B,iDAAI;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa,wDAAO;AACpB;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA,8BAA8B;AAC9B;AACA;AACA,C;;;;;;;;;;;;ACnCA;AAAA;AAAA;AAAgC;;AAEzB;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,4CAAK;AAC7B,uBAAuB,4CAAK;AAC5B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAgD;;AAEzC;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,EAAE,2DAAK;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAA4C;;AAErC;AACP;AACA;AACA;AACA,0BAA0B,KAAK,IAAI,QAAQ;AAC3C,MAAM,+DAAU;AAChB;AACA,GAAG;AACH;AACA;AACA;AACA,C;;;;;;;;;;;;ACbA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC,YAAY;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA,uCAAuC,YAAY;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AClDA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AC/BA;AAAA;AAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAyD;;AAElD;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,+DAAU;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,gEAAW;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,+DAAU;AAC5B;AACA;AACA,OAAO,+DAAU;AACjB;AACA;AACA,GAAG,sBAAsB,+DAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,+DAAU;AACnC;AACA,iC;AACA;AACA;AACA,KAAK;AACL;AACA;;A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CA;AACA;AACA,iCAAiC;AACjC;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnHA;AAAA;AAAA;AAAA;AAAgC;AACU;;AAEnC,yBAAyB,sDAAU;AAC1C;AACA;;AAEA;AACA;AACA,IAAI,4CAAK;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI;;AAEb,4CAA4C,wBAAwB;AACpE;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;AC5DA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACLA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,aAAa;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,C;;;;;;;;;;;;ACpEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;AC1GA;AAAA;AAAA;AAAgD;;AAEzC;AACP;AACA,sBAAsB,2DAAQ;AAC9B;AACA,C;;;;;;;;;;;;ACNA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACmB;AACd;AACc;;AAEnD,yBAAyB,qEAAU;AAC1C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO,GAAG,wBAAwB;AACnD;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,MAAM;AACN;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,SAAS,eAAe;AACxB,SAAS,OAAO;AAChB,SAAS,QAAQ;AACjB;;AAEA;AACA;AACA,UAAU,gCAAgC;AAC1C;AACA;AACA;;AAEA,UAAU,MAAM;AAChB;AACA,mBAAmB,+BAA+B;AAClD,IAAI;AACJ;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;;AAEA,gBAAgB,gBAAgB,GAAG,0CAA0C;;AAE7E,SAAS,SAAS;AAClB;AACA;AACA;AACA,6BAA6B,sFAAsF;AACnH;AACA;;AAEA;AACA;;AAEA;AACA,EAAE,uDAAG;;AAEL;AACA;AACA,mBAAmB,mEAA0B;;AAE7C;AACA,OAAO,SAAS;;AAEhB;AACA;AACA;AACA;AACA,gBAAgB,oDAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA,2BAA2B,IAAI;AAC/B,2BAA2B,IAAI;AAC/B;AACA;;AAEA,gBAAgB,mDAAS;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,aAAa,MAAM,8BAA8B;AAC7E;AACA;;AAEA;AACA;;AAEA,gBAAgB,mDAAS;AACzB;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;AC5KA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO;AACA;AACA;AACA;;AAEA;AACP;AACA;;AAEO;AACP;AACA;;;;;;;;;;;;;;ACXA;AAAA;AAAA;AAA6C;;AAEtC;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,OAAO,GAAG,SAAS;AAC5C;AACA;;AAEA;AACA;AACA;AACA,0CAA0C,YAAY;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS,WAAW;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,cAAc;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,eAAe,wDAAO;AACtB;AACA;AACA;AACA;AACA;AACA,gEAAgE,SAAS;AACzE;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,6CAA6C,oBAAoB;AACjE;AACA,IAAI;AACJ,aAAa,wDAAO;AACpB;AACA;AACA;AACA;AACA;AACA,8DAA8D,SAAS;AACvE;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,2CAA2C,oBAAoB;AAC/D;AACA,IAAI;AACJ,gBAAgB,wDAAO;AACvB;AACA;AACA;AACA;AACA;AACA,oEAAoE,YAAY;AAChF;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,8CAA8C,oBAAoB;AAClE;AACA,IAAI;AACJ,eAAe,wDAAO;AACtB;AACA;AACA;AACA;AACA;AACA,mEAAmE,YAAY;AAC/E;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,6CAA6C,oBAAoB;AACjE;AACA,IAAI;AACJ,eAAe,wDAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF,oBAAoB;AACrG,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA,6CAA6C,oBAAoB;AACjE;AACA,IAAI;AACJ,mBAAmB,wDAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF,oBAAoB;AACzG,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,iDAAiD,oBAAoB;AACrE;AACA,IAAI;AACJ,aAAa,wDAAO;AACpB;AACA;AACA;AACA;AACA;AACA,kEAAkE,YAAY;AAC9E;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,6CAA6C,oBAAoB;AACjE;AACA,IAAI;AACJ,YAAY,wDAAO;AACnB;AACA;AACA;AACA;AACA;AACA,mEAAmE,YAAY;AAC/E;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,4CAA4C,oBAAoB;AAChE;AACA,IAAI;AACJ,eAAe,wDAAO;AACtB;AACA;AACA;AACA;AACA;AACA,kEAAkE,SAAS;AAC3E;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,+CAA+C,oBAAoB;AACnE;AACA,IAAI;AACJ,iBAAiB,wDAAO;AACxB;AACA;AACA;AACA;AACA;AACA,oEAAoE,SAAS;AAC7E;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,iDAAiD,oBAAoB;AACrE;AACA,IAAI;AACJ,eAAe,wDAAO;AACtB;AACA;AACA;AACA;AACA;AACA,kEAAkE,SAAS;AAC3E;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,4CAA4C,oBAAoB;AAChE,yBAAyB,uBAAuB,GAAG,uBAAuB;AAC1E;AACA;;AAEA;AACA;AACA,IAAI;AACJ,iBAAiB,wDAAO;AACxB;AACA;AACA;AACA;AACA;AACA,oEAAoE,SAAS;AAC7E;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,8CAA8C,oBAAoB;AAClE,yBAAyB,uBAAuB,GAAG,uBAAuB;AAC1E;AACA;;AAEA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA,C;;;;;;;;;;;;ACpYA;AAAA;AAAA;AAA6C;;AAEtC;AACP;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,wDAAO,EAAE,6BAA6B;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;AC1DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AACH;AACE;AACE;AACf;;AAExB;AACP;AACA;AACA;;AAEA,yBAAyB,sDAAU;AACnC;;AAEA;;AAEA,mBAAmB,wDAAO;AAC1B;AACA;AACA,WAAW,kCAAkC;AAC7C;AACA;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,MAAM;AACN;AACA;AACA,OAAO;AACP;AACA,IAAI;AACJ;AACA;AACA,+CAA+C,0CAAE;AACjD;AACA;;AAEA;AACA;AACA,GAAG;;AAEH,sBAAsB,wDAAO;AAC7B;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW,wBAAwB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,MAAM;AACN;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,+BAA+B,uDAAW,CAAC;AAC3C;AACA,KAAK,yDAAO;AACZ;AACA,KAAK;AACL,KAAK,yDAAO;AACZ;AACA;;AAEA;AACA;AACA;;AAEA,GAAG;;AAEH;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,aAAa,2BAA2B;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA,SAAS,wBAAwB;AACjC;AACA;AACA,GAAG,yDAAO,+BAA+B,uDAAW,CAAC;AACrD,sBAAsB,yDAAO,kCAAkC,uDAAW,CAAC;AAC3E;;AAEA;AACA;;AAEA;AACA,SAAS,SAAS;AAClB,EAAE,yDAAO;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,8CAA8C;AACjE;AACA,GAAG;AACH;AACA,C;;;;;;;;;;;;AC9LA;AAAA;AAAA;AAAA;AAAmD;AACrB;;AAEvB;AACP;AACA;AACA;;AAEA;AACA;AACA,YAAY,8DAAQ,qCAAqC,SAAS;AAClE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,YAAY;AACnD;AACA;AACA;AACA;AACA,qBAAqB,0CAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wCAAwC,YAAY;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,C;;;;;;;;;;;;ACxDA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8B;AACa;AACQ;;AAE5C;AACP,uCAAuC,YAAY;AACnD;AACA;AACA;AACA;;AAEA;AACA;;AAEO;AACP,QAAQ,WAAW;AACnB;;AAEA;AACA,0CAA0C,YAAY;AACtD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEO;AACP,QAAQ,WAAW;AACnB;AACA;AACA;AACA;;AAEA,0CAA0C,YAAY;AACtD;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA,UAAU;AACV;;AAEA;AACA;;AAEA,QAAQ,WAAW;AACnB,0CAA0C,YAAY;AACtD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEO;AACP,oBAAoB,0CAAI;AACxB;AACA;AACA,gBAAgB,8DAAS;AACzB;AACA;AACA;AACA;;AAEO;AACP,oBAAoB,0CAAI;AACxB;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA,YAAY,8DAAQ;AACpB;;AAEA;AACA;AACA,sCAAsC,YAAY;AAClD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACjHA;AAAA;AAAA;AAAgD;;AAEzC;AACP;AACA,sBAAsB,2DAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACfA;AAAA;AAAO;AACP;AACA;;AAEA,SAAS,gBAAgB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B,aAAa,GAAG,4CAA4C;AACtF;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;ACjCA;AAAA;AAAA;AAAmD;;AAE5C;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS,8DAAQ,sCAAsC,cAAc;AACrE;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS,8DAAQ,sCAAsC,cAAc;AACrE;;AAEA;AACA;AACA;;AAEA;AACA;AACA,C;;;;;;;;;;;;ACpCA;AAAA;AAAA;AAAA;AAAA;AAA2D;AACd;AACJ;;AAElC;AACP;AACA;AACA;AACA,kBAAkB,wDAAO,EAAE,8BAA8B;AACzD,oBAAoB,wDAAO,EAAE,8BAA8B;AAC3D,oBAAoB,wDAAO,EAAE,8BAA8B;AAC3D,oBAAoB,wDAAO,EAAE,8BAA8B;AAC3D,wBAAwB,wDAAO,EAAE,8BAA8B;AAC/D,mBAAmB,wDAAO,EAAE,8BAA8B;;AAE1D,qBAAqB,uEAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxBA;AAAA;AAAA;AAAuC;;AAEhC;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,0DAAK;AACrB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,gCAAgC;AACpD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,0BAA0B;AACjD;;AAEA;AACA;AACA;;;;;;;;;;;;;AC3DA;AAAA;AAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,C;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACE;AACd;;AAE7B;AACP,CAAC,2DAAK;;AAEN,QAAQ,QAAQ;AAChB;AACA,oBAAoB,qEAAO;;AAE3B,OAAO,mCAAmC;AAC1C;;AAEA;AACA;AACA;;AAEA;AACA,SAAS,WAAW;AACpB,2CAA2C,YAAY;AACvD;AACA;AACA,UAAU,iBAAiB;AAC3B;AACA,yBAAyB,+CAAI;AAC7B;AACA;AACA;AACA;;AAEA;AACA;;AAEA,2BAA2B,+CAAI;AAC/B;;;;;;;;;;;;;ACnCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACV;AACmB;AACa;AAChB;AAClB;AACsC;;AAEnE;AACP,CAAC,2DAAK;AACN,CAAC,2DAAK;;AAEN,QAAQ,QAAQ;AAChB,QAAQ,eAAe;AACvB,QAAQ,OAAO;;AAEf,sBAAsB,4EAAa;AACnC,kBAAkB,+CAAI,yBAAyB,eAAe;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,aAAa;AACrB,oBAAoB,sFAAgB;AACpC,cAAc,2EAAK;;AAEnB;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC,0EAAe,kBAAkB,iBAAiB;AACnD;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,IAAI;;AAEJ;AACA,EAAE;AACF;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,uBAAuB,4EAAa;AACpC;AACA;AACA;AACA;AACA,8BAA8B,+CAAI;AAClC;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,4EAAa;AACpC;AACA;AACA;AACA;AACA,8BAA8B,+CAAI;AAClC;AACA;AACA;AACA;;AAEA,QAAQ,iDAAI;AACZ;;AAEA;AACA;AACA;AACA,QAAQ,WAAW;AACnB,sBAAsB,4EAAa;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,+CAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,IAAI;AAC7C;AACA;AACA,kBAAkB,+CAAI;AACtB,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,iDAAI;AACZ;;AAEA;AACA;AA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,2DAAK;AACN,CAAC,2DAAK;AACN,CAAC,2DAAK;AACN,CAAC,2DAAK;;AAEN;AACA;AACA;AACA;;AAEA,QAAQ,QAAQ;;AAEhB,mBAAmB,kDAAK;AACxB;;AAEA,QAAQ,wBAAwB;AAChC;;AAEA;AACA,gBAAgB,2EAAW;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA,C;;;;;;;;;;;;AC7CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACV;AACS;AACL;AACe;;AAEnD;AACA;AACA;AACA;AACA;AACA,aAAa,8DAAQ;AACrB;AACA,oBAAoB,IAAI;AACxB;;AAEA;;AAEA;AACA,qBAAqB;AACrB;AACA,SAAS,qDAAQ;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEO;AACP;AACA;AACA;AACA,oBAAoB,4CAAK;AACzB;;AAEA;AACA;AACA;AACA,UAAU,6DAAS;AACnB;;AAEA,UAAU,WAAW,+CAAI;AACzB;AACA,C;;;;;;;;;;;;ACpDA;AAAA;AAAA;AAAA;AAAyC;AACL;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,IAAI,4DAAO;AACX;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,IAAI;AACP;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+CAAI;AAC3B;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA,yBAAyB,+CAAI;AAC7B;;AAEO;AACP;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA,SAAS,WAAW,+CAAI;AACxB,C;;;;;;;;;;;;ACpGA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AC3DA;AAAA;AAAA;AAAgD;;AAEzC;AACP;AACA,sBAAsB,2DAAQ;AAC9B;AACA;AACA,C;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAgD;;AAEzC;AACP;AACA,sBAAsB,2DAAQ;AAC9B;AACA;AACA,C;;;;;;;;;;;;ACPA;AAAA;AAAA;AAA2D;;AAEpD;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,mEAAQ;AACvB;AACA;AACA,eAAe,mEAAQ;AACvB;AACA;AACA,eAAe,mEAAQ;AACvB;AACA;AACA,eAAe,mEAAQ,iCAAiC,KAAK;AAC7D;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC3BA;AAAA;AAAA;AAAgD;;AAEzC;AACP;AACA,sBAAsB,2DAAQ;AAC9B;AACA;AACA;AACA;;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAoC;;AAE7B,iCAAiC,kDAAQ;AAChD,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;;;;;;;;;;;;;ACRA;AAAA;AAAO;AACP,sBAAsB,YAAY;AAClC;AACA;AACA;AACA,C;;;;;;;;;;;;ACLA;AAAA;AAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,4BAA4B,EAAE,MAAM;AAClD,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,MAAM;AACvC;;AAEA;AACA,eAAe,MAAM,MAAM,sBAAsB;AACjD;;AAEA;AACA,eAAe,MAAM,SAAS,iBAAiB;AAC/C;;AAEA;AACA,IAAI;AACJ;AACA,WAAW;AACX;AACA;AACA;AACA;;;;;;;;;;;;;ACpCA;AAAA;AAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;;;;;;;ACfA;AAAA;AAAA;AAA4C;;AAErC;AACP;AACA;AACA;AACA,mBAAmB,wDAAS;AAC5B;AACA;;;;;;;;;;;;;ACRA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACa;AACL;AACM;;AAElD;AACP,QAAQ,OAAO;AACf,QAAQ,SAAS;AACjB,QAAQ,OAAO;;AAEf;AACA;AACA;;AAEA;AACA,sBAAsB,4EAAa;AACnC,sCAAsC,YAAY;AAClD;AACA;;AAEA;AACA,wCAAwC,uDAAU;AAClD,uDAAuD,oEAAgB;AACvE,uBAAuB,oEAAgB;AACvC;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,oBAAoB,uDAAU;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,yBAAyB,oEAAgB;AACzC;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,oEAAgB;AAC1E,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa,8DAAQ,wCAAwC,KAAK;AAClE;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,wBAAwB,oEAAgB;AACxC,IAAI;AACJ;AACA;AACA,GAAG;AACH;;AAEA;AACA,C;;;;;;;;;;;;ACtFA;AAAA;AAAO;AACP;AACA;AACA;AACA,C;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AAA6C;AAC0B;AAC5B;;AAEpC;AACP;AACA;;AAEA,0BAA0B,wDAAO;AACjC;AACA;AACA;AACA;AACA;;AAEA,WAAW,SAAS;AACpB,wBAAwB,MAAM;AAC9B,oBAAoB,yEAAY;AAChC,gBAAgB,SAAS;AACzB;AACA,MAAM;AACN;AACA,IAAI;AACJ;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA,WAAW,SAAS;AACpB,uCAAuC,MAAM;AAC7C,IAAI;AACJ;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,6EAAgB;AACnC,eAAe,SAAS,GAAG,6BAA6B;AACxD;AACA,GAAG;;AAEH;AACA;;AAEA;AACA,qBAAqB,uDAAU;AAC/B;AACA;;AAEA,SAAS,SAAS;AAClB;AACA;AACA;AACA,C;;;;;;;;;;;;AC7DA;AAAA;AAAO;AACP;AACA;AACA;AACA,C;;;;;;;;;;;;ACJA;AAAA;AAAA;AAA0C;;AAEnC;AACP,WAAW,QAAQ;AACnB;AACA,eAAe,qDAAQ;AACvB;;AAEA,WAAW,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,CAAC,E;;;;;;;;;;;;AC/CD;AAAA;AAAA;AAAA;AAAgD;AACH;;AAEtC;AACP;AACA,sBAAsB,2DAAQ;;AAE9B,uBAAuB;AACvB,qBAAqB;AACrB,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAO;AAC3B;AACA;;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACN;AACH;AACE;AACA;;AAErC;AACP;AACA;AACA;;AAEA,yBAAyB,8DAAW;;AAEpC,kBAAkB,wDAAO;AACzB;AACA;AACA;AACA;AACA;;AAEA,+BAA+B,+DAAS;AACxC;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,iCAAiC,+DAAS;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B,uDAAW,CAAC;;AAE1C;AACA,2BAA2B,uDAAW,CAAC;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA,cAAc,KAAK;AACnB;AACA;AACA,sBAAsB,QAAQ,GAAG,qBAAqB;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uDAAW,CAAC;AACxC;AACA;AACA;AACA;AACA,GAAG;;AAEH,kBAAkB,wDAAO;AACzB;AACA;AACA;AACA;AACA,oBAAoB,uDAAW,CAAC;AAChC;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,QAAQ,6DAAQ;AAChB;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH,oBAAoB,wDAAO;AAC3B;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,MAAM;AACN;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;ACvHA;AAAA;AAAA;AAAA;AAAkE;AACA;;AAE3D;AACP;AACA;;AAEA;AACA;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,6BAA6B,kEAAY;AACzC;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wCAAwC,SAAS,GAAG,WAAW;AAC/D;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,6BAA6B,kEAAY;AACzC;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wCAAwC,SAAS,GAAG,WAAW;AAC/D;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA,mCAAmC,SAAS,GAAG,iBAAiB;AAChE;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC,SAAS,GAAG,iBAAiB;AAChE;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC,IAAI,GAAG,SAAS;AACnD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sCAAsC,IAAI;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,C;;;;;;;;;;;;AChIA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACA;AACP;;AAEhD;AACA;AACA;;AAEA;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,kBAAkB,mDAAQ;AAC1B,kBAAkB,mDAAQ;;AAE1B;AACA;;AAEA;AACA,OAAO,gEAAW;AAClB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACxCA;AAAA;AAAA;AAAA;AAAA;AAAsD;AACZ;AACkB;;AAErD;AACP;AACA,uBAAuB,4EAAa;AACpC,2CAA2C,yBAAyB;;AAEpE;AACA;;AAEA;AACA,UAAU,0DAAK;AACf;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yBAAyB,WAAW,8DAAQ,oDAAoD;AAChG,yBAAyB,WAAW,8DAAQ,oDAAoD;AAChG,yBAAyB,WAAW,8DAAQ,kDAAkD;AAC9F,yBAAyB,WAAW,8DAAQ,kDAAkD;AAC9F;AACA,C;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgE;AACJ;AACH;AACH;AACI;;AAEnD;AACP;AACA,SAAS,sBAAsB;;AAE/B;AACA;;AAEA,uBAAuB,4EAAa;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,YAAY,iEAAW;AACvB,kBAAkB,8DAAQ;AAC1B;AACA,wBAAwB,IAAI;AAC5B;;AAEA;AACA,cAAc,iEAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,8DAAQ;AACxB;AACA,4BAA4B,UAAU;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,8DAAQ,mCAAmC,UAAU;AACpE;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,8DAAQ,mCAAmC,UAAU;AACpE;AACA;;AAEA;AACA;AACA,WAAW,0DAAK;AAChB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEO;AACP;AACA,SAAS,0CAA0C;;AAEnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,kBAAkB,0EAAa;AAC/B;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,8DAAS;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEO;AACP;AACA,SAAS,uCAAuC;;AAEhD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,8DAAS;AAClC,cAAc,0DAAK;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAA0B,8DAAS;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC5OA;AAAA;AAAA;AAAA;AAAkD;AACK;;AAEhD;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,oBAAoB,uEAAY;AAChC,wBAAwB,0DAAU;AAClC,MAAM;AACN;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;;;;;;;;;;;AC1DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACoB;AACV;AACM;AACA;AAClB;AACM;AAC0B;AAC9B;;AAEhC;AACP;AACA,sBAAsB,iDAAO;AAC7B,uBAAuB,6DAAa,YAAY,mDAAQ;AACxD,sBAAsB,iDAAO;AAC7B,0BAA0B,6DAAa;AACvC,6BAA6B,6DAAa,YAAY,wDAAc;AACpE,6BAA6B,6DAAa,YAAY,wDAAc;AACpE,yBAAyB,6DAAa,YAAY,uDAAU;AAC5D;;AAEA;AACA,iBAAiB,mEAAU;;AAE3B;AACA,UAAU,OAAO;AACjB;AACA;AACA,oBAAoB,+CAAI;AACxB;AACA;AACA,oBAAoB,+CAAI;AACxB;AACA;AACA,oBAAoB,+CAAI;AACxB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,yCAAyC,mDAAQ;AACjD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,yCAAyC,mDAAQ;AACjD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU,OAAO;AACjB,UAAU,oBAAoB;;AAE9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,C;;;;;;;;;;;;AC7GA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACC;AAChB;;AAE7B;AACP;AACA;AACA;;AAEA;AACA,SAAS,cAAc;AACvB;AACA,2CAA2C,+CAAI;AAC/C,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS,uEAAQ;AACjB;;AAEA;AACA,eAAe,uEAAQ;AACvB;AACA;AACA;AACA;AACA;;AAEA,uCAAuC,YAAY;AACnD;AACA;AACA;AACA;AACA,cAAc,8DAAQ,6BAA6B,IAAI;AACvD;;AAEA;AACA;;AAEA;AACA;AACA,C;;;;;;;;;;;;ACnDA;AAAA;AAAO;AACP;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAA6D;AACK;;AAE3D;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,qEAAW;AAC1B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ,+DAAU;AAClB;AACA;AACA;AACA,IAAI;AACJ;AACA,QAAQ,4DAAO;AACf;AACA,KAAK,UAAU,6DAAQ,YAAY,+DAAU;AAC7C,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AC7CA;AAAA;AAAA;AAA0C;;AAEnC;AACP;AACA;;AAEA;AACA,gB;AACA;;AAEA;AACA,cAAc,qDAAQ;AACtB,cAAc,qDAAQ;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACrBA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACU;AACR;;AAEvC;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,+DAAU;AACjC;AACA;;AAEA;;AAEA,0BAA0B,yDAAO;AACjC,2BAA2B,yDAAO;;AAElC;AACA;AACA;;AAEA;AACA,UAAU,uBAAuB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,sBAAsB;AACtC;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,UAAU,SAAS;AACnB;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA,UAAU,WAAW;AACrB;;AAEA,WAAW,mBAAmB;AAC9B;AACA;AACA,IAAI;AACJ,GAAG;;;AAGH;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA,sBAAsB,UAAU;AAChC;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,mBAAmB,qDAAQ;AAC3B,mBAAmB,qDAAQ;AAC3B;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,EAAE,uDAAG;;AAEL,SAAS,OAAO;AAChB,SAAS,YAAY;;AAErB,EAAE,yDAAO;AACT;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;ACxLA;AAAA;AAAA;AAA+E;;AAExE,sCAAsC,0FAAuB;AACpE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACN;AACG;;AAEtC;AACP;AACA,sBAAsB,2DAAQ;AAC9B,qBAAqB;AACrB,uBAAuB;AACvB;AACA,qBAAqB;AACrB,oBAAoB,wDAAO,EAAE,4BAA4B;AACzD;AACA,QAAQ,qDAAQ;AAChB,WAAW,qDAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAAmD;;AAE5C;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,8DAAQ,kCAAkC,eAAe;AACvE;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS,OAAO;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA,SAAS,gBAAgB;;AAEzB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,KAAK;AACL,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,C;;;;;;;;;;;;AC9FA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACJ;AACJ;;AAE/C;AACA;AACA;AACA,6BAA6B,qDAAQ;AACrC;AACA;;AAEA;AACA,QAAQ,qDAAQ;AAChB;;AAEA;AACA;AACA;AACA,0BAA0B,qDAAQ;AAClC,SAAS,OAAO;AAChB;AACA;AACA;AACA;AACA,iBAAiB,kEAAU;AAC3B;AACA;;AAEA;AACA;;AAEA;AACA,QAAQ,qDAAQ;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,0BAA0B,GAAG,oBAAoB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,0BAA0B,GAAG,oBAAoB;AACjE;AACA,gBAAgB,8DAAQ,sCAAsC,WAAW;AACzE;AACA;AACA;AACA;AACA,aAAa,8DAAQ,sCAAsC,oBAAoB;AAC/E;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,8DAAQ,oCAAoC,KAAK;AAC9D;AACA;;AAEA;AACA;AACA,mCAAmC,qDAAQ;AAC3C,SAAS,qDAAQ;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA,gCAAgC,qDAAQ;AACxC,SAAS,qDAAQ;AACjB;;AAEA,QAAQ,OAAO;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,gCAAgC,qDAAQ,kCAAkC,qDAAQ;AAClF,SAAS,qDAAQ;AACjB;;AAEA,QAAQ,OAAO;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM,gEAAW;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+DAA+D,2BAA2B;AAC1F,qEAAqE,8BAA8B;AACnG,iEAAiE,4BAA4B;AAC7F;AACA;AACA;AACA,cAAc,8DAAQ,oCAAoC,KAAK;AAC/D;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,cAAc,8DAAQ,oCAAoC,oBAAoB;AAC9E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,qDAAQ;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,8DAAQ,sCAAsC,WAAW;AAC1E;AACA;AACA;AACA;AACA,cAAc,8DAAQ,sCAAsC,KAAK;AACjE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACN;AAC0C;AACpC;AACI;AACK;AAChB;;AAErC;AACP;AACA;AACA;;AAEA,8BAA8B,mEAAgB;AAC9C,cAAc,4FAAW;AACzB,4BAA4B,+DAAc;;AAE1C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,uBAAuB,uDAAW,CAAC,UAAU,uBAAuB;AACpE,uBAAuB,uDAAW,CAAC,UAAU,uBAAuB;AACpE;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,uDAAW,CAAC,UAAU,aAAa;AAC/D,4BAA4B,uDAAW,CAAC,UAAU,wBAAwB;;AAE1E;AACA;AACA;;AAEA;AACA,4BAA4B,uDAAW,CAAC,UAAU,aAAa;AAC/D,4BAA4B,uDAAW,CAAC,UAAU,wBAAwB;;AAE1E;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;AACA,MAAM;;AAEN,iBAAiB,4FAAW;AAC5B;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA,8BAA8B,wDAAO;AACrC;AACA;AACA;AACA,WAAW,WAAW;AACtB;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;;AAEH;AACA,mBAAmB,wDAAO;AAC1B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,8BAA8B;AAClE;AACA;AACA;AACA;AACA,oCAAoC,2BAA2B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,kBAAkB,wDAAO;AACzB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,aAAa,gEAAW;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ,qBAAqB,wDAAO;AAC5B;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,kBAAkB,wDAAO;AACzB;AACA;AACA,YAAY,SAAS;AACrB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,IAAI;AACJ;AACA,sBAAsB,wDAAO;AAC7B;AACA;AACA;AACA,YAAY,wBAAwB;AACpC;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA,IAAI;AACJ,sBAAsB,wDAAO;AAC7B;AACA;AACA;AACA,YAAY,wBAAwB;AACpC;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA,IAAI;AACJ,2BAA2B,wDAAO;AAClC;AACA;AACA;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA,KAAK;AACL;AACA,IAAI;AACJ,yBAAyB,wDAAO;AAChC;AACA;AACA;AACA,YAAY,wBAAwB;AACpC;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA,IAAI;AACJ,yBAAyB,wDAAO;AAChC;AACA;AACA;AACA,YAAY,wBAAwB;AACpC;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA,IAAI;AACJ,kBAAkB,wDAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,8DAAQ,mCAAmC,uBAAuB;AACnF;;AAEA;AACA;AACA,KAAK;AACL;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,SAAS;;AAElB,+BAA+B,gEAAW;AAC1C;AACA,KAAK,4DAAO;AACZ;;AAEA,aAAa;AACb;AACA;;AAEA,UAAU,OAAO;AACjB;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,MAAM;AACN;AACA;;AAEA,SAAS,iDAAI;AACb;;AAEA;AACA,SAAS,SAAS;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,0BAA0B,QAAQ;AAClC;AACA,KAAK;AACL;AACA,GAAG;AACH,UAAU,iDAAI;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS,cAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,GAAG,2BAA2B;AACjC;AACA;;;;;;;;;;;;;AC5XA;AAAA;AAAA;AAAiD;;AAE1C,qCAAqC,+DAAc;AAC1D;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAAA;AAAoE;AACxB;;AAErC,kCAAkC,gFAAsB;AAC/D;AACA;AACA;;AAEA;AACA,MAAM,4DAAO;AACb;AACA;;AAEA;AACA;AACA,C;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsD;AACU;AACI;AACN;;AAEvD;AACP;;AAEA;AACA;AACA,cAAc,4EAAoB;AAClC;AACA,cAAc,gFAAsB;AACpC;AACA,cAAc,0EAAmB;AACjC;AACA,aAAa,8DAAQ,uDAAuD,KAAK;AACjF;AACA;;;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAA4C;AACL;;AAEhC;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM,4DAAO;AACb;AACA;AACA;;AAEA,sBAAsB,+CAAI;AAC1B,UAAU,OAAO;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM,4DAAO;AACb;AACA;AACA;;AAEA,sBAAsB,+CAAI;AAC1B,UAAU,OAAO;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;AChFA;AAAA;AAAA;AAAiD;;AAE1C,mCAAmC,+DAAc;AACxD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;AC7BA;AAAA;AAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;AChKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwH;;AAExH;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,qDAAQ;AAClB;AACA;;AAEO;AACP;AACA,iBAAiB,gEAAW;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEO;AACP,KAAK,4DAAO;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,KAAK,8DAAS;AACd;AACA;;AAEA;AACA;AACA;;AAEA,KAAK,4DAAO;AACZ;AACA;;AAEA,KAAK,4DAAO;AACZ;AACA;;AAEA,KAAK,0DAAK;AACV;AACA;;AAEA,KAAK,6DAAQ;AACb;AACA;;AAEA,KAAK,6DAAQ;AACb;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,gEAAW;AAClC;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4BAA4B,E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;AAAA;AAAuC;;AAEhC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,YAAY,4DAAO;AACnB,kBAAkB,GAAG;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,gBAAgB,GAAG;AACnB;;AAEA;AACA;AACA;AACA;;AAEA;AACA,YAAY,SAAS,GAAG,GAAG;AAC3B;AACA,C;;;;;;;;;;;;AChDA;AAAA;AAAA;AAAA;AAAA;AAA4C;;AAErC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI,uDAAG,0CAA0C,gBAAgB;AACjE;AACA;;AAEA;AACA;AACA;AACA;;AAEA,GAAG,uDAAG,0CAA0C,gBAAgB;AAChE;AACA;AACA;;AAEA;AACA;AACA,GAAG,uDAAG,0CAA0C,gBAAgB;AAChE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG,uDAAG,0CAA0C,gBAAgB;AAChE;AACA;AACA;;AAEA;AACA;AACA,GAAG,uDAAG,0CAA0C,gBAAgB;AAChE;AACA;;AAEA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG,uDAAG,0CAA0C,gBAAgB;AAChE;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,EAAE,uDAAG,0CAA0C,gBAAgB;AAC/D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC3HA;AAAA;AAAA;AAAA;AAA6D;AACzB;;AAE7B;AACP,KAAK,6DAAQ;AACb;AACA;AACA;AACA;AACA,kBAAkB,wDAAU;AAC5B,YAAY;AACZ,IAAI;;AAEJ,SAAS,SAAS;AAClB;AACA;AACA,WAAW,gDAAG;AACd;AACA;AACA;AACA;AACA;AACA,YAAY,gDAAG;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,iEAAY;AAC7B;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AC5CA;AAAA;AAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,C;;;;;;;;;;;;ACxBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA,YAAY,qBAAqB,EAAE,sBAAsB;AACzD;AACA;;;;;;;;;;;;;;AChBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACI;AACG;;AAE5C;AACP;AACA,mBAAmB,6BAA6B;AAChD;AACA;AACA;AACA,MAAM,wDAAU;AAChB;AACA;;AAEO;AACP;AACA,0BAA0B,6BAA6B;AACvD;AACA;AACA;AACA,MAAM,wDAAU;AAChB;;AAEA;AACA;;AAEO;AACP,KAAK,+DAAU;AACf,wBAAwB,4CAA4C;AACpE;;AAEA,KAAK,+DAAU;AACf;AACA;;AAEA;AACA,SAAS,wDAAU;AACnB;;AAEA;AACA;AACA;;AAEA,WAAW,8DAAQ;AACnB;AACA,2BAA2B,WAAW;AACtC,C;;;;;;;;;;;;AC9CA;AAAA;AAAA;AAA0D;;AAEnD;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAQ,+DAAU;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA,sBAAsB,4DAAO;;AAE7B;AACA,8EAA8E,gDAAG;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,2BAA2B;AACtD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5IA;AAAA;AAAA;AAAwC;;AAEjC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,qDAAQ;AAC/B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,qDAAQ;AACpC;;AAEA;AACA;AACA;AACA;;AAEA,SAAS,qDAAQ;AACjB;;AAEA;AACA;AACA,eAAe,qDAAQ;AACvB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACpFA;AAAA;AAAA;AAAgD;;AAEzC;AACP;AACA,sBAAsB,2DAAQ;AAC9B;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACS;AACA;;AAE5C;AACA;AACA;AACA;;AAEA;AACP,QAAQ,OAAO;AACf;AACA,SAAS,UAAU;AACnB;AACA;AACA;AACA,GAAG,sEAAW;AACd,WAAW,MAAM;AACjB;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK,6DAAQ;AACb;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA,YAAY,8DAAQ;AACpB;AACA,6BAA6B,KAAK;AAClC;;AAEA;AACA;;AAEA;AACA,KAAK,6DAAQ;AACb,sBAAsB;AACtB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE,IAAI;AACN;;AAEA;AACA;AACA,C;;;;;;;;;;;;AClEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACN;AACa;AACN;;AAE7C;AACP;AACA;;AAEA;AACA,oBAAoB,wDAAO;AAC3B;AACA;AACA;AACA,gBAAgB,0DAAiB;AACjC;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,kBAAkB,wDAAiB;AACnC;AACA,iBAAiB,4DAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,aAAa,sEAAQ;AACrB;AACA,kCAAkC,IAAI;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB;AACpB;;AAEA,mBAAmB,+DAAwB;AAC3C;AACA;;AAEA,UAAU,KAAK,GAAG,sBAAsB;AACxC;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,SAAS,OAAO;;AAEhB;AACA;AACA;AACA,kBAAkB,+DAAwB;AAC1C;AACA;AACA,WAAW,aAAa,GAAG,sBAAsB;AACjD;AACA;AACA,GAAG;;AAEH;AACA;AACA,WAAW,KAAK;AAChB,sBAAsB,0DAAiB;AACvC,8DAA8D,sDAAe;AAC7E;AACA,WAAW,YAAY,GAAG,sBAAsB;AAChD;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA,SAAS,MAAM;AACf,SAAS,KAAK;AACd,SAAS,sDAAe;AACxB;;AAEA;AACA,SAAS,MAAM;AACf,SAAS,KAAK;AACd,SAAS,wDAAiB;AAC1B;AACA,C;;;;;;;;;;;;ACxGA;AAAA;AAAA;AAAA;AAAoC;AACO;;AAEpC;AACP;AACA,aAAa,iDAAI;AACjB,cAAc,iDAAI;AAClB;AACA;AACA;;AAEA,wBAAwB,wDAAO;AAC/B;AACA;AACA,GAAG;AACH;AACA,C;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAuC;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ,oDAAU;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,mDAAS;AAC3B;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,mDAAS;AAC3B,eAAe,KAAK,IAAI,UAAU;AAClC;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;AC7EA;AAAA;AAAA;AAAA;AAAkD;AACM;;AAEjD;AACP;AACA;AACA;;AAEA;AACA,SAAS,YAAY;AACrB,2BAA2B,iDAAI;AAC/B;AACA;;AAEA,SAAS,mEAAS;AAClB;;AAEA;AACA,SAAS,cAAc;AACvB,MAAM,+DAAU;AAChB,6BAA6B,iDAAI;AACjC;AACA;;AAEA,UAAU,mEAAS;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ,UAAU,mEAAS;AACnB;;AAEA,SAAS,mEAAS;AAClB;AACA;;;;;;;;;;;;;AC3CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACgB;AACK;AACzB;AAC8B;AACrB;;AAExC;AACP;AACA;AACA;;AAEA,sBAAsB,0DAAY;AAClC,qBAAqB,2DAAY;AACjC;AACA;AACA;AACA;;AAEA;AACA,YAAY,sDAAO;AACnB,aAAa,sDAAO;AACpB;;AAEA;AACA;AACA,sCAAsC,iDAAI;AAC1C;;AAEA;AACA,wCAAwC,iDAAI;AAC5C;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB;AACnB,SAAS,aAAa;AACtB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,0DAAiB;;AAErC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,8DAAe;AACjC,mBAAmB,+DAAgB;AACnC;;AAEA;AACA;AACA;AACA,UAAU,iDAAI;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU,iDAAI;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,OAAO;AAChB,SAAS,0BAA0B;AACnC;;AAEA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,8CAA8C;AACzD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AClJA;AAAA;AAAA;AAAO;AACP;AACA;AACA;AACA;;AAEA;AACA,SAAS,QAAQ;AACjB,SAAS,SAAS;AAClB,SAAS,UAAU;;AAEnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA,SAAS,QAAQ;AACjB,SAAS,UAAU;AACnB,SAAS,YAAY;;AAErB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AC3EA;AAAA;AAAO;AACP;AACA;AACA;AACA,C;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAmD;AACN;;AAE7C;AACO;AACP;AACA;;AAEA;AACA;AACA,aAAa,8DAAQ;AACrB;AACA,QAAQ,KAAK;AACb;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,8DAAQ;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ,gEAAW;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+BAA+B,IAAI;AACnC;AACA,IAAI,IAAI;AACR;AACA,C;;;;;;;;;;;;AC3DA;AAAA;AAAA;AAAgD;;AAEzC;AACP;AACA,sBAAsB,2DAAQ;AAC9B;AACA,C;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACI;AACN;AACA;AACE;AACE;AACF;AACJ;AACF;AACY;AACA;AACN;AACN;AACI;AACI;AACE;AACZ;AACE;AACF;AACA;AACF;AACY;AACA;AACJ;;AAExC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,+BAA+B,yBAAyB,qCAAqC,yBAAyB,QAAQ,GAAG,KAAK;AACtI;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;;AAEA,eAAe,uBAAuB;AACtC;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB,wBAAwB;AACxB,uBAAuB;AACvB,sBAAsB;AACtB,sBAAsB;AACtB;;AAEA;AACA;AACA;;AAEA,6BAA6B;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAwCE;;;;;;;;;;;;;AChMF;AAAA;AAAA;AAAgD;;AAEzC;AACP;AACA,sBAAsB,2DAAQ;AAC9B;AACA;AACA;;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6B;;AAEtB,OAAO,YAAY,GAAG,iCAAI;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,UAAU;AACV;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AClCA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACF;AACC;;AAEvC;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS,QAAQ;AACjB;AACA;AACA;AACA;;AAEA,GAAG,yDAAO;AACV;AACA,IAAI,yDAAO;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;;AAEA;AACA,cAAc,kEAAO;AACrB;AACA;AACA;;AAEA;AACA,gBAAgB,kBAAkB;AAClC;AACA,IAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA,SAAS,WAAW;AACpB,SAAS,OAAO;;AAEhB,eAAe,wDAAQ;AACvB,wBAAwB;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA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AAEA;AACA;AACA;;AAEA;AACA;AACA,eAAe,6DAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,kBAAkB,6DAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ,uBAAuB,6DAAO;AAC9B;AACA;AACA;;AAEA,UAAU,QAAQ;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ,eAAe,6DAAO;AACtB;AACA;AACA;AACA,gBAAgB,+DAAK;;AAErB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,KAAK,GAAG,+BAA+B;;AAE1D;AACA;AACA,IAAI;;AAEJ,eAAe,6DAAO;AACtB;AACA;AACA,IAAI;;AAEJ,cAAc,6DAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;;;;;;;;;;;AC7JA;AAAA;AAAA;AAAA;AAAA;AAAoD;AACC;AACC;;AAEtD,6BAA6B,4DAAW,CAAC;AACzC,2BAA2B,4DAAW,CAAC;;AAEhC;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK,8DAAO;AACZ;AACA;;AAEA;AACA;AACA,MAAM;AACN,KAAK;AACL;AACA;AACA;;AAEA,KAAK,8DAAO;AACZ;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;;AAEH,oBAAoB,6DAAO;AAC3B;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE,8DAAO;AACT;AACA,GAAG;AACH;AACA;;;;;;;;;;;;;AC/DA;AAAA;AAAA;AAAA;AAAwD;AACuD;;AAExG;AACP;AACA,sBAAsB,gEAAQ;;AAE9B;AACA;AACA;;AAEA;AACA;AACA,WAAW,mEAAS;AACpB,SAAS,iEAAO;AAChB;AACA;;AAEA,UAAU,kEAAQ;AAClB,MAAM,kEAAQ;AACd,MAAM,gEAAM;AACZ,MAAM,mEAAS;AACf,MAAM,oEAAU;AAChB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,C;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqD;AACH;AACS;AACK;AACX;AACa;AACN;AACA;;AAErD;AACP;AACA;;AAEA,2BAA2B,6DAAO;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,OAAO,0DAAM;AACb,QAAQ,6DAAO;AACf;AACA;AACA;AACA,UAAU,qEAAW;AACrB,iBAAiB,mEAAQ;AACzB;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,QAAQ;AACR,MAAM;AACN;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,OAAO,0DAAM;AACb,QAAQ,6DAAO;AACf;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO,0DAAM;AACb,QAAQ,6DAAO;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B,+DAAiB;AAC3C;AACA;AACA;AACA,oBAAoB,mEAAQ,gCAAgC,YAAY;AACxE;;AAEA,SAAS,gEAAQ;AACjB,SAAS,gEAAQ;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,wEAAS;AACrB,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA,WAAW,wEAAS;AACpB,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B,eAAe;AAC5C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uCAAuC,wBAAwB;AAC/D;AACA;AACA,oCAAoC,wBAAwB;AAC5D;AACA;AACA,qCAAqC,wBAAwB;AAC7D;;AAEA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B,wBAAwB;AACrD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC1OA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqD;AACA;AACO;AACJ;AACU;;AAE3D,gCAAgC,0EAAU;AACjD;AACA;;AAEA;;AAEA,oBAAoB,oEAAS;AAC7B;;AAEA,yBAAyB,gEAAK;AAC9B,yBAAyB,gEAAK;AAC9B,wBAAwB,gEAAK;;AAE7B;AACA;AACA;;AAEA,OAAO,qEAAW;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,eAAe,6DAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,eAAe,6DAAO;AACtB;AACA;AACA;AACA,IAAI;AACJ,cAAc,6DAAO;AACrB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;;AAEA;AACA,SAAS,OAAO;AAChB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpEA;AAAA;AAAO;AACP;AACA,iCAAiC,eAAe;AAChD;AACA,sBAAsB,KAAK,GAAG,KAAK;AACnC;AACA;AACA,C;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiE;AACZ;AACF;AACH;AACA;AACH;AACf;AACF;;AAErB;AACP;AACA;AACA;AACA,iBAAiB,6DAAO;AACxB;AACA;AACA;AACA,8BAA8B,yEAAa;AAC3C;AACA,oBAAoB,wDAAG;AACvB;AACA,qBAAqB,iEAAe;AACpC,oCAAoC,UAAU;AAC9C;AACA,GAAG;AACH,kBAAkB,6DAAO;AACzB;AACA;AACA;AACA,8BAA8B,yEAAa;AAC3C;AACA,qBAAqB,2DAAI;AACzB;AACA,qBAAqB,iEAAe;AACpC,oCAAoC,UAAU;AAC9C;AACA,GAAG;AACH,iBAAiB,6DAAO;AACxB;AACA;AACA;AACA,8BAA8B,yEAAa;AAC3C;AACA,oBAAoB,wDAAG;AACvB;AACA,qBAAqB,iEAAe;AACpC,2CAA2C,UAAU;AACrD;AACA,GAAG;AACH,kBAAkB,6DAAO;AACzB;AACA;AACA;AACA,8BAA8B,yEAAa;AAC3C;AACA;AACA,qBAAqB,0CAAI;AACzB;AACA,qBAAqB,iEAAe;AACpC;AACA;AACA,GAAG;AACH,iBAAiB,6DAAO;AACxB;AACA;AACA;AACA,8BAA8B,yEAAa;AAC3C;AACA,oBAAoB,wCAAG;AACvB;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACrFA;AAAA;AAAA;AAA0D;;AAEnD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,qCAAqC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,gBAAgB,0CAA0C;AAC1D;AACA;AACA,eAAe,4EAAQ;AACvB;;AAEA;AACA,cAAc,KAAK;AACnB;AACA;;;;;;;;;;;;;AClCA;AAAA;AAAA;AAA0D;;AAE1D;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;;AAExB;AACA,eAAe,4EAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,yBAAyB,gBAAgB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChDA;AAAA;AAAA;AAAA;AAAA;AAAqD;AACD;AAClB;;AAE3B;AACP;AACA;;AAEA,SAAS,mBAAmB;;AAE5B;;AAEA,oBAAoB,6DAAO;AAC3B;AACA,kBAAkB,oEAAM;AACxB,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI,sDAAQ;AACZ;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2D;AACM;AACM;AACa;AACtD;AACmC;AACjB;AACG;AACH;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8CAA8C;AAC9C;AACA;AACA,2BAA2B,yEAAa;AACxC;AACA;AACA;AACA;AACA,oBAAoB,0CAAI;AACxB;AACA,wBAAwB,iFAAa;AACrC,mBAAmB,uFAAQ;AAC3B;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI,GAAG,iBAAiB;AACxB;AACA;AACA;AACA;AACA;AACA,oBAAoB,2DAAI;AACxB;AACA;AACA,yBAAyB,iFAAa;AACtC,oBAAoB,uFAAQ;AAC5B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK,GAAG,iBAAiB;AACzB,IAAI;AACJ,cAAc,mEAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wDAAG;AACtB;AACA,mBAAmB,uFAAQ;AAC3B;AACA,mBAAmB,iFAAa;AAChC;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI,GAAG,iBAAiB;AACxB;AACA;AACA;AACA;AACA;AACA,mBAAmB,wDAAG;AACtB;;AAEA,eAAe,kEAAa;;AAE5B;AACA,YAAY,+DAAU;AACtB,IAAI;AACJ,YAAY,iEAAY;AACxB;;AAEA,mBAAmB,uFAAQ;AAC3B;AACA,mBAAmB,iFAAa;AAChC;AACA;AACA,IAAI;;AAEJ,iBAAiB,kEAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,IAAI,GAAG,iBAAiB;AACxB;AACA;AACA;AACA,aAAa,mEAAQ,0CAA0C,KAAK;AACpE;AACA;AACA;;AAIE;;;;;;;;;;;;;ACnHF;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA,yCAAyC,eAAe;AACxD;AACA;;AAEA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,C;;;;;;;;;;;;ACzCA;AAAA;AAAA;AAAA;AAAqD;AACa;;AAE3D;AACP;AACA;AACA;;AAEA,kBAAkB,6DAAO;AACzB;AACA;AACA,QAAQ,0EAAgB;AACxB,sBAAsB,0CAA0C,GAAG,uBAAuB;AAC1F,IAAI;AACJ;AACA,GAAG;;AAEH,kBAAkB,6DAAO;AACzB;AACA;AACA,QAAQ,0EAAgB;AACxB,sBAAsB,0CAA0C,GAAG,uBAAuB;AAC1F,IAAI;AACJ;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yBAAyB,0BAA0B,GAAG,uBAAuB;AAC7E;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gCAAgC,iBAAiB,GAAG,uBAAuB;AAC3E;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;AC5EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgF;AAC3B;AACe;AACG;AACf;AACqB;AAC9B;AACS;AACP;;AAE1C;AACP;AACA;AACA,qBAAqB,wFAAkB;AACvC;AACA;AACA;AACA;AACA;AACA,wBAAwB,gEAAK;;AAE7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA,GAAG;;AAEH,oBAAoB,6DAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,cAAc,6DAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,+DAAK;AACrB;AACA;AACA,KAAK;AACL;AACA,IAAI;AACJ,eAAe,6DAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,IAAI;AACJ,eAAe,6DAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA,kBAAkB,6DAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH,mBAAmB,6DAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;;AAEH,oBAAoB,6DAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;;AAEH,wBAAwB,6DAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH,6BAA6B,4EAAc;AAC3C,uBAAuB,gEAAQ,KAAK,qFAAkB;;AAEtD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA,4EAA4E;AAC5E;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,uFAAgB;AACrC;AACA;AACA;AACA;AACA;;AAEA,wBAAwB;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;;;;;;;;;;;ACxRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoD;AACP;AAC4B;AACF;AAChB;AACW;;AAE3D,2BAA2B,0EAAU;AAC5C;AACA;;AAEA;AACA;;AAEA,6BAA6B,iFAAa,aAAa,+EAAY;AACnE,cAAc,uEAAO;;AAErB;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,2BAA2B;AACpC,SAAS,gBAAgB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ,uBAAuB,6DAAG;AAC1B,SAAS,kBAAkB;AAC3B,wBAAwB,oDAAoD;;AAE5E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA,SAAS,wBAAwB;AACjC;AACA;AACA,SAAS,wBAAwB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAU;AACV;;AAEA;AACA;AACA,oBAAoB,4DAAW,CAAC;AAChC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS,gCAAgC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AC1IA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoD;AACO;AACN;AACqB;AACE;;AAErE;AACP,qBAAqB,YAAY;AACjC;;AAEA,SAAS,yBAAyB;AAClC;AACA,aAAa,mEAAQ;AACrB;;AAEA;AACA;;AAEA;AACA;AACA;AA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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<mat-toolbar>\\n\\t<button mat-icon-button\\n\\t\\t\\t(click)=\\\"sidenav.toggle()\\\">\\n\\t\\t<mat-icon>menu</mat-icon>\\n\\t</button>\\n\\t<h1>qgrid</h1>\\n</mat-toolbar>\\n<mat-sidenav-container>\\n\\t<mat-sidenav #sidenav\\n\\t\\t\\t\\t [mode]=\\\"isMobile ? 'over' : 'side'\\\"\\n\\t\\t\\t\\t [opened]=\\\"!isMobile\\\"\\n\\t\\t\\t\\t [fixedInViewport]=\\\"isMobile\\\">\\n\\t\\t<a routerLink=\\\"/\\\"\\n\\t\\t   class=\\\"logo\\\"\\n\\t\\t   *ngIf=\\\"!isMobile\\\"></a>\\n\\t\\t<mat-form-field class=\\\"app-search\\\">\\n\\t\\t\\t<input matInput\\n\\t\\t\\t\\t   #search\\n\\t\\t\\t\\t   placeholder=\\\"Search in qgrid examples\\\"\\n\\t\\t\\t\\t   autocomplete=\\\"off\\\"\\n\\t\\t\\t\\t   type=\\\"search\\\" />\\n\\t\\t</mat-form-field>\\n\\t\\t<mat-nav-list>\\n\\t\\t\\t<a *ngFor=\\\"let example of examples | filter: search.value\\\"\\n\\t\\t\\t   mat-list-item\\n\\t\\t\\t   [routerLink]=\\\"example.path\\\"\\n\\t\\t\\t   routerLinkActive=\\\"app-active\\\"\\n\\t\\t\\t   (click)=\\\"isMobile ? sidenav.toggle() : null\\\">\\n\\t\\t\\t\\t<span [innerHTML]=\\\"example.path | qGridHighlight: search.value\\\"></span>\\n\\t\\t\\t</a>\\n\\t\\t</mat-nav-list>\\n\\t</mat-sidenav>\\n\\t<mat-sidenav-content>\\n\\t\\t<mat-card>\\n\\t\\t\\t<router-outlet></router-outlet>\\n\\t\\t\\t<mat-card-footer>\\n\\t\\t\\t\\t<div class=\\\"app-source-links\\\">\\n\\t\\t\\t\\t\\t<a mat-raised-button\\n\\t\\t\\t\\t\\t   [href]=\\\"getGithubUrl()\\\"\\n\\t\\t\\t\\t\\t   class=\\\"app-source-github\\\"\\n\\t\\t\\t\\t\\t   title=\\\"GitHub\\\"\\n\\t\\t\\t\\t\\t   target=\\\"_blank\\\">GitHub</a>\\n\\t\\t\\t\\t\\t<a mat-raised-button\\n\\t\\t\\t\\t\\t   [href]=\\\"getStackblitzUrl()\\\"\\n\\t\\t\\t\\t\\t   class=\\\"app-source-stackblitz\\\"\\n\\t\\t\\t\\t\\t   title=\\\"StackBlitz\\\"\\n\\t\\t\\t\\t\\t   target=\\\"_blank\\\">StackBlitz</a>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</mat-card-footer>\\n\\t\\t</mat-card>\\n\\t</mat-sidenav-content>\\n</mat-sidenav-container>\"","module.exports = \"@font-face {\\n  font-family: 'qgrid-iconfont';\\n  src: url(\\\"data:application/vnd.ms-fontobject;base64,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\\\");\\n  src: url('qgrid-iconfont.eot?#iefix') format(\\\"eot\\\"), url(\\\"data:font/woff2;base64,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\\\") format(\\\"woff2\\\"), url(\\\"data:font/woff;base64,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\\\") format(\\\"woff\\\"), url(\\\"data:font/ttf;base64,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\\\") format(\\\"truetype\\\"), url('qgrid-iconfont.svg#qgrid-iconfont') format(\\\"svg\\\"); }\\n\\n::-webkit-scrollbar {\\n  width: 0.5em; }\\n\\n::-webkit-scrollbar-thumb {\\n  background: #A8A8A8; }\\n\\n::-webkit-scrollbar-track {\\n  background: #D8D8D8; }\\n\\n:host .mat-toolbar {\\n  display: none;\\n  color: #fff;\\n  background: #334863; }\\n\\n:host .mat-toolbar h1 {\\n    margin-left: 8px; }\\n\\n:host .app-source-links {\\n  text-align: center;\\n  background-color: #4B4B4B;\\n  height: 45px; }\\n\\n:host .app-source-links a {\\n    font-size: 14px;\\n    display: inline-block;\\n    min-width: auto;\\n    line-height: inherit;\\n    padding: 6px 9px;\\n    margin: 8px 0;\\n    background-color: #373737;\\n    color: #fff; }\\n\\n:host .app-source-links .app-source-github {\\n    border-radius: 7px 0 0 7px; }\\n\\n:host .app-source-links .app-source-stackblitz {\\n    border-radius: 0 7px 7px 0; }\\n\\n:host .mat-sidenav-container {\\n  /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This\\n           causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */\\n  flex: 1;\\n  height: 100%;\\n  z-index: 3;\\n  background: transparent;\\n  pointer-events: none; }\\n\\n:host .mat-sidenav-container .mat-sidenav {\\n    width: 260px;\\n    background-color: #334863;\\n    pointer-events: all;\\n    border: 0; }\\n\\n:host .mat-sidenav-container .mat-sidenav ::ng-deep .mat-drawer-inner-container {\\n      overflow: hidden; }\\n\\n:host .mat-sidenav-container .mat-sidenav .logo {\\n      display: block;\\n      margin: 70px 10px 35px 0;\\n      font-family: 'qgrid-iconfont', 'Helvetica Neue', sans-serif;\\n      font-size: 100px;\\n      text-align: center;\\n      color: #fff;\\n      text-decoration: none; }\\n\\n:host .mat-sidenav-container .mat-sidenav .logo:before {\\n        content: url(\\\"data:image/svg+xml,%3Csvg width%3D%22152%22 height%3D%22152%22 viewBox%3D%220 0 152 152%22 fill%3D%22none%22 xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cmask id%3D%22path-1-inside-1%22 fill%3D%22white%22%3E%3Cpath fill-rule%3D%22evenodd%22 clip-rule%3D%22evenodd%22 d%3D%22M51 1H1V51H51V1ZM27.6399 33.8252L9.00002 37.0854V14.7801L27.6399 18.1031L43 18.1104V21.5497H30.6566V30.3933H39.5439V27.9368H36.5815V24.9889H43V33.8325L27.6399 33.8252ZM24.2752 30.7859V21.1291L12.4539 19.0799V32.8351L19.2626 31.6548L17.3794 27.9225H20.8114L22.4185 31.1078L24.2752 30.7859Z%22%2F%3E%3C%2Fmask%3E%3Cpath fill-rule%3D%22evenodd%22 clip-rule%3D%22evenodd%22 d%3D%22M51 1H1V51H51V1ZM27.6399 33.8252L9.00002 37.0854V14.7801L27.6399 18.1031L43 18.1104V21.5497H30.6566V30.3933H39.5439V27.9368H36.5815V24.9889H43V33.8325L27.6399 33.8252ZM24.2752 30.7859V21.1291L12.4539 19.0799V32.8351L19.2626 31.6548L17.3794 27.9225H20.8114L22.4185 31.1078L24.2752 30.7859Z%22 fill%3D%22white%22%2F%3E%3Cpath d%3D%22M1 1V-2H-2V1H1ZM51 1H54V-2H51V1ZM1 51H-2V54H1V51ZM51 51V54H54V51H51ZM9.00002 37.0854H6.00002V40.6556L9.51689 40.0405L9.00002 37.0854ZM27.6399 33.8252L27.6413 30.8252L27.3802 30.8251L27.123 30.8701L27.6399 33.8252ZM9.00002 14.7801L9.52654 11.8267L6.00002 11.198V14.7801H9.00002ZM27.6399 18.1031L27.1134 21.0565L27.3739 21.103L27.6385 21.1031L27.6399 18.1031ZM43 18.1104H46V15.1119L43.0015 15.1104L43 18.1104ZM43 21.5497V24.5497H46V21.5497H43ZM30.6566 21.5497V18.5497H27.6566V21.5497H30.6566ZM30.6566 30.3933H27.6566V33.3933H30.6566V30.3933ZM39.5439 30.3933V33.3933H42.5439V30.3933H39.5439ZM39.5439 27.9368H42.5439V24.9368H39.5439V27.9368ZM36.5815 27.9368H33.5815V30.9368H36.5815V27.9368ZM36.5815 24.9889V21.9889H33.5815V24.9889H36.5815ZM43 24.9889H46V21.9889H43V24.9889ZM43 33.8325L42.9986 36.8325L46 36.834V33.8325H43ZM24.2752 21.1291H27.2752V18.6044L24.7876 18.1732L24.2752 21.1291ZM24.2752 30.7859L24.7877 33.7418L27.2752 33.3105V30.7859H24.2752ZM12.4539 19.0799L12.9663 16.1239L9.45393 15.5151V19.0799H12.4539ZM12.4539 32.8351H9.45393V36.3999L12.9663 35.791L12.4539 32.8351ZM19.2626 31.6548L19.775 34.6107L23.7652 33.919L21.941 30.3034L19.2626 31.6548ZM17.3794 27.9225V24.9225H12.5056L14.7011 29.2739L17.3794 27.9225ZM20.8114 27.9225L23.4898 26.5711L22.658 24.9225H20.8114V27.9225ZM22.4185 31.1078L19.7401 32.4591L20.7412 34.4433L22.931 34.0637L22.4185 31.1078ZM1 4H51V-2H1V4ZM4 51V1H-2V51H4ZM51 48H1V54H51V48ZM48 1V51H54V1H48ZM9.51689 40.0405L28.1568 36.7803L27.123 30.8701L8.48316 34.1302L9.51689 40.0405ZM6.00002 14.7801V37.0854H12V14.7801H6.00002ZM28.1664 15.1497L9.52654 11.8267L8.47351 17.7336L27.1134 21.0565L28.1664 15.1497ZM43.0015 15.1104L27.6413 15.1031L27.6385 21.1031L42.9986 21.1104L43.0015 15.1104ZM46 21.5497V18.1104H40V21.5497H46ZM30.6566 24.5497H43V18.5497H30.6566V24.5497ZM33.6566 30.3933V21.5497H27.6566V30.3933H33.6566ZM39.5439 27.3933H30.6566V33.3933H39.5439V27.3933ZM36.5439 27.9368V30.3933H42.5439V27.9368H36.5439ZM36.5815 30.9368H39.5439V24.9368H36.5815V30.9368ZM33.5815 24.9889V27.9368H39.5815V24.9889H33.5815ZM43 21.9889H36.5815V27.9889H43V21.9889ZM46 33.8325V24.9889H40V33.8325H46ZM27.6385 36.8252L42.9986 36.8325L43.0015 30.8325L27.6413 30.8252L27.6385 36.8252ZM21.2752 21.1291V30.7859H27.2752V21.1291H21.2752ZM11.9415 22.0358L23.7628 24.085L24.7876 18.1732L12.9663 16.1239L11.9415 22.0358ZM15.4539 32.8351V19.0799H9.45393V32.8351H15.4539ZM18.7502 28.6989L11.9415 29.8792L12.9663 35.791L19.775 34.6107L18.7502 28.6989ZM14.7011 29.2739L16.5842 33.0062L21.941 30.3034L20.0578 26.5711L14.7011 29.2739ZM20.8114 24.9225H17.3794V30.9225H20.8114V24.9225ZM25.0969 29.7564L23.4898 26.5711L18.133 29.2739L19.7401 32.4591L25.0969 29.7564ZM23.7627 27.83L21.906 28.1519L22.931 34.0637L24.7877 33.7418L23.7627 27.83Z%22 fill%3D%22white%22 mask%3D%22url(%23path-1-inside-1)%22%2F%3E%3Crect x%3D%2251.5%22 y%3D%221.5%22 width%3D%2249%22 height%3D%2249%22 stroke%3D%22white%22%2F%3E%3Crect x%3D%22101.5%22 y%3D%221.5%22 width%3D%2249%22 height%3D%2249%22 stroke%3D%22white%22%2F%3E%3Crect x%3D%221.5%22 y%3D%2251.5%22 width%3D%2249%22 height%3D%2249%22 stroke%3D%22white%22%2F%3E%3Crect x%3D%2251.5%22 y%3D%2251.5%22 width%3D%2249%22 height%3D%2249%22 stroke%3D%22white%22%2F%3E%3Crect x%3D%22101.5%22 y%3D%2251.5%22 width%3D%2249%22 height%3D%2249%22 stroke%3D%22white%22%2F%3E%3Crect x%3D%221.5%22 y%3D%22101.5%22 width%3D%2249%22 height%3D%2249%22 stroke%3D%22white%22%2F%3E%3Crect x%3D%2251.5%22 y%3D%22101.5%22 width%3D%2249%22 height%3D%2249%22 stroke%3D%22white%22%2F%3E%3Crect x%3D%22101.5%22 y%3D%22101.5%22 width%3D%2249%22 height%3D%2249%22 stroke%3D%22white%22%2F%3E%3Crect x%3D%220.5%22 y%3D%220.5%22 width%3D%22151%22 height%3D%22151%22 stroke%3D%22white%22%2F%3E%3Cpath d%3D%22M126.023 23.4766L130.113 16.9375H132.762L127.371 25.3984L132.891 34H130.219L126.023 27.3438L121.805 34H119.145L124.676 25.3984L119.273 16.9375H121.91L126.023 23.4766Z%22 fill%3D%22white%22%2F%3E%3Cpath d%3D%22M80.8047 26.1133H73.4102V32.1602H82V34H71.1602V16.9375H81.8828V18.7891H73.4102V24.2734H80.8047V26.1133Z%22 fill%3D%22white%22%2F%3E%3Cpath d%3D%22M29.5742 79.5469H22.4258L20.8203 84H18.5L25.0156 66.9375H26.9844L33.5117 84H31.2031L29.5742 79.5469ZM23.1055 77.6953H28.9062L26 69.7148L23.1055 77.6953Z%22 fill%3D%22white%22%2F%3E%3Cpath d%3D%22M70.4102 66.9375L75.9883 80.8594L81.5664 66.9375H84.4844V84H82.2344V77.3555L82.4453 70.1836L76.8438 84H75.1211L69.5312 70.2188L69.7539 77.3555V84H67.5039V66.9375H70.4102Z%22 fill%3D%22white%22%2F%3E%3Cpath d%3D%22M122.66 77.3203V84H120.41V66.9375H126.703C128.57 66.9375 130.031 67.4141 131.086 68.3672C132.148 69.3203 132.68 70.582 132.68 72.1523C132.68 73.8086 132.16 75.0859 131.121 75.9844C130.09 76.875 128.609 77.3203 126.68 77.3203H122.66ZM122.66 75.4805H126.703C127.906 75.4805 128.828 75.1992 129.469 74.6367C130.109 74.0664 130.43 73.2461 130.43 72.1758C130.43 71.1602 130.109 70.3477 129.469 69.7383C128.828 69.1289 127.949 68.8125 126.832 68.7891H122.66V75.4805Z%22 fill%3D%22white%22%2F%3E%3Cpath d%3D%22M23.7852 132.16H31.8711V134H21.5234V116.938H23.7852V132.16Z%22 fill%3D%22white%22%2F%3E%3Cpath d%3D%22M80.8047 126.113H73.4102V132.16H82V134H71.1602V116.938H81.8828V118.789H73.4102V124.273H80.8047V126.113Z%22 fill%3D%22white%22%2F%3E%3Cpath d%3D%22M125.883 126.395C123.953 125.84 122.547 125.16 121.664 124.355C120.789 123.543 120.352 122.543 120.352 121.355C120.352 120.012 120.887 118.902 121.957 118.027C123.035 117.145 124.434 116.703 126.152 116.703C127.324 116.703 128.367 116.93 129.281 117.383C130.203 117.836 130.914 118.461 131.414 119.258C131.922 120.055 132.176 120.926 132.176 121.871H129.914C129.914 120.84 129.586 120.031 128.93 119.445C128.273 118.852 127.348 118.555 126.152 118.555C125.043 118.555 124.176 118.801 123.551 119.293C122.934 119.777 122.625 120.453 122.625 121.32C122.625 122.016 122.918 122.605 123.504 123.09C124.098 123.566 125.102 124.004 126.516 124.402C127.938 124.801 129.047 125.242 129.844 125.727C130.648 126.203 131.242 126.762 131.625 127.402C132.016 128.043 132.211 128.797 132.211 129.664C132.211 131.047 131.672 132.156 130.594 132.992C129.516 133.82 128.074 134.234 126.27 134.234C125.098 134.234 124.004 134.012 122.988 133.566C121.973 133.113 121.188 132.496 120.633 131.715C120.086 130.934 119.812 130.047 119.812 129.055H122.074C122.074 130.086 122.453 130.902 123.211 131.504C123.977 132.098 124.996 132.395 126.27 132.395C127.457 132.395 128.367 132.152 129 131.668C129.633 131.184 129.949 130.523 129.949 129.688C129.949 128.852 129.656 128.207 129.07 127.754C128.484 127.293 127.422 126.84 125.883 126.395Z%22 fill%3D%22white%22%2F%3E%3C%2Fsvg%3E\\\"); }\\n\\n:host .mat-sidenav-container .mat-sidenav .app-search {\\n      padding: 10px 15px 0 15px;\\n      display: block; }\\n\\n:host .mat-sidenav-container .mat-sidenav .app-search .mat-input-element {\\n        color: #fff;\\n        background-color: #25364A;\\n        caret-color: #fff;\\n        padding: 15px; }\\n\\n:host .mat-sidenav-container .mat-sidenav .app-search ::ng-deep .mat-form-field-label {\\n        top: 32px;\\n        left: 10px;\\n        color: #fff; }\\n\\n:host .mat-sidenav-container .mat-sidenav .app-search ::ng-deep .mat-form-field-underline {\\n        background-color: #fff; }\\n\\n:host .mat-sidenav-container .mat-sidenav .app-search ::ng-deep .mat-form-field-ripple {\\n        background-color: #fff; }\\n\\n:host .mat-sidenav-container .mat-sidenav .app-search.mat-form-field-should-float ::ng-deep .mat-form-field-label {\\n        top: 18px; }\\n\\n:host .mat-sidenav-container .mat-sidenav .mat-nav-list {\\n      display: block;\\n      height: calc(100% - 364px);\\n      overflow-y: auto; }\\n\\n:host .mat-sidenav-container .mat-sidenav .mat-nav-list .mat-list-item {\\n        color: #fff; }\\n\\n:host .mat-sidenav-container .mat-sidenav .mat-nav-list .mat-list-item:hover, :host .mat-sidenav-container .mat-sidenav .mat-nav-list .mat-list-item.app-active {\\n          background-color: #25364A; }\\n\\n:host .mat-sidenav-container .mat-sidenav-content .mat-card {\\n    height: calc(100% - 99px);\\n    margin: 15px;\\n    pointer-events: all; }\\n\\n:host .mat-sidenav-container .mat-sidenav-content .mat-card .mat-card-footer {\\n      position: absolute;\\n      width: 100%;\\n      bottom: -20px; }\\n\\n:host.app-is-mobile .mat-toolbar {\\n  display: flex;\\n  position: fixed;\\n  /* Make sure the toolbar will stay on top of the content as it scrolls past. */\\n  z-index: 2; }\\n\\n:host.app-is-mobile .app-source-links {\\n  top: 50px; }\\n\\n:host.app-is-mobile .mat-sidenav-container {\\n  flex: 1 0 auto; }\\n\\n:host.app-is-mobile .mat-sidenav-container .mat-sidenav .mat-nav-list {\\n    height: calc(100% - 104px); }\\n\\n:host.app-is-mobile .mat-sidenav-container .mat-sidenav-content .mat-card {\\n    height: calc(100% - 154px);\\n    top: 56px; }\\n\\n:host.app-is-mobile .mat-sidenav-container.mat-drawer-opened {\\n    pointer-events: all; }\\n\"","import {\n\tChangeDetectorRef,\n\tComponent,\n\tOnDestroy,\n\tChangeDetectionStrategy,\n\tHostBinding,\n\tElementRef,\n\tViewChildren,\n\tQueryList,\n\tAfterViewInit,\n\tNgZone\n} from '@angular/core';\nimport {\n\tRouter,\n\tRoutes,\n\tRouterLinkActive\n} from '@angular/router';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { APP_ROUTES } from '../examples/example.module';\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: 'app.component.html',\n\tstyleUrls: ['app.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent implements AfterViewInit, OnDestroy {\n\t@HostBinding('class.app-is-mobile') isMobile: boolean;\n\texamples: Routes = APP_ROUTES;\n\n\t@ViewChildren(RouterLinkActive, { read: ElementRef })\n\tmenuItems: QueryList<ElementRef>;\n\n\tprivate mobileQueryListener: () => void;\n\tprivate mobileQuery: MediaQueryList;\n\n\tconstructor(\n\t\tprivate router: Router,\n\t\tprivate zone: NgZone,\n\t\tcd: ChangeDetectorRef,\n\t\tmedia: MediaMatcher,\n\t) {\n\t\tconst setIsMobile = () => this.isMobile = this.mobileQuery.matches;\n\n\t\tthis.mobileQueryListener = () => {\n\t\t\tsetIsMobile();\n\t\t\tcd.detectChanges();\n\t\t};\n\n\t\tthis.mobileQuery = media.matchMedia('(max-width: 600px)');\n\t\tthis.mobileQuery.addListener(this.mobileQueryListener);\n\t\tsetIsMobile();\n\t}\n\n\tgetGithubUrl(): string {\n\t\treturn `https://github.com/qgrid/ng2-example/tree${this.router.url}/latest/src/app`;\n\t}\n\n\tgetStackblitzUrl(): string {\n\t\treturn `https://stackblitz.com/github/qgrid/ng2-example/tree${this.router.url}/latest`;\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.zone.runOutsideAngular(() => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst activeItem = this.findActiveItem();\n\t\t\t\tactiveItem.nativeElement.scrollIntoView();\n\t\t\t}, 0);\n\t\t});\n\t}\n\n\tprivate findActiveItem() {\n\t\treturn this.menuItems.find(item => item.nativeElement.classList.contains('app-active'));\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis.mobileQuery.removeListener(this.mobileQueryListener);\n\t}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n\tname: 'filter'\n})\nexport class FilterSearch implements PipeTransform {\n\ttransform(items: any[], search: string) {\n\t\tconst contains = new RegExp(search, 'i');\n\t\treturn (items).filter(item => contains.test(item.path));\n\t}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Router } from '@angular/router';\nimport {\n\tMatCardModule,\n\tMatSelectModule,\n\tMatSidenavModule,\n\tMatToolbarModule,\n\tMatIconModule,\n\tMatListModule,\n\tMatButtonModule,\n\tMatInputModule\n} from '@angular/material';\n\nimport { AppComponent } from './app.component';\nimport { ExampleModule, EXAMPLES, APP_ROUTES } from '../examples/example.module';\n\nimport { FilterSearch } from './app.filter.pipe';\nimport { PipeModule } from 'ng2-qgrid';\n\n@NgModule({\n\tdeclarations: [\n\t\tAppComponent,\n\t\tFilterSearch\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tBrowserModule,\n\t\tBrowserAnimationsModule,\n\t\tMatCardModule,\n\t\tMatSelectModule,\n\t\tMatSidenavModule,\n\t\tMatToolbarModule,\n\t\tMatIconModule,\n\t\tMatListModule,\n\t\tMatInputModule,\n\t\tMatButtonModule,\n\t\tRouterModule.forRoot([{\n\t\t\tpath: '',\n\t\t\tredirectTo: 'action-bar-basic',\n\t\t\tpathMatch: 'full'\n\t\t}]),\n\t\tPipeModule,\n\t\tExampleModule\n\t],\n\tbootstrap: [AppComponent],\n\tentryComponents: EXAMPLES\n})\nexport class AppModule {\n\tconstructor(router: Router) {\n\t\trouter.config.unshift(...APP_ROUTES);\n\t}\n}\n","export class Action {\r\n\tconstructor(command, title, icon) {\r\n\t\tthis.command = command;\r\n\t\tthis.title = title;\r\n\t\tthis.icon = icon;\r\n\t\tthis.id = null;\r\n\t\tthis.templateUrl = null;\r\n\t}\r\n}\r\n","import { Resource } from '../resource/resource';\r\nimport { Shortcut } from '../shortcut/shortcut';\r\nimport { ShortcutDispatcher } from '../shortcut/shortcut.dispatcher';\r\nimport { CommandManager } from '../command/command.manager';\r\n\r\nexport class ActionModel {\r\n\tconstructor() {\r\n\t\tthis.resource = new Resource();\r\n\t\tthis.items = [];\r\n\t\tthis.shortcut = new Shortcut(new ShortcutDispatcher());\r\n\t\tthis.manager = new CommandManager();\r\n\t}\r\n}","import { jobLine } from '../services/job.line';\r\n\r\nexport class AnimationModel {\r\n\tconstructor() {\r\n\t}\r\n}","import { PathService } from '../path/path.service';\nimport { Fastdom } from '../services/fastdom';\nimport { GRID_PREFIX } from '../definition';\nimport { jobLine } from '../services/job.line';\nimport { eventPath } from '../services/dom';\nimport { LEFT_BUTTON, checkButtonCode } from '../mouse/mouse.code';\n\nconst VERTICAL_SCROLL_CLASS = `${GRID_PREFIX}-scroll-vertical`;\nconst HORIZONTAL_SCROLL_CLASS = `${GRID_PREFIX}-scroll-horizontal`;\nconst DEFAULT_DELTA_Y = 100;\n\nexport class BodyCtrl {\n\tconstructor(model, view, table, bag) {\n\t\tthis.model = model;\n\t\tthis.view = view;\n\t\tthis.bag = bag;\n\t\tthis.table = table;\n\t\tthis.rangeStartCell = null;\n\t\tthis.scrollingJob = jobLine(100);\n\t}\n\n\tonScroll(e) {\n\t\tconst { scroll } = this.model;\n\n\t\tconst oldValue = scroll();\n\t\tconst newValue = {};\n\t\tlet hasChanges = false;\n\t\tif (oldValue.top !== e.scrollTop) {\n\t\t\tthis.table.view.addClass(VERTICAL_SCROLL_CLASS);\n\t\t\tnewValue.top = e.scrollTop;\n\t\t\thasChanges = true;\n\t\t}\n\n\t\tif (oldValue.left !== e.scrollLeft) {\n\t\t\tthis.table.view.addClass(HORIZONTAL_SCROLL_CLASS);\n\t\t\tnewValue.left = e.scrollLeft;\n\t\t\thasChanges = true;\n\t\t}\n\n\t\tif (hasChanges) {\n\t\t\tscroll(newValue, {\n\t\t\t\tsource: 'body.core',\n\t\t\t\tbehavior: 'core'\n\t\t\t});\n\t\t}\n\n\t\tthis.scrollingJob(this.onScrollEnd.bind(this));\n\t}\n\n\tonScrollEnd() {\n\t\tthis.table.view.removeClass(VERTICAL_SCROLL_CLASS);\n\t\tthis.table.view.removeClass(HORIZONTAL_SCROLL_CLASS);\n\t}\n\n\tonWheel(e) {\n\t\tif (e.shiftKey) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { model, table } = this;\n\t\tif (model.edit().state === 'view') {\n\t\t\tconst { scroll } = model;\n\t\t\tconst upper = 0;\n\n\t\t\tFastdom.measure(() => {\n\t\t\t\tconst lower = table.view.scrollHeight() - table.view.height();\n\t\t\t\tconst deltaY = DEFAULT_DELTA_Y * Math.sign(e.deltaY);\n\t\t\t\tconst top = Math.min(lower, Math.max(upper, scroll().top + deltaY));\n\n\t\t\t\tscroll({ top }, { source: 'body.core' });\n\t\t\t});\n\t\t}\n\t}\n\n\tonMouseDown(e) {\n\t\tif (checkButtonCode(e, LEFT_BUTTON)) {\n\t\t\tconst { area, mode } = this.selection;\n\t\t\tif (area !== 'body') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst pathFinder = new PathService(this.bag.body);\n\t\t\tconst cell = pathFinder.cell(eventPath(e));\n\t\t\tif (mode === 'range') {\n\t\t\t\tthis.rangeStartCell = cell;\n\n\t\t\t\tif (this.rangeStartCell) {\n\t\t\t\t\tthis.view.selection.selectRange(this.rangeStartCell, null, 'body');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tonMouseMove(e) {\n\t\tconst pathFinder = new PathService(this.bag.body);\n\t\tconst td = pathFinder.cell(eventPath(e));\n\n\t\tif (td) {\n\t\t\tconst { highlight } = this.view;\n\t\t\tconst { rows, cell } = this.model.highlight();\n\n\t\t\tif (cell) {\n\t\t\t\thighlight.cell.execute(cell, false);\n\t\t\t}\n\n\t\t\tconst newCell = {\n\t\t\t\trowIndex: td.rowIndex,\n\t\t\t\tcolumnIndex: td.columnIndex\n\t\t\t};\n\n\t\t\tif (highlight.cell.canExecute(newCell)) {\n\t\t\t\thighlight.cell.execute(newCell, true)\n\t\t\t}\n\n\t\t\tconst tr = pathFinder.row(eventPath(e));\n\t\t\tif (tr) {\n\t\t\t\tconst { index } = tr;\n\n\t\t\t\tif (highlight.row.canExecute(index)) {\n\t\t\t\t\trows\n\t\t\t\t\t\t.filter(i => i !== index)\n\t\t\t\t\t\t.forEach(i => highlight.row.execute(i, false));\n\n\t\t\t\t\thighlight.row.execute(index, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.selection.mode === 'range') {\n\t\t\tconst startCell = this.rangeStartCell;\n\t\t\tconst endCell = td;\n\n\t\t\tif (startCell && endCell) {\n\t\t\t\tthis.navigate(endCell);\n\t\t\t\tthis.view.selection.selectRange(startCell, endCell, 'body');\n\t\t\t}\n\t\t}\n\t}\n\n\tonMouseLeave() {\n\t\tconst { highlight } = this.view;\n\t\tconst { rows, cell } = this.model.highlight();\n\n\t\trows.forEach(rowIndex => highlight.row.execute(rowIndex, false));\n\n\t\tif (cell) {\n\t\t\thighlight.cell.execute(null, false);\n\t\t}\n\t}\n\n\tonMouseUp(e) {\n\t\tconst { mode } = this.selection;\n\t\tconst { edit } = this.model;\n\n\t\tif (checkButtonCode(e, LEFT_BUTTON)) {\n\t\t\tconst pathFinder = new PathService(this.bag.body);\n\t\t\tconst cell = pathFinder.cell(eventPath(e));\n\n\t\t\tif (mode === 'range') {\n\t\t\t\tthis.rangeStartCell = null;\n\t\t\t}\n\n\t\t\tif (edit().state === 'startBatch') {\n\t\t\t\tedit({ state: 'endBatch' }, { source: 'body.ctrl' });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (cell) {\n\t\t\t\tthis.select(cell);\n\t\t\t\tthis.navigate(cell);\n\t\t\t\tif (this.view.edit.cell.enter.canExecute(cell)) {\n\t\t\t\t\tif (this.selection.items.length > 1) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.view.edit.cell.enter.execute(cell);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tselect(cell) {\n\t\tconst { area, mode, unit } = this.selection;\n\t\tif (cell.column.type !== 'select' && (area !== 'body' || mode === 'range')) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this.model;\n\t\tconst editMode = model.edit().mode;\n\t\tswitch (unit) {\n\t\t\tcase 'row': {\n\t\t\t\tif (cell.column.type === 'select' && cell.column.editorOptions.trigger === 'focus') {\n\t\t\t\t\tconst focusState = model.focus();\n\t\t\t\t\tif (focusState.rowIndex !== cell.rowIndex || focusState.columnIndex !== cell.columnIndex) {\n\t\t\t\t\t\tthis.view.selection.toggleRow.execute(cell.row, 'body');\n\t\t\t\t\t}\n\t\t\t\t} else if (!editMode && cell.column.class !== 'control') {\n\t\t\t\t\tthis.view.selection.toggleRow.execute(cell.row, 'body');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'column': {\n\t\t\t\tif (!editMode) {\n\t\t\t\t\tthis.view.selection.toggleColumn.execute(cell.column, 'body');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'mix': {\n\t\t\t\tif (cell.column.type === 'row-indicator') {\n\t\t\t\t\tthis.view.selection.toggleCell.execute(cell, 'body');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tnavigate(cell) {\n\t\tconst focus = this.view.nav.focus;\n\t\tif (focus.canExecute(cell)) {\n\t\t\tfocus.execute(cell);\n\t\t}\n\t}\n\n\tget selection() {\n\t\treturn this.model.selection();\n\t}\n}\n","import { Resource } from '../resource/resource';\r\nimport { Cache } from '../infrastructure/cache';\r\n\r\nexport class BodyModel {\r\n\tconstructor() {\r\n\t\tthis.resource = new Resource();\r\n\t\tthis.cache = new Cache();\r\n\t}\r\n}","import { Log } from '../infrastructure/log';\r\nimport { Renderer } from '../scene/render/render';\r\n\r\nexport class BodyView {\r\n\tconstructor(model, table) {\r\n\t\tthis.model = model;\r\n\t\tthis.table = table;\r\n\t\tthis.rows = [];\r\n\r\n\t\tconst render = new Renderer(model);\r\n\r\n\t\tthis.render = render;\r\n\t\tthis.columns = pin => render.defaultStrategy.columnList(pin);\r\n\r\n\t\tlet wasInvalidated = false;\r\n\t\tmodel.sceneChanged.watch(e => {\r\n\t\t\tif (e.hasChanges('rows')) {\r\n\t\t\t\tthis.invalidate();\r\n\t\t\t\twasInvalidated = true;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tmodel.rowChanged.watch(e => {\r\n\t\t\tif (e.hasChanges('pinTop') || e.hasChanges('pinBottom')) {\r\n\t\t\t\tthis.invalidate();\r\n\t\t\t\twasInvalidated = true;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (!wasInvalidated) {\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\tinvalidate() {\r\n\t\tLog.info('view.body', 'invalidate');\r\n\r\n\t\tconst model = this.model;\r\n\t\tconst table = this.table;\r\n\t\tconst { rows } = model.scene();\r\n\r\n\t\tif (!(rows.length || model.data().rows.length)) {\r\n\t\t\tif (!table.view.hasLayer('blank')) {\r\n\t\t\t\ttable.view.addLayer('blank');\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (table.view.hasLayer('blank')) {\r\n\t\t\t\ttable.view.removeLayer('blank');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","import { GRID_PREFIX } from '../definition';\r\n\r\nexport class BoxCtrl {\r\n\tconstructor(model, element) {\r\n\t\telement.classList.add(GRID_PREFIX);\r\n\r\n\t\tmodel.dragChanged.watch(e => {\r\n\t\t\tif (e.hasChanges('isActive')) {\r\n\t\t\t\tif (model.drag().isActive) {\r\n\t\t\t\t\telement.classList.add(`${GRID_PREFIX}-drag`);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\telement.classList.remove(`${GRID_PREFIX}-drag`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}","import { AppError } from '../infrastructure/error';\r\n\r\nexport class CellSelector {\r\n\tconstructor(model, table) {\r\n\t\tthis.model = model;\r\n\t\tthis.table = table;\r\n\t}\r\n\r\n\tmap(items) {\r\n\t\tconst selectionState = this.model.selection();\r\n\t\tswitch (selectionState.unit) {\r\n\t\t\tcase 'row':\r\n\t\t\t\treturn this.mapFromRows(items);\r\n\t\t\tcase 'column':\r\n\t\t\t\treturn this.mapFromColumns(items);\r\n\t\t\tcase 'cell':\r\n\t\t\t\treturn this.mapFromCells(items);\r\n\t\t\tcase 'mix':\r\n\t\t\t\treturn this.mapFromMix(items);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new AppError('cell.selector', `Invalid unit ${selectionState.unit}`);\r\n\t\t}\r\n\t}\r\n\r\n\tmapFromRows(items) {\r\n\t\tconst table = this.table;\r\n\t\tconst result = [];\r\n\t\tconst rows = table.data.rows();\r\n\r\n\t\tfor (let item of items) {\r\n\t\t\tconst index = rows.indexOf(item);\r\n\t\t\tfor (let cell of table.body.row(index).cells()) {\r\n\t\t\t\tresult.push(cell);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tmapFromColumns(items) {\r\n\t\tconst table = this.table;\r\n\t\tconst result = [];\r\n\t\tconst columns = table.data.columns();\r\n\r\n\t\tfor (let item of items) {\r\n\t\t\tconst index = columns.findIndex(c => c === item);\r\n\t\t\tresult.push(...table.body.column(index).cells());\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tmapFromCells(items) {\r\n\t\tconst table = this.table;\r\n\t\tconst result = [];\r\n\t\tconst rows = table.data.rows();\r\n\t\tconst columns = table.data.columns();\r\n\r\n\t\tfor (let item of items) {\r\n\t\t\tconst rowIndex = rows.indexOf(item.row);\r\n\t\t\tconst columnIndex = columns.findIndex((c) => c === item.column);\r\n\t\t\tresult.push(table.body.cell(rowIndex, columnIndex));\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tmapFromMix(items) {\r\n\t\tconst entries = Array.from(items);\r\n\t\tconst rows = entries.filter(item => item.unit === 'row').map(item => item.item);\r\n\t\tconst cells = entries.filter(item => item.unit === 'cell').map(item => item.item);\r\n\r\n\t\treturn [\r\n\t\t\t...this.mapFromRows(rows),\r\n\t\t\t...this.mapFromCells(cells)\r\n\t\t];\r\n\t}\r\n}","import { GRID_PREFIX } from '../definition';\r\nimport { escapeAttr } from '../services/css';\r\nimport { isFunction, isDate, isArray } from '../utility/kit';\r\n\r\nconst toJson = JSON.stringify;\r\nconst toString = Object.prototype.toString;\r\nconst hasCustomToString = obj => isFunction(obj.toString) && obj.toString !== toString;\r\n\r\nexport class TdCtrl {\r\n\tstatic classify(element, column) {\r\n\t\t// @deprecated\r\n\t\telement.classList.add(escapeAttr(`${GRID_PREFIX}-${column.key}`));\r\n\r\n\t\telement.classList.add(escapeAttr(`${GRID_PREFIX}-the-${column.key}`));\r\n\t\telement.classList.add(escapeAttr(`${GRID_PREFIX}-${column.type}`));\r\n\t\tif (column.editor) {\r\n\t\t\telement.classList.add(escapeAttr(`${GRID_PREFIX}-${column.editor}`));\r\n\t\t}\r\n\t}\r\n\r\n\tstatic viewMode(element) {\r\n\t\telement.classList.remove(`${GRID_PREFIX}-edit`);\r\n\t}\r\n\r\n\tstatic editMode(element) {\r\n\t\telement.classList.add(`${GRID_PREFIX}-edit`);\r\n\t}\r\n\r\n\tstatic stringify(value) {\r\n\t\tif (value == null) { // null || undefined\r\n\t\t\treturn '';\r\n\t\t}\r\n\r\n\t\tswitch (typeof value) {\r\n\t\t\tcase 'string':\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'number':\r\n\t\t\t\tvalue = '' + value;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tif (hasCustomToString(value) && !isArray(value) && !isDate(value)) {\r\n\t\t\t\t\tvalue = value.toString();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvalue = toJson(value);\r\n\t\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t}\r\n}","import { GRID_PREFIX } from '../definition';\r\nimport { escapeAttr } from '../services/css';\r\n\r\nexport class ThCtrl {\r\n\tstatic classify(element, column) {\r\n\t\tif (column.canEdit) {\r\n\t\t\telement.classList.add(escapeAttr(`${GRID_PREFIX}-can-edit`));\r\n\t\t}\r\n\r\n\t\tif (column.canResize) {\r\n\t\t\telement.classList.add(escapeAttr(`${GRID_PREFIX}-can-resize`));\r\n\t\t}\r\n\r\n\t\tif (column.canSort) {\r\n\t\t\telement.classList.add(escapeAttr(`${GRID_PREFIX}-can-sort`));\r\n\t\t}\r\n\r\n\t\tif (column.canMove) {\r\n\t\t\telement.classList.add(escapeAttr(`${GRID_PREFIX}-can-move`));\r\n\t\t}\r\n\r\n\t\tif (column.canFilter) {\r\n\t\t\telement.classList.add(escapeAttr(`${GRID_PREFIX}-can-filter`));\r\n\t\t}\r\n\r\n\t\tif (column.canHighlight) {\r\n\t\t\telement.classList.add(escapeAttr(`${GRID_PREFIX}-can-highlight`));\r\n\t\t}\r\n\t}\r\n}","import { clone, isUndefined } from '../utility/kit';\nimport { getType } from '../services/convert';\nimport { compile } from '../services/path';\nimport * as columnService from '../column/column.service';\nimport { columnFactory } from '../column/column.factory';\n\nexport class ColumnListCtrl {\n\tconstructor(model, canCopy, parseFactory) {\n\t\tthis.model = model;\n\t\tthis.canCopy = canCopy;\n\t\tthis.parseFactory = parseFactory;\n\t}\n\n\tgenerateKey(source) {\n\t\tif (!isUndefined(source.editor)) {\n\t\t\treturn `$default.${source.editor}`;\n\t\t}\n\n\t\tif (!isUndefined(source.type)) {\n\t\t\treturn `$default.${source.type}`;\n\t\t}\n\n\t\treturn '$default';\n\t}\n\n\tcopy(target, source) {\n\t\tconst canCopy = this.canCopy;\n\t\tconst parseFactory = this.parseFactory;\n\n\t\tObject.keys(source)\n\t\t\t.filter(key => canCopy(key, source, target))\n\t\t\t.forEach(key => {\n\t\t\t\tconst sourceValue = source[key];\n\t\t\t\tconst accessor = compile([key]);\n\t\t\t\tconst targetValue = accessor(target);\n\t\t\t\tconst targetType = getType(targetValue);\n\t\t\t\tlet value = sourceValue;\n\t\t\t\tif (targetValue !== null && !isUndefined(targetValue)) {\n\t\t\t\t\tconst parse = parseFactory(targetType);\n\t\t\t\t\tconst typedValue = parse(sourceValue, targetValue);\n\t\t\t\t\tif (typedValue !== null) {\n\t\t\t\t\t\tvalue = typedValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\taccessor(target, value);\n\t\t\t});\n\t}\n\n\tadd(column) {\n\n\t\tconst { columnList } = this.model;\n\t\tconst columns = columnList().columns.concat([column]);\n\t\tcolumnList({ columns }, {\n\t\t\tsource: 'column.list.ctrl',\n\t\t\tbehavior: 'core'\n\t\t});\n\t}\n\n\tregister(column) {\n\t\tconst { columnList } = this.model;\n\t\tconst reference = clone(columnList().reference);\n\t\treference[column.type || '$default'] = column;\n\t\tcolumnList({ reference }, {\n\t\t\tsource: 'column.list.ctrl',\n\t\t\tbehavior: 'core'\n\t\t});\n\t}\n\n\textract(key, type) {\n\t\tconst model = this.model;\n\t\tconst createColumn = columnFactory(model);\n\t\tlet column = columnService.find(model.columnList().line, key);\n\t\tif (column) {\n\t\t\tcreateColumn(type, column);\n\t\t} else {\n\t\t\tcolumn = createColumn(type || 'text').model;\n\t\t\tcolumn.key = key;\n\t\t\tcolumn.source = 'template';\n\t\t}\n\n\t\treturn column;\n\t}\n\n\tdelete(key) {\n\t\tconst { data, columnList } = this.model;\n\n\t\tconst htmlColumns = columnList().columns;\n\t\tconst index = columnService.findIndex(htmlColumns, key);\n\t\tif (index >= 0) {\n\t\t\tconst columns = Array.from(htmlColumns);\n\t\t\tcolumns.splice(index, 1);\n\t\t\tcolumnList({ columns }, { source: 'column.list.ctrl', behavior: 'core' });\n\t\t}\n\n\t\tconst dataColumns = Array.from(data().columns);\n\t\tconst line = columnService.findLine(dataColumns, key);\n\t\tif (line) {\n\t\t\tline.columns.splice(line.index, 1);\n\n\t\t\t// trigger columns pipe unit\n\t\t\tdata({ columns: dataColumns }, { source: 'column.list.ctrl' });\n\t\t}\n\t}\n}\n","import { merge as mergeFactory } from '../services/merge';\nimport { compile } from '../services/path';\nimport { getType, resolveType } from '../services/convert';\nimport { TextColumnModel } from '../column-type/text.column';\nimport { assignWith, isUndefined, noop, startCase } from '../utility/kit';\nimport { columnFactory } from '../column/column.factory';\nimport { AppError } from '../infrastructure/error';\n\nfunction merge(left, right, force = false) {\n\tlet canAssign;\n\tif (force) {\n\t\tcanAssign = (source, target) => !isUndefined(target) && target !== null ? target : source;\n\t}\n\telse {\n\t\tcanAssign = (source, target) => !isUndefined(target) && target !== null && source === null ? target : source;\n\t}\n\n\tconst doMerge = mergeFactory({\n\t\tequals: (l, r) => l.key === r.key,\n\t\tupdate: (l, r) => assignWith(l, r, canAssign),\n\t\tinsert: (r, left) => left.push(r),\n\t\tremove: noop\n\t});\n\n\treturn doMerge(left, right);\n}\n\nfunction hasChanges(statistics) {\n\treturn statistics.some(st => st.inserted || st.update);\n}\n\nexport function generateFactory(model) {\n\tconst data = model.data;\n\tconst createColumn = columnFactory(model);\n\treturn () => {\n\t\tconst { rows } = data();\n\t\tconst htmlColumns = model.columnList().columns;\n\n\t\tconst spawnColumns = [];\n\t\tconst { generation } = model.columnList();\n\t\tif (generation) {\n\t\t\tlet settings = {\n\t\t\t\trows,\n\t\t\t\tcolumnFactory: createColumn,\n\t\t\t\tdeep: false,\n\t\t\t\tcohort: false\n\t\t\t};\n\n\t\t\tswitch (generation) {\n\t\t\t\tcase 'shallow': {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'deep': {\n\t\t\t\t\tsettings.deep = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'cohort': {\n\t\t\t\t\tsettings.deep = true;\n\t\t\t\t\tsettings.cohort = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new AppError(\n\t\t\t\t\t\t'column.list.generate',\n\t\t\t\t\t\t`Invalid generation mode \"${generation}\"`\n\t\t\t\t\t);\n\t\t\t}\n\n\t\t\tspawnColumns.push(...generate(settings));\n\t\t}\n\n\t\tconst columns = Array.from(data().columns);\n\n\t\tlet statistics = [];\n\t\tif (spawnColumns.length) {\n\t\t\tstatistics.push(merge(columns, spawnColumns, false));\n\t\t}\n\n\t\tif (htmlColumns.length) {\n\t\t\tstatistics.push(merge(columns, htmlColumns, true));\n\t\t}\n\n\t\treturn {\n\t\t\tcolumns,\n\t\t\tstatistics,\n\t\t\thasChanges: hasChanges(statistics)\n\t\t};\n\t};\n}\n\nexport function generate(settings) {\n\tconst context = assignWith({\n\t\tdeep: true,\n\t\tcohort: false,\n\t\trows: [],\n\t\tcolumnFactory: () => new TextColumnModel(),\n\t\ttitle: startCase,\n\t\ttestNumber: 10\n\t}, settings);\n\n\tif (context.rows.length) {\n\t\treturn build(\n\t\t\tcontext.rows[0],\n\t\t\t[],\n\t\t\tcontext.columnFactory,\n\t\t\tcontext.deep,\n\t\t\tcontext.cohort,\n\t\t\tcontext.title,\n\t\t\tcontext.rows.slice(0, context.testNumber)\n\t\t);\n\t}\n\n\treturn [];\n}\n\nfunction build(graph, pathParts, columnFactory, deep, cohort, title, testRows) {\n\tconst props = Object.getOwnPropertyNames(graph);\n\treturn props.reduce((memo, prop) => {\n\t\tconst propParts = [...pathParts, prop];\n\t\tconst propValue = compile(propParts);\n\t\tconst propPath = propParts.join('.');\n\n\t\tconst subject = graph[prop];\n\t\tconst type = resolveType(testRows.map(propValue));\n\n\t\tswitch (type) {\n\t\t\tcase 'array': {\n\t\t\t\tconst column = columnFactory(type).model;\n\t\t\t\tcolumn.key = propPath;\n\t\t\t\tcolumn.title = title(propPath, graph, column.length);\n\t\t\t\tcolumn.value = propValue;\n\t\t\t\tcolumn.source = 'generation';\n\t\t\t\tif (subject.length) {\n\t\t\t\t\tcolumn.itemType = getType(subject[0]);\n\t\t\t\t\tswitch (column.itemType) {\n\t\t\t\t\t\tcase 'date': {\n\t\t\t\t\t\t\tcolumn.itemFormat = columnFactory('date').model.format;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tmemo.push(column);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'collection': {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'object': {\n\t\t\t\tif (deep) {\n\t\t\t\t\tconst columns = build(\n\t\t\t\t\t\tsubject,\n\t\t\t\t\t\tpropParts,\n\t\t\t\t\t\tcolumnFactory,\n\t\t\t\t\t\tdeep,\n\t\t\t\t\t\tcohort,\n\t\t\t\t\t\ttitle,\n\t\t\t\t\t\ttestRows\n\t\t\t\t\t);\n\n\t\t\t\t\tif (cohort) {\n\t\t\t\t\t\tconst column = columnFactory('cohort').model;\n\t\t\t\t\t\tcolumn.key = propPath;\n\t\t\t\t\t\tcolumn.title = title(propPath, graph, column.length);\n\t\t\t\t\t\tcolumn.value = propValue;\n\t\t\t\t\t\tcolumn.source = 'generation';\n\t\t\t\t\t\tcolumn.children.push(...columns);\n\t\t\t\t\t\tmemo.push(column);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmemo.push(...columns);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tconst column = columnFactory(type).model;\n\t\t\t\tcolumn.key = propPath;\n\t\t\t\tcolumn.title = title(propPath, graph, column.length);\n\t\t\t\tcolumn.value = propValue;\n\t\t\t\tcolumn.source = 'generation';\n\t\t\t\tmemo.push(column);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn memo;\n\t}, []);\n}\n","import { Node } from '../node/node';\nimport { CohortColumn, CohortColumnModel } from '../column-type/cohort.column';\n\nexport class ColumnListModel {\n\tconstructor() {\n\t\tthis.generation = null; // deep | shallow | cohort\n\n\t\tconst root = new CohortColumnModel();\n\t\troot.key = '$root';\n\n\t\tthis.index = new Node(new CohortColumn(root), 0);\n\t\tthis.columns = [];\n\t\tthis.reference = {};\n\t\tthis.line = [];\n\t}\n}\n","import { bend, copy } from '../node/node.service';\nimport { preOrderDFS } from '../node/node.service';\n\nexport { sortIndexFactory, merge };\n\nfunction sortIndexFactory(model) {\n\tconst templateIndex = model.columnList().columns.map(c => c.key);\n\n\treturn (columns, scores) => {\n\t\tconst { length } = columns;\n\t\tscores = Object.assign({\n\t\t\tlist: column => (column.class === 'data' || column.class === 'cohort') ? 0.1 : 0.3,\n\t\t\tindex: () => 0.2,\n\t\t\tview: column => length + ((column.class !== 'data' && column.class !== 'cohort') ? 0.1 : 0.3),\n\t\t\ttemplate: () => length + 0.4\n\t\t}, scores);\n\n\t\tconst viewIndex = columns.map(c => c.key);\n\n\t\tconst sort = sortFactory(scores)(templateIndex, viewIndex);\n\t\tconst left = sort(columns.filter(c => c.pin === 'left'));\n\t\tconst center = sort(columns.filter(c => !c.pin));\n\t\tconst right = sort(columns.filter(c => c.pin === 'right'));\n\n\t\treturn left.concat(center).concat(right);\n\t};\n}\n\nfunction sortFactory(scores) {\n\treturn (templateIndex, viewIndex) => {\n\t\tconst compare = compareFactory(scores, templateIndex, viewIndex);\n\t\treturn columns => {\n\t\t\tconst columnIndex = Array.from(columns);\n\t\t\tcolumnIndex.sort(compare);\n\n\t\t\treturn columnIndex.map(c => c.key);\n\t\t};\n\t};\n}\n\nfunction compareFactory(scoreFor, templateIndex, viewIndex) {\n\tconst viewFind = findFactory(viewIndex);\n\tconst templateFind = findFactory(templateIndex);\n\n\tconst weightCache = {};\n\tconst getWeight = column => {\n\t\tconst key = column.key;\n\t\tif (weightCache.hasOwnProperty(key)) {\n\t\t\treturn weightCache[key];\n\t\t}\n\n\t\tconst candidates = [\n\t\t\tcolumn.index + scoreFor.index(column),\n\t\t\tviewFind(key) + scoreFor.view(column),\n\t\t\ttemplateFind(key) + scoreFor.template(column)\n\t\t];\n\n\t\tconst weights = candidates.filter(w => w >= 0);\n\t\tconst weight = weights.length ? weights[0] : -1;\n\t\tweightCache[key] = weight;\n\n\t\treturn weight;\n\t};\n\n\treturn (x, y) => {\n\t\tconst xi = getWeight(x);\n\t\tconst yi = getWeight(y);\n\n\t\treturn yi === -1 ? -1 : xi === -1 ? 1 : xi - yi;\n\t};\n}\n\nfunction findFactory(index) {\n\tconst map = index.reduce((memo, key, i) => {\n\t\tmemo.set(key, i);\n\t\treturn memo;\n\t}, new Map());\n\n\treturn key => (map.has(key) ? map.get(key) : -1);\n}\n\nfunction equals(xs, ys) {\n\tconst length = xs.length;\n\tif (length !== ys.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0; i < length; i++) {\n\t\tif (xs[i] !== ys[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction merge(newTree, oldTree, buildIndex) {\n\tconst current = running(newTree, buildIndex);\n\tconst screen = former(oldTree, current);\n\tconst insertNear = insertFactory(current, screen);\n\tconst insertCohort = insertCohortFactory(current, screen);\n\n\tconst root = current.line[0];\n\tif (!screen.set.has(root.key.model.key)) {\n\t\tscreen.line.unshift(copy(root));\n\t\tscreen.line.forEach(n => n.level++);\n\t}\n\n\tfor (let i = 1, length = current.line.length; i < length; i++) {\n\t\tconst node = current.line[i];\n\t\tconst { model } = node.key;\n\t\tif (screen.set.has(model.key)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst prevNode = current.line[i - 1];\n\t\tif (model.type === 'cohort') {\n\t\t\tinsertCohort(prevNode, node);\n\t\t} else {\n\t\t\tinsertNear(prevNode, node, i);\n\t\t}\n\t}\n\n\treturn bend(screen.line);\n}\n\nfunction running(tree, buildIndex) {\n\tconst result = {\n\t\tline: [],\n\t\tmap: new Map()\n\t};\n\n\tpreOrderDFS([tree], node => {\n\t\tresult.line.push(node);\n\t\tresult.map.set(node.key.model.key, node.key);\n\n\t\t// As we use pre order direction we can manipulate with children without affecting on algorithm.\n\t\t// Below we sort columns in appropriate order.\n\t\tconst columns = node.children.map(child => child.key.model);\n\t\tconst index = buildIndex(columns);\n\n\t\tlet cursor = 0;\n\t\tconst indexMap = index.reduce((memo, key) => {\n\t\t\tmemo[key] = cursor++;\n\t\t\treturn memo;\n\t\t}, {});\n\n\t\tnode.children.sort((x, y) => indexMap[x.key.model.key] - indexMap[y.key.model.key]);\n\t});\n\n\treturn result;\n}\n\nfunction former(tree, current) {\n\tconst result = {\n\t\tline: [],\n\t\tset: new Set()\n\t};\n\n\tpreOrderDFS([tree], node => {\n\t\t// Filter out nodes if they were deleted from newTree.\n\t\tconst { key } = node.key.model;\n\t\tconst view = current.map.get(key);\n\t\tif (view) {\n\t\t\tconst newNode = copy(node);\n\t\t\tnewNode.key = view;\n\t\t\tresult.line.push(newNode);\n\t\t\tresult.set.add(key);\n\t\t}\n\t});\n\n\treturn result;\n}\n\nfunction insertFactory(current, screen) {\n\tconst { line } = screen;\n\treturn (prevNode, node, i) => {\n\t\tlet pos = line.findIndex(n => n.key.model.key === prevNode.key.model.key);\n\n\t\tconst target = copy(node);\n\t\ttarget.level = node.level;\n\n\t\tif (everyNextIsNew(current, screen, i)) {\n\t\t\tline.push(target);\n\t\t} else {\n\t\t\tline.splice(pos + 1, 0, target);\n\t\t}\n\t};\n}\n\nfunction insertCohortFactory(current, screen) {\n\tconst insertNear = insertFactory(current, screen);\n\tconst { line } = screen;\n\treturn (prevNode, node) => {\n\t\tconst set = new Set(node.children.map(n => n.key.model.key));\n\t\tconst index = line.findIndex(n => set.has(n.key.model.key));\n\n\t\tif (index < 0) {\n\t\t\tinsertNear(prevNode, node);\n\t\t\treturn;\n\t\t}\n\n\t\tconst target = copy(node);\n\t\tconst { level } = line[index];\n\t\ttarget.level = level;\n\t\tline.splice(index, 0, target);\n\n\t\tfor (let i = index + 1, end = line.length; i < end; i++) {\n\t\t\tconst child = line[i];\n\t\t\tif (child.level !== level) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (set.has(child.key.model.key)) {\n\t\t\t\tchild.level = level + 1;\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction everyNextIsNew(current, screen, index) {\n\tconst { line } = current;\n\n\tlet n;\n\twhile ((n = line[++index])) {\n\t\tif (screen.set.has(n.key.model.key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n","import { ColumnView } from '../scene/view/column.view';\nimport { DataColumnModel } from './data.column.model';\nimport { TemplatePath } from '../template/template.path';\nimport { get as getValue } from '../services/value';\nimport { isArray } from '../utility/kit';\nimport { FormatService } from '../format/format.service';\n\nTemplatePath.register('array-cell', (template, column) => {\n\treturn {\n\t\tmodel: template.for,\n\t\tresource: column.key\n\t};\n});\n\nTemplatePath.register('array-cell-edit', (template, column) => {\n\treturn {\n\t\tmodel: 'edit',\n\t\tresource: column.key\n\t};\n});\n\nexport class ArrayColumnModel extends DataColumnModel {\n\tconstructor() {\n\t\tsuper('array');\n\n\t\tthis.itemType = 'text';\n\t\tthis.itemFormat = '';\n\n\t\tthis.label = function (row) {\n\t\t\tconst value = getValue(row, this);\n\t\t\tif (isArray(value)) {\n\t\t\t\tlet formatter;\n\t\t\t\tswitch (this.itemType) {\n\t\t\t\t\tcase 'number':\n\t\t\t\t\t\tformatter = FormatService.number;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'date':\n\t\t\t\t\t\tformatter = FormatService.date;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tformatter = this.itemLabel.bind(this);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tconst format = this.itemFormat;\n\t\t\t\treturn value.map(item => formatter(item, format)).join(', ');\n\t\t\t}\n\n\t\t\treturn value;\n\t\t};\n\t}\n}\n\nexport class ArrayColumn extends ColumnView {\n\tconstructor(model) {\n\t\tsuper(model);\n\t}\n\n\tstatic model(model) {\n\t\treturn model ? ArrayColumn.assign(model) : new ArrayColumnModel();\n\t}\n}","import { ColumnView } from '../scene/view/column.view';\r\nimport { DataColumnModel } from './data.column.model';\r\nimport { TemplatePath } from '../template/template.path';\r\n\r\nTemplatePath.register('bool-cell', (template, column) => {\r\n\treturn {\r\n\t\tmodel: template.for,\r\n\t\tresource: column.key\r\n\t};\r\n});\r\n\r\nTemplatePath.register('bool-cell-edit', (template, column) => {\r\n\treturn {\r\n\t\tmodel: 'edit',\r\n\t\tresource: column.key\r\n\t};\r\n});\r\n\r\nexport class BoolColumnModel extends DataColumnModel {\r\n\tconstructor() {\r\n\t\tsuper('bool');\r\n\r\n\t\tthis.trueValue = true;\r\n\t\tthis.falseValue = false;\r\n\r\n\t\tthis.editorOptions.cruise = 'transparent';\r\n\r\n\t\t// as we use 'this' pointer inside, we can't use lambda in 2 here\r\n\t\tthis.isIndeterminate = function (value) {\r\n\t\t\treturn !(value === this.trueValue || value === this.falseValue);\r\n\t\t};\r\n\r\n\t\tthis.isChecked = function (value) {\r\n\t\t\treturn value === this.trueValue;\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport class BoolColumn extends ColumnView {\r\n\tconstructor(model) {\r\n\t\tsuper(model);\r\n\t}\r\n\r\n\tstatic model(model) {\r\n\t\treturn model ? BoolColumn.assign(model) : new BoolColumnModel();\r\n\t}\r\n}","import { ColumnView } from '../scene/view/column.view';\nimport { ColumnModel } from './column.model';\nimport { TemplatePath } from '../template/template.path';\n\nTemplatePath.register('cohort-cell', (template) => {\n\treturn {\n\t\tmodel: template.for,\n\t\tresource: `${template.for}.${template.type}`\n\t};\n});\n\nexport class CohortColumnModel extends ColumnModel {\n\tconstructor() {\n\t\tsuper('cohort');\n\n\t\tthis.key = '$cohort';\n\n\t\tthis.canEdit = false;\n\t\tthis.canSort = false;\n\t\tthis.canResize = false;\n\t\tthis.canFocus = false;\n\t\tthis.canFilter = false;\n\t\tthis.class = 'cohort';\n\t}\n}\n\nexport class CohortColumn extends ColumnView {\n\tconstructor(model) {\n\t\tsuper(model);\n\t}\n\n\tstatic model(model) {\n\t\treturn model ? CohortColumn.assign(model) : new CohortColumnModel();\n\t}\n}","import { identity, compare } from '../utility/kit';\nimport { TemplatePath } from '../template/template.path';\n\nTemplatePath.register('custom-cell', (template, column) => {\n\treturn {\n\t\tmodel: template.for,\n\t\tresource: column.key\n\t};\n});\n\nTemplatePath.register('custom-cell-edit', (template, column) => {\n\treturn {\n\t\tmodel: 'edit',\n\t\tresource: column.key\n\t};\n});\n\nexport class ColumnModel {\n\tconstructor(type = 'text') {\n\t\tthis.key = null;\n\t\tthis.path = null;\n\t\tthis.labelPath = null;\n\n\t\tthis.type = type;\n\t\tthis.title = null;\n\t\tthis.description = null;\n\t\tthis.pin = null;\n\t\tthis.origin = 'specific';\n\t\tthis.source = 'user';\n\t\tthis.class = 'data';\n\t\tthis.editor = null;\n\t\tthis.editorOptions = {\n\t\t\tmodelFactory: ({ createDefaultModel }) => createDefaultModel(),\n\t\t\ttrigger: 'click', // click | custom | focus\n\t\t\tcruise: 'control', // control | transparent\n\t\t\tlabel: null,\n\t\t\tvalue: identity,\n\t\t\tactions: []\n\t\t};\n\n\t\tthis.width = null;\n\t\tthis.minWidth = 20;\n\t\tthis.maxWidth = null;\n\t\tthis.viewWidth = null;\n\n\t\tthis.widthMode = 'relative'; // relative | absolute\n\n\t\tthis.canEdit = true;\n\t\tthis.canResize = true;\n\t\tthis.canSort = true;\n\t\tthis.canMove = true;\n\t\tthis.canFilter = true;\n\t\tthis.canHighlight = true;\n\t\tthis.canFocus = true;\n\n\t\tthis.isVisible = true;\n\t\tthis.index = -1;\n\n\t\tthis.value = null;\n\t\tthis.label = null;\n\n\t\tthis.compare = compare;\n\n\t\tthis.children = [];\n\n\t\tthis.$label = null;\n\t\tthis.$value = null;\n\n\t\tthis.itemLabel = identity;\n\t}\n\n\ttoString() {\n\t\treturn `${this.type}: ${this.title}`;\n\t}\n}","import { ColumnView } from '../scene/view/column.view';\r\nimport { DataColumnModel } from './data.column.model';\r\nimport { TemplatePath } from '../template/template.path';\r\n\r\nTemplatePath.register('currency-cell', (template, column) => {\r\n\treturn {\r\n\t\tmodel: template.for,\r\n\t\tresource: column.key\r\n\t};\r\n});\r\n\r\nTemplatePath.register('currency-cell-edit', (template, column) => {\r\n\treturn {\r\n\t\tmodel: 'edit',\r\n\t\tresource: column.key\r\n\t};\r\n});\r\n\r\n\r\nexport class CurrencyColumnModel extends DataColumnModel {\r\n\tconstructor() {\r\n\t\tsuper('currency');\r\n\r\n\t\tthis.maxLength = 20;\r\n\t\tthis.symbol = '$';\r\n\t\tthis.code = 'USD';\r\n\t}\r\n}\r\n\r\nexport class CurrencyColumn extends ColumnView {\r\n\tconstructor(model) {\r\n\t\tsuper(model);\r\n\t}\r\n\r\n\tstatic model(model) {\r\n\t\treturn model ? CurrencyColumn.assign(model) : new CurrencyColumnModel();\r\n\t}\r\n}","import { ColumnModel } from './column.model';\r\n\r\nexport class DataColumnModel extends ColumnModel {\r\n\tconstructor() {\r\n\t\tsuper(...arguments);\r\n\r\n\t\tthis.isDefault = true;\r\n\t\tthis.aggregation = null;\r\n\t\tthis.aggregationOptions = {\r\n\t\t\tdistinct: false,\r\n\t\t\tseparator: '; '\r\n\t\t};\r\n\t}\r\n}","import { ColumnView } from '../scene/view/column.view';\r\nimport { DataColumnModel } from './data.column.model';\r\nimport { TemplatePath } from '../template/template.path';\r\n\r\nTemplatePath.register('date-cell', (template, column) => {\r\n\treturn {\r\n\t\tmodel: template.for,\r\n\t\tresource: column.key\r\n\t};\r\n});\r\n\r\nTemplatePath.register('date-cell-edit', (template, column) => {\r\n\treturn {\r\n\t\tmodel: 'edit',\r\n\t\tresource: column.key\r\n\t};\r\n});\r\n\r\nexport class DateColumnModel extends DataColumnModel {\r\n\tconstructor() {\r\n\t\tsuper('date');\r\n\r\n\t\tthis.format = 'MM/dd/yyyy';\r\n\t}\r\n}\r\n\r\nexport class DateColumn extends ColumnView {\r\n\tconstructor(model) {\r\n\t\tsuper(model);\r\n\t}\r\n\r\n\tstatic model(model) {\r\n\t\treturn model ? DateColumn.assign(model) : new DateColumnModel();\r\n\t}\r\n}","import { ColumnView } from '../scene/view/column.view';\r\nimport { DataColumnModel } from './data.column.model';\r\nimport { TemplatePath } from '../template/template.path';\r\n\r\nTemplatePath.register('email-cell', (template, column) => {\r\n\treturn {\r\n\t\tmodel: template.for,\r\n\t\tresource: column.key\r\n\t};\r\n});\r\n\r\nTemplatePath.register('email-cell-edit', (template, column) => {\r\n\treturn {\r\n\t\tmodel: 'edit',\r\n\t\tresource: column.key\r\n\t};\r\n});\r\n\r\nexport class EmailColumnModel extends DataColumnModel {\r\n\tconstructor() {\r\n\t\tsuper('email');\r\n\r\n\t\tthis.editorOptions.trigger = 'custom';\r\n\t}\r\n}\r\n\r\nexport class EmailColumn extends ColumnView {\r\n\tconstructor(model) {\r\n\t\tsuper(model);\r\n\t}\r\n\r\n\tstatic model(model) {\r\n\t\treturn model ? EmailColumn.assign(model) : new EmailColumnModel();\r\n\t}\r\n}","import { ColumnView } from '../scene/view/column.view';\r\nimport { DataColumnModel } from './data.column.model';\r\nimport { TemplatePath } from '../template/template.path';\r\nimport { yes } from '../utility/kit';\r\nimport { isImage } from '../services/file';\r\n\r\nTemplatePath.register('file-cell', (template, column) => {\r\n\treturn {\r\n\t\tmodel: template.for,\r\n\t\tresource: column.key\r\n\t};\r\n});\r\n\r\nTemplatePath.register('file-cell-edit', (template, column) => {\r\n\treturn {\r\n\t\tmodel: 'edit',\r\n\t\tresource: column.key\r\n\t};\r\n});\r\n\r\nexport class FileColumnModel extends DataColumnModel {\r\n\tconstructor() {\r\n\t\tsuper('file');\r\n\r\n\t\tthis.canUpload = yes;\r\n\t\tthis.editorOptions.trigger = 'custom';\r\n\r\n\t\tthis.hasPreview = name => isImage(name);\r\n\t\tthis.canSort = false;\r\n\t\tthis.canFilter = false;\r\n\t}\r\n}\r\n\r\nexport class FileColumn extends ColumnView {\r\n\tconstructor(model) {\r\n\t\tsuper(model);\r\n\t}\r\n\r\n\tstatic model(model) {\r\n\t\treturn model ? FileColumn.assign(model) : new FileColumnModel();\r\n\t}\r\n}","import { ColumnView } from '../scene/view/column.view';\nimport { ColumnModel } from './column.model';\nimport { TemplatePath } from '../template/template.path';\n\nTemplatePath.register('filter-row-cell', (template, column) => {\n\treturn {\n\t\tmodel: template.for,\n\t\tresource: column.key\n\t};\n});\n\nexport class FilterRowColumnModel extends ColumnModel {\n\tconstructor(model) {\n\t\tsuper();\n\n\t\tObject.assign(this, model);\n\n\t\tthis.key = `$filter.row.${model.key}`;\n\t\tthis.type = 'filter-row';\n\t\tthis.class = 'control';\n\n\t\tthis.canFilter = model.canFilter && model.class === 'data';\n\t\tthis.model = model;\n\t}\n}\n\nexport class FilterRowColumn extends ColumnView {\n\tconstructor(model) {\n\t\tsuper(new FilterRowColumnModel(model));\n\t}\n}","import { ColumnView } from '../scene/view/column.view';\r\nimport { ColumnModel } from './column.model';\r\nimport { TemplatePath } from '../template/template.path';\r\n\r\nTemplatePath.register('group-cell', (template, column) => {\r\n\treturn {\r\n\t\tmodel: template.for,\r\n\t\tresource: column.type\r\n\t};\r\n});\r\n\r\nTemplatePath.register('group-cell-edit', (template, column) => {\r\n\treturn {\r\n\t\tmodel: 'edit',\r\n\t\tresource: column.key\r\n\t};\r\n});\r\n\r\nexport class GroupColumnModel extends ColumnModel {\r\n\tconstructor() {\r\n\t\tsuper('group');\r\n\r\n\t\tthis.key = '$group';\r\n\t\tthis.path = 'key';\r\n\t\tthis.labelPath = 'key';\r\n\t\tthis.title = 'Group';\r\n\t\tthis.offset = 24;\r\n\t\tthis.canEdit = false;\r\n\t\tthis.canSort = false;\r\n\t\tthis.canFilter = false;\r\n\t\tthis.class = 'control';\r\n\t\tthis.by = null;\r\n\t\tthis.label = function (node) {\r\n\t\t\tif (node.type === 'row') {\r\n\t\t\t\treturn '';\r\n\t\t\t}\r\n\r\n\t\t\tconst { by, labelPath } = this;\r\n\t\t\treturn !by || by === node.source ? node[labelPath] : '';\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport class GroupColumn extends ColumnView {\r\n\tconstructor(model) {\r\n\t\tsuper(model);\r\n\t}\r\n\r\n\tstatic model(model) {\r\n\t\treturn model ? GroupColumn.assign(model) : new GroupColumnModel();\r\n\t}\r\n}\r\n","import { ColumnView } from '../scene/view/column.view';\nimport { DataColumnModel } from './data.column.model';\nimport { TemplatePath } from '../template/template.path';\n\nTemplatePath.register('group-summary-cell', (template, column) => {\n\treturn {\n\t\tmodel: template.for,\n\t\tresource: column.key\n\t};\n});\n\nexport class GroupSummaryColumnModel extends DataColumnModel {\n\tconstructor() {\n\t\tsuper('group-summary');\n\n\t\tthis.key = '$group.summary';\n\t\tthis.class = 'control';\n\n\t\tthis.canEdit = false;\n\t\tthis.canResize = false;\n\t\tthis.canHighlight = false;\n\t\tthis.canFilter = false;\n\t\tthis.canSort = false;\n\t\tthis.canMove = false;\n\t}\n}\n\nexport class GroupSummaryColumn extends ColumnView {\n\tconstructor(model) {\n\t\tsuper(model);\n\t}\n\n\tstatic model(model) {\n\t\treturn model ? GroupSummaryColumn.assign(model) : new GroupSummaryColumnModel();\n\t}\n}","import { ColumnView } from '../scene/view/column.view';\r\nimport { DataColumnModel } from './data.column.model';\r\nimport { TemplatePath } from '../template/template.path';\r\n\r\nTemplatePath.register('id-cell', (template, column) => {\r\n\treturn {\r\n\t\tmodel: template.for,\r\n\t\tresource: column.key\r\n\t};\r\n});\r\n\r\nTemplatePath.register('id-cell-edit', (template, column) => {\r\n\treturn {\r\n\t\tmodel: 'edit',\r\n\t\tresource: column.key\r\n\t};\r\n});\r\n\r\nexport class IdColumnModel extends DataColumnModel {\r\n\tconstructor() {\r\n\t\tsuper('id');\r\n\t}\r\n}\r\n\r\nexport class IdColumn extends ColumnView {\r\n\tconstructor(model) {\r\n\t\tsuper(model);\r\n\t}\r\n\r\n\tstatic model(model) {\r\n\t\treturn model ? IdColumn.assign(model) : new IdColumnModel();\r\n\t}\r\n}","import { ColumnView } from '../scene/view/column.view';\nimport { DataColumnModel } from './data.column.model';\nimport { TemplatePath } from '../template/template.path';\nimport { yes } from '../utility/kit';\nimport { isImage } from '../services/file';\n\nTemplatePath.register('image-cell', (template, column) => {\n\treturn {\n\t\tmodel: template.for,\n\t\tresource: column.key\n\t};\n});\n\nTemplatePath.register('image-cell-edit', (template, column) => {\n\treturn {\n\t\tmodel: 'edit',\n\t\tresource: column.key\n\t};\n});\n\nexport class ImageColumnModel extends DataColumnModel {\n\tconstructor() {\n\t\tsuper('image');\n\n\t\tthis.canSort = false;\n\t\tthis.canFilter = false;\n\t\tthis.canUpload = yes;\n\n\t\tthis.hasPreview = name => isImage(name);\n\t}\n}\n\nexport class ImageColumn extends ColumnView {\n\tconstructor(model) {\n\t\tsuper(model);\n\t}\n\n\tstatic model(model) {\n\t\treturn model ? ImageColumn.assign(model) : new ImageColumnModel();\n\t}\n}\n","import { ColumnView } from '../scene/view/column.view';\r\nimport { DataColumnModel } from './data.column.model';\r\nimport { TemplatePath } from '../template/template.path';\r\n\r\nTemplatePath.register('number-cell', (template, column) => {\r\n\treturn {\r\n\t\tmodel: template.for,\r\n\t\tresource: column.key\r\n\t};\r\n});\r\n\r\nTemplatePath.register('number-cell-edit', (template, column) => {\r\n\treturn {\r\n\t\tmodel: 'edit',\r\n\t\tresource: column.key\r\n\t};\r\n});\r\n\r\nexport class NumberColumnModel extends DataColumnModel {\r\n\tconstructor() {\r\n\t\tsuper('number');\r\n\r\n\t\tthis.format = '';\r\n\t}\r\n}\r\n\r\nexport class NumberColumn extends ColumnView {\r\n\tconstructor(model) {\r\n\t\tsuper(model);\r\n\t}\r\n\r\n\tstatic model(model) {\r\n\t\treturn model ? NumberColumn.assign(model) : new NumberColumnModel();\r\n\t}\r\n}","import { ColumnView } from '../scene/view/column.view';\nimport { ColumnModel } from './column.model';\nimport { TemplatePath } from '../template/template.path';\n\nTemplatePath.register('pad-cell', (template) => {\n\treturn {\n\t\tmodel: template.for,\n\t\tresource: `${template.for}.${template.type}`\n\t};\n});\n\nexport class PadColumnModel extends ColumnModel {\n\tconstructor() {\n\t\tsuper('pad');\n\n\t\tthis.key = '$pad';\n\t\tthis.class = 'markup';\n\n\t\tthis.title = '';\n\t\tthis.canEdit = false;\n\t\tthis.canSort = false;\n\t\tthis.canResize = false;\n\t\tthis.canHighlight = false;\n\t\tthis.canFocus = false;\n\t\tthis.canMove = false;\n\t\tthis.canFilter = false;\t\t\n\t\tthis.source = 'generation';\n\t}\n}\n\nexport class PadColumn extends ColumnView {\n\tconstructor(model) {\n\t\tsuper(model);\n\t}\n\n\tstatic model(model) {\n\t\treturn model ? PadColumn.assign(model) : new PadColumnModel();\n\t}\n}","import { ColumnView } from '../scene/view/column.view';\r\nimport { DataColumnModel } from './data.column.model';\r\nimport { TemplatePath } from '../template/template.path';\r\n\r\nTemplatePath.register('password-cell', (template, column) => {\r\n\treturn {\r\n\t\tmodel: template.for,\r\n\t\tresource: column.key\r\n\t};\r\n});\r\n\r\nTemplatePath.register('password-cell-edit', (template, column) => {\r\n\treturn {\r\n\t\tmodel: 'edit',\r\n\t\tresource: column.key\r\n\t};\r\n});\r\n\r\nexport class PasswordColumnModel extends DataColumnModel {\r\n\tconstructor() {\r\n\t\tsuper('password');\r\n\r\n\t\tthis.canSort = false;\r\n\t\tthis.canFilter = false;\r\n\t}\r\n}\r\n\r\nexport class PasswordColumn extends ColumnView {\r\n\tconstructor(model) {\r\n\t\tsuper(model);\r\n\t}\r\n\r\n\tstatic model(model) {\r\n\t\treturn model ? PasswordColumn.assign(model) : new PasswordColumnModel();\r\n\t}\r\n}","import { ColumnView } from '../scene/view/column.view';\nimport { ColumnModel } from './column.model';\nimport { TemplatePath } from '../template/template.path';\n\nTemplatePath.register('pivot-cell', (template) => {\n\treturn {\n\t\tmodel: 'pivot',\n\t\tresource: template.for\n\t};\n});\n\nexport class PivotColumnModel extends ColumnModel {\n\tconstructor() {\n\t\tsuper('pivot');\n\n\t\tthis.key = '$pivot';\n\t\tthis.title = 'Pivot';\n\n\t\tthis.source = 'generation';\n\t\tthis.class = 'pivot';\n\t\tthis.canEdit = false;\n\t\tthis.canSort = false;\n\t\tthis.canResize = false;\n\t\tthis.canFilter = false;\n\t\tthis.canMove = false;\n\t}\n}\n\nexport class PivotColumn extends ColumnView {\n\tconstructor(model) {\n\t\tsuper(model);\n\t}\n\n\tstatic model(model) {\n\t\treturn model ? PivotColumn.assign(model) : new PivotColumnModel();\n\t}\n}","import { ColumnView } from '../scene/view/column.view';\r\nimport { DataColumnModel } from './data.column.model';\r\nimport { TemplatePath } from '../template/template.path';\r\nimport { Model } from '../infrastructure/model';\r\n\r\nTemplatePath.register('reference-cell', (template, column) => {\r\n\treturn {\r\n\t\tmodel: template.for,\r\n\t\tresource: column.key\r\n\t};\r\n});\r\n\r\nTemplatePath.register('reference-cell-edit', (template, column) => {\r\n\treturn {\r\n\t\tmodel: 'edit',\r\n\t\tresource: column.key\r\n\t};\r\n});\r\n\r\nexport class ReferenceColumnModel extends DataColumnModel {\r\n\tconstructor() {\r\n\t\tsuper('reference');\r\n\r\n\t\tthis.editorOptions.trigger = 'custom';\t\t\r\n\t}\r\n}\r\n\r\nexport class ReferenceColumn extends ColumnView {\r\n\tconstructor(model) {\r\n\t\tsuper(model);\r\n\t}\r\n\r\n\tstatic model(model) {\r\n\t\treturn model ? ReferenceColumn.assign(model) : new ReferenceColumnModel();\r\n\t}\r\n}","import { ColumnView } from '../scene/view/column.view';\nimport { ColumnModel } from './column.model';\nimport { TemplatePath } from '../template/template.path';\n\nTemplatePath.register('row-details-cell', (template, column) => {\n\treturn {\n\t\tmodel: template.for,\n\t\tresource: column.key\n\t};\n});\n\nexport class RowDetailsColumnModel extends ColumnModel {\n\tconstructor() {\n\t\tsuper('row-details');\n\n\t\tthis.key = '$row.details';\n\t\tthis.class = 'control';\n\n\t\tthis.canEdit = false;\n\t\tthis.canResize = false;\n\t\tthis.canHighlight = false;\n\t\tthis.canFilter = false;\n\t\tthis.canSort = false;\n\t\tthis.canMove = false;\n\t}\n}\n\nexport class RowDetailsColumn extends ColumnView {\n\tconstructor(model) {\n\t\tsuper(model);\n\t}\n\n\tstatic model(model) {\n\t\treturn model ? RowDetailsColumn.assign(model) : new RowDetailsColumnModel();\n\t}\n}","import { ColumnView } from '../scene/view/column.view';\nimport { ColumnModel } from './column.model';\nimport { TemplatePath } from '../template/template.path';\n\nTemplatePath.register('row-expand-cell', (template, column) => {\n\treturn {\n\t\tmodel: template.for,\n\t\tresource: column.key\n\t};\n});\n\nexport class RowExpandColumnModel extends ColumnModel {\n\tconstructor() {\n\t\tsuper('row-expand');\n\n\t\tthis.key = '$row.expand';\n\t\tthis.class = 'control';\n\n\t\tthis.canEdit = false;\n\t\tthis.canResize = false;\n\t\tthis.canFilter = false;\n\t\tthis.canSort = false;\n\t\tthis.canHighlight = false;\n\t\tthis.canMove = false;\n\t}\n}\n\nexport class RowExpandColumn extends ColumnView {\n\tconstructor(model) {\n\t\tsuper(model);\n\t}\n\n\tstatic model(model) {\n\t\treturn model ? RowExpandColumn.assign(model) : new RowExpandColumnModel();\n\t}\n}","import { ColumnView } from '../scene/view/column.view';\nimport { ColumnModel } from './column.model';\nimport { TemplatePath } from '../template/template.path';\n\nTemplatePath.register('row-indicator-cell', (template, column) => {\n\treturn {\n\t\tmodel: template.for,\n\t\tresource: column.key\n\t};\n});\n\nexport class RowIndicatorColumnModel extends ColumnModel {\n\tconstructor() {\n\t\tsuper('row-indicator');\n\n\t\tthis.key = '$row.indicator';\n\t\tthis.class = 'control';\n\n\t\tthis.canEdit = false;\n\t\tthis.canSort = false;\n\t\tthis.canResize = false;\n\t\tthis.canMove = false;\n\t\tthis.canFocus = false;\n\t\tthis.canHighlight = false;\n\t\tthis.canFilter = false;\n\t\tthis.pin = 'left';\n\t}\n}\n\nexport class RowIndicatorColumn extends ColumnView {\n\tconstructor(model) {\n\t\tsuper(model);\n\t}\n\n\tstatic model(model) {\n\t\treturn model ? RowIndicatorColumn.assign(model) : new RowIndicatorColumnModel();\n\t}\n}","import { ColumnView } from '../scene/view/column.view';\nimport { ColumnModel } from './column.model';\nimport { TemplatePath } from '../template/template.path';\n\nTemplatePath.register('row-number-cell', (template, column) => {\n\treturn {\n\t\tmodel: template.for,\n\t\tresource: column.key\n\t};\n});\n\nexport class RowNumberColumnModel extends ColumnModel {\n\tconstructor() {\n\t\tsuper('row-number');\n\n\t\tthis.pin = 'left';\n\t\tthis.key = '$row.number';\n\t\tthis.title = 'No.';\n\t\tthis.canEdit = false;\n\t\tthis.canResize = true;\n\t\tthis.canFocus = false;\n\t\tthis.canMove = false;\n\t\tthis.canHighlight = false;\n\t\tthis.canSort = false;\n\t\tthis.canFilter = false;\n\t\tthis.class = 'control';\n\t}\n}\n\nexport class RowNumberColumn extends ColumnView {\n\tconstructor(model) {\n\t\tsuper(model);\n\t}\n\n\tstatic model(model) {\n\t\treturn model ? RowNumberColumn.assign(model) : new RowNumberColumnModel();\n\t}\n}","import { ColumnView } from '../scene/view/column.view';\nimport { DataColumnModel } from './data.column.model';\nimport { TemplatePath } from '../template/template.path';\n\nTemplatePath.register('row-options-cell', (template, column) => {\n\treturn {\n\t\tmodel: template.for,\n\t\tresource: column.key\n\t};\n});\n\nTemplatePath.register('row-options-cell-edit', (template, column) => {\n\treturn {\n\t\tmodel: 'edit',\n\t\tresource: column.key\n\t};\n});\n\nexport class RowOptionsColumnModel extends DataColumnModel {\n\tconstructor() {\n\t\tsuper('row-options');\n\n\t\tthis.key = '$row.options';\n\t\tthis.class = 'control';\n\n\t\tthis.canEdit = true;\n\t\tthis.canResize = false;\n\t\tthis.canMove = false;\n\t\tthis.canHighlight = false;\n\t\tthis.canFilter = false;\n\t\tthis.pin = 'right';\n\t}\n}\n\nexport class RowOptionsColumn extends ColumnView {\n\tconstructor(model) {\n\t\tsuper(model);\n\t}\n\n\tstatic model(model) {\n\t\treturn model ? RowOptionsColumn.assign(model) : new RowOptionsColumnModel();\n\t}\n}","import { ColumnView } from '../scene/view/column.view';\r\nimport { ColumnModel } from './column.model';\r\nimport { TemplatePath } from '../template/template.path';\r\nimport { noop } from '../utility/kit';\r\n\r\nTemplatePath.register('select-cell', (template, column) => {\r\n\treturn {\r\n\t\tmodel: template.for,\r\n\t\tresource: column.key\r\n\t};\r\n});\r\n\r\nTemplatePath.register('select-cell-edit', (template, column) => {\r\n\treturn {\r\n\t\tmodel: 'edit',\r\n\t\tresource: column.key\r\n\t};\r\n});\r\n\r\nexport class SelectColumnModel extends ColumnModel {\r\n\tconstructor() {\r\n\t\tsuper('select');\r\n\r\n\t\tthis.key = '$select';\r\n\t\tthis.title = '';\r\n\t\tthis.class = 'control';\r\n\r\n\t\tthis.canEdit = false;\r\n\t\tthis.editorOptions.cruise = 'transparent';\r\n\t\tthis.value = noop;\r\n\r\n\t\tthis.canResize = false;\r\n\t}\r\n}\r\n\r\nexport class SelectColumn extends ColumnView {\r\n\tconstructor(model) {\r\n\t\tsuper(model);\r\n\t}\r\n\r\n\tstatic model(model) {\r\n\t\treturn model ? SelectColumn.assign(model) : new SelectColumnModel();\r\n\t}\r\n}\r\n","import { ColumnView } from '../scene/view/column.view';\r\nimport { DataColumnModel } from './data.column.model';\r\nimport { TemplatePath } from '../template/template.path';\r\n\r\nTemplatePath.register('text-cell', (template, column) => {\r\n\treturn {\r\n\t\tmodel: template.for,\r\n\t\tresource: column.key\r\n\t};\r\n});\r\n\r\nTemplatePath.register('text-cell-edit', (template, column) => {\r\n\treturn {\r\n\t\tmodel: 'edit',\r\n\t\tresource: column.key\r\n\t};\r\n});\r\n\r\nTemplatePath.register('text-area-cell-edit', (template, column) => {\r\n\treturn {\r\n\t\tmodel: 'edit',\r\n\t\tresource: column.key\r\n\t};\r\n});\r\n\r\nexport class TextColumnModel extends DataColumnModel {\r\n\tconstructor() {\r\n\t\tsuper('text');\r\n\r\n\t\tthis.maxLength = 140;\r\n\t}\r\n}\r\n\r\nexport class TextColumn extends ColumnView {\r\n\tconstructor(model) {\r\n\t\tsuper(model);\r\n\t}\r\n\r\n\tstatic model(model) {\r\n\t\treturn model ? TextColumn.assign(model) : new TextColumnModel();\r\n\t}\r\n}","import { ColumnView } from '../scene/view/column.view';\r\nimport { DataColumnModel } from './data.column.model';\r\nimport { TemplatePath } from '../template/template.path';\r\n\r\nTemplatePath.register('time-cell', (template, column) => {\r\n\treturn {\r\n\t\tmodel: template.for,\r\n\t\tresource: column.key\r\n\t};\r\n});\r\n\r\nTemplatePath.register('time-cell-edit', (template, column) => {\r\n\treturn {\r\n\t\tmodel: 'edit',\r\n\t\tresource: column.key\r\n\t};\r\n});\r\n\r\nexport class TimeColumnModel extends DataColumnModel {\r\n\tconstructor() {\r\n\t\tsuper('time');\r\n\r\n\t\tthis.format = 'h:mm a';\r\n\t}\r\n}\r\n\r\nexport class TimeColumn extends ColumnView {\r\n\tconstructor(model) {\r\n\t\tsuper(model);\r\n\t}\r\n\r\n\tstatic model(model) {\r\n\t\treturn model ? TimeColumn.assign(model) : new TimeColumnModel();\r\n\t}\r\n}","import { ColumnView } from '../scene/view/column.view';\r\nimport { DataColumnModel } from './data.column.model';\r\nimport { TemplatePath } from '../template/template.path';\r\n\r\nTemplatePath.register('url-cell', (template, column) => {\r\n\treturn {\r\n\t\tmodel: template.for,\r\n\t\tresource: column.key\r\n\t};\r\n});\r\n\r\nTemplatePath.register('url-cell-edit', (template, column) => {\r\n\treturn {\r\n\t\tmodel: 'edit',\r\n\t\tresource: column.key\r\n\t};\r\n});\r\n\r\nexport class UrlColumnModel extends DataColumnModel {\r\n\tconstructor() {\r\n\t\tsuper('url');\r\n\r\n\t\tthis.editorOptions.trigger = 'custom';\r\n\t}\r\n}\r\n\r\nexport class UrlColumn extends ColumnView {\r\n\tconstructor(model) {\r\n\t\tsuper(model);\r\n\t}\r\n\r\n\tstatic model(model) {\r\n\t\treturn model ? UrlColumn.assign(model) : new UrlColumnModel();\r\n\t}\r\n}","import { Guard } from '../infrastructure/guard';\nimport { assignWith, clone, isUndefined } from '../utility/kit';\nimport { ColumnView as CustomColumn } from '../scene/view/column.view';\nimport { ArrayColumn } from '../column-type/array.column';\nimport { BoolColumn } from '../column-type/bool.column';\nimport { CohortColumn } from '../column-type/cohort.column';\nimport { CurrencyColumn } from '../column-type/currency.column';\nimport { DateColumn } from '../column-type/date.column';\nimport { EmailColumn } from '../column-type/email.column';\nimport { FileColumn } from '../column-type/file.column';\nimport { GroupColumn } from '../column-type/group.column';\nimport { GroupSummaryColumn } from '../column-type/group.summary.column';\nimport { IdColumn } from '../column-type/id.column';\nimport { ImageColumn } from '../column-type/image.column';\nimport { NumberColumn } from '../column-type/number.column';\nimport { PadColumn } from '../column-type/pad.column';\nimport { PasswordColumn } from '../column-type/password.column';\nimport { PivotColumn } from '../column-type/pivot.column';\nimport { ReferenceColumn } from '../column-type/reference.column';\nimport { RowDetailsColumn } from '../column-type/row.details.column';\nimport { RowExpandColumn } from '../column-type/row.expand.column';\nimport { RowIndicatorColumn } from '../column-type/row.indicator.column';\nimport { RowNumberColumn } from '../column-type/row.number.column';\nimport { RowOptionsColumn } from '../column-type/row.options.column';\nimport { SelectColumn } from '../column-type/select.column';\nimport { TextColumn } from '../column-type/text.column';\nimport { TimeColumn } from '../column-type/time.column';\nimport { UrlColumn } from '../column-type/url.column';\n\nfunction merge(target, source) {\n\tif (target && source) {\n\t\treturn assignWith(target, source, (s, t) => isUndefined(s) ? t : s);\n\t}\n\n\treturn target || clone(source);\n}\n\nexport function columnFactory(model) {\n\tconst { columnList } = model;\n\tconst columnMap = {\n\t\t'array': ArrayColumn,\n\t\t'bool': BoolColumn,\n\t\t'cohort': CohortColumn,\n\t\t'currency': CurrencyColumn,\n\t\t'custom': CustomColumn,\n\t\t'date': DateColumn,\n\t\t'email': EmailColumn,\n\t\t'file': FileColumn,\n\t\t'group': GroupColumn,\n\t\t'id': IdColumn,\n\t\t'image': ImageColumn,\n\t\t'number': NumberColumn,\n\t\t'pad': PadColumn,\n\t\t'password': PasswordColumn,\n\t\t'pivot': PivotColumn,\n\t\t'reference': ReferenceColumn,\n\t\t'row-details': RowDetailsColumn,\n\t\t'row-expand': RowExpandColumn,\n\t\t'row-indicator': RowIndicatorColumn,\n\t\t'row-number': RowNumberColumn,\n\t\t'row-options': RowOptionsColumn,\n\t\t'select': SelectColumn,\n\t\t'group-summary': GroupSummaryColumn,\n\t\t'text': TextColumn,\n\t\t'time': TimeColumn,\n\t\t'url': UrlColumn\n\t};\n\n\tconst create = (entityType, columnType, body) => {\n\t\tconst Type = columnMap[entityType];\n\t\tconst { reference } = columnList();\n\t\tconst defaultSettings = reference['$default'];\n\t\tbody = merge(body, defaultSettings);\n\t\tconst typeSettings = reference[columnType];\n\t\tbody = merge(body, typeSettings);\n\n\t\tconst model = Type.model(body);\n\t\treturn new Type(model);\n\t};\n\n\treturn (type, body = null) => {\n\t\tif (!type) {\n\t\t\ttype = 'text';\n\t\t}\n\n\t\tif (columnMap.hasOwnProperty(type)) {\n\t\t\treturn create(type, type, body);\n\t\t}\n\n\t\treturn create('custom', type, body);\n\t};\n}\n","import { binarySearch } from '../utility/kit';\n\nexport function flatten(root) {\n\tconst rowsToUse = rowsToUseFactory();\n\n\tfunction markup(node, rowIndex, columnIndex, rowsLeft, result) {\n\t\tconst view = node.key;\n\t\tconst rowspan = rowsLeft - rowsToUse(node);\n\t\tview.rowspan = rowspan;\n\t\tview.rowIndex = rowIndex;\n\t\tview.columnIndex = columnIndex;\n\n\t\tconst { children } = node;\n\t\tif (children.length) {\n\t\t\tlet width = 0;\n\t\t\tconst childResult = [];\n\t\t\tfor (let child of children) {\n\t\t\t\tconst childView = markup(child, rowIndex + rowspan, columnIndex, rowsLeft - rowspan, childResult);\n\t\t\t\tif (!childView) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst { colspan } = childView;\n\t\t\t\twidth += colspan;\n\t\t\t\tcolumnIndex += colspan;\n\t\t\t}\n\n\t\t\tview.colspan = width;\n\t\t\tif (width > 0) {\n\t\t\t\tresult.push(view);\n\t\t\t\tresult.push(...childResult);\n\t\t\t}\n\t\t} else if (view.model.type !== 'cohort') {\n\t\t\tresult.push(view);\n\t\t}\n\n\t\treturn view;\n\t}\n\n\tconst result = [];\n\tmarkup(root, 0, 0, rowsToUse(root), result);\n\t// remove root \n\tresult.splice(0, 1);\n\treturn layout(result);\n}\n\nfunction layout(columns) {\n\tconst mx = [];\n\n\tcolumns.sort((x, y) => {\n\t\tconst xc = x.rowIndex - y.rowIndex;\n\t\tif (xc === 0) {\n\t\t\treturn x.columnIndex - y.columnIndex;\n\t\t}\n\n\t\treturn xc;\n\t});\n\n\tfor (let column of columns) {\n\t\tif (!mx[column.rowIndex]) {\n\t\t\tmx[column.rowIndex] = [];\n\t\t}\n\t\tmx[column.rowIndex].push(column);\n\t}\n\n\treturn mx;\n}\n\nfunction rowsToUseFactory() {\n\tconst cache = new Map();\n\treturn function rowsToUse(node, depth = 0) {\n\t\tconst { model } = node.key;\n\t\tif (cache.has(model.key)) {\n\t\t\treturn cache.get(model.key);\n\t\t}\n\n\t\tconst { children } = node;\n\t\tlet count = children.length == 0 ? 0 : 1;\n\t\tfor (let child of children) {\n\t\t\tcount = Math.max(count, rowsToUse(child, depth + 1));\n\t\t}\n\n\t\tconst result = 1 + count;\n\t\tcache.set(model.key, result);\n\t\treturn result;\n\t}\n}\n\n\nexport function expand(rows) {\n\tconst mx = [];\n\tconst offsets = [];\n\tfor (let y = 0, height = rows.length; y < height; y++) {\n\t\tconst columns = rows[y];\n\t\tconst offset = offsets.length > y ? offsets[y] : offsets[y] = [0];\n\t\tfor (let x = 0, width = columns.length; x < width; x++) {\n\t\t\tconst column = columns[x];\n\t\t\tconst { rowspan, colspan } = column;\n\t\t\tconst current = offset[0];\n\t\t\tconst next = current + colspan;\n\t\t\tfor (let i = 0; i < rowspan; i++) {\n\t\t\t\tconst yi = y + i;\n\t\t\t\tconst row = mx.length > yi ? mx[yi] : mx[yi] = [];\n\t\t\t\tfor (let j = 0; j < colspan; j++) {\n\t\t\t\t\tconst xj = current + j;\n\t\t\t\t\trow[xj] = column;\n\t\t\t\t}\n\n\t\t\t\tconst gaps = offsets.length > yi ? offsets[yi] : offsets[yi] = [0];\n\t\t\t\tconst index = binarySearch(gaps, current);\n\t\t\t\tif (row[next]) {\n\t\t\t\t\tgaps.splice(index, 1);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst xi = gaps[index];\n\t\t\t\t\tgaps.splice(index, row[xi] ? 1 : 0, next);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn mx;\n}\n\nexport function collapse(matrix) {\n\tconst line = [];\n\tconst height = matrix.length;\n\tif (height) {\n\t\tconst set = new Set();\n\t\tconst lastRow = matrix[height - 1];\n\t\tconst width = lastRow.length;\n\t\tfor (let i = 0; i < width; i++) {\n\t\t\tconst column = lastRow[i];\n\t\t\tif (set.has(column)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tline.push(column);\n\t\t\tset.add(column);\n\t\t}\n\t}\n\n\treturn line;\n}\n","import { isFunction } from '../utility/kit';\r\nimport { AppError } from '../infrastructure/error';\r\nimport { expand, collapse } from './column.matrix';\r\n\r\nexport function flatten(columns, result = []) {\r\n\tfor (let i = 0, length = columns.length; i < length; i++) {\r\n\t\tconst column = columns[i];\r\n\t\tresult.push(column);\r\n\r\n\t\tconst { children } = column;\r\n\t\tif (children && children.length) {\r\n\t\t\tflatten(children, result);\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\nexport function findLine(columns, key) {\r\n\tfor (let index = 0, length = columns.length; index < length; index++) {\r\n\t\tconst column = columns[index];\r\n\t\tif (column.key === key) {\r\n\t\t\treturn { columns, index };\r\n\t\t}\r\n\r\n\t\tconst { children } = column;\r\n\t\tif (children.length) {\r\n\t\t\tconst result = findLine(children, key);\r\n\t\t\tif (result) {\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn null;\r\n}\r\n\r\nexport function map(columns) {\r\n\treturn columns.reduce((memo, column) => {\r\n\t\tmemo[column.key] = column;\r\n\t\treturn memo;\r\n\t}, {});\r\n}\r\n\r\nexport function getValue(column) {\r\n\treturn isFunction(column.value)\r\n\t\t? row => column.value(row)\r\n\t\t: row => row[column.key];\r\n}\r\n\r\nexport function find(columns, key) {\r\n\tconst index = findIndex(columns, key);\r\n\treturn index < 0 ? null : columns[index];\r\n}\r\n\r\nexport function findIndex(columns, key) {\r\n\tlet length = columns.length;\r\n\twhile (length--) {\r\n\t\tconst column = columns[length];\r\n\t\tif (column.key == key) {\r\n\t\t\treturn length;\r\n\t\t}\r\n\t}\r\n\r\n\treturn -1;\r\n}\r\n\r\nexport function lineView(columnRows) {\r\n\tconst height = columnRows.length;\r\n\tif (height === 1) {\r\n\t\treturn Array.from(columnRows[0]);\r\n\t}\r\n\r\n\tif (height > 1) {\r\n\t\tconst view = expand(columnRows);\r\n\t\treturn collapse(view);\r\n\t}\r\n\r\n\treturn [];\r\n}\r\n\r\nexport function widthFactory(table, form) {\r\n\tconst { layout } = table.model;\r\n\tconst columns = table.data.columns();\r\n\tconst columnMap = map(columns);\r\n\tform = form || layout().columns;\r\n\r\n\tconst occupied = columns\r\n\t\t.filter(c => form.has(c.key) || ('' + c.width).indexOf('%') < 0)\r\n\t\t.reduce((memo, c) => {\r\n\t\t\tconst width = getWidth(c);\r\n\t\t\tif (width !== null) {\r\n\t\t\t\tmemo += width;\r\n\t\t\t}\r\n\r\n\t\t\treturn memo;\r\n\t\t}, 0);\r\n\r\n\r\n\tlet area;\r\n\tfunction getRect() {\r\n\t\tif (area) {\r\n\t\t\treturn area;\r\n\t\t}\r\n\r\n\t\tarea = table.view.rect('head');\r\n\t\treturn area;\r\n\t}\r\n\r\n\tfunction getWidth(column) {\r\n\t\tlet size = column;\r\n\t\tif (form.has(column.key)) {\r\n\t\t\tsize = form.get(column.key);\r\n\t\t}\r\n\r\n\t\tlet width = size.width;\r\n\t\tif (width || width === 0) {\r\n\t\t\tif (('' + width).indexOf('%') >= 0) {\r\n\t\t\t\tconst percent = parseFloat(width);\r\n\t\t\t\tconst rect = getRect();\r\n\t\t\t\t// 2 because pad column has left padding equals to 1px and width 100%\r\n\t\t\t\t// that can produce 1.## values\r\n\t\t\t\tconst padSkip = 2;\r\n\t\t\t\tconst skip = column.widthMode === 'relative' ? occupied + padSkip : padSkip;\r\n\t\t\t\twidth = (rect.width - skip) * percent / 100;\r\n\t\t\t}\r\n\r\n\t\t\treturn Math.max(parseInt(width), parseInt(column.minWidth));\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn key => {\r\n\t\tlet column = columnMap[key];\r\n\t\tif (!column) {\r\n\t\t\tthrow new AppError('column.service', `Column ${key} is not found`);\r\n\t\t}\r\n\r\n\t\treturn getWidth(column);\r\n\t};\r\n}","import { yes } from '../utility/kit';\r\n\r\nexport class Command {\r\n\tconstructor(context = {}) {\r\n\t\tthis.execute = yes;\r\n\t\tthis.canExecute = yes;\r\n\t\tthis.shortcut = '';\r\n\t\tthis.priority = 0;\r\n\t\tthis.source = '';\r\n\t\tthis.sink = null;\r\n\r\n\t\tObject.assign(this, context);\r\n\t}\r\n\r\n\tclone(context = {}) {\r\n\t\tconst cmd = new Command(this);\r\n\t\tObject.assign(cmd, context);\r\n\t\treturn cmd;\r\n\t}\r\n}","export class CommandManager {\n\tconstructor(apply = f => f(), context) {\n\t\tthis.apply = apply;\n\t\tthis.context = context;\n\t}\n\n\tinvoke(commands) {\n\t\tif (commands.length) {\n\n\t\t\tthis.apply(() => {\n\t\t\t\tconst context = this.context;\n\t\t\t\tconst priorityCommands = Array.from(commands);\n\t\t\t\tpriorityCommands.sort((x, y) => y.priority - x.priority);\n\n\t\t\t\tfor (const cmd of priorityCommands) {\n\t\t\t\t\tif (context) {\n\t\t\t\t\t\tif (cmd.execute(context) === false) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (cmd.execute() === false) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tfilter(commands) {\n\t\treturn commands.filter(cmd => cmd.sink = cmd.canExecute());\n\t}\n}\n","export class CompositeCommandManager {\r\n\tconstructor(manager) {\r\n\t\tthis.manager = manager;\r\n\t}\r\n\r\n\tfilter(commands) {\r\n\t\treturn this.manager.filter(commands);\r\n\t}\r\n\r\n\tinvoke(commands) {\r\n\t\treturn this.manager.invoke(commands);\r\n\t}\r\n}","import {CommandManager} from './command.manager';\r\n\r\nexport class TableCommandManager extends CommandManager {\r\n\tconstructor(apply, table) {\r\n\t\tsuper(apply);\r\n\r\n\t\tthis.table = table;\r\n\t}\r\n\r\n\tfilter(commands, source) {\r\n\t\tif (source === 'editor' || this.isViewActive()) {\r\n\t\t\treturn super.filter(commands, source);\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t}\r\n\r\n\tisViewActive() {\r\n\t\treturn this.table.view.isFocused();\r\n\t}\r\n}","import { PipeUnit } from '../pipe/pipe.unit';\r\n\r\nexport class DataModel {\r\n\tconstructor() {\r\n\t\tthis.rows = [];\r\n\t\tthis.columns = [];\r\n\t\tthis.pipe = PipeUnit.default;\r\n\r\n\t\tthis.id = {\r\n\t\t\trow: (index, row) => row,\r\n\t\t\tcolumn: (index, column) => column.key\r\n\t\t};\r\n\t}\r\n}","export const GRID_PREFIX = 'q-grid';","import { TrContainer } from './container';\r\n\r\nexport class Bag {\r\n\tconstructor() {\r\n\t\tthis.rows = new Set();\r\n\t\tthis.cells = new Set();\r\n\t\tthis.elements = new Map();\r\n\t\tthis.rowContainer = new Map();\r\n\t}\r\n\r\n\tfindModel(element) {\r\n\t\treturn this.elements.get(element);\r\n\t}\r\n\r\n\thasModel(element) {\r\n\t\treturn this.elements.has(element);\r\n\t}\r\n\r\n\tgetRowElements() {\r\n\t\treturn this.rowContainer.values();\r\n\t}\r\n\r\n\tgetCellElements() {\r\n\t\treturn this.cells;\r\n\t}\r\n\r\n\taddRow(tr) {\r\n\t\tconst { rowContainer } = this;\r\n\t\tconst { model, element } = tr;\r\n\r\n\t\tthis.rows.add(tr);\r\n\t\tthis.elements.set(element, tr);\r\n\r\n\t\tconst container = rowContainer.get(model);\r\n\t\tif (container) {\r\n\t\t\tcontainer.elements.push(tr);\r\n\t\t} else {\r\n\t\t\trowContainer.set(model, new TrContainer([tr]));\r\n\t\t}\r\n\t}\r\n\r\n\taddCell(td) {\r\n\t\tthis.cells.add(td);\r\n\t\tthis.elements.set(td.element, td);\r\n\t}\r\n\r\n\tdeleteRow(tr) {\r\n\t\tconst { rowContainer } = this;\r\n\t\tconst { model, element } = tr;\r\n\r\n\t\tthis.rows.delete(tr);\r\n\t\tthis.elements.delete(element);\r\n\r\n\t\tconst container = rowContainer.get(model);\r\n\t\tif (container) {\r\n\t\t\tconst { elements } = container;\r\n\t\t\tconst index = elements.indexOf(element);\r\n\t\t\tif (index >= 0) {\r\n\t\t\t\telements.splice(index, 1);\r\n\t\t\t\tif (!element.length) {\r\n\t\t\t\t\trowContainer.delete(model);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tdeleteCell(td) {\r\n\t\tthis.cells.delete(td);\r\n\t\tthis.elements.delete(td.element);\r\n\t}\r\n}","import { VirtualBox } from './virtual/box';\r\nimport { Box } from './box';\r\nimport { SelectorMark } from './selector/selector.mark';\r\n\r\nexport class Body extends Box {\r\n\tconstructor(context, model, markup) {\r\n\t\tsuper(context, model, new SelectorMark(model, markup, 'body'));\r\n\t}\r\n}\r\n\r\nexport class VirtualBody extends VirtualBox {\r\n\tconstructor(context, model, markup) {\r\n\t\tsuper(context, model, new SelectorMark(model, markup, 'body'));\r\n\t}\r\n}","import { Row } from './row';\nimport { Column } from './column';\nimport { Cell } from './cell';\nimport { SelectorFactory } from './selector/selector.factory';\n\nexport class Box {\n\tconstructor(context, model, selectorMark) {\n\t\tthis.context = context;\n\t\tthis.model = model;\n\n\t\tthis.selectFactory = new SelectorFactory(context.bag, selectorMark);\n\n\t\tthis.selector = this.selectFactory.create();\n\t\tmodel.sceneChanged.on(e => {\n\t\t\tif (e.hasChanges('status')) {\n\t\t\t\tif (e.state.status === 'stop') {\n\t\t\t\t\tthis.selector = this.selectFactory.create();\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tcolumnCount(rowIndex) {\n\t\treturn this.selector.columnCount(rowIndex);\n\t}\n\n\tcolumn(columnIndex) {\n\t\treturn this.createColumnCore(columnIndex);\n\t}\n\n\tcolumns(rowIndex) {\n\t\treturn this.selector\n\t\t\t.rowCells(rowIndex)\n\t\t\t.map(cell => this.createColumnCore(cell.columnIndex));\n\t}\n\n\trow(rowIndex, columnIndex) {\n\t\treturn this.rowCore(rowIndex, columnIndex);\n\t}\n\n\trows(columnIndex) {\n\t\treturn this.selector.rows(columnIndex).map(row => this.createRowCore(row.index, row.element));\n\t}\n\n\trowCount(columnIndex) {\n\t\treturn this.selector.rowCount(columnIndex);\n\t}\n\n\tcell(rowIndex, columnIndex) {\n\t\treturn this.cellCore(rowIndex, columnIndex);\n\t}\n\n\tgetElements() {\n\t\treturn [];\n\t}\n\n\trowCore(rowIndex, columnIndex) {\n\t\treturn this.createRowCore(rowIndex, this.selector.row(rowIndex, columnIndex).element);\n\t}\n\n\tcellCore(rowIndex, columnIndex) {\n\t\tconst cell = this.selector.cell(rowIndex, columnIndex);\n\t\treturn this.createCellCore(cell.rowIndex, cell.columnIndex, cell.element);\n\t}\n\n\trowCellsCore(rowIndex) {\n\t\treturn this.selector\n\t\t\t.rowCells(rowIndex)\n\t\t\t.map(cell => this.createCellCore(cell.rowIndex, cell.columnIndex, cell.element));\n\t}\n\n\tcolumnCellsCore(columnIndex) {\n\t\treturn this.selector\n\t\t\t.columnCells(columnIndex)\n\t\t\t.map(cell => this.createCellCore(cell.rowIndex, cell.columnIndex, cell.element));\n\t}\n\n\tcreateRowCore(index, element) {\n\t\treturn new Row(this, index, element);\n\t}\n\n\tcreateColumnCore(index) {\n\t\treturn new Column(this, index);\n\t}\n\n\tcreateCellCore(rowIndex, columnIndex, element) {\n\t\treturn new Cell(this.context, rowIndex, columnIndex, element);\n\t}\n}","import { Element } from './element';\r\nimport { Td } from './td';\r\n\r\nexport class Cell extends Element {\r\n\tconstructor(context, rowIndex, columnIndex, element = null) {\r\n\t\tsuper(element);\r\n\r\n\t\tthis.context = context;\r\n\t\tthis.rowIndex = rowIndex;\r\n\t\tthis.columnIndex = columnIndex;\r\n\t}\r\n\r\n\tmodel() {\r\n\t\treturn this.modelCore();\r\n\t}\r\n\r\n\tmodelCore() {\r\n\t\tconst td = this.context.bag.findModel(this.getElement());\r\n\t\treturn td ? new Td(td) : null;\r\n\t}\r\n}","export class Column {\r\n\tconstructor(box, index) {\r\n\t\tthis.box = box;\r\n\t\tthis.index = index;\r\n\t}\r\n\r\n\tmodel() {\r\n\t\tconst { columns } = this.box.model.view();\r\n\t\tconst column = columns[this.index];\r\n\t\treturn column || null;\r\n\t}\r\n\r\n\tcells() {\r\n\t\treturn this.box.columnCellsCore(this.index);\r\n\t}\r\n\r\n\tcell(rowIndex) {\r\n\t\treturn this.box.cell(rowIndex, this.index);\r\n\t}\r\n\r\n\taddClass(name) {\r\n\t\tconst cells = this.cells();\r\n\t\tconst length = cells.length;\r\n\t\tlet i = 0;\r\n\t\twhile (i < length) {\r\n\t\t\tconst cell = cells[i++];\r\n\t\t\tcell.addClass(name);\r\n\t\t}\r\n\t}\r\n\r\n\tremoveClass(name) {\r\n\t\tconst cells = this.cells();\r\n\t\tconst length = cells.length;\r\n\t\tlet i = 0;\r\n\t\twhile (i < length) {\r\n\t\t\tconst cell = cells[i++];\r\n\t\t\tcell.removeClass(name);\r\n\t\t}\r\n\t}\r\n}","import { escapeAttr } from '../services/css';\r\nimport { min, max } from '../utility/kit';\r\nimport { Guard } from '../infrastructure/guard';\r\n\r\nexport class Container {\r\n\tconstructor(elements) {\r\n\t\tthis.elements = elements;\r\n\t}\r\n\r\n\tgetBoundingClientRect() {\r\n\t\tconst rects = this.elements.map(element => element.getBoundingClientRect());\r\n\t\tconst top = min(rects.map(r => r.top));\r\n\t\tconst left = min(rects.map(r => r.left));\r\n\t\tconst bottom = max(rects.map(r => r.bottom));\r\n\t\tconst right = max(rects.map(r => r.right));\r\n\t\treturn {\r\n\t\t\theight: bottom - top,\r\n\t\t\twidth: right - left,\r\n\t\t\ttop: top,\r\n\t\t\tleft: left,\r\n\t\t\tright: right,\r\n\t\t\tbottom: bottom\r\n\t\t};\r\n\t}\r\n\r\n\taddClass(name) {\r\n\t\tthis.elements.forEach(element => element.classList.add(escapeAttr(name)));\r\n\t}\r\n\r\n\tremoveClass(name) {\r\n\t\tthis.elements.forEach(element => element.classList.remove(escapeAttr(name)));\r\n\t}\r\n\r\n\thasClass(name) {\r\n\t\treturn this.elements.some(element => element.classList.contains(escapeAttr(name)));\r\n\t}\r\n\r\n\tget clientWidth() {\r\n\t\treturn max(this.elements.map(element => element.clientWidth));\r\n\t}\r\n\r\n\tget clientHeight() {\r\n\t\treturn max(this.elements.map(element => element.clientHeight));\r\n\t}\r\n\r\n\tget offsetWidth() {\r\n\t\treturn max(this.elements.map(element => element.offsetWidth));\r\n\t}\r\n\r\n\tget offsetHeight() {\r\n\t\treturn max(this.elements.map(element => element.offsetHeight));\r\n\t}\r\n\r\n\tget classList() {\r\n\t\treturn {\r\n\t\t\tadd: name => this.addClass(name),\r\n\t\t\tremove: name => this.removeClass(name),\r\n\t\t\tcontains: name => this.hasClass(name)\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport class TrContainer {\r\n\tconstructor(elements) {\r\n\t\tthis.elements = elements;\r\n\t}\r\n\r\n\tget index() {\r\n\t\tconst tr = this.elements[0];\r\n\t\tGuard.notNull(tr, \"tr\");\r\n\r\n\t\treturn tr.index;\r\n\t}\r\n\r\n\tget model() {\r\n\t\tconst tr = this.elements[0];\r\n\t\tGuard.notNull(tr, \"tr\");\r\n\r\n\t\treturn tr && tr.model;\r\n\t}\r\n\r\n\tget element() {\r\n\t\tconst { elements } = this;\r\n\t\tif (elements.length > 1) {\r\n\t\t\treturn new Container(elements.map(tr => tr.element));\r\n\t\t}\r\n\r\n\t\tconst tr = this.elements[0];\r\n\t\tGuard.notNull(tr, \"tr\");\r\n\r\n\t\treturn tr.element;\r\n\t}\r\n}","import * as columnService from '../column/column.service';\r\n\r\nexport class Data {\r\n\tconstructor(model) {\r\n\t\tthis.model = model;\r\n\t}\r\n\r\n\tcolumns() {\r\n\t\treturn this.model.view().columns;\r\n\t}\r\n\r\n\tcolumnMap() {\r\n\t\treturn columnService.map(this.columns());\r\n\t}\r\n\r\n\trows() {\r\n\t\treturn this.model.view().rows;\r\n\t}\r\n}","import {Unit} from './unit';\r\n\r\nexport class Element extends Unit {\r\n\tconstructor(element) {\r\n\t\tsuper();\r\n\r\n\t\tthis.element = element;\r\n\t}\r\n\r\n\tgetElementCore() {\r\n\t\treturn this.element;\r\n\t}\r\n}","export class FakeClassList {\r\n\tconstructor() {\r\n\t}\r\n\r\n\tadd() {\r\n\t}\r\n\r\n\tremove() {\r\n\t}\r\n}","import {FakeClassList} from './class.list';\r\n\r\nconst emptyRect = Object.freeze({\r\n\tleft: 0,\r\n\tright: 0,\r\n\ttop: 0,\r\n\tbottom: 0,\r\n\twidth: 0,\r\n\theight: 0\r\n});\r\n\r\nexport class FakeElement {\r\n\tconstructor() {\r\n\t\tthis.classList = new FakeClassList();\r\n\t}\r\n\r\n\tgetBoundingClientRect() {\r\n\t\treturn emptyRect;\r\n\t}\r\n\r\n\tget clientWidth() {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tget clientHeight() {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tget offsetWidth() {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tget offsetHeight() {\r\n\t\treturn 0;\r\n\t}\r\n}","export class FakeLayer {\r\n\tconstructor() {\r\n\t}\r\n\r\n\tresource() {\r\n\t}\r\n\r\n\tdestroy() {\r\n\t}\r\n}\r\n\r\n","import { Box } from './box';\r\nimport { SelectorMark } from './selector/selector.mark';\r\n\r\nexport class Foot extends Box {\r\n\tconstructor(context, model, markup) {\r\n\t\tsuper(context, model, new SelectorMark(model, markup, 'foot'));\r\n\t}\r\n}","import { Box } from './box';\r\nimport { SelectorMark } from './selector/selector.mark';\r\n\r\nexport class Head extends Box {\r\n\tconstructor(context, model, markup) {\r\n\t\tsuper(context, model, new SelectorMark(model, markup, 'head'));\r\n\t}\r\n}","import { Element } from './element';\r\nimport { Tr } from './tr';\r\n\r\nexport class Row extends Element {\r\n\tconstructor(box, index, element = null) {\r\n\t\tsuper(element);\r\n\r\n\t\tthis.box = box;\r\n\t\tthis.index = index;\r\n\t}\r\n\r\n\tmodel() {\r\n\t\tconst tr = this.box.context.bag.findModel(this.getKeyElementCore());\r\n\t\tif (tr) {\r\n\t\t\treturn new Tr(tr);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tcells() {\r\n\t\treturn this.box.rowCellsCore(this.index);\r\n\t}\r\n\r\n\tcell(columnIndex) {\r\n\t\treturn this.box.cellCore(this.index, columnIndex);\r\n\t}\r\n\r\n\tgetKeyElementCore() {\r\n\t\tconst element = super.getElement();\r\n\t\tif (element.elements) {\r\n\t\t\treturn element.elements[0];\r\n\t\t}\r\n\r\n\t\treturn element;\r\n\t}\r\n}","import { binarySearch } from '../../utility/kit';\r\nimport { AppError } from '../../infrastructure/error';\r\n\r\nexport class Matrix {\r\n    constructor(isDataRow) {\r\n        this.isDataRow = isDataRow;\r\n    }\r\n\r\n    build(table) {\r\n        const rows = table.rows;\r\n        const isDataRow = this.isDataRow;\r\n\r\n        const mx = [];\r\n        const offsets = [];\r\n\r\n        let y = 0;\r\n        for (let cursor = 0, height = rows.length; cursor < height; cursor++) {\r\n            const tr = rows[cursor];\r\n            if (!isDataRow(tr)) {\r\n                continue;\r\n            }\r\n\r\n            const offset = offsets.length > y ? offsets[y] : offsets[y] = [0];\r\n            const cells = tr.cells;\r\n            for (let x = 0, width = cells.length; x < width; x++) {\r\n                const td = cells[x];\r\n                const { rowSpan, colSpan } = td;\r\n                const current = offset[0];\r\n                const next = current + colSpan;\r\n                for (let i = 0; i < rowSpan; i++) {\r\n                    const yi = y + i;\r\n                    const row = mx.length > yi ? mx[yi] : mx[yi] = [];\r\n                    for (let j = 0; j < colSpan; j++) {\r\n                        const xj = current + j;\r\n                        row[xj] = td;\r\n                    }\r\n\r\n                    const gaps = offsets.length > yi ? offsets[yi] : offsets[yi] = [0];\r\n                    const index = binarySearch(gaps, current);\r\n                    if (row[next]) {\r\n                        gaps.splice(index, 1);\r\n                    }\r\n                    else {\r\n                        const xi = gaps[index];\r\n                        gaps.splice(index, row[xi] ? 1 : 0, next);\r\n                    }\r\n                }\r\n            }\r\n            y++;\r\n        }\r\n\r\n        return mx;\r\n    }\r\n\r\n    assertFlatness(matrix) {\r\n        if (matrix.length) {\r\n            const height = matrix.length;\r\n            const width = matrix[0].length;\r\n            for (let i = 1; i < height; i++) {\r\n                if (matrix[i].length !== width) {\r\n                    throw new AppError(\r\n                        'matrix',\r\n                        `Matrix is not flat, expect width ${width}, actual ${matrix[i].length}`);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import { Matrix } from './matrix';\r\nimport { Selector } from './selector';\r\nimport { SelectorMediator } from './selector.mediate';\r\nimport { UnitFactory } from './unit.factory';\r\nimport { Range } from '../../infrastructure/range';\r\n\r\nexport class SelectorFactory {\r\n\tconstructor(bag, selectorMark) {\r\n\t\tthis.bag = bag;\r\n\t\tthis.selectorMark = selectorMark;\r\n\t}\r\n\r\n\tcreate() {\r\n\t\tconst bag = this.bag;\r\n\t\tconst selectorMark = this.selectorMark;\r\n\t\tconst matrix = new Matrix(tr => bag.elements.has(tr));\r\n\t\tconst entries =\r\n\t\t\tselectorMark\r\n\t\t\t\t.select()\r\n\t\t\t\t.map(({ element, rowRange, columnRange }) => ({\r\n\t\t\t\t\tmatrix: matrix.build(element),\r\n\t\t\t\t\trowRange,\r\n\t\t\t\t\tcolumnRange\r\n\t\t\t\t}));\r\n\r\n\t\tconst selectorFactory = context => {\r\n\t\t\treturn entries.map(entry => ({\r\n\t\t\t\tinvoke: f => {\r\n\t\t\t\t\tconst unitFactory = new UnitFactory(entry.rowRange, entry.columnRange);\r\n\t\t\t\t\tconst selector = new Selector(entry.matrix, bag, unitFactory);\r\n\r\n\t\t\t\t\tconst args = [];\r\n\t\t\t\t\targs.push(selector);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (context.hasOwnProperty('row')) {\r\n\t\t\t\t\t\targs.push(context.row - entry.rowRange.start);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (context.hasOwnProperty('column')) {\r\n\t\t\t\t\t\targs.push(context.column - entry.columnRange.start);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn f(...args);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t};\r\n\r\n\t\tconst unitFactory = new UnitFactory(new Range(0, 0), new Range(0, 0));\r\n\t\treturn new SelectorMediator(selectorFactory, unitFactory);\r\n\t}\r\n}\r\n","import { FakeElement } from '../fake/element';\nimport { Container } from '../container';\nimport { isUndefined } from '../../utility/kit';\n\nexport class Selector {\n\tconstructor(matrix, bag, factory) {\n\t\tthis.matrix = matrix;\n\t\tthis.bag = bag;\n\t\tthis.factory = factory;\n\t}\n\n\tcolumnCount(rowIndex) {\n\t\tconst row = this.matrix[rowIndex];\n\t\treturn row ? new Set(row).size : 0;\n\t}\n\n\tcolumnCells(columnIndex) {\n\t\tconst factory = this.factory;\n\t\tconst matrix = this.matrix;\n\t\tconst result = [];\n\t\tconst set = new Set();\n\t\tfor (let i = 0, length = matrix.length; i < length; i++) {\n\t\t\tconst row = matrix[i];\n\t\t\tif (row.length > columnIndex) {\n\t\t\t\tconst td = row[columnIndex];\n\t\t\t\tif (!set.has(td)) {\n\t\t\t\t\tset.add(td);\n\t\t\t\t\tresult.push(factory.cell(td, i, columnIndex));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\trowCount(columnIndex) {\n\t\tconst matrix = this.matrix;\n\t\tconst set = new Set();\n\t\tfor (let i = 0, length = matrix.length; i < length; i++) {\n\t\t\tconst row = matrix[i];\n\t\t\tif (row.length > columnIndex) {\n\t\t\t\tconst td = row[columnIndex];\n\t\t\t\tset.add(td);\n\t\t\t}\n\t\t}\n\n\t\treturn set.size;\n\t}\n\n\trows(columnIndex) {\n\t\tconst { matrix, factory, bag } = this;\n\t\tconst set = new Set();\n\t\tconst result = [];\n\t\tif (isUndefined(columnIndex)) {\n\t\t\tconst rows = bag.getRowElements();\n\t\t\tfor (let tr of rows) {\n\t\t\t\tresult.push(factory.row(tr.element, tr.index));\n\t\t\t}\n\n\t\t\tresult.sort((x, y) => x.index - y.index);\n\t\t} else {\n\t\t\tfor (let i = 0, length = matrix.length; i < length; i++) {\n\t\t\t\tconst row = matrix[i];\n\t\t\t\tif (row.length > columnIndex) {\n\t\t\t\t\tconst tr = row[columnIndex].parentElement;\n\t\t\t\t\tif (!set.has(tr)) {\n\t\t\t\t\t\tset.add(tr);\n\t\t\t\t\t\tresult.push(factory.row(tr, i));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\trowCells(rowIndex) {\n\t\tconst matrix = this.matrix;\n\t\tconst row = matrix[rowIndex];\n\t\tconst result = [];\n\t\tif (row) {\n\t\t\tconst set = new Set();\n\t\t\tconst factory = this.factory;\n\t\t\tfor (let i = 0, length = row.length; i < length; i++) {\n\t\t\t\tconst td = row[i];\n\t\t\t\tif (!set.has(td)) {\n\t\t\t\t\tset.add(td);\n\t\t\t\t\tresult.push(factory.cell(td, rowIndex, i));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\trow(rowIndex, columnIndex) {\n\t\tconst factory = this.factory;\n\t\tif (!isUndefined(columnIndex)) {\n\t\t\tconst td = this.td(rowIndex, columnIndex);\n\t\t\treturn factory.row(td ? td.parentElement : new FakeElement(), rowIndex);\n\n\t\t}\n\n\t\tconst row = this.matrix[rowIndex];\n\t\tif (row) {\n\t\t\tconst set = new Set();\n\t\t\tfor (let td of row) {\n\t\t\t\tset.add(td.parentElement);\n\t\t\t}\n\n\t\t\tconst trs = Array.from(set);\n\t\t\treturn factory.row(trs.length > 1 ? new Container(trs) : trs[0], rowIndex);\n\t\t}\n\n\t\treturn factory.row(new FakeElement(), rowIndex);\n\t}\n\n\tcell(rowIndex, columnIndex) {\n\t\tconst td = this.td(rowIndex, columnIndex);\n\t\treturn this.factory.cell(td || new FakeElement(), rowIndex, columnIndex);\n\t}\n\n\ttd(rowIndex, columnIndex) {\n\t\tconst row = this.matrix[rowIndex];\n\t\tif (row) {\n\t\t\tconst td = row[columnIndex];\n\t\t\tif (td) {\n\t\t\t\treturn td;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n}\n","import { Range } from '../../infrastructure/range';\r\n\r\nexport class SelectorMark {\r\n\tconstructor(model, markup, name) {\r\n\t\tthis.model = model;\r\n\t\tthis.name = name;\r\n\t\tthis.markup = markup;\r\n\t}\r\n\r\n\tselect() {\r\n\t\tconst result = [];\r\n\t\tconst addNext = this.addFactory(result);\r\n\r\n\t\taddNext('left');\r\n\t\taddNext(null);\r\n\t\taddNext('right');\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\taddFactory(result) {\r\n\t\tconst model = this.model;\r\n\t\tconst { rows } = model.view();\r\n\t\tconst columns = model.scene().column.area;\r\n\r\n\t\treturn pin => {\r\n\t\t\tconst name = pin ? `${this.name}-${pin}` : this.name;\r\n\t\t\tconst element = this.markup[name];\r\n\t\t\tif (element) {\r\n\t\t\t\tconst prev = result[result.length - 1];\r\n\t\t\t\tconst columnStart = prev ? prev.columnRange.end : 0;\r\n\t\t\t\tconst columnCount = columns[pin].length;\r\n\t\t\t\tconst rowStart = 0;\r\n\t\t\t\tconst rowCount = rows.length;\r\n\r\n\t\t\t\tresult.push({\r\n\t\t\t\t\telement,\r\n\t\t\t\t\tcolumnRange: new Range(columnStart, columnStart + columnCount),\r\n\t\t\t\t\trowRange: new Range(rowStart, rowStart + rowCount)\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t};\r\n\t}\r\n}","import { FakeElement } from '../fake/element';\r\nimport { Container } from '../container';\r\nimport { zip, sumBy, max, isUndefined } from '../../utility/kit';\r\n\r\nexport class SelectorMediator {\r\n\tconstructor(selectorFactory, factory) {\r\n\t\tthis.buildSelectors = selectorFactory;\r\n\t\tthis.factory = factory;\r\n\t}\r\n\r\n\tcolumnCount(rowIndex) {\r\n\t\tconst selectors = this.buildSelectors({ row: rowIndex });\r\n\t\tif (!selectors.length) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\treturn sumBy(selectors, s => s.invoke((s, rowIndex) => s.columnCount(rowIndex)));\r\n\t}\r\n\r\n\tcolumnCells(columnIndex) {\r\n\t\tconst selectors = this.buildSelectors({ column: columnIndex });\r\n\t\tconst result = [];\r\n\t\tfor (let i = 0, length = selectors.length; i < length; i++) {\r\n\t\t\tconst selector = selectors[i];\r\n\t\t\tconst cells = selector.invoke((s, columnIndex) => s.columnCells(columnIndex));\r\n\t\t\tresult.push(...cells);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\trowCount(columnIndex) {\r\n\t\tconst selectors = this.buildSelectors({ column: columnIndex });\r\n\t\tif (!selectors.length) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\treturn max(selectors.map(s => s.invoke((s, columnIndex) => s.rowCount(columnIndex))));\r\n\t}\r\n\r\n\trows(columnIndex) {\r\n\t\tconst context = isUndefined(columnIndex) ? {} : { column: columnIndex };\r\n\t\tconst selectors = this.buildSelectors(context);\r\n\t\tconst factory = this.factory;\r\n\t\tconst areas = [];\r\n\t\tfor (let i = 0, length = selectors.length; i < length; i++) {\r\n\t\t\tconst selector = selectors[i];\r\n\t\t\tconst rows = selector.invoke((s, columnIndex) => s.rows(columnIndex));\r\n\t\t\tif (rows.length) {\r\n\t\t\t\tareas.push(rows);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst lines = zip(...areas);\r\n\t\tconst result = [];\r\n\t\tfor (let i = 0, length = lines.length; i < length; i++) {\r\n\t\t\tconst line = lines[i];\r\n\t\t\tconst elements = line.map(row => row.element);\r\n\t\t\tconst rowElement = elements.length > 1 ? new Container(elements) : elements[0];\r\n\t\t\tconst rowIndex = line[0].index;\r\n\t\t\tconst row = factory.row(rowElement, rowIndex);\r\n\t\t\tresult.push(row);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\trowCells(rowIndex) {\r\n\t\tconst selectors = this.buildSelectors({ row: rowIndex });\r\n\t\tconst result = [];\r\n\t\tfor (let i = 0, length = selectors.length; i < length; i++) {\r\n\t\t\tconst selector = selectors[i];\r\n\t\t\tconst cells = selector.invoke((s, rowIndex) => s.rowCells(rowIndex));\r\n\t\t\tresult.push(...cells);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\trow(rowIndex, columnIndex) {\r\n\t\tconst context = { row: rowIndex };\r\n\t\tif (!isUndefined(columnIndex)) {\r\n\t\t\tcontext.column = columnIndex;\r\n\t\t}\r\n\r\n\t\tconst selectors = this.buildSelectors(context);\r\n\t\tconst result = [];\r\n\t\tfor (let i = 0, length = selectors.length; i < length; i++) {\r\n\t\t\tconst selector = selectors[i];\r\n\t\t\tconst row = selector.invoke((s, rowIndex, columnIndex) => s.row(rowIndex, columnIndex));\r\n\t\t\tresult.push(row.element);\r\n\t\t}\r\n\r\n\t\treturn this.factory.row(new Container(result), rowIndex);\r\n\t}\r\n\r\n\tcell(rowIndex, columnIndex) {\r\n\t\tconst context = { row: rowIndex, column: columnIndex };\r\n\t\tconst selectors = this.buildSelectors(context);\r\n\t\tfor (let i = 0, length = selectors.length; i < length; i++) {\r\n\t\t\tconst selector = selectors[i];\r\n\t\t\tconst cell = selector.invoke((s, rowIndex, columnIndex) => s.cell(rowIndex, columnIndex));\r\n\t\t\tif (!(cell.element instanceof FakeElement)) {\r\n\t\t\t\treturn cell;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this.factory.cell(new FakeElement(), rowIndex, columnIndex);\r\n\t}\r\n}","export class UnitFactory {\r\n\tconstructor(rowRange, columnRange) {\r\n\t\tthis.rowRange = rowRange;\r\n\t\tthis.columnRange = columnRange;\r\n\t}\r\n\r\n\tcell(element, rowIndex, columnIndex) {\r\n\t\treturn {\r\n\t\t\telement,\r\n\t\t\trowIndex: rowIndex + this.rowRange.start,\r\n\t\t\tcolumnIndex: columnIndex + this.columnRange.start\r\n\t\t};\r\n\t}\r\n\r\n\trow(element, rowIndex) {\r\n\t\treturn {\r\n\t\t\telement,\r\n\t\t\tindex: rowIndex + this.rowRange.start\r\n\t\t};\r\n\t}\r\n}","import { View } from './view';\r\nimport { Data } from './data';\r\nimport { assignWith, identity } from '../utility/kit';\r\nimport { FakeLayer } from './fake/layer';\r\nimport { Head } from './head';\r\nimport { Body, VirtualBody } from './body';\r\nimport { Foot } from './foot';\r\nimport { Bag } from './bag';\r\n\r\nexport class Table {\r\n\tconstructor(model, markup, context = {}) {\r\n\t\tthis.model = model;\r\n\t\tthis.markup = markup;\r\n\r\n\t\tconst { scroll } = model;\r\n\t\tthis.context = assignWith({\r\n\t\t\tmapper: {\r\n\t\t\t\trowToView: index => scroll().map.rowToView(index),\r\n\t\t\t\tviewToRow: index => scroll().map.viewToRow(index),\r\n\t\t\t\tcolumnToView: identity,\r\n\t\t\t\tviewToColumn: identity\r\n\t\t\t},\r\n\t\t\tlayer: () => new FakeLayer(),\r\n\t\t\tbag: {\r\n\t\t\t\thead: new Bag(),\r\n\t\t\t\tbody: new Bag(),\r\n\t\t\t\tfoot: new Bag()\r\n\t\t\t}\r\n\t\t}, context);\r\n\r\n\t\tthis.head = this.headCore();\r\n\t\tthis.body = this.bodyCore();\r\n\t\tthis.foot = this.footCore();\r\n\t}\r\n\r\n\tget view() {\r\n\t\tif (this._view) {\r\n\t\t\treturn this._view;\r\n\t\t}\r\n\r\n\t\treturn this._view = new View(this.context, this.model, this.markup);\r\n\t}\r\n\r\n\tget data() {\r\n\t\tif (this._data) {\r\n\t\t\treturn this._data;\r\n\t\t}\r\n\r\n\t\treturn this._data = new Data(this.model);\r\n\t}\r\n\r\n\theadCore() {\r\n\t\tconst context = this.box('head');\r\n\t\treturn new Head(context, this.model, this.markup);\r\n\t}\r\n\r\n\tbodyCore() {\r\n\t\tconst context = this.box('body');\r\n\t\tif (this.model.scroll().mode === 'virtual') {\r\n\t\t\treturn new VirtualBody(context, this.model, this.markup);\r\n\t\t}\r\n\r\n\t\treturn new Body(context, this.model, this.markup);\r\n\t}\r\n\r\n\tfootCore() {\r\n\t\tconst context = this.box('foot');\r\n\t\treturn new Foot(context, this.model, this.markup);\r\n\t}\r\n\r\n\tbox(source) {\r\n\t\tconst { view, data } = this;\r\n\t\tconst { mapper, layer, bag } = this.context;\r\n\r\n\t\tswitch (source) {\r\n\t\t\tcase 'body': {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tmapper,\r\n\t\t\t\t\tlayer,\r\n\t\t\t\t\tbag: bag[source],\r\n\t\t\t\t\tview,\r\n\t\t\t\t\tdata\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tdefault: {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tmapper: {\r\n\t\t\t\t\t\trowToView: identity,\r\n\t\t\t\t\t\tviewToRow: identity,\r\n\t\t\t\t\t\tcolumnToView: identity,\r\n\t\t\t\t\t\tviewToColumn: identity\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlayer,\r\n\t\t\t\t\tbag: bag[source],\r\n\t\t\t\t\tview,\r\n\t\t\t\t\tdata\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","import { AppError } from '../infrastructure/error';\r\n\r\nexport class Td {\r\n\tconstructor(td) {\r\n\t\tthis.td = td;\r\n\r\n\t\t// We need to cache it due to possible virtual mode;\r\n\t\tthis.rowIndex = td.rowIndex;\r\n\t\tthis.columnIndex = td.columnIndex;\r\n\t}\r\n\r\n\tget row() {\r\n\t\tif (!Td.equals(this, this.td)) {\r\n\t\t\tthrow new AppError('td', 'Internal model doesn\\'t match container');\r\n\t\t}\r\n\r\n\t\treturn this.td.row;\r\n\t}\r\n\r\n\tget column() {\r\n\t\tif (!Td.equals(this, this.td)) {\r\n\t\t\tthrow new AppError('td', 'Internal model doesn\\'t match container');\r\n\t\t}\r\n\r\n\t\treturn this.td.column;\r\n\t}\r\n\r\n\tget value() {\r\n\t\tif (!Td.equals(this, this.td)) {\r\n\t\t\tthrow new AppError('td', 'Internal model doesn\\'t match container');\r\n\t\t}\r\n\r\n\t\treturn this.td.value;\r\n\t}\r\n\r\n\tset value(value) {\r\n\t\tif (!Td.equals(this, this.td)) {\r\n\t\t\tthrow new AppError('td', 'Internal model doesn\\'t match container');\r\n\t\t}\r\n\r\n\t\tthis.td.value = value;\r\n\t}\r\n\r\n\tget label() {\r\n\t\tif (!Td.equals(this, this.td)) {\r\n\t\t\tthrow new AppError('td', 'Internal model doesn\\'t match container');\r\n\t\t}\r\n\r\n\t\treturn this.td.label;\r\n\t}\r\n\r\n\tget element() {\r\n\t\tif (!Td.equals(this, this.td)) {\r\n\t\t\tthrow new AppError('td', 'Internal model doesn\\'t match container');\r\n\t\t}\r\n\r\n\t\treturn this.td.element;\r\n\t}\r\n\r\n\tset label(label) {\r\n\t\tif (!Td.equals(this, this.td)) {\r\n\t\t\tthrow new AppError('td', 'Internal model doesn\\'t match container');\r\n\t\t}\r\n\r\n\t\tthis.td.label = label;\r\n\t}\r\n\r\n\tmode(value) {\r\n\t\tif (!Td.equals(this, this.td)) {\r\n\t\t\tthrow new AppError('td', 'Internal model doesn\\'t match container');\r\n\t\t}\r\n\r\n\t\tthis.td.mode(value);\r\n\t}\r\n\r\n\tstatic equals(x, y) {\r\n\t\tif (x === y) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tif (!x || !y) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn x.rowIndex === y.rowIndex && x.columnIndex === y.columnIndex;\r\n\t}\r\n}","import { AppError } from '../infrastructure/error';\r\n\r\nexport class Tr {\r\n\tconstructor(tr) {\r\n\t\tthis.tr = tr;\r\n\r\n\t\t// We need to cache it due to possible virtual mode;\r\n\t\tthis.index = tr.index;\r\n\t}\r\n\r\n\tget model() {\r\n\t\tif (!Tr.equals(this, this.tr)) {\r\n\t\t\tthrow new AppError('tr', 'Internal model doesn\\'t match container');\r\n\t\t}\r\n\r\n\t\treturn this.tr.model;\r\n\t}\r\n\r\n\tget element() {\r\n\t\tif (!Tr.equals(this, this.tr)) {\r\n\t\t\tthrow new AppError('tr', 'Internal model doesn\\'t match container');\r\n\t\t}\r\n\r\n\t\treturn this.tr.element;\r\n\t}\r\n\r\n\tstatic equals(x, y) {\r\n\t\tif (x === y) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tif (!x || !y) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn x.index === y.index;\r\n\t}\r\n}","import { FakeElement } from './fake/element';\r\nimport { escapeAttr } from '../services/css';\r\n\r\nconst fakeElement = new FakeElement();\r\nexport class Unit {\r\n\tconstructor() {\r\n\t}\r\n\r\n\trect() {\r\n\t\treturn this.getElement().getBoundingClientRect();\r\n\t}\r\n\r\n\taddClass(name) {\r\n\t\tthis.addClassCore(name);\r\n\t}\r\n\r\n\tremoveClass(name) {\r\n\t\tthis.removeClassCore(name);\r\n\t}\r\n\r\n\thasClass(name) {\r\n\t\treturn this.hasClassCore(name);\r\n\t}\r\n\r\n\twidth() {\r\n\t\treturn this.getElement().clientWidth;\r\n\t}\r\n\r\n\theight() {\r\n\t\treturn this.getElement().clientHeight;\r\n\t}\r\n\r\n\tgetElement() {\r\n\t\treturn this.getElementCore() || fakeElement;\r\n\t}\r\n\r\n\taddClassCore(name) {\r\n\t\tthis.getElement().classList.add(escapeAttr(name));\r\n\t}\r\n\r\n\tremoveClassCore(name) {\r\n\t\tthis.getElement().classList.remove(escapeAttr(name));\r\n\t}\r\n\r\n\thasClassCore(name) {\r\n\t\treturn this.getElement().classList.contains(escapeAttr(name));\r\n\t}\r\n\r\n\tgetElementCore() {\r\n\t\treturn null;\r\n\t}\r\n}","import { Unit } from './unit';\nimport { FakeElement } from './fake/element';\nimport { escapeAttr } from '../services/css';\n\nfunction isParentOf(parent, element) {\n\twhile (element) {\n\t\tif (element === parent) {\n\t\t\treturn true;\n\t\t}\n\n\t\telement = element.parentNode;\n\t}\n\n\treturn false;\n}\n\nexport class View extends Unit {\n\tconstructor(context, model, markup) {\n\t\tsuper();\n\n\t\tthis.context = context;\n\t\tthis.model = model;\n\t\tthis.markup = markup;\n\t\tthis.layers = new Map();\n\t}\n\n\tcolumns() {\n\t\tconst { column } = this.model.scene();\n\t\treturn column.line;\n\t}\n\n\tfocus() {\n\t\tconst elements = this.getElementsCore('body');\n\t\tif (elements.length) {\n\t\t\telements[0].focus();\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tblur() {\n\t\tthis.getElementsCore('body')\n\t\t\t.forEach(element => element.blur());\n\t}\n\n\tisFocused() {\n\t\treturn this.getElementsCore('view')\n\t\t\t.some(element => this.isFocusedCore(element));\n\t}\n\n\taddLayer(name) {\n\t\tconst layers = this.layers;\n\t\tif (layers.has(name)) {\n\t\t\treturn layers.get(name);\n\t\t}\n\n\t\tconst layer = this.context.layer(name);\n\t\tlayers.set(name, layer);\n\t\treturn layer;\n\t}\n\n\tremoveLayer(name) {\n\t\tconst layers = this.layers;\n\t\tif (layers.has(name)) {\n\t\t\tconst layer = layers.get(name);\n\t\t\tlayer.destroy();\n\t\t\tlayers.delete(name);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\thasLayer(name) {\n\t\treturn this.layers.has(name);\n\t}\n\n\taddClass(name) {\n\t\tif (this.markup.view) {\n\t\t\tthis.markup.view.classList.add(escapeAttr(name));\n\t\t}\n\t}\n\n\tremoveClass(name) {\n\t\tif (this.markup.view) {\n\t\t\tthis.markup.view.classList.remove(escapeAttr(name));\n\t\t}\n\t}\n\n\tscrollLeft(value) {\n\t\tconst markup = this.markup;\n\t\tif (arguments.length) {\n\t\t\tif (markup.head) {\n\t\t\t\tmarkup.head.scrollLeft = value;\n\t\t\t}\n\n\t\t\tif (markup.foot) {\n\t\t\t\tmarkup.foot.scrollLeft = value;\n\t\t\t}\n\n\t\t\tif (markup.body) {\n\t\t\t\tmarkup.body.scrollLeft = value;\n\t\t\t}\n\n\t\t\tif (markup['body-top']) {\n\t\t\t\tmarkup['body-top'].scrollLeft = value;\n\t\t\t}\n\n\t\t\tif (markup['body-bottom']) {\n\t\t\t\tmarkup['body-bottom'].scrollLeft = value;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\treturn this.getElement().scrollLeft;\n\t}\n\n\tscrollTop(value) {\n\t\tif (arguments.length) {\n\t\t\tthis.getElementsCore('body')\n\t\t\t\t.forEach(element => element.scrollTop = value);\n\n\t\t\treturn;\n\t\t}\n\n\t\treturn this.getElement().scrollTop;\n\t}\n\n\tscrollHeight() {\n\t\treturn this.getElement().scrollHeight;\n\t}\n\n\tscrollWidth() {\n\t\treturn this.getElement().scrollWidth;\n\t}\n\n\tcanScrollTo(target, direction) {\n\t\tif (target && !(target.element instanceof FakeElement)) {\n\t\t\tswitch (direction) {\n\t\t\t\tcase 'left': {\n\t\t\t\t\ttarget = target.element;\n\t\t\t\t\tif (target) {\n\t\t\t\t\t\tconst markup = this.markup;\n\t\t\t\t\t\tif (markup.table) {\n\t\t\t\t\t\t\treturn isParentOf(markup.table, target);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'top':\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\trect(area = 'body') {\n\t\tconst markup = this.markup;\n\t\tconst element = markup[area];\n\t\tif (element) {\n\t\t\t// TODO: get rid of that\n\t\t\tconst rect = element.getBoundingClientRect();\n\n\t\t\t// Get rect without scrolls\n\t\t\tconst width = element.clientWidth;\n\t\t\tconst height = element.clientHeight;\n\t\t\tconst left = rect.left;\n\t\t\tconst top = rect.top;\n\t\t\tconst right = left + width;\n\t\t\tconst bottom = top + height;\n\t\t\treturn { left, top, right, bottom, width, height };\n\t\t}\n\n\t\treturn super.rect();\n\t}\n\n\theight(area = 'body') {\n\t\tconst markup = this.markup;\n\t\tconst element = markup[area];\n\t\tif (element) {\n\t\t\treturn element.clientHeight;\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\twidth(area = 'body') {\n\t\tconst markup = this.markup;\n\t\tconst element = markup[area];\n\t\tif (element) {\n\t\t\treturn element.clientWidth;\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\tgetElementCore() {\n\t\treturn this.markup.body;\n\t}\n\n\tisFocusedCore(target) {\n\t\tconst markup = this.markup;\n\t\tconst current = markup.document.activeElement;\n\t\treturn isParentOf(target, current);\n\t}\n\n\tgetElementsCore(key) {\n\t\tconst markup = this.markup;\n\t\treturn [`${key}-left`, key, `${key}-right`]\n\t\t\t.filter(key => markup.hasOwnProperty(key))\n\t\t\t.map(key => markup[key]);\n\t}\n}\n","import { Box } from '../box';\nimport { CellBox } from './cell.box';\nimport { ColumnBox } from './column.box';\nimport { Event } from '../../infrastructure/event';\nimport { isFunction } from '../../utility/kit';\nimport { RowBox } from './row.box';\nimport { VirtualCell } from './cell';\nimport { VirtualColumn } from './column';\nimport { VirtualElement } from './element';\nimport { VirtualRow } from './row';\n\nexport class VirtualBox extends Box {\n\tconstructor(context, model, selectorMark) {\n\t\tsuper(context, model, selectorMark);\n\n\t\tthis.cellBox = new CellBox(context);\n\t\tthis.rowBox = new RowBox(context);\n\t\tthis.columnBox = new ColumnBox(context);\n\t\tthis.requestInvalidate = new Event();\n\t}\n\n\taddCellClass(cell, name, force = false) {\n\t\tif (force) {\n\t\t\tcell.addClassCore(name);\n\t\t}\n\t\telse {\n\t\t\tthis.cellBox.addClass(cell, name);\n\t\t\tthis.requestInvalidate.emit({ source: 'addCellClass' });\n\t\t}\n\t}\n\n\tremoveCellClass(cell, name, force = false) {\n\t\tif (force) {\n\t\t\tcell.removeClassCore(name);\n\t\t}\n\t\telse {\n\t\t\tthis.cellBox.removeClass(cell, name);\n\t\t\tthis.requestInvalidate.emit({ source: 'removeCellClass' });\n\t\t}\n\t}\n\n\taddRowClass(row, name, force = false) {\n\t\tif (force) {\n\t\t\trow.addClassCore(name);\n\t\t}\n\t\telse {\n\t\t\tthis.rowBox.addClass(row, name);\n\t\t\tthis.requestInvalidate.emit({ source: 'addRowClass' });\n\t\t}\n\t}\n\n\tremoveRowClass(row, name, force = false) {\n\t\tif (force) {\n\t\t\trow.removeClassCore(name);\n\t\t}\n\t\telse {\n\t\t\tthis.rowBox.removeClass(row, name);\n\t\t\tthis.requestInvalidate.emit({ source: 'removeRowClass' });\n\t\t}\n\t}\n\n\taddColumnClass(column, name, force = false) {\n\t\tif (force) {\n\t\t\tcolumn.addClassCore(name);\n\t\t}\n\t\telse {\n\t\t\tthis.columnBox.addClass(column, name);\n\t\t\tthis.requestInvalidate.emit({ source: 'addColumnClass' });\n\t\t}\n\t}\n\n\tremoveColumnClass(column, name, force = false) {\n\t\tif (force) {\n\t\t\tcolumn.removeClassCore(name);\n\t\t}\n\t\telse {\n\t\t\tthis.columnBox.removeClass(column, name);\n\t\t\tthis.requestInvalidate.emit({ source: 'removeColumnClass' });\n\t\t}\n\t}\n\n\tcolumns() {\n\t\tconst columns = this.context.view.columns();\n\t\treturn columns.map((_, i) => this.createColumnCore(i));\n\t}\n\n\trows(columnIndex) {\n\t\tconst { mapper } = this.context;\n\t\treturn this.selector\n\t\t\t.rows(columnIndex)\n\t\t\t.map(row => this.createRowCore(mapper.rowToView(row.index), row.element));\n\t}\n\n\trowCount() {\n\t\treturn this.model.pagination().count;\n\t}\n\n\trowCore(index) {\n\t\tconst viewIndex = this.context.mapper.rowToView(index);\n\t\tif (viewIndex >= 0 && viewIndex < super.rowCount(0)) {\n\t\t\treturn super.rowCore(viewIndex);\n\t\t}\n\n\t\tconst createRect = this.rowRectFactory();\n\t\treturn this.createRowCore(viewIndex, new VirtualElement(createRect(viewIndex)));\n\t}\n\n\tcellCore(rowIndex, columnIndex) {\n\t\tconst { mapper } = this.context;\n\t\tconst viewRowIndex = mapper.rowToView(rowIndex);\n\t\tconst viewColumnIndex = mapper.columnToView(columnIndex);\n\t\tif (viewRowIndex >= 0 && viewRowIndex < super.rowCount(viewColumnIndex)) {\n\t\t\treturn super.cellCore(viewRowIndex, viewColumnIndex);\n\t\t}\n\n\t\tconst createRect = this.cellRectFactory();\n\t\treturn this.createCellCore(viewRowIndex, viewColumnIndex, new VirtualElement(createRect(viewRowIndex, viewColumnIndex)));\n\t}\n\n\trowCellsCore(index) {\n\t\tconst { mapper } = this.context;\n\t\tconst viewIndex = mapper.rowToView(index);\n\t\tif (viewIndex >= 0 && viewIndex < super.rowCount(0)) {\n\t\t\treturn super.rowCellsCore(viewIndex);\n\t\t}\n\n\t\tconst createRect = this.cellRectFactory();\n\t\treturn super\n\t\t\t.rowCellsCore(0)\n\t\t\t.map((cell, columnIndex) =>\n\t\t\t\tthis.createCellCore(\n\t\t\t\t\tviewIndex,\n\t\t\t\t\tcolumnIndex,\n\t\t\t\t\tnew VirtualElement(createRect(viewIndex, mapper.columnToView(columnIndex)))\n\t\t\t\t)\n\t\t\t);\n\t}\n\n\tcreateRowCore(index, element) {\n\t\treturn new VirtualRow(this, index, element);\n\t}\n\n\tcreateCellCore(rowIndex, columnIndex, element) {\n\t\treturn new VirtualCell(this, rowIndex, columnIndex, element);\n\t}\n\n\tcreateColumnCore(index) {\n\t\treturn new VirtualColumn(this, index);\n\t}\n\n\trowRectFactory() {\n\t\tconst { height } = this.model.row();\n\t\tconst getHeight = isFunction(height) ? height : () => height;\n\n\t\tlet rect = null;\n\t\t// as view.rect() can call getBoundingClientRect that impacts performance\n\t\t// and as virtual element rect function is used mostly for end/home navigation we make rect lazy\n\t\treturn index => () => {\n\t\t\tif (!rect) {\n\t\t\t\trect = this.context.view.rect();\n\t\t\t}\n\n\t\t\t// TODO: add correct left, right, width\n\t\t\tconst rowHeight = getHeight(null, index);\n\t\t\treturn {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: rect.top + rowHeight * index,\n\t\t\t\tbottom: rect.top + rowHeight * (index + 1),\n\t\t\t\twidth: 0,\n\t\t\t\theight: rowHeight\n\t\t\t};\n\t\t};\n\t}\n\n\tcellRectFactory() {\n\t\tconst { height } = this.model.row();\n\t\tconst getHeight = isFunction(height) ? height : () => height;\n\t\tconst { count } = this.model.pagination();\n\t\tconst form = this.model.layout().columns;\n\t\tconst { columns } = this.model.view();\n\n\t\tlet rect = null;\n\t\t// as view.rect() can call getBoundingClientRect that impacts performance\n\t\t// and as virtual element rect function is used mostly for end/home navigation we make rect lazy\n\t\treturn (rowIndex, columnIndex) => () => {\n\t\t\tif (!rect) {\n\t\t\t\trect = this.context.view.rect();\n\t\t\t}\n\n\t\t\tconst column = columns[columnIndex];\n\t\t\t// TODO: add correct left, right, width\n\t\t\tconst height = getHeight(null, rowIndex);\n\t\t\tconst top = rect.top + height * rowIndex - (rowIndex > 0 ? 0 : (count + rowIndex) * height);\n\t\t\tconst width = form.has(column.key) ? form.get(column.key).width : 0;\n\t\t\tconst left = 0;\n\t\t\treturn {\n\t\t\t\tleft,\n\t\t\t\tright: left + width,\n\t\t\t\ttop,\n\t\t\t\tbottom: top + height,\n\t\t\t\twidth,\n\t\t\t\theight\n\t\t\t};\n\t\t};\n\t}\n}","import { StyleBox } from './style.box';\r\n\r\nexport class CellBox extends StyleBox {\r\n\tconstructor(context) {\r\n\t\tsuper(context);\r\n\t}\r\n\r\n\tkey(cell) {\r\n\t\treturn `${cell.dataRowIndex}x${cell.dataColumnIndex}`;\r\n\t}\r\n}","import { Cell } from '../cell';\r\nimport { Td } from '../td';\r\nimport { AppError } from '../../infrastructure/error';\r\nimport { FakeElement } from '../fake/element';\r\n\r\nclass VirtualTd {\r\n\tconstructor(selector) {\r\n\t\tthis.selector = selector;\r\n\t}\r\n\r\n\tget model() {\r\n\t\tconst td = this.selector();\r\n\t\tif (!td) {\r\n\t\t\tthrow new AppError('cell', 'Model is not found');\r\n\t\t}\r\n\r\n\t\treturn td;\r\n\t}\r\n\r\n\tmode(value) {\r\n\t\treturn this.model.mode(value);\r\n\t}\r\n\r\n\tget value() {\r\n\t\treturn this.model.value;\r\n\t}\r\n\r\n\tset value(value) {\r\n\t\tthis.model.value = value;\r\n\t}\r\n\r\n\tget label() {\r\n\t\treturn this.model.label;\r\n\t}\r\n\r\n\tset label(value) {\r\n\t\tthis.model.label = value;\r\n\t}\r\n\r\n\tget element() {\r\n\t\treturn this.model.element || new FakeElement();\r\n\t}\r\n}\r\n\r\nexport class VirtualCell extends Cell {\r\n\tconstructor(box, rowIndex, columnIndex, element = null) {\r\n\t\tsuper(box.context, rowIndex, columnIndex, element);\r\n\r\n\t\tthis.box = box;\r\n\r\n\t\tconst { mapper } = box.context;\r\n\t\tthis.dataRowIndex = mapper.viewToRow(rowIndex);\r\n\t\tthis.dataColumnIndex = mapper.viewToColumn(columnIndex);\r\n\t}\r\n\r\n\tmodel() {\r\n\t\tconst rowIndex = this.dataRowIndex;\r\n\t\tconst columnIndex = this.dataColumnIndex;\r\n\r\n\t\tif (rowIndex >= 0 && columnIndex >= 0) {\r\n\t\t\tconst gridModel = this.box.model;\r\n\t\t\tconst { rows } = gridModel.data();\r\n\t\t\tconst { columns } = gridModel.view();\r\n\r\n\t\t\tif (rows.length > rowIndex && columns.length > columnIndex) {\r\n\t\t\t\tconst selector = () => this.box.cell(rowIndex, columnIndex).modelCore();\r\n\t\t\t\tconst vtd = new VirtualTd(selector);\r\n\t\t\t\tvtd.rowIndex = rowIndex;\r\n\t\t\t\tvtd.columnIndex = columnIndex;\r\n\t\t\t\tvtd.row = rows[rowIndex];\r\n\t\t\t\tvtd.column = columns[columnIndex];\r\n\r\n\t\t\t\treturn new Td(vtd);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\taddClass(name, force = false) {\r\n\t\tthis.box.addCellClass(this, name, force);\r\n\t}\r\n\r\n\tremoveClass(name, force = false) {\r\n\t\tthis.box.removeCellClass(this, name, force);\r\n\t}\r\n}","import { StyleBox } from './style.box';\r\n\r\nexport class ColumnBox extends StyleBox {\r\n\tconstructor(context) {\r\n\t\tsuper(context);\r\n\t}\r\n\r\n\tkey(column) {\r\n\t\treturn column.dataIndex;\r\n\t}\r\n}","import { Column } from '../column';\r\n\r\nexport class VirtualColumn extends Column {\r\n\tconstructor(box, index) {\r\n\t\tsuper(box, index);\r\n\r\n\t\tthis.box = box;\r\n\r\n\t\tconst { mapper } = box.context;\r\n\t\tthis.dataIndex = mapper.viewToColumn(index);\r\n\t}\r\n\r\n\tcells() {\r\n\t\treturn this.box.columnCellsCore(this.dataIndex);\r\n\t}\r\n\r\n\tcell(rowIndex) {\r\n\t\treturn this.box.cell(rowIndex, this.dataIndex);\r\n\t}\r\n\r\n\taddClass(name, force = false) {\r\n\t\tthis.box.addColumnClass(this, name, force);\r\n\t}\r\n\r\n\tremoveClass(name, force = false) {\r\n\t\tthis.box.removeColumnClass(this, name, force);\r\n\r\n\t}\r\n}\r\n","import { FakeClassList } from '../fake/class.list';\r\n\r\nexport class VirtualElement {\r\n\tconstructor(getRect) {\r\n\t\tthis.classList = new FakeClassList();\r\n\t\tthis.getRect = getRect;\r\n\t}\r\n\r\n\tgetBoundingClientRect() {\r\n\t\treturn this.getRect();\r\n\t}\r\n\r\n\tget clientWidth() {\r\n\t\treturn this.getRect().width;\r\n\t}\r\n\r\n\tget clientHeight() {\r\n\t\treturn this.getRect().height;\r\n\t}\r\n\r\n\tget offsetWidth() {\r\n\t\treturn this.getRect().width;\r\n\t}\r\n\r\n\tget offsetHeight() {\r\n\t\treturn this.getRect().height;\r\n\t}\r\n}","import { StyleBox } from './style.box';\r\n\r\nexport class RowBox extends StyleBox {\r\n\tconstructor(context) {\r\n\t\tsuper(context);\r\n\t}\r\n\r\n\tkey(row) {\r\n\t\treturn row.dataIndex;\r\n\t}\r\n}","import { Row } from '../row';\r\n\r\nexport class VirtualRow extends Row {\r\n\tconstructor(box, index, element = null) {\r\n\t\tsuper(box, index, element);\r\n\r\n\t\tconst { mapper } = box.context;\r\n\t\tthis.dataIndex = mapper.viewToRow(index);\r\n\t}\r\n\r\n\tmodel() {\r\n\t\tconst model = super.model();\r\n\t\tif (model) {\r\n\t\t\treturn model;\r\n\t\t}\r\n\r\n\t\tconst index = this.dataIndex;\r\n\t\tif (index >= 0) {\r\n\t\t\tconst gridModel = this.box.model;\r\n\t\t\tconst { rows } = gridModel.data();\r\n\t\t\tif (rows.length > index) {\r\n\t\t\t\treturn rows[index];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tcells() {\r\n\t\treturn this.box.rowCellsCore(this.dataIndex);\r\n\t}\r\n\r\n\tcell(columnIndex) {\r\n\t\treturn this.box.cellCore(this.dataIndex, columnIndex);\r\n\t}\r\n\r\n\taddClass(name, force = false) {\r\n\t\tthis.box.addRowClass(this, name, force);\r\n\t}\r\n\r\n\tremoveClass(name, force = false) {\r\n\t\tthis.box.removeRowClass(this, name, force);\r\n\t}\r\n}\r\n","export class StyleBox {\r\n\tconstructor(context) {\r\n\t\tthis.context = context;\r\n\t\tthis.entries = new Map();\r\n\t}\r\n\r\n\taddClass(item, name) {\r\n\t\tconst key = this.key(item);\r\n\t\tif (key !== null) {\r\n\t\t\tlet entry = this.entries.get(key);\r\n\t\t\tif (!entry) {\r\n\t\t\t\tentry = new Set();\r\n\t\t\t\tthis.entries.set(key, entry);\r\n\t\t\t}\r\n\r\n\t\t\tentry.add(name);\r\n\t\t}\r\n\t}\r\n\r\n\tremoveClass(item, name) {\r\n\t\tconst key = this.key(item);\r\n\t\tif (key !== null) {\r\n\t\t\tlet entry = this.entries.get(key);\r\n\t\t\tif (entry) {\r\n\t\t\t\tentry.delete(name);\r\n\t\t\t\tif (!entry.size) {\r\n\t\t\t\t\tthis.entries.delete(key);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tkey(item) {\r\n\t\treturn item;\r\n\t}\r\n}","export class DragModel {\r\n\tconstructor() {\r\n\t\tthis.isActive = false;\r\n\t}\r\n}","import { GRID_PREFIX } from '../definition';\r\n\r\nexport class DragService {\r\n\tconstructor() {\r\n\t}\r\n\r\n\tstatic get mimeType() {\r\n\t\treturn `application/x-${GRID_PREFIX}+json`;\r\n\t}\r\n\r\n\tstatic decode(source) {\r\n\t\treturn JSON.parse(source);\r\n\t}\r\n\r\n\tstatic encode(source) {\r\n\t\treturn JSON.stringify(source);\r\n\t}\r\n}\r\n\r\nDragService.element = null;\r\nDragService.data = null;\r\nDragService.area = null;\r\nDragService.startPosition = null;\r\n","import { Fetch } from '../infrastructure/fetch';\nimport { parseFactory } from '../services/convert';\nimport { clone, isUndefined, noop } from '../utility/kit';\n\nclass CellEditorCore {\n\tconstructor(td) {\n\t\tthis.td = td;\n\n\t\tthis.value = null;\n\t\tthis.label = null;\n\n\t\tthis.fetch = noop;\n\t\tthis.resetFetch = noop;\n\t}\n\n\tcommit() {\n\t}\n\n\treset() {\n\t}\n\n\tclear() {\n\n\t}\n}\n\nconst empty = new CellEditorCore(null);\n\nexport class CellEditor extends CellEditorCore {\n\tconstructor(td) {\n\t\tsuper(td);\n\n\t\tthis.fetch = this.fetchFactory();\n\t\tthis.resetFetch = this.fetch.run(td.row);\n\n\t\tif (isUndefined(td.value)) {\n\t\t\tthis.value = null;\n\t\t}\n\t\telse {\n\t\t\tconst parse = parseFactory(td.column.type, td.column.editor);\n\t\t\tconst typedValue = parse(clone(td.value));\n\t\t\tthis.value = typedValue === null ? td.value : typedValue;\n\t\t}\n\n\t\tthis.label = isUndefined(td.label) ? null : clone(td.label);\n\t}\n\n\tcommit() {\n\t\tthis.td.value = this.value;\n\t\tthis.td.label = this.label;\n\n\t\tthis.resetFetch();\n\t\tthis.resetFetch = noop;\n\t}\n\n\treset() {\n\t\tthis.label = this.td.label;\n\t\tthis.value = this.td.value;\n\n\t\tthis.resetFetch();\n\t\tthis.resetFetch = noop;\n\t}\n\n\tclear() {\n\t\tthis.label = null;\n\t\tthis.value = null;\n\n\t\tthis.resetFetch();\n\t\tthis.resetFetch = noop;\n\t}\n\n\tfetchFactory() {\n\t\tconst { editorOptions } = this.td.column;\n\t\tif (editorOptions && editorOptions.fetch) {\n\t\t\treturn new Fetch(editorOptions.fetch);\n\t\t}\n\n\t\treturn new Fetch(this.td.value);\n\t}\n\n\tget cell() {\n\t\treturn this.td;\n\t}\n\n\tstatic get empty() {\n\t\treturn empty;\n\t}\n}","import { Log } from '../infrastructure/log';\nimport { Command } from '../command/command';\nimport { Shortcut } from '../shortcut/shortcut';\nimport { CellEditor } from './edit.cell.editor';\nimport { getFactory as valueFactory } from '../services/value';\nimport { getFactory as labelFactory } from '../services/label';\nimport { parseFactory } from '../services/convert';\nimport { Td } from '../dom/td';\nimport * as validationService from '../validation/validation.service';\n\nexport class EditCellView {\n\tconstructor(model, table, shortcut) {\n\t\tthis.model = model;\n\t\tthis.table = table;\n\t\tthis.shortcut = shortcut;\n\n\t\tthis.editor = CellEditor.empty;\n\n\t\tconst commands = this.commands;\n\n\t\tshortcut.register(commands);\n\n\t\tthis.enter = commands.get('enter');\n\t\tthis.commit = commands.get('commit');\n\t\tthis.push = commands.get('push');\n\t\tthis.cancel = commands.get('cancel');\n\t\tthis.reset = commands.get('reset');\n\t\tthis.exit = commands.get('exit');\n\t\tthis.clear = commands.get('clear');\n\n\t\tmodel.navigationChanged.watch(e => {\n\t\t\tif (e.hasChanges('cell')) {\n\t\t\t\tconst oldCell = this.editor.td;\n\t\t\t\tif (oldCell) {\n\t\t\t\t\tif (oldCell.column.class === 'data') {\n\t\t\t\t\t\tif (this.commit.canExecute(oldCell)) {\n\t\t\t\t\t\t\tthis.commit.execute(oldCell);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (this.cancel.canExecute(oldCell)) {\n\t\t\t\t\t\t\tthis.cancel.execute(oldCell);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst newCell = e.changes.cell.newValue;\n\t\t\t\tif (newCell && newCell.column.editorOptions.trigger === 'focus') {\n\t\t\t\t\tif (this.enter.canExecute(newCell)) {\n\t\t\t\t\t\tthis.enter.execute(newCell);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tmode(cell, value) {\n\t\tthis.model.edit({ state: value });\n\t\tcell.mode(value);\n\t}\n\n\tget commands() {\n\t\tconst { model, table } = this;\n\n\t\tconst commands = {\n\t\t\tenter: new Command({\n\t\t\t\tpriority: 1,\n\t\t\t\tsource: 'edit.cell.view',\n\t\t\t\tshortcut: this.shortcutFactory('enter'),\n\t\t\t\tcanExecute: cell => {\n\t\t\t\t\t// TODO: source should be set up from outside\n\t\t\t\t\tconst source = cell ? 'mouse' : 'keyboard';\n\t\t\t\t\tif (source === 'keyboard' && Shortcut.isControl(this.shortcut.keyCode())) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tcell = cell || model.navigation().cell;\n\n\t\t\t\t\treturn cell\n\t\t\t\t\t\t&& cell.column.canEdit\n\t\t\t\t\t\t&& (cell.column.class === 'control' || model.edit().mode === 'cell')\n\t\t\t\t\t\t&& model.edit().state === 'view'\n\t\t\t\t\t\t&& model.edit().enter.canExecute(this.contextFactory(cell));\n\t\t\t\t},\n\t\t\t\texecute: (cell, e) => {\n\t\t\t\t\tLog.info('cell.edit', 'edit mode');\n\t\t\t\t\tif (e) {\n\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t}\n\n\t\t\t\t\t// TODO: source should be set up from outside\n\t\t\t\t\tconst source = cell ? 'mouse' : 'keyboard';\n\t\t\t\t\tcell = cell || model.navigation().cell;\n\t\t\t\t\tif (cell && model.edit().enter.execute(this.contextFactory(cell, cell.value, cell.label)) !== false) {\n\t\t\t\t\t\tconst td = table.body.cell(cell.rowIndex, cell.columnIndex).model();\n\t\t\t\t\t\tthis.editor = new CellEditor(td);\n\n\t\t\t\t\t\tconst keyCode = this.shortcut.keyCode();\n\t\t\t\t\t\tif (source === 'keyboard' && Shortcut.isPrintable(keyCode)) {\n\t\t\t\t\t\t\tconst parse = parseFactory(cell.column.type, cell.column.editor);\n\t\t\t\t\t\t\tconst value = Shortcut.stringify(keyCode);\n\t\t\t\t\t\t\tconst typedValue = parse(value);\n\t\t\t\t\t\t\tif (typedValue !== null) {\n\t\t\t\t\t\t\t\tthis.value = typedValue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.mode(this.editor.td, 'edit');\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}),\n\t\t\tcommit: new Command({\n\t\t\t\tpriority: 1,\n\t\t\t\tsource: 'edit.cell.view',\n\t\t\t\tshortcut: this.shortcutFactory('commit'),\n\t\t\t\tcanExecute: cell => {\n\t\t\t\t\tcell = cell || this.editor.td;\n\t\t\t\t\tconst canEdit = cell\n\t\t\t\t\t\t&& Td.equals(cell, this.editor.td)\n\t\t\t\t\t\t&& cell.column.canEdit\n\t\t\t\t\t\t&& (cell.column.class === 'control' || model.edit().mode === 'cell')\n\t\t\t\t\t\t&& model.edit().state === 'edit';\n\t\t\t\t\tif (canEdit) {\n\t\t\t\t\t\tconst context = this.contextFactory(cell);\n\t\t\t\t\t\tconst key = context.column.key;\n\t\t\t\t\t\tconst validator = validationService.createValidator(model.validation().rules, key);\n\t\t\t\t\t\treturn model.edit().commit.canExecute(context) && validator.validate({ [key]: this.value });\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t},\n\t\t\t\texecute: (cell, e) => {\n\t\t\t\t\tLog.info('cell.edit', 'commit');\n\t\t\t\t\tif (e) {\n\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t}\n\n\t\t\t\t\tcell = cell || this.editor.td;\n\t\t\t\t\tif (cell && model.edit().commit.execute(this.contextFactory(cell, this.value, this.label, this.tag)) !== false) {\n\t\t\t\t\t\tthis.editor.commit();\n\t\t\t\t\t\tthis.editor = CellEditor.empty;\n\n\t\t\t\t\t\tthis.mode(cell, 'view');\n\t\t\t\t\t\ttable.view.focus();\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}),\n\t\t\tpush: new Command({\n\t\t\t\tpriority: 1,\n\t\t\t\tsource: 'edit.cell.view',\n\t\t\t\tcanExecute: cell => {\n\t\t\t\t\tcell = cell || this.editor.td;\n\t\t\t\t\tconst canEdit = cell && cell.column.canEdit;\n\t\t\t\t\tif (canEdit) {\n\t\t\t\t\t\tconst context = this.contextFactory(cell);\n\t\t\t\t\t\tconst key = context.column.key;\n\t\t\t\t\t\tconst validator = validationService.createValidator(model.validation().rules, key);\n\t\t\t\t\t\treturn model.edit().commit.canExecute(context) && validator.validate({ [key]: this.value });\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t},\n\t\t\t\texecute: (cell, e) => {\n\t\t\t\t\tLog.info('cell.edit', 'batch commit');\n\t\t\t\t\tif (e) {\n\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t}\n\n\t\t\t\t\tcell = cell || this.editor.td;\n\t\t\t\t\tif (cell && model.edit().commit.execute(this.contextFactory(cell, this.value, this.label, this.tag)) !== false) {\n\t\t\t\t\t\tthis.editor.commit();\n\t\t\t\t\t\tthis.editor = CellEditor.empty;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}),\n\t\t\tcancel: new Command({\n\t\t\t\tpriority: 1,\n\t\t\t\tsource: 'edit.cell.view',\n\t\t\t\tshortcut: this.shortcutFactory('cancel'),\n\t\t\t\tcanExecute: cell => {\n\t\t\t\t\tcell = cell || this.editor.td;\n\t\t\t\t\treturn cell\n\t\t\t\t\t\t&& cell.column.canEdit\n\t\t\t\t\t\t&& (cell.column.class === 'control' || model.edit().mode === 'cell')\n\t\t\t\t\t\t&& model.edit().state === 'edit'\n\t\t\t\t\t\t&& model.edit().cancel.canExecute(this.contextFactory(cell, this.value, this.label));\n\t\t\t\t},\n\t\t\t\texecute: (cell, e) => {\n\t\t\t\t\tLog.info('cell.edit', 'cancel');\n\t\t\t\t\tif (e) {\n\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t}\n\n\t\t\t\t\tcell = cell || this.editor.td;\n\t\t\t\t\tif (cell && model.edit().cancel.execute(this.contextFactory(cell, cell.value, cell.label)) !== false) {\n\t\t\t\t\t\tthis.editor.reset();\n\t\t\t\t\t\tthis.editor = CellEditor.empty;\n\n\t\t\t\t\t\tthis.mode(cell, 'view');\n\t\t\t\t\t\ttable.view.focus();\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}),\n\t\t\treset: new Command({\n\t\t\t\tpriority: 1,\n\t\t\t\tsource: 'edit.cell.view',\n\t\t\t\tcanExecute: cell => {\n\t\t\t\t\tcell = cell || this.editor.td;\n\t\t\t\t\treturn cell\n\t\t\t\t\t\t&& cell.column.canEdit\n\t\t\t\t\t\t&& (cell.column.class === 'control' || model.edit().mode === 'cell')\n\t\t\t\t\t\t&& model.edit().state === 'edit'\n\t\t\t\t\t\t&& model.edit().reset.canExecute(this.contextFactory(cell, this.value, this.label));\n\t\t\t\t},\n\t\t\t\texecute: (cell, e) => {\n\t\t\t\t\tLog.info('cell.edit', 'reset');\n\t\t\t\t\tif (e) {\n\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t}\n\n\t\t\t\t\tcell = cell || this.editor.td;\n\t\t\t\t\tif (cell && model.edit().reset.execute(this.contextFactory(cell, this.value, this.label)) !== false) {\n\t\t\t\t\t\tthis.editor.reset();\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}),\n\t\t\texit: new Command({\n\t\t\t\tpriority: 1,\n\t\t\t\tsource: 'edit.cell.view',\n\t\t\t\texecute: (cell, e) => {\n\t\t\t\t\tLog.info('cell.edit', 'reset');\n\t\t\t\t\tif (e) {\n\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t}\n\n\t\t\t\t\tcell = cell || this.editor.td;\n\t\t\t\t\tif (cell) {\n\t\t\t\t\t\tif (this.commit.canExecute(cell, e)) {\n\t\t\t\t\t\t\tconst originValue = cell.value;\n\t\t\t\t\t\t\tconst editValue = this.value;\n\t\t\t\t\t\t\tif (originValue !== editValue) {\n\t\t\t\t\t\t\t\tthis.commit.execute(cell, e);\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this.cancel.canExecute(cell, e)) {\n\t\t\t\t\t\t\tthis.cancel.execute(cell, e);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}),\n\t\t\tclear: new Command({\n\t\t\t\tpriority: 1,\n\t\t\t\tsource: 'edit.cell.view',\n\t\t\t\tcanExecute: cell => {\n\t\t\t\t\tcell = cell || this.editor.td;\n\t\t\t\t\treturn cell\n\t\t\t\t\t\t&& cell.column.canEdit\n\t\t\t\t\t\t&& (cell.column.class === 'control' || model.edit().mode === 'cell')\n\t\t\t\t\t\t&& model.edit().state === 'edit'\n\t\t\t\t\t\t&& model.edit().clear.canExecute(this.contextFactory(cell, this.value, this.label));\n\t\t\t\t},\n\t\t\t\texecute: (cell, e) => {\n\t\t\t\t\tLog.info('cell.edit', 'clear');\n\t\t\t\t\tif (e) {\n\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t}\n\n\t\t\t\t\tcell = cell || this.editor.td;\n\t\t\t\t\tif (cell && model.edit().clear.execute(this.contextFactory(cell, this.value, this.label)) !== false) {\n\t\t\t\t\t\tthis.editor.clear();\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}),\n\t\t};\n\n\t\treturn new Map(\n\t\t\tObject.entries(commands)\n\t\t);\n\t}\n\n\tcontextFactory(cell, value, label, tag) {\n\t\tconst { column, row, columnIndex, rowIndex, value: oldValue, label: oldLabel } = cell;\n\t\treturn {\n\t\t\tcolumn,\n\t\t\trow,\n\t\t\tcolumnIndex,\n\t\t\trowIndex,\n\t\t\toldValue,\n\t\t\tnewValue: arguments.length >= 2 ? value : oldValue,\n\t\t\toldLabel,\n\t\t\tnewLabel: arguments.length >= 3 ? label : oldLabel,\n\t\t\tunit: 'cell',\n\t\t\ttag,\n\t\t\tvalueFactory,\n\t\t\tlabelFactory\n\t\t};\n\t}\n\n\tget fetch() {\n\t\treturn this.editor.fetch;\n\t}\n\n\tget value() {\n\t\treturn this.editor.value;\n\t}\n\n\tset value(value) {\n\t\tthis.editor.value = value;\n\t}\n\n\tget label() {\n\t\treturn this.editor.label;\n\t}\n\n\tset label(label) {\n\t\tthis.editor.label = label;\n\t}\n\n\tget row() {\n\t\treturn this.cell.row;\n\t}\n\n\tget column() {\n\t\treturn this.cell.column;\n\t}\n\n\tget cell() {\n\t\treturn this.editor.td;\n\t}\n\n\tget options() {\n\t\treturn this.column.options;\n\t}\n\n\tcanEdit(cell) {\n\t\tif (cell) {\n\t\t\treturn cell.column.canEdit && this.model.edit().mode === 'cell';\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tshortcutFactory(type) {\n\t\tconst { edit } = this.model;\n\t\treturn () => {\n\t\t\tconst shortcuts = edit()[type + 'Shortcuts'];\n\t\t\tconst { td } = this.editor;\n\t\t\tif (td) {\n\t\t\t\tconst type = td.column && td.column.editor ? td.column.editor : td.column.type;\n\t\t\t\tif (shortcuts.hasOwnProperty(type)) {\n\t\t\t\t\treturn shortcuts[type];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn shortcuts['$default'];\n\t\t};\n\t}\n}\n","import { Resource } from '../resource/resource';\nimport { Command } from '../command/command';\n\nexport class EditModel {\n\tconstructor() {\n\t\tthis.resource = new Resource();\n\t\tthis.mode = null; // cell | row\n\t\tthis.state = 'view'; // view | edit | startBatch | endBatch\n\t\tthis.method = null; // batch\n\t\t\n\t\tthis.enter = new Command({ source: 'edit.model' });\n\t\tthis.commit = new Command({ source: 'edit.model' });\n\t\tthis.cancel = new Command({ source: 'edit.model' });\n\t\tthis.reset = new Command({ source: 'edit.model' });\n\t\tthis.clear = new Command({ source: 'edit.model' });\n\n\t\tthis.cancelShortcuts = {\n\t\t\t'$default': 'escape'\n\t\t};\n\n\t\tthis.enterShortcuts = {\n\t\t\t'$default': '*',\n\t\t\t'row': 'F2|Enter',\n\t\t\t'form': 'F2|Enter'\n\t\t};\n\n\t\tthis.commitShortcuts = {\n\t\t\t'$default': 'tab|shift+tab|enter|ctrl+s',\n\t\t\t'reference': 'ctrl+s',\n\t\t\t'row': 'ctrl+s',\n\t\t\t'form': 'ctrl+s',\n\t\t\t'bool': 'tab|shift+tab|left|right|up|down|home|end|pageUp|pageDown',\n\t\t\t'text-area': 'ctrl+s'\n\t\t};\n\t}\n}\n","import {cloneDeep} from '../utility/kit';\r\nimport {CellEditor} from './edit.cell.editor';\r\nimport {get as getValue, set as setValue} from '../services/value';\r\nimport {get as getLabel, set as setLabel} from '../services/label';\r\n\r\n\r\nclass RowEditorCore {\r\n\tconstructor() {\r\n\t\tthis.editors = [];\r\n\t}\r\n\r\n\tcommit() {\r\n\t}\r\n\r\n\treset() {\r\n\t}\r\n}\r\n\r\n\r\nclass TdView {\r\n\tconstructor(row, column) {\r\n\t\tthis.row = row;\r\n\t\tthis.column = column;\r\n\t}\r\n\r\n\tget value() {\r\n\t\treturn getValue(this.row, this.column);\r\n\t}\r\n\r\n\tset value(value) {\r\n\t\treturn setValue(this.row, this.column, value);\r\n\t}\r\n\r\n\tget label() {\r\n\t\treturn getLabel(this.row, this.column);\r\n\t}\r\n\r\n\tset label(value) {\r\n\t\treturn setLabel(this.row, this.column, value);\r\n\t}\r\n}\r\n\r\nconst empty = new RowEditorCore();\r\nexport class RowEditor extends RowEditorCore {\r\n\tconstructor(row, columns) {\r\n\t\tsuper();\r\n\r\n\t\tthis.value = cloneDeep(row);\r\n\t\tthis.row = row;\r\n\r\n\t\tthis.editors =\r\n\t\t\tcolumns\r\n\t\t\t\t.filter(column => column.canEdit)\r\n\t\t\t\t.map(column => new CellEditor(new TdView(this.value, column)));\r\n\t}\r\n\r\n\tcommit() {\r\n\t\tthis.editors.forEach(editor => editor.commit());\r\n\t\tObject.assign(this.row, this.value);\r\n\t}\r\n\r\n\treset() {\r\n\t\tthis.editors.forEach(editor => editor.reset());\r\n\t\tthis.value = cloneDeep(this.row);\r\n\t}\r\n\r\n\tstatic get empty() {\r\n\t\treturn empty;\r\n\t}\r\n}","import { Log } from '../infrastructure/log';\r\nimport { Command } from '../command/command';\r\nimport { RowEditor } from './edit.row.editor';\r\n\r\nexport class EditRowView {\r\n\tconstructor(model, table, shortcut) {\r\n\t\tthis.model = model;\r\n\t\tthis.table = table;\r\n\t\tthis.editor = RowEditor.empty;\r\n\r\n\t\tconst commands = this.commands;\r\n\t\tshortcut.register(commands);\r\n\r\n\t\tthis.enter = commands.get('enter');\r\n\t\tthis.commit = commands.get('commit');\r\n\t\tthis.cancel = commands.get('cancel');\r\n\t\tthis.reset = commands.get('reset');\r\n\t}\r\n\r\n\tget commands() {\r\n\t\tconst model = this.model;\r\n\t\tconst commands = {\r\n\t\t\tenter: new Command({\r\n\t\t\t\tsource: 'edit.row.view',\r\n\t\t\t\tshortcut: this.shortcutFactory('enter'),\r\n\t\t\t\tcanExecute: row => {\r\n\t\t\t\t\trow = row || model.navigation().row;\r\n\t\t\t\t\treturn row\r\n\t\t\t\t\t\t&& model.edit().mode === 'row'\r\n\t\t\t\t\t\t&& model.edit().state === 'view'\r\n\t\t\t\t\t\t&& model.edit().enter.canExecute(this.contextFactory(row));\r\n\t\t\t\t},\r\n\t\t\t\texecute: (row, e) => {\r\n\t\t\t\t\tLog.info('row.edit', 'edit mode');\r\n\t\t\t\t\tif (e) {\r\n\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst columns = this.model.columnList().line;\r\n\r\n\t\t\t\t\tthis.editor = new RowEditor(row, columns);\r\n\t\t\t\t\tmodel.edit({ state: 'edit' }, { source: 'edit.row.view' });\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\t\t\tcommit: new Command({\r\n\t\t\t\tsource: 'edit.row.view',\r\n\t\t\t\tshortcut: this.shortcutFactory('commit'),\r\n\t\t\t\t// TODO: add validation support\r\n\t\t\t\tcanExecute: row => {\r\n\t\t\t\t\trow = row || model.navigation().row;\r\n\t\t\t\t\treturn row\r\n\t\t\t\t\t\t&& model.edit().mode === 'row'\r\n\t\t\t\t\t\t&& model.edit().state === 'edit'\r\n\t\t\t\t\t\t&& model.edit().commit.canExecute(this.contextFactory(row));\r\n\t\t\t\t},\r\n\t\t\t\texecute: (cell, e) => {\r\n\t\t\t\t\tLog.info('row.edit', 'commit');\r\n\t\t\t\t\tif (e) {\r\n\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.editor.commit();\r\n\t\t\t\t\tthis.editor = RowEditor.empty;\r\n\t\t\t\t\tmodel.edit({ state: 'view' }, { source: 'edit.row.view' });\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\t\t\tcancel: new Command({\r\n\t\t\t\tsource: 'edit.row.view',\r\n\t\t\t\tshortcut: this.shortcutFactory('cancel'),\r\n\t\t\t\tcanExecute: row => {\r\n\t\t\t\t\trow = row || model.navigation().row;\r\n\t\t\t\t\treturn row\r\n\t\t\t\t\t\t&& model.edit().mode === 'row'\r\n\t\t\t\t\t\t&& model.edit().state === 'edit'\r\n\t\t\t\t\t\t&& model.edit().cancel.canExecute(this.contextFactory(row));\r\n\t\t\t\t},\r\n\t\t\t\texecute: (row, e) => {\r\n\t\t\t\t\tLog.info('cell.edit', 'cancel');\r\n\t\t\t\t\tif (e) {\r\n\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.editor.reset();\r\n\t\t\t\t\tthis.editor = RowEditor.empty;\r\n\t\t\t\t\tmodel.edit({ state: 'view' }, { source: 'edit.row.view' });\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\t\t\treset: new Command({\r\n\t\t\t\tsource: 'edit.row.view',\r\n\t\t\t\tcanExecute: row => {\r\n\t\t\t\t\trow = row || model.navigation().row;\r\n\t\t\t\t\treturn row\r\n\t\t\t\t\t\t&& model.edit().mode === 'row'\r\n\t\t\t\t\t\t&& model.edit().state === 'edit'\r\n\t\t\t\t\t\t&& model.edit().reset.canExecute(this.contextFactory(row));\r\n\t\t\t\t},\r\n\t\t\t\texecute: (row, e) => {\r\n\t\t\t\t\tLog.info('row.edit', 'reset');\r\n\t\t\t\t\tif (e) {\r\n\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (row && model.edit().reset.execute(this.contextFactory(row)) !== false) {\r\n\t\t\t\t\t\tthis.editor.reset();\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t};\r\n\t\treturn new Map(\r\n\t\t\tObject.entries(commands)\r\n\t\t);\r\n\t}\r\n\r\n\tcontextFactory(row) {\r\n\t\treturn {\r\n\t\t\trow: row,\r\n\t\t\tunit: 'row'\r\n\t\t};\r\n\t}\r\n\r\n\tshortcutFactory(type) {\r\n\t\tconst edit = this.model.edit;\r\n\t\treturn () => {\r\n\t\t\tconst shortcuts = edit()[type + 'Shortcuts'];\r\n\t\t\treturn shortcuts['row'] || shortcuts['$default'];\r\n\t\t};\r\n\t}\r\n}\r\n","import { CellEditor } from './edit.cell.editor';\r\nimport { EditCellView } from './edit.cell.view';\r\nimport { CommandManager } from '../command/command.manager';\r\n\r\nexport class EditService {\r\n\tconstructor(model, table) {\r\n\t\tthis.model = model;\r\n\t\tthis.table = table;\r\n\t}\r\n\r\n\tdoBatch(startCell) {\r\n\t\tconst { table, model } = this;\r\n\t\tconst { rows, columns } = model.view();\r\n\t\tconst { items } = model.selection();\r\n\r\n\t\tconst shortcut = { register: () => ({}) };\r\n\t\tconst editView = new EditCellView(model, table, shortcut);\r\n\t\tconst startTd = this.table.body.cell(startCell.rowIndex, startCell.columnIndex).model();\r\n\r\n\t\tconst label = startTd.label;\r\n\t\tconst value = startTd.value;\r\n\r\n\t\tconst startColumnType = startTd.column.type;\r\n\t\tfor (let i = 0, length = items.length; i < length; i++) {\r\n\t\t\tconst { row, column } = items[i];\r\n\t\t\tconst rowIndex = rows.indexOf(row);\r\n\t\t\tconst columnIndex = columns.indexOf(column);\r\n\r\n\t\t\tconst td = table.body.cell(rowIndex, columnIndex).model();\r\n\t\t\tconst type = td.column.type;\r\n\t\t\tif (startColumnType === type) {\r\n\t\t\t\tconst editor = new CellEditor(td);\r\n\t\t\t\teditor.label = label;\r\n\t\t\t\teditor.value = value;\r\n\r\n\t\t\t\teditView.editor = editor;\r\n\t\t\t\tif (editView.push.canExecute()) {\r\n\t\t\t\t\teditView.push.execute();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","import { EditCellView } from './edit.cell.view';\r\nimport { EditRowView } from './edit.row.view';\r\n\r\nexport class EditView {\r\n\tconstructor(model, table, shortcut) {\r\n\t\tthis.cell = new EditCellView(model, table, shortcut);\r\n\t\tthis.row = new EditRowView(model, table, shortcut);\r\n\t}\r\n}","import {getFactory as valueFactory} from '../../services/value';\r\n\r\nconst DELIMITER = ',';\r\n\r\nfunction escape(value) {\r\n\tlet result = '' + value;\r\n\tresult = result.replace(/\"/g, '\"\"');\r\n\tresult = /[\\n\",]/.test(result) ? `\"${result}\"` : result;\r\n\treturn result;\r\n}\r\n\r\nexport class Csv {\r\n\twrite(rows, columns) {\r\n\t\tconst result = [];\r\n\t\tconst values = [];\r\n\t\tlet head = [];\r\n\t\tfor (let column of columns) {\r\n\t\t\tif (column.class === 'data') {\r\n\t\t\t\tvalues.push(valueFactory(column));\r\n\t\t\t\thead.push(escape(column.title));\r\n\t\t\t}\r\n\t\t}\r\n\t\tresult.push(head.join(DELIMITER));\r\n\r\n\t\tfor (let row of rows) {\r\n\t\t\tconst line = [];\r\n\t\t\tfor (let getValue of values) {\r\n\t\t\t\tline.push(escape(getValue(row)));\r\n\t\t\t}\r\n\t\t\tresult.push(line.join(DELIMITER));\r\n\t\t}\r\n\r\n\t\treturn result.join('\\n');\r\n\t}\r\n}","import {Resource} from '../resource/resource';\r\n\r\nexport class ExportModel {\r\n\tconstructor() {\r\n\t\tthis.resource = new Resource();\r\n\t}\r\n}","import { isObject, isArray } from '../utility/kit';\n\nfunction flatView(graph, separator = ', ') {\n\tconst result = {};\n\n\tfor (let [prop, value] of Object.entries(graph)) {\n\t\tif (isArray(value)) {\n\t\t\tconst items = [];\n\t\t\tfor (let item of value) {\n\t\t\t\titems.push(item);\n\t\t\t}\n\t\t\tresult[prop] = items.join(separator);\n\t\t} else if (isObject(value)) {\n\t\t\tconst flatObject = flatView(value, separator);\n\t\t\tfor (let [flatProp, flatValue] of Object.entries(flatObject)) {\n\t\t\t\tresult[prop + '.' + flatProp] = flatValue;\n\t\t\t}\n\t\t} else {\n\t\t\tresult[prop] = value;\n\t\t}\n\t}\n\treturn result;\n}\n\nexport {\n\tflatView\n};","import { flatView } from '../export.service';\n\nexport class Json {\n\twrite(rows, columns) {\n\t\tconst result = [];\n\n\t\tfor (let row of rows) {\n\t\t\tconst flatRow = flatView(row);\n\t\t\tconst obj = {};\n\t\t\tfor (let column of columns) {\n\t\t\t\tobj[column.title] = flatRow[column.key];\n\t\t\t}\n\t\t\tresult.push(obj);\n\t\t}\n\n\t\treturn JSON.stringify(result, '', 2);\n\t}\n}\n","import { isObject, isArray, isString } from '../../utility/kit';\r\n\r\nconst begin = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><root>';\r\n\r\nfunction escape(value) {\r\n\tlet result = '' + value;\r\n\tconst characters = [/</g, />/g, /&/g, /'/g, /\"/g, /\\s\\s+/g, /\\n/g];\r\n\tconst replacements = ['&lt;', '&gt;', '&amp;', '&apos;', '&quot;', ' ', '&#xA;'];\r\n\tfor (let i = 0; i < characters.length; i++) {\r\n\t\tresult = result.replace(characters[i], replacements[i]);\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nfunction objToXml(obj) {\r\n\tlet result = '';\r\n\r\n\tfor (let [prop, value] of Object.entries(obj)) {\r\n\t\tif (obj.hasOwnProperty(prop)) {\r\n\t\t\tif (isObject(value) && !isArray(value) && !isString(value)) {\r\n\t\t\t\tresult += `<${prop}>${objToXml(value)}</${prop}>`;\r\n\t\t\t} else if (isArray(value)) {\r\n\t\t\t\tfor (let item of value) {\r\n\t\t\t\t\tif (isString(item)) {\r\n\t\t\t\t\t\tresult += `<${prop}>${escape(item)}</${prop}>`;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresult += `<${prop}>${objToXml(item)}</${prop}>`;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (isString(value)) {\r\n\t\t\t\tresult += `<${prop}>${escape(value)}</${prop}>`;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport class Xml {\r\n\twrite(rows) {\r\n\t\tconst result = [begin];\r\n\t\tfor (let row of rows) {\r\n\t\t\tresult.push(objToXml({ row }));\r\n\t\t}\r\n\t\tresult.push('</root>');\r\n\t\treturn result.join('');\r\n\t}\r\n}","export function build(filterBy, op = 'and') {\r\n\tconst result = [];\r\n\tfor (let [key, filter] of Object.entries(filterBy)) {\r\n\t\tif (key === '$expression') {\r\n\t\t\tresult.push(filter);\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tif (filter.expression) {\r\n\t\t\tresult.push(filter.expression);\r\n\t\t}\r\n\r\n\t\tconst expressions = [];\r\n\t\tif (filter.items && filter.items.length) {\r\n\t\t\texpressions.push(toInExpression(key, filter.items));\r\n\t\t}\r\n\r\n\t\tif (filter.blanks) {\r\n\t\t\texpressions.push(toIsEmptyExpression(key));\r\n\t\t}\r\n\r\n\t\tif (expressions.length) {\r\n\t\t\tif (expressions.length === 1) {\r\n\t\t\t\tresult.push(expressions[0]);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tresult.push(compile(expressions, 'or'));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn compile(result, op);\r\n}\r\n\r\nfunction toIsEmptyExpression(key) {\r\n\treturn {\r\n\t\tkind: 'group',\r\n\t\top: 'and',\r\n\t\tleft: {\r\n\t\t\tkind: 'condition',\r\n\t\t\tleft: key,\r\n\t\t\top: 'isEmpty',\r\n\t\t\tright: null\r\n\t\t},\r\n\t\tright: null\r\n\t};\r\n}\r\n\r\nfunction toInExpression(key, items) {\r\n\treturn {\r\n\t\tkind: 'group',\r\n\t\top: 'and',\r\n\t\tleft: {\r\n\t\t\tkind: 'condition',\r\n\t\t\tleft: key,\r\n\t\t\top: 'in',\r\n\t\t\tright: Array.from(items)\r\n\r\n\t\t},\r\n\t\tright: null\r\n\t};\r\n}\r\n\r\nfunction compile(expressions, op) {\r\n\tconst root = {\r\n\t\tkind: 'group',\r\n\t\top,\r\n\t\tleft: null,\r\n\t\tright: null\r\n\t};\r\n\r\n\tlet current = root;\r\n\r\n\texpressions.forEach(expr => {\r\n\t\tif (!current.left) {\r\n\t\t\tcurrent.left = expr;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst next = {\r\n\t\t\t\tkind: 'group',\r\n\t\t\t\top,\r\n\t\t\t\tleft: expr,\r\n\t\t\t\tright: null\r\n\t\t\t};\r\n\r\n\t\t\tcurrent.right = next;\r\n\t\t\tcurrent = next;\r\n\t\t}\r\n\t});\r\n\r\n\r\n\treturn root.left ? root : null;\r\n}\r\n","import { AppError } from '../infrastructure/error';\r\n\r\nexport class Visitor {\r\n\tconstructor() {\r\n\t}\r\n\r\n\tvisit(item, depth = 0) {\r\n\t\tswitch (item.kind) {\r\n\t\t\tcase 'group':\r\n\t\t\t\treturn this.visitGroup(item, depth + 1);\r\n\t\t\tcase 'condition':\r\n\t\t\t\treturn this.visitCondition(item, depth);\r\n\t\t\tcase 'function':\r\n\t\t\t\treturn this.visitFunction(item, depth);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow AppError(\r\n\t\t\t\t\t'expression.visitor',\r\n\t\t\t\t\t`Invalid kind ${item.kind}`\r\n\t\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tvisitGroup(group, depth) {\r\n\t\tif (group.right) {\r\n\t\t\tthis.visit(group.left, depth);\r\n\t\t\tthis.visit(group.right, depth);\r\n\t\t}\r\n\r\n\t\treturn this.visit(group.left, depth);\r\n\t}\r\n\r\n\tvisitCondition(condition, depth) {\r\n\t\tswitch (condition.op) {\r\n\t\t\tcase 'isNotNull':\r\n\t\t\tcase 'isNull':\r\n\t\t\tcase 'isNotEmpty':\r\n\t\t\tcase 'isEmpty':\r\n\t\t\tcase 'isNumeric':\r\n\t\t\tcase 'isNotNumeric':\r\n\t\t\t\treturn this.visitUnary(condition, depth);\r\n\t\t\tcase 'equals':\r\n\t\t\tcase 'notEquals':\r\n\t\t\tcase 'greaterThanOrEquals':\r\n\t\t\tcase 'greaterThan':\r\n\t\t\tcase 'lessThanOrEquals':\r\n\t\t\tcase 'lessThan':\r\n\t\t\tcase 'like':\r\n\t\t\tcase 'notLike':\r\n\t\t\tcase 'startsWith':\r\n\t\t\tcase 'endsWith':\r\n\t\t\tcase 'match':\r\n\t\t\t\treturn this.visitBinary(condition, depth);\r\n\t\t\tcase 'between':\r\n\t\t\t\treturn this.visitBetween(condition, depth);\r\n\t\t\tcase 'in':\r\n\t\t\t\treturn this.visitIn(condition, depth);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new AppError(\r\n\t\t\t\t\t'expression.visitor',\r\n\t\t\t\t\t`Invalid operation ${condition.op}`\r\n\t\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tvisitUnary(condition) {\r\n\t\tthis.visitLeft(condition.left);\r\n\t}\r\n\r\n\tvisitBinary(condition/*, depth*/) {\r\n\t\tthis.visitLeft(condition.left);\r\n\t\tthis.visitRight(condition.right);\r\n\t}\r\n\r\n\tvisitLeft(left) {\r\n\t\tif (left.kind) {\r\n\t\t\tswitch (left.kind) {\r\n\t\t\t\tcase 'function':\r\n\t\t\t\t\tthis.visitArguments(left.arguments);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvisitBetween(/*condition, depth*/) {\r\n\t}\r\n\r\n\tvisitIn(/*condition, depth*/) {\r\n\t}\r\n\r\n\tvisitFunction(/*fn*/) {\r\n\t}\r\n\r\n\tvisitArguments(args) {\r\n\t\treturn args.map(arg => {\r\n\t\t\tswitch (arg.kind) {\r\n\t\t\t\tcase 'condition':\r\n\t\t\t\tcase 'group':\r\n\t\t\t\t\tthis.visit(arg);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}","import { Visitor } from './expression.visitor';\r\nimport { AppError } from '../infrastructure/error';\r\n\r\nfunction stringify(value, type, isValid) {\r\n    if (!isValid) {\r\n        return '<span class=\"q-grid-markup-condition-value-invalid\"></span>';\r\n    }\r\n\r\n    switch (type) {\r\n        case 'text':\r\n            return stringifyText(value);\r\n        case 'number':\r\n            return stringifyNumber(value);\r\n        case 'date':\r\n            return stringifyDate(value);\r\n        default:\r\n            return '' + value;\r\n    }\r\n}\r\n\r\nfunction stringifyText(value) {\r\n    return `<span class=\"q-grid-markup-condition-quote\">'</span>\r\n                <span class=\"q-grid-markup-condition-value q-grid-markup-condition-value-text\">${value}</span>\r\n            <span class=\"q-grid-markup-condition-quote\">'</span>`;\r\n}\r\n\r\nfunction stringifyDate(value) {\r\n    const date = new Date(value);\r\n    if (date !== 'Invalid Date' && !isNaN(date)) {\r\n        return `<span class=\"q-grid-markup-condition-quote\">'</span>\r\n                    <span class=\"q-grid-markup-condition-value q-grid-markup-condition-value-date\">${value}</span>\r\n                <span class=\"q-grid-markup-condition-quote\">'</span>`;\r\n    }\r\n\r\n    return `<span class=\"q-grid-markup-condition-quote\">'</span>\r\n                <span class=\"q-grid-markup-condition-value q-grid-markup-condition-value-date q-grid-markup-condition-error\">${value}</span>\r\n            <span class=\"q-grid-markup-condition-quote\">'</span>`;\r\n}\r\n\r\nfunction stringifyNumber(value) {\r\n    const number = parseFloat(value);\r\n    if (!isNaN(number) && isFinite(number)) {\r\n        return `<span class=\"q-grid-markup-condition-value q-grid-markup-condition-number\">${value}</span>`;\r\n    }\r\n\r\n    return `<span class=\"q-grid-markup-condition-value q-grid-markup-condition-number q-grid-markup-condition-error\">${value}</span>`;\r\n}\r\n\r\nfunction stringifyInteger(value) {\r\n    const number = parseInt(value);\r\n    if (!isNaN(number) && isFinite(number)) {\r\n        return `<span class=\"q-grid-markup-condition-value q-grid-markup-condition-number\">${value}</span>`;\r\n    }\r\n\r\n    return `<span class=\"q-grid-markup-condition-value q-grid-markup-condition-number q-grid-markup-condition-error\">${value}</span>`;\r\n}\r\n\r\nexport class MarkupVisitor extends Visitor {\r\n    constructor(label, type, isValid) {\r\n        super();\r\n\r\n        this.label = label;\r\n        this.type = type;\r\n        this.isValid = isValid;\r\n    }\r\n\r\n    visitGroup(group, depth) {\r\n        if (group.right) {\r\n            const l = this.visit(group.left, depth);\r\n            const r = this.visit(group.right, depth);\r\n\r\n            const expr = `<div class=\"q-grid-markup-node-left\">${l}</div><span class=\"q-grid-markup-group-op\">${group.op}</span><div class=\"q-grid-markup-node-right\">${r}</div>`;\r\n            return `<div class=\"q-grid-markup-node\">${(depth > 1 ? `<span class=\"q-grid-markup-group-open\">(</span>${expr}<span class=\"q-grid-markup-group-close\">)</span>` : expr)}</div>`;\r\n        }\r\n\r\n        return `<div class=\"q-grid-markup-node\">${this.visit(group.left, depth)}<div class=\"q-grid-markup-node\">`;\r\n    }\r\n\r\n    visitUnary(condition) {\r\n        switch (condition.op) {\r\n            case 'isNotNull':\r\n                return `<span class=\"q-grid-markup-condition-left\">${this.label(condition.left)}</span><span class=\"q-grid-markup-condition-right q-grid-markup-condition-unary\">is not empty</span>`;\r\n            case 'isNull':\r\n                return `<span class=\"q-grid-markup-condition-left\">${this.label(condition.left)}</span><span class=\"q-grid-markup-condition-right q-grid-markup-condition-unary\">is empty</span>`;\r\n            default:\r\n                throw new AppError('markup.visitor', `Invalid operation ${condition.op}`)\r\n        }\r\n    }\r\n\r\n    visitBinary(condition) {\r\n        let op;\r\n\r\n        switch (condition.op) {\r\n            case 'equals':\r\n                op = '=';\r\n                break;\r\n            case 'notEquals':\r\n                op = '&lt;&gt;';\r\n                break;\r\n            case 'greaterThanOrEquals':\r\n                op = '&gt;='\r\n                break;\r\n            case 'greaterThan':\r\n                op = '&gt;';\r\n                break;\r\n            case 'lessThanOrEquals':\r\n                op = '&lt;=';\r\n                break;\r\n            case 'lessThan':\r\n                op = '&lt;';\r\n                break;\r\n            case 'like':\r\n                op = 'like';\r\n                break\r\n            case 'notLike':\r\n                op = 'not like';\r\n                break;\r\n            case 'startsWith':\r\n                op = 'starts with';\r\n                break;\r\n            case 'endsWith':\r\n                op = 'ends with';\r\n                break;\r\n            default:\r\n                throw new AppError('markup.visitor', `Invalid operation ${condition.op}`);\r\n        }\r\n\r\n        const isValid = this.isValid(condition.left, condition.right);\r\n        return `<span class=\"q-grid-markup-condition-left\">${this.label(condition.left)}</span>\r\n                <span class=\"q-grid-markup-condition-op\">${op}</span>\r\n                <span class=\"q-grid-markup-condition-right\">${stringify(condition.right, this.type(condition.left), isValid)}</span>`;\r\n    }\r\n\r\n    visitBetween(condition) {\r\n        const isValid = this.isValid(condition.left, condition.right);\r\n        return `<span class=\"q-grid-markup-condition-left\">${this.label(condition.left)}</span>\r\n                <span class=\"q-grid-markup-condition-op\">between</span>\r\n                <span class=\"q-grid-markup-condition-right\">${stringify(condition.right[0], this.type(condition.left), isValid)}</span>\r\n                <span class=\"q-grid-markup-condition-op\">and</span>\r\n                <span class=\"q-grid-markup-condition-right\">${stringify(condition.right[1], this.type(condition.left), isValid)}</span>`;\r\n    }\r\n\r\n    visitIn(condition) {\r\n        const isValid = this.isValid(condition.left, condition.right);\r\n        return `<span class=\"q-grid-markup-condition-left\">${this.label(condition.left)}</span>\r\n                <span class=\"q-grid-markup-condition-op\">in</span>\r\n                <span class=\"q-grid-markup-condition-open\">(</span>\r\n                <span class=\"q-grid-markup-condition-right\">${condition.right.map(item => stringify(item, this.type(condition.left), isValid)).join(', ')}</span>\r\n                <span class=\"q-grid-markup-condition-close\">)</span>`;\r\n    }\r\n}\r\n","import { AppError } from '../infrastructure/error';\nimport { parseFactory, getType } from '../services/convert';\nimport { Visitor } from './expression.visitor';\nimport { isArray, identity } from '../utility/kit';\n\nexport class PredicateVisitor extends Visitor {\n\tconstructor(valueFactory, assertFactory) {\n\t\tsuper();\n\n\t\tthis.valueFactory = valueFactory;\n\t\tthis.assertFactory = assertFactory;\n\t}\n\n\tvisitGroup(group) {\n\t\tif (group.right) {\n\t\t\tconst lp = this.visit(group.left);\n\t\t\tconst rp = this.visit(group.right);\n\n\t\t\tswitch (group.op) {\n\t\t\t\tcase 'and':\n\t\t\t\t\treturn value => lp(value) && rp(value);\n\t\t\t\tcase 'or':\n\t\t\t\t\treturn value => lp(value) || rp(value);\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow AppError(\n\t\t\t\t\t\t'predicate.visitor',\n\t\t\t\t\t\t`Invalid operation ${group.op}`\n\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn this.visit(group.left);\n\t}\n\n\tvisitCondition(condition) {\n\t\tconst r = condition.right;\n\t\tconst name = condition.left;\n\t\tconst getValue = this.valueFactory(name);\n\t\tconst assert = this.assertFactory(name);\n\t\tconst map = new Set();\n\n\t\tconst rt = getType(isArray(r) ? r[0] : r);\n\t\tlet parse = parseFactory(rt);\n\n\t\tif (isArray(r)) {\n\t\t\tif (r.length) {\n\t\t\t\tr.forEach(x => map.add('' + x));\n\t\t\t} else {\n\t\t\t\tparse = identity;\n\t\t\t}\n\t\t}\n\n\t\tconst { equals, isNull, lessThan } = assert;\n\t\tconst lessThanOrEquals = (x, y) => equals(x, y) || lessThan(x, y);\n\t\tconst greaterThan = (x, y) => !lessThanOrEquals(x, y);\n\t\tconst greaterThanOrEquals = (x, y) => !lessThan(x, y);\n\n\t\tlet predicate;\n\t\tswitch (condition.op) {\n\t\t\tcase 'isNotNull':\n\t\t\tcase 'isNotEmpty':\n\t\t\t\tpredicate = l => !isNull(l);\n\t\t\t\tbreak;\n\t\t\tcase 'isNull':\n\t\t\tcase 'isEmpty':\n\t\t\t\tpredicate = l => isNull(l);\n\t\t\t\tbreak;\n\t\t\tcase 'equals':\n\t\t\t\tpredicate = l => equals(parse(l), parse(r));\n\t\t\t\tbreak;\n\t\t\tcase 'notEquals':\n\t\t\t\tpredicate = l => !equals(parse(l), parse(r));\n\t\t\t\tbreak;\n\t\t\tcase 'greaterThanOrEquals':\n\t\t\t\tpredicate = l => greaterThanOrEquals(parse(l), parse(r));\n\t\t\t\tbreak;\n\t\t\tcase 'greaterThan':\n\t\t\t\tpredicate = l => greaterThan(parse(l), parse(r));\n\t\t\t\tbreak;\n\t\t\tcase 'lessThanOrEquals':\n\t\t\t\tpredicate = l => lessThanOrEquals(parse(l), parse(r));\n\t\t\t\tbreak;\n\t\t\tcase 'lessThan':\n\t\t\t\tpredicate = l => lessThan(parse(l), parse(r));\n\t\t\t\tbreak;\n\t\t\tcase 'between':\n\t\t\t\tpredicate = l => lessThanOrEquals(parse(l), parse(r[1])) && greaterThanOrEquals(parse(l), parse(r[0]));\n\t\t\t\tbreak;\n\t\t\tcase 'in':\n\t\t\t\tpredicate = l => {\n\t\t\t\t\tconst v = !l && l !== 0 ? 'null' : '' + l;\n\t\t\t\t\treturn map.has(v);\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase 'like':\n\t\t\t\tpredicate = l => l && ('' + l).toLowerCase().includes(('' + r).toLowerCase());\n\t\t\t\tbreak;\n\t\t\tcase 'notLike':\n\t\t\t\tpredicate = l => l && !('' + l).toLowerCase().includes(('' + r).toLowerCase());\n\t\t\t\tbreak;\n\t\t\tcase 'startsWith':\n\t\t\t\tpredicate = l => l && (('' + l).toLowerCase().indexOf(('' + r).toLowerCase()) === 0);\n\t\t\t\tbreak;\n\t\t\tcase 'endsWith':\n\t\t\t\tpredicate = l => {\n\t\t\t\t\tconst substr = ('' + l).slice(-('' + r).length).toLowerCase();\n\t\t\t\t\treturn ('' + r).toLowerCase() === substr;\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new AppError(\n\t\t\t\t\t'predicate.visitor',\n\t\t\t\t\t`Invalid operation ${condition.op}`\n\t\t\t\t);\n\t\t}\n\n\t\treturn l => {\n\t\t\tconst v = getValue(l);\n\t\t\treturn predicate(v);\n\t\t};\n\t}\n}\n","export class FetchModel {\r\n\tconstructor() {\r\n\t\tthis.skip = 0;\r\n\t}\r\n}","import { Resource } from '../resource/resource';\nimport { match } from './match';\nimport { noop } from '../utility/kit';\n\nexport class FilterModel {\n\tconstructor() {\n\t\tthis.resource = new Resource();\n\n\t\tthis.by = {};\n\t\tthis.match = match;\n\t\tthis.fetch = noop;\n\t\tthis.unit = 'default';\t// default|row\n\t\tthis.assertFactory = () => ({\n\t\t\tequals: (x, y) => x === y,\n\t\t\tlessThan: (x, y) => x < y,\n\t\t\tisNull: x => x === '' || x === null || x === undefined\n\t\t});\n\n\t\tthis.operatorFactory = (column) => {\n\t\t\tswitch (column.type) {\n\t\t\t\tcase 'text':\n\t\t\t\tcase 'url':\n\t\t\t\tcase 'email':\n\t\t\t\tcase 'file': {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t'contains',\n\t\t\t\t\t\t'like',\n\t\t\t\t\t\t'notLike',\n\t\t\t\t\t\t'startsWith',\n\t\t\t\t\t\t'endsWith',\n\t\t\t\t\t\t'isEmpty',\n\t\t\t\t\t\t'isNotEmpty',\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t\tcase 'date': {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t'contains',\n\t\t\t\t\t\t'lessThan',\n\t\t\t\t\t\t'greaterThan',\n\t\t\t\t\t\t'between',\n\t\t\t\t\t\t'isEmpty',\n\t\t\t\t\t\t'isNotEmpty',\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t\tcase 'id':\n\t\t\t\tcase 'currency':\n\t\t\t\tcase 'number': {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t'contains',\n\t\t\t\t\t\t'lessThan',\n\t\t\t\t\t\t'lessThanOrEquals',\n\t\t\t\t\t\t'greaterThan',\n\t\t\t\t\t\t'greaterThanOrEquals',\n\t\t\t\t\t\t'between',\n\t\t\t\t\t\t'isEmpty',\n\t\t\t\t\t\t'isNotEmpty',\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t\tdefault: { return ['contains']; }\n\t\t\t}\n\t\t}\n\t}\n}","import { Command } from '../command/command';\nimport { clone, isUndefined } from '../utility/kit';\n\nexport class FilterView {\n\tconstructor(model) {\n\t\tthis.model = model;\n\n\t\tthis.column = new Command({\n\t\t\tsource: 'filter.view',\n\t\t\texecute: (column, search) => {\n\t\t\t\tconst { key } = column;\n\t\t\t\tconst { filter } = model;\n\n\t\t\t\tconst by = clone(filter().by);\n\t\t\t\tif (!isUndefined(search) && search !== '') {\n\t\t\t\t\tby[key] = {\n\t\t\t\t\t\texpression: {\n\t\t\t\t\t\t\tkind: 'group',\n\t\t\t\t\t\t\top: 'and',\n\t\t\t\t\t\t\tleft: {\n\t\t\t\t\t\t\t\tkind: 'condition',\n\t\t\t\t\t\t\t\tleft: key,\n\t\t\t\t\t\t\t\top: 'like',\n\t\t\t\t\t\t\t\tright: search\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tright: null\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdelete by[key];\n\t\t\t\t}\n\n\t\t\t\tfilter({ by });\n\t\t\t}\n\t\t});\n\t}\n\n\thas(column) {\n\t\tconst { by } = this.model.filter();\n\t\treturn by.hasOwnProperty(column.key);\n\t}\n}","import * as columnService from '../column/column.service';\r\nimport { build as buildExpression } from '../expression/expression.build';\r\nimport { PredicateVisitor } from '../expression/predicate.visitor';\r\nimport { yes } from '../utility/kit';\r\n\r\nexport function match(context) {\r\n\tconst { model } = context;\r\n\tconst expression = buildExpression(model.filter().by);\r\n\tif (expression !== null) {\r\n\t\tconst valueFactory = context.labelFactory;\r\n\t\tconst assertFactory = model.filter().assertFactory;\r\n\t\tconst columnMap = columnService.map(model.columnList().line);\r\n\r\n\t\tconst valueColumnFactory = key => valueFactory(columnMap[key]);\r\n\t\tconst assertColumnFactory = key => assertFactory(columnMap[key]);\r\n\t\tconst visitor = new PredicateVisitor(valueColumnFactory, assertColumnFactory);\r\n\t\treturn visitor.visit(expression);\r\n\t}\r\n\r\n\treturn yes;\r\n}","export class FocusModel {\r\n\tconstructor() {\r\n\t\tthis.rowIndex = -1;\r\n\t\tthis.columnIndex = -1;\r\n\t\tthis.isActive = false;\r\n\t}\r\n}","import { isUndefined, clone } from '../utility/kit';\nimport { Disposable } from '../infrastructure/disposable';\n\nexport class FocusService {\n    constructor(model) {\n        this.model = model;\n    }\n\n    activate(rowIndex, columnIndex) {\n        const { focus, scene, sceneChanged } = this.model;\n\n        if (isUndefined(rowIndex)) {\n            rowIndex = focus().rowIndex;\n        }\n\n        if (rowIndex < 0) {\n            rowIndex = 0;\n        }\n\n        if (isUndefined(columnIndex)) {\n            columnIndex = focus().columnIndex;\n        }\n\n        if (columnIndex < 0) {\n            columnIndex = scene().column.line.findIndex(c => c.model.canFocus);\n        }\n\n        if (scene().status === 'stop') {\n            this.focus(rowIndex, columnIndex);\n            return;\n        }\n\n        sceneChanged.on((e, off) => {\n            if (e.hasChanges('status')) {\n                if (e.state.status === 'stop') {\n                    off();\n\n                    this.focus(rowIndex, columnIndex);\n                }\n            }\n        });\n    }\n\n    focus(rowIndex, columnIndex) {\n        const { pagination, focus } = this.model;\n        const { count, current, size } = pagination();\n\n        const last = this.getPage(count);\n        const target = Math.max(0, Math.min(this.getPage(rowIndex), last));\n\n        if (current !== target) {\n            pagination({\n                current: target\n            }, {\n                    source: 'focus.service'\n                });\n\n            this.activate(rowIndex, columnIndex);\n            return;\n        }\n\n        rowIndex = rowIndex - size * current;\n\n        focus({\n            isActive: true,\n            rowIndex,\n            columnIndex\n        }, {\n                source: 'focus.service'\n            });\n    }\n\n    getPage(index) {\n        const { model } = this;\n        const { size } = model.pagination();\n\n        return Math.max(0, Math.floor(index / size));\n    }\n}\n\nexport class FocusAfterRender extends Disposable {\n    constructor(model, table) {\n        super();\n\n        this.using(model.sceneChanged.on((e, off) => {\n            if (e.state.status === 'stop') {\n                table.view.focus();\n                off();\n            }\n        }));\n    }\n}","import { EnumerableResource } from '../resource/resource.enumerable';\r\nimport { Cache } from '../infrastructure/cache';\r\n\r\nexport class FootModel {\r\n\tconstructor() {\r\n\t\tthis.resource = new EnumerableResource();\r\n\t\tthis.cache = new Cache();\r\n\t}\r\n}","import { Aggregation } from '../services/aggregation';\r\nimport { AppError } from '../infrastructure/error';\r\nimport { Log } from '../infrastructure/log';\r\nimport { getFactory as valueFactory } from '../services/value';\r\n\r\nexport class FootView {\r\n\tconstructor(model, table) {\r\n\t\tthis.model = model;\r\n\t\tthis.table = table;\r\n\t\tthis.rows = [];\r\n\r\n\t\tthis.valueFactory = valueFactory;\r\n\r\n\t\tmodel.sceneChanged.watch(e => {\r\n\t\t\tif (e.hasChanges('column')) {\r\n\t\t\t\tthis.invalidate();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tinvalidate() {\r\n\t\tLog.info('view.foot', 'invalidate');\r\n\r\n\t\tthis.rows = new Array(this.count);\r\n\t}\r\n\r\n\tcolumns(row, pin) {\r\n\t\tconst model = this.model;\r\n\t\treturn model.scene().column.area[pin] || [];\r\n\t}\r\n\r\n\tget count() {\r\n\t\tconst model = this.model;\r\n\t\tconst { columns } = model.view();\r\n\t\tconst resourceCount = model.foot().resource.count;\r\n\r\n\t\tfor (let i = 0, length = columns.length; i < length; i++) {\r\n\t\t\tif (columns[i].aggregation) {\r\n\t\t\t\treturn Math.max(resourceCount, 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn resourceCount;\r\n\t}\r\n\r\n\tvalue(column) {\r\n\t\tif (column.aggregation) {\r\n\t\t\tconst aggregation = column.aggregation;\r\n\t\t\tconst aggregationOptions = column.aggregationOptions;\r\n\r\n\t\t\tif (!Aggregation.hasOwnProperty(aggregation)) {\r\n\t\t\t\tthrow new AppError(\r\n\t\t\t\t\t'foot',\r\n\t\t\t\t\t`Aggregation ${aggregation} is not registered`);\r\n\t\t\t}\r\n\r\n\t\t\tconst { rows } = this.model.data();\r\n\t\t\tconst getValue = this.valueFactory(column);\r\n\r\n\t\t\treturn Aggregation[aggregation](rows, getValue, aggregationOptions);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n}","export class FormatService {\r\n    static number(x, format) {\r\n        return x;\r\n    }\r\n\r\n    static date(x, format) {\r\n        return x;\r\n    }\r\n\r\n    static currency(x, format) {\r\n        return x;\r\n    }\r\n}","import { Bag } from '../dom/bag';\nimport { Table } from '../dom/table';\nimport { AppError } from '../infrastructure/error';\nimport { Model } from '../infrastructure/model';\nimport { GRID_PREFIX } from '../definition';\nimport { Shortcut } from '../shortcut/shortcut';\nimport { Fastdom } from '../services/fastdom';\nimport { Disposable } from '../infrastructure/disposable';\n\nexport class GridCtrl extends Disposable {\n\tconstructor(model, context) {\n\t\tsuper();\n\n\t\tthis.model = model;\n\n\t\tconst { grid } = model;\n\t\tif (grid().status === 'bound') {\n\t\t\tthrow new AppError('grid.ctrl', `Model is already used by grid \"${grid().id}\"`);\n\t\t}\n\n\t\tthis.markup = { document };\n\n\t\tthis.bag = {\n\t\t\thead: new Bag(),\n\t\t\tbody: new Bag(),\n\t\t\tfoot: new Bag()\n\t\t};\n\n\t\tconst element = context.element;\n\t\tif (!element.id) {\n\t\t\telement.id = model.grid().id;\n\t\t}\n\n\t\tgrid({ status: 'bound' }, { source: 'grid.ctrl' });\n\n\t\tconst layerFactory = context.layerFactory(this.markup);\n\t\tconst tableContext = {\n\t\t\tlayer: name => layerFactory.create(name),\n\t\t\tbag: this.bag\n\t\t};\n\n\t\tthis.table = new Table(model, this.markup, tableContext);\n\n\t\tmodel.sceneChanged.watch(e => {\n\t\t\tif (e.hasChanges('column')) {\n\t\t\t\tthis.invalidateVisibility();\n\t\t\t}\n\t\t});\n\t}\n\n\tkeyDown(e, source = 'grid') {\n\t\tconst model = this.model;\n\t\tconst { shortcut } = model.action();\n\t\tconst result = shortcut.keyDown(e, source);\n\t\tif (result.length > 0) {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\treturn result;\n\t\t}\n\n\t\tif (e.target.tagName === 'TBODY') {\n\t\t\tconst code = Shortcut.translate(e);\n\t\t\tconst { prevent } = model.navigation();\n\t\t\tif (prevent.has(code)) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tinvalidateVisibility() {\n\t\tconst { left, right } = this.model.scene().column.area;\n\t\tconst { pinTop, pinBottom } = this.model.row();\n\n\t\tthis.model.visibility({\n\t\t\tpin: {\n\t\t\t\tleft: left.length > 0,\n\t\t\t\tright: right.length > 0,\n\t\t\t\ttop: pinTop.length > 0,\n\t\t\t\tbottom: pinBottom.length > 0\n\t\t\t}\n\t\t}, {\n\t\t\t\tsource: 'grid.ctrl'\n\t\t\t});\n\t}\n\n\tinvalidateActive() {\n\t\tconst { view, model } = this.table;\n\t\tif (view.isFocused()) {\n\t\t\tmodel.focus({ isActive: true }, { source: 'grid.ctrl' });\n\t\t}\n\t\telse {\n\t\t\tmodel.focus({ isActive: false }, { source: 'grid.ctrl' });\n\t\t}\n\t}\n\n\tdispose() {\n\t\tsuper.dispose();\n\n\t\tthis.model.grid({ status: 'unbound' }, { source: 'grid.ctrl' });\n\t}\n}\n","import { guid } from '../services/guid';\nimport { GRID_PREFIX } from '../definition';\n\nexport class GridModel {\n\tconstructor() {\n\t\tthis.id = `${GRID_PREFIX}-${guid()}`;\n\t\tthis.status = 'unbound'; //unbound | bound\n\t\tthis.caption = '';\n\t\tthis.interactionMode = 'full' | 'readonly' | 'detached';\n\n\t\t// @deprecated\n\t\tthis.title = '';\n\t}\n}","import { map as getColumnMap } from '../column/column.service';\nimport { AppError } from '../infrastructure/error';\nimport { Aggregation } from '../services/aggregation';\n\nexport function groupBuilder(model) {\n\tconst { rows } = model.data();\n\tconst { pivot } = model.view();\n\tconst nodes = model.view().rows;\n\tconst columns = model.columnList().line;\n\n\tconst pivotRows = pivot.rows;\n\tconst pivotRowLength = pivotRows[0].length;\n\n\tconst groupBy = model.group().by;\n\tconst groupByLength = groupBy.length;\n\n\tconst columnMap = getColumnMap(columns);\n\n\treturn valueFactory => {\n\t\tconst result = [];\n\t\tfor (let i = 0, nodeLength = nodes.length; i < nodeLength; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tconst key = groupBy[Math.min(node.level, groupByLength - 1)];\n\t\t\tconst column = columnMap[key];\n\t\t\tif (!column) {\n\t\t\t\tthrow new AppError(\n\t\t\t\t\t'group.build',\n\t\t\t\t\t`Invalid key \"${key}\"`);\n\t\t\t}\n\n\t\t\tconst aggregation = column.aggregation || 'count';\n\t\t\tif (!Aggregation.hasOwnProperty(aggregation)) {\n\t\t\t\tthrow new AppError(\n\t\t\t\t\t'group.build',\n\t\t\t\t\t`Aggregation ${aggregation} is not registered`);\n\t\t\t}\n\n\t\t\tconst getValue = valueFactory(column);\n\t\t\tconst aggregate = Aggregation[aggregation];\n\n\t\t\tconst aggRow = new Array(pivotRowLength);\n\t\t\tfor (let j = 0, rowLength = node.rows.length; j < rowLength; j++) {\n\t\t\t\tconst rowIndex = node.rows[j];\n\t\t\t\tconst pivotRow = pivotRows[rowIndex];\n\t\t\t\tconst row = rows[rowIndex];\n\t\t\t\tfor (let k = 0; k < pivotRowLength; k++) {\n\t\t\t\t\tif (pivotRow[k]) {\n\t\t\t\t\t\tlet value = aggRow[k];\n\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\tvalue = [];\n\t\t\t\t\t\t\taggRow[k] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalue.push(row);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresult.push(aggRow.map(rs => aggregate(rs, getValue, column.aggregationOptions)));\n\t\t}\n\n\t\treturn result;\n\t};\n}","import { Resource } from '../resource/resource';\nimport { Command } from '../command/command';\nimport { flattenFactory } from './group.service';\n\nexport class GroupModel {\n\tconstructor() {\n\t\tthis.resource = new Resource();\n\t\tthis.mode = 'nest'; // nest | flat | subhead | rowspan\n\t\tthis.summary = null; // null | leaf\n\t\tthis.by = [];\n\t\tthis.shortcut = {\n\t\t\ttoggle: 'space'\n\t\t};\n\t\tthis.toggle = new Command({ source: 'group.model' });\n\t\tthis.toggleAll = new Command({ source: 'group.model' });\n\n\t\tthis.flattenFactory = flattenFactory;\n\t}\n}","import { Node } from '../node/node';\nimport { noop } from '../utility/kit';\n\nexport function flattenFactory(model) {\n\tconst { mode, summary } = model.group();\n\n\tlet push = (node, pos, result) => result.push(node);\n\tswitch (mode) {\n\t\tcase 'rowspan': {\n\t\t\tpush = (node, pos, result) => {\n\t\t\t\tif (node.level === 0 || pos > 0) {\n\t\t\t\t\tresult.push(node);\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tlet pushSummary = noop;\n\tswitch (summary) {\n\t\tcase 'leaf': {\n\t\t\tpushSummary = (node, pos, result, parent, posInParent) => {\n\t\t\t\tif (parent && parent.children.length - 1 === posInParent) {\n\t\t\t\t\tconst { level, key } = node;\n\t\t\t\t\tconst summary = new Node(`${key}-group-summary`, level, 'summary');\n\t\t\t\t\tsummary.rows = Array.from(node.rows);\n\t\t\t\t\tresult.push(summary);\n\t\t\t\t}\n\t\t\t};\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn function flatView(nodes, result = [], parent = null, pos = 0) {\n\t\tfor (let i = 0, iLength = nodes.length; i < iLength; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tpush(node, i, result, parent, pos);\n\n\t\t\tif (node.state.expand) {\n\t\t\t\tconst children = node.children;\n\t\t\t\tif (children.length) {\n\t\t\t\t\tflatView(children, result, node, i);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst { rows, level, key } = node;\n\t\t\t\t\tconst nextLevel = level + 1;\n\t\t\t\t\tfor (let j = 0, jLength = rows.length; j < jLength; j++) {\n\t\t\t\t\t\tconst child = new Node(key, nextLevel, 'row');\n\t\t\t\t\t\tconst row = rows[j];\n\t\t\t\t\t\tchild.rows = [row];\n\n\t\t\t\t\t\tchildren.push(child);\n\t\t\t\t\t\tpush(child, j, result, parent, pos);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tpushSummary(node, i, result, parent, pos);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nexport function findFirstLeaf(node) {\n\tif (node.type !== 'group') {\n\t\treturn node;\n\t}\n\n\tif (!node.state.expand) {\n\t\treturn null;\n\t}\n\n\treturn node.children.length && findFirstLeaf(node.children[0]);\n}\n\n","import { Command } from '../command/command';\nimport { getFactory as valueFactory } from '../services/value';\nimport { getFactory as labelFactory } from '../services/label';\nimport { columnFactory } from '../column/column.factory';\nimport { PipeUnit } from '../pipe/pipe.unit';\nimport { preOrderDFS } from '../node/node.service';\nimport { yes, identity } from '../utility/kit';\n\nfunction rowspanGetNode(node, column) {\n\tif (node.source === column.by) {\n\t\treturn node;\n\t}\n\tif (node.children.length) {\n\t\treturn node.children[0];\n\t}\n\treturn node;\n}\n\nfunction flatVisible(node, column) {\n\treturn column.type !== 'group' || node.source === column.by;\n}\n\nfunction rowspanIsVisible(node, column, parent) {\n\tif (node.source === column.by) {\n\t\treturn !parent || parent.state.expand;\n\t}\n\n\tif (node.children.length) {\n\t\treturn rowspanIsVisible(node.children[0], column, node);\n\t}\n\n\treturn false;\n}\n\nexport class GroupView {\n\tconstructor(model, table, service, shortcut) {\n\t\tthis.model = model;\n\t\tthis.table = table;\n\t\tthis.valueFactory = valueFactory;\n\n\t\tconst toggleStatus = new Command({\n\t\t\tsource: 'group.view',\n\t\t\texecute: (node, column) => {\n\t\t\t\tnode = node || model.navigation().row;\n\t\t\t\tcolumn = column || model.navigation().column;\n\n\t\t\t\tnode = this.getNode(node, column);\n\t\t\t\tconst toggle = model.group().toggle;\n\t\t\t\tif (toggle.execute(node) !== false) {\n\t\t\t\t\tnode.state.expand = !node.state.expand;\n\t\t\t\t\tservice.invalidate({\n\t\t\t\t\t\tsource: 'group.view',\n\t\t\t\t\t\tpipe: PipeUnit.group,\n\t\t\t\t\t\twhy: PipeUnit.group.why\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tcanExecute: (node, column) => {\n\t\t\t\tnode = node || model.navigation().row;\n\t\t\t\tcolumn = column || model.navigation().column;\n\n\t\t\t\tnode = this.getNode(node, column);\n\t\t\t\tconst toggle = model.group().toggle;\n\t\t\t\treturn node && node.type === 'group' && toggle.canExecute(node);\n\t\t\t},\n\t\t\tshortcut: model.group().shortcut.toggle\n\t\t});\n\n\t\tlet shouldExpand = true;\n\n\t\tconst toggleAllStatus = new Command({\n\t\t\tsource: 'group.view',\n\t\t\texecute: () => {\n\t\t\t\tif (model.group().toggleAll.execute() !== false) {\n\t\t\t\t\tconst { nodes } = model.view();\n\t\t\t\t\tconst toggle = model.group().toggle;\n\n\t\t\t\t\tpreOrderDFS(nodes, node => {\n\t\t\t\t\t\tif (toggleStatus.canExecute(node)) {\n\t\t\t\t\t\t\tif (toggle.execute(node) !== false) {\n\t\t\t\t\t\t\t\tnode.state.expand = shouldExpand;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tshouldExpand = !shouldExpand;\n\t\t\t\t\tservice.invalidate({\n\t\t\t\t\t\tsource: 'group.view',\n\t\t\t\t\t\tpipe: PipeUnit.group,\n\t\t\t\t\t\twhy: PipeUnit.group.why\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tcanExecute: () => model.group().toggleAll.canExecute()\n\t\t});\n\n\t\tthis.toggleStatus = toggleStatus;\n\t\tthis.toggleAllStatus = toggleAllStatus;\n\n\t\tshortcut.register([toggleStatus, toggleAllStatus]);\n\n\t\tconst createColumn = columnFactory(model);\n\t\tthis.reference = {\n\t\t\tgroup: createColumn('group')\n\t\t};\n\n\t\tthis.getNode = identity;\n\t\tthis.isVisible = yes;\n\t\tmodel.groupChanged.watch(e => {\n\t\t\tif (e.hasChanges('mode')) {\n\t\t\t\tswitch (e.state.mode) {\n\t\t\t\t\tcase 'rowspan': {\n\t\t\t\t\t\tthis.getNode = rowspanGetNode;\n\t\t\t\t\t\tthis.isVisible = rowspanIsVisible;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'flat':\n\t\t\t\t\t\tthis.getNode = identity;\n\t\t\t\t\t\tthis.isVisible = flatVisible;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\tthis.getNode = identity;\n\t\t\t\t\t\tthis.isVisible = yes;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tcount(node, column) {\n\t\tnode = this.getNode(node, column);\n\t\treturn node.children.length || node.rows.length;\n\t}\n\n\tstatus(node, column) {\n\t\tnode = this.getNode(node, column);\n\t\treturn node.state.expand ? 'expand' : 'collapse';\n\t}\n\n\toffset(node, column) {\n\t\tnode = this.getNode(node, column);\n\t\tconst { mode } = this.model.group();\n\t\tswitch (mode) {\n\t\t\tcase 'nest':\n\t\t\tcase 'subhead': {\n\t\t\t\treturn column ? column.offset * node.level : 0;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\n\tvalue(node, column) {\n\t\tnode = this.getNode(node, column);\n\t\tif (column) {\n\t\t\tconst getLabel = labelFactory(column);\n\t\t\treturn getLabel(node);\n\t\t}\n\t\treturn null;\n\t}\n}","import { PathService } from '../path/path.service';\nimport { parents } from '../services/dom';\nimport { eventPath, elementFromPoint } from '../services/dom';\n\nexport class HeadCtrl {\n\tconstructor(model, view, bag) {\n\t\tthis.model = model;\n\t\tthis.view = view;\n\t\tthis.bag = bag;\n\t\tthis.column = null;\n\t\tthis.pathFinder = new PathService(this.bag.head);\n\t\tthis.x = -1;\n\t\tthis.y = -1;\n\n\t\tmodel.sceneChanged.watch(e => {\n\t\t\tif (e.hasChanges('status')) {\n\t\t\t\tconst { status } = e.state;\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase 'start': {\n\t\t\t\t\t\tthis.highlight(null);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'stop': {\n\t\t\t\t\t\tif (this.x >= 0 && this.y >= 0) {\n\t\t\t\t\t\t\tconst target = elementFromPoint(this.x, this.y);\n\t\t\t\t\t\t\tif (target) {\n\t\t\t\t\t\t\t\tconst path = parents(target);\n\t\t\t\t\t\t\t\tconst cell = this.pathFinder.cell(path);\n\t\t\t\t\t\t\t\tif (cell) {\n\t\t\t\t\t\t\t\t\tthis.highlight(cell.column);\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.highlight(null);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tonMouseMove(e) {\n\t\tthis.x = e.clientX;\n\t\tthis.y = e.clientY;\n\n\t\tif (this.model.scene().status === 'stop') {\n\t\t\tconst cell = this.pathFinder.cell(eventPath(e));\n\t\t\tif (cell) {\n\t\t\t\tthis.highlight(cell.column);\n\t\t\t}\n\t\t}\n\t}\n\n\tonMouseLeave() {\n\t\tthis.x = -1;\n\t\tthis.y = -1;\n\t\tthis.highlight(null);\n\t}\n\n\thighlight(column) {\n\t\tconst { highlight } = this.view;\n\t\tif (!highlight.column.canExecute(column)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.column !== column) {\n\t\t\tif (this.column) {\n\t\t\t\thighlight.column.execute(this.column, false);\n\t\t\t}\n\n\t\t\tthis.column = column;\n\t\t\tif (column) {\n\t\t\t\thighlight.column.execute(this.column, true);\n\t\t\t}\n\t\t}\n\t}\n}","import { Resource } from '../resource/resource';\r\nimport { Cache } from '../infrastructure/cache';\r\n\r\nexport class HeadModel {\r\n\tconstructor() {\r\n\t\tthis.resource = new Resource();\r\n\t\tthis.cache = new Cache();\r\n\t}\r\n}","import { PathService } from '../path/path.service';\nimport { Log } from '../infrastructure/log';\nimport { Command } from '../command/command';\nimport * as columnService from '../column/column.service';\nimport { FilterRowColumn } from '../column-type/filter.row.column';\nimport { GRID_PREFIX } from '../definition';\nimport { calk, find, findLeaves, preOrderDFS } from '../node/node.service';\nimport { eventPath } from '../services/dom';\n\nexport class HeadView {\n\tconstructor(model, table, tagName) {\n\t\tthis.model = model;\n\t\tthis.table = table;\n\t\tthis.tagName = tagName;\n\t\tthis.rows = [];\n\n\t\tconst pathFinder = new PathService(table.context.bag.head);\n\n\t\tthis.drop = new Command({\n\t\t\tsource: 'head.view',\n\t\t\tcanExecute: e => {\n\t\t\t\tif (e.action === 'end') {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tconst cell = pathFinder.cell(eventPath(e));\n\t\t\t\treturn cell && cell.column.canMove;\n\t\t\t},\n\t\t\texecute: e => {\n\t\t\t\tconst sourceKey = e.dragData;\n\t\t\t\tswitch (e.action) {\n\t\t\t\t\tcase 'over': {\n\t\t\t\t\t\tconst th = pathFinder.cell(eventPath(e));\n\t\t\t\t\t\tif (!e.inAreaX(th.element)) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst targetKey = th.column.key;\n\t\t\t\t\t\tif (sourceKey !== targetKey) {\n\t\t\t\t\t\t\tconst { columnList } = model;\n\t\t\t\t\t\t\tconst tree = calk(columnList().index);\n\n\t\t\t\t\t\t\tconst oldPos = find(tree, node => node.key.model.key === sourceKey);\n\t\t\t\t\t\t\tconst newPos = find(tree, node => node.key.model.key === targetKey);\n\t\t\t\t\t\t\tif (oldPos && newPos && newPos.path.indexOf(oldPos.node) < 0) {\n\t\t\t\t\t\t\t\tconst queue = oldPos.path.reverse();\n\t\t\t\t\t\t\t\tconst hostIndex = queue.findIndex(node => node.children.length > 1);\n\t\t\t\t\t\t\t\tif (hostIndex >= 0) {\n\t\t\t\t\t\t\t\t\tconst host = queue[hostIndex];\n\t\t\t\t\t\t\t\t\tconst target = queue[hostIndex - 1] || oldPos.node;\n\t\t\t\t\t\t\t\t\tconst index = host.children.indexOf(target);\n\n\t\t\t\t\t\t\t\t\thost.children.splice(index, 1);\n\t\t\t\t\t\t\t\t\tnewPos.parent.children.splice(newPos.index, 0, target);\n\n\t\t\t\t\t\t\t\t\ttarget.level = newPos.parent.level + 1;\n\t\t\t\t\t\t\t\t\tpreOrderDFS(\n\t\t\t\t\t\t\t\t\t\ttarget.children,\n\t\t\t\t\t\t\t\t\t\t(node, root, parent) => {\n\t\t\t\t\t\t\t\t\t\t\tnode.level = (root || parent).level + 1;\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\ttarget\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\tcolumnList({ index: tree }, { source: 'head.view' });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'end':\n\t\t\t\t\tcase 'drop': {\n\t\t\t\t\t\tconst { index } = model.columnList();\n\t\t\t\t\t\tconst oldPos = find(index, node => node.key.model.key === sourceKey);\n\t\t\t\t\t\tif (oldPos) {\n\t\t\t\t\t\t\tfor (let leaf of findLeaves(oldPos.node)) {\n\t\t\t\t\t\t\t\tconst oldColumn = table.body.column(leaf.key.columnIndex);\n\t\t\t\t\t\t\t\toldColumn.removeClass(`${GRID_PREFIX}-drag`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.drag = new Command({\n\t\t\tsource: 'head.view',\n\t\t\texecute: e => {\n\t\t\t\tconst sourceKey = e.data;\n\t\t\t\tconst { index } = model.columnList();\n\t\t\t\tconst pos = find(index, node => node.key.model.key === sourceKey);\n\t\t\t\tif (pos) {\n\t\t\t\t\tfor (let leaf of findLeaves(pos.node)) {\n\t\t\t\t\t\tconst column = table.body.column(leaf.key.columnIndex);\n\t\t\t\t\t\tcolumn.addClass(`${GRID_PREFIX}-drag`);\n\t\t\t\t\t\treturn () => table.head.cell\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tcanExecute: e => {\n\t\t\t\tconst sourceKey = e.data;\n\t\t\t\tconst { index } = model.columnList();\n\t\t\t\tconst pos = find(index, node => node.key.model.key === sourceKey);\n\t\t\t\treturn pos && pos.node.key.model.canMove\n\t\t\t}\n\t\t});\n\n\t\tthis.resize = new Command({\n\t\t\tsource: 'head.view',\n\t\t\tcanExecute: e => {\n\t\t\t\tconst key = e.data;\n\t\t\t\tconst map = table.data.columnMap();\n\t\t\t\treturn map.hasOwnProperty(key) && map[key].canResize !== false;\n\t\t\t}\n\t\t});\n\n\t\tmodel.dataChanged.watch(e => {\n\t\t\tif (e.hasChanges('columns')) {\n\t\t\t\tconst line = columnService.flatten(e.state.columns);\n\t\t\t\tmodel.columnList({ line }, { source: 'head.view' });\n\t\t\t}\n\t\t});\n\n\t\tmodel.sceneChanged.watch(e => {\n\t\t\tif (e.hasChanges('column')) {\n\t\t\t\tthis.invalidate();\n\t\t\t}\n\t\t});\n\n\t\tmodel.filterChanged.watch(e => {\n\t\t\tif (e.hasChanges('unit')) {\n\t\t\t\tthis.invalidate();\n\t\t\t}\n\t\t});\n\t}\n\n\tcolumns(row, pin) {\n\t\treturn row.filter(c => c.model.pin === pin);\n\t}\n\n\tinvalidate() {\n\t\tLog.info('view.head', 'invalidate');\n\n\t\tconst model = this.model;\n\t\tthis.rows = Array.from(model.scene().column.rows);\n\n\t\tif (this.rows.length > 1) {\n\t\t\tthis.table.view.addClass(`${GRID_PREFIX}-head-span`);\n\t\t} else {\n\t\t\tthis.table.view.removeClass(`${GRID_PREFIX}-head-span`);\n\t\t}\n\n\t\tif (model.filter().unit === 'row') {\n\t\t\tconst filterRow = this.table.data.columns().map(c => new FilterRowColumn(c));\n\t\t\tthis.rows.push(filterRow);\n\t\t}\n\t}\n}\n","export class HighlightModel {\r\n\tconstructor() {\r\n\t\tthis.columns = [];\r\n\t\tthis.rows = [];\r\n\t\tthis.cell = null;\r\n\t}\r\n}","import { Command } from '../command/command';\nimport * as sortService from '../sort/sort.service';\nimport { CellSelector } from '../cell/cell.selector';\nimport { SelectionService } from '../selection/selection.service';\nimport { noop } from '../utility/kit';\nimport { GRID_PREFIX } from '../definition';\nimport { Fastdom } from '../services/fastdom';\nimport { find, findLeaves } from '../node/node.service';\n\nexport class HighlightView {\n\tconstructor(model, table) {\n\t\tthis.model = model;\n\t\tthis.table = table;\n\n\t\tthis.cellSelector = new CellSelector(model, table);\n\t\tthis.selectionService = new SelectionService(model);\n\n\t\tlet sortBlurs = [];\n\t\tlet columnHoverBlurs = [];\n\t\tlet rowHoverBlurs = [];\n\t\tlet selectionBlurs = [];\n\t\tlet cellHoverBlurs = [];\n\n\t\tthis.column = new Command({\n\t\t\tsource: 'highlight.view',\n\t\t\tcanExecute: () => !this.isRendering,\n\t\t\texecute: (column, state) => {\n\t\t\t\tconst columns = Array.from(model.highlight().columns);\n\t\t\t\tconst index = columns.indexOf(column.key);\n\t\t\t\tlet hasChanges = false;\n\t\t\t\tif (state) {\n\t\t\t\t\tif (index < 0) {\n\t\t\t\t\t\tcolumns.push(column.key);\n\t\t\t\t\t\thasChanges = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (index >= 0) {\n\t\t\t\t\t\tcolumns.splice(index, 1);\n\t\t\t\t\t\thasChanges = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (hasChanges) {\n\t\t\t\t\tmodel.highlight({ columns }, {\n\t\t\t\t\t\tsource: 'highlight.view',\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.row = new Command({\n\t\t\tsource: 'highlight.view',\n\t\t\tcanExecute: () => !this.isRendering,\n\t\t\texecute: (row, state) => {\n\t\t\t\tconst rows = Array.from(model.highlight().rows);\n\t\t\t\tconst index = rows.indexOf(row);\n\t\t\t\tlet hasChanges = false;\n\t\t\t\tif (state) {\n\t\t\t\t\tif (index < 0) {\n\t\t\t\t\t\trows.push(row);\n\t\t\t\t\t\thasChanges = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (index >= 0) {\n\t\t\t\t\t\trows.splice(index, 1);\n\t\t\t\t\t\thasChanges = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (hasChanges) {\n\t\t\t\t\tmodel.highlight({ rows }, {\n\t\t\t\t\t\tsource: 'highlight.view'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.cell = new Command({\n\t\t\tsource: 'highlight.view',\n\t\t\tcanExecute: () => !this.isRendering,\n\t\t\texecute: (newCell, state) => {\n\t\t\t\tlet { cell } = model.highlight();\n\t\t\t\tlet hasChanges = true;\n\t\t\t\tif (newCell === cell) {\n\t\t\t\t\thasChanges = false;\n\t\t\t\t}\n\t\t\t\telse if (newCell && cell) {\n\t\t\t\t\thasChanges =\n\t\t\t\t\t\tnewCell.rowIndex !== cell.rowIndex\n\t\t\t\t\t\t|| newCell.columnIndex !== cell.columnIndex;\n\t\t\t\t}\n\n\t\t\t\tif (hasChanges) {\n\t\t\t\t\tmodel.highlight({ cell: newCell }, {\n\t\t\t\t\t\tsource: 'highlight.view'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tmodel.selectionChanged.watch(e => {\n\t\t\tif (e.hasChanges('items')) {\n\t\t\t\tselectionBlurs = this.invalidateSelection(selectionBlurs);\n\t\t\t}\n\t\t});\n\n\t\tmodel.sceneChanged.watch(e => {\n\t\t\tif (e.hasChanges('status')) {\n\t\t\t\tif (e.state.status === 'stop') {\n\t\t\t\t\tcolumnHoverBlurs = this.invalidateColumnHover(columnHoverBlurs);\n\t\t\t\t\trowHoverBlurs = this.invalidateRowHover(rowHoverBlurs);\n\t\t\t\t\tcellHoverBlurs = this.invalidateCellHover(cellHoverBlurs);\n\t\t\t\t\tsortBlurs = this.invalidateSortBy(sortBlurs);\n\t\t\t\t\tselectionBlurs = this.invalidateSelection(selectionBlurs);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tmodel.sortChanged.watch(e => {\n\t\t\tif (!this.isRendering && e.hasChanges('by')) {\n\t\t\t\tsortBlurs = this.invalidateSortBy(sortBlurs);\n\t\t\t}\n\t\t});\n\n\t\tmodel.highlightChanged.watch(e => {\n\t\t\tif (!this.isRendering) {\n\t\t\t\tif (e.hasChanges('cell')) {\n\t\t\t\t\tcellHoverBlurs = this.invalidateCellHover(cellHoverBlurs);\n\t\t\t\t}\n\n\t\t\t\tif (e.hasChanges('columns')) {\n\t\t\t\t\tcolumnHoverBlurs = this.invalidateColumnHover(columnHoverBlurs);\n\t\t\t\t}\n\n\t\t\t\tif (e.hasChanges('rows')) {\n\t\t\t\t\trowHoverBlurs = this.invalidateRowHover(rowHoverBlurs);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tmodel.dragChanged.on(e => {\n\t\t\tif (e.hasChanges('isActive')) {\n\t\t\t\tif (e.state.isActive) {\n\t\t\t\t\tmodel.highlight({\n\t\t\t\t\t\tcolumns: [],\n\t\t\t\t\t\trows: [],\n\t\t\t\t\t\tcell: null\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\tsource: 'highlight.view'\n\t\t\t\t\t\t});\n\n\t\t\t\t\tcolumnHoverBlurs = this.invalidateColumnHover(columnHoverBlurs);\n\t\t\t\t\trowHoverBlurs = this.invalidateRowHover(rowHoverBlurs);\n\t\t\t\t\tcellHoverBlurs = this.invalidateCellHover(cellHoverBlurs);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tget isRendering() {\n\t\treturn this.model.scene().status !== 'stop' || this.model.drag().isActive;\n\t}\n\n\tinvalidateColumnHover(dispose) {\n\t\tdispose.forEach(f => f());\n\t\tdispose = [];\n\t\tconst { columns } = this.model.highlight();\n\t\tfor (let columnKey of columns) {\n\t\t\tdispose.push(this.highlightColumn(columnKey, 'highlighted'));\n\t\t}\n\n\t\treturn dispose;\n\t}\n\n\tinvalidateRowHover(dispose) {\n\t\tdispose.forEach(f => f());\n\t\tdispose = [];\n\t\tconst { rows } = this.model.highlight();\n\t\tfor (let row of rows) {\n\t\t\tdispose.push(this.highlightRow(row, 'highlighted'));\n\t\t}\n\n\t\treturn dispose;\n\t}\n\n\tinvalidateCellHover(dispose) {\n\t\tdispose.forEach(f => f());\n\t\tdispose = [];\n\t\tconst { cell } = this.model.highlight();\n\t\tif (cell) {\n\t\t\tconst { body } = this.table;\n\t\t\tconst { rowIndex, columnIndex } = cell;\n\t\t\tdispose.push(this.highlightCell(body.cell(rowIndex, columnIndex), 'highlighted'));\n\t\t}\n\t\treturn dispose;\n\t}\n\n\tinvalidateSortBy(dispose) {\n\t\tdispose.forEach(f => f());\n\t\tdispose = [];\n\n\t\tconst sortBy = this.model.sort().by;\n\t\tfor (let entry of sortBy) {\n\t\t\tconst key = sortService.key(entry);\n\t\t\tdispose.push(this.highlightColumn(key, 'sorted'));\n\t\t}\n\n\t\treturn dispose;\n\t}\n\n\tinvalidateSelection(dispose) {\n\t\tdispose.forEach(f => f());\n\n\t\tconst selectionItems = this.model.selection().items;\n\t\tconst entries = this.selectionService.lookup(selectionItems);\n\t\tconst cells = this.cellSelector.map(entries);\n\t\tdispose = cells.map(cell => this.highlightCell(cell, 'selected'));\n\t\treturn dispose;\n\t}\n\n\tfindColumnPosition(key) {\n\t\tconst { index } = this.model.columnList();\n\t\tconst pos = find(index, node => node.key.model.key === key);\n\t\tif (pos) {\n\t\t\treturn findLeaves(pos.node).map(leaf => leaf.key.columnIndex);\n\t\t}\n\n\t\treturn [];\n\t}\n\n\thighlightColumn(key, cls) {\n\t\tconst position = this.findColumnPosition(key);\n\t\tif (!position.length) {\n\t\t\treturn noop;\n\t\t}\n\n\t\tconst { head, body, foot } = this.table;\n\t\tFastdom.mutate(() => {\n\t\t\tconst isLeaf = position.length === 1;\n\t\t\tfor (let index of position) {\n\t\t\t\tif (isLeaf) {\n\t\t\t\t\thead.column(index).addClass(`${GRID_PREFIX}-${cls}`);\n\t\t\t\t\thead.column(index - 1).addClass(`${GRID_PREFIX}-${cls}-prev`);\n\t\t\t\t\thead.column(index + 1).addClass(`${GRID_PREFIX}-${cls}-next`);\n\t\t\t\t}\n\n\t\t\t\tconst bodyColumn = body.column(index);\n\t\t\t\tconst column = bodyColumn.model();\n\t\t\t\tif (column && column.canHighlight) {\n\t\t\t\t\tbodyColumn.addClass(`${GRID_PREFIX}-${cls}`);\n\t\t\t\t\tfoot.column(index).addClass(`${GRID_PREFIX}-${cls}`);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn this.blurColumn(key, cls);\n\t}\n\n\tblurColumn(key, cls) {\n\t\tconst position = this.findColumnPosition(key);\n\t\tif (!position.length) {\n\t\t\treturn noop;\n\t\t}\n\n\t\tconst { head, body, foot } = this.table;\n\t\treturn () => {\n\t\t\tFastdom.mutate(() => {\n\t\t\t\tfor (let index of position) {\n\t\t\t\t\thead.column(index).removeClass(`${GRID_PREFIX}-${cls}`);\n\t\t\t\t\thead.column(index - 1).removeClass(`${GRID_PREFIX}-${cls}-prev`);\n\t\t\t\t\thead.column(index + 1).removeClass(`${GRID_PREFIX}-${cls}-next`);\n\t\t\t\t\tbody.column(index).removeClass(`${GRID_PREFIX}-${cls}`);\n\t\t\t\t\tfoot.column(index).removeClass(`${GRID_PREFIX}-${cls}`);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t}\n\n\thighlightRow(index, cls) {\n\t\tif (index < 0) {\n\t\t\treturn noop;\n\t\t}\n\n\t\tconst { body } = this.table;\n\t\tFastdom.mutate(() => body.row(index).addClass(`${GRID_PREFIX}-${cls}`));\n\n\t\treturn this.blurRow(index, cls);\n\t}\n\n\tblurRow(index, cls) {\n\t\tconst table = this.table;\n\t\tif (index < 0) {\n\t\t\treturn noop;\n\t\t}\n\n\t\tconst row = table.body.row(index);\n\t\treturn () => Fastdom.mutate(() => row.removeClass(`${GRID_PREFIX}-${cls}`));\n\t}\n\n\thighlightCell(cell, cls) {\n\t\tFastdom.mutate(() => {\n\t\t\tcell.addClass(`${GRID_PREFIX}-${cls}`);\n\t\t});\n\n\t\treturn this.blurCell(cell, cls);\n\t}\n\n\tblurCell(cell, cls) {\n\t\treturn () => Fastdom.mutate(() => cell.removeClass(`${GRID_PREFIX}-${cls}`));\n\t}\n}","import {CharReader} from '../../io/char.reader';\r\n\r\nexport class Csv {\r\n\tconstructor(delimiter = ',') {\r\n\t\tthis.delimiter = delimiter;\r\n\t}\r\n\r\n\tread(text) {\r\n\t\tconst reader = new CharReader(text);\r\n\t\tconst delimiter = this.delimiter;\r\n\r\n\t\tconst result = [];\r\n\t\tlet line = [];\r\n\t\tlet term = '';\r\n\t\tconst condition = true;\r\n\t\tdo {\r\n\t\t\tconst c = reader.peek();\r\n\t\t\tif (c === ' ') {\r\n\t\t\t\treader.read();\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (c === delimiter) {\r\n\t\t\t\treader.read();\r\n\r\n\t\t\t\tline.push(term);\r\n\t\t\t\tterm = '';\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (c === '\\n') {\r\n\t\t\t\treader.read();\r\n\r\n\t\t\t\tif (line.length > 0 || term.length > 0) {\r\n\t\t\t\t\tline.push(term);\r\n\t\t\t\t\tterm = '';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (line.length > 0) {\r\n\t\t\t\t\tresult.push(line);\r\n\t\t\t\t\tline = [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (c === '\\r' && reader.peekPeek() === '\\n') {\r\n\t\t\t\treader.read();\r\n\t\t\t\treader.read();\r\n\r\n\t\t\t\tif (line.length > 0 || term.length > 0) {\r\n\t\t\t\t\tline.push(term);\r\n\t\t\t\t\tterm = '';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (line.length > 0) {\r\n\t\t\t\t\tresult.push(line);\r\n\t\t\t\t\tline = [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (c === CharReader.eof) {\r\n\t\t\t\treader.read();\r\n\r\n\t\t\t\tif (line.length > 0 || term.length > 0) {\r\n\t\t\t\t\tline.push(term);\r\n\t\t\t\t\tresult.push(line);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (c === '\"') {\r\n\t\t\t\tterm = this.readEscapedValue(reader, term);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tterm = this.readUnescapedValue(reader, term);\r\n\t\t\t}\r\n\t\t}\r\n\t\twhile (condition);\r\n\r\n\t\treturn result.map(this.lineToObj);\r\n\t}\r\n\r\n\treadEscapedValue(reader, term) {\r\n\t\t// Omit double quote\r\n\t\tlet c = reader.read();\r\n\t\twhile (c !== CharReader.eof) {\r\n\t\t\tc = reader.read();\r\n\t\t\tif (c === '\"') {\r\n\t\t\t\tif (reader.peek() === '\"') {\r\n\t\t\t\t\tterm += reader.read();\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tterm += c;\r\n\t\t}\r\n\r\n\t\treturn term;\r\n\t}\r\n\r\n\treadUnescapedValue(reader, term) {\r\n\t\tconst delimiter = this.delimiter;\r\n\t\tlet c = reader.peek();\r\n\t\twhile (c !== CharReader.eof) {\r\n\t\t\tif (c === delimiter || c === '\\n' ||\r\n\t\t\t\t(c === '\\r' && reader.peekPeek() === '\\n'))\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tterm += reader.read();\r\n\t\t\tc = reader.peek();\r\n\t\t}\r\n\r\n\t\treturn term;\r\n\t}\r\n\r\n\tlineToObj(line) {\r\n\t\tconst result = {};\r\n\t\tfor (let i = 0, length = line.length; i < length; i++) {\r\n\t\t\tresult[i] = line[i];\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n}\r\n","import { Resource } from '../resource/resource';\r\n\r\nexport class ImportModel {\r\n\tconstructor() {\r\n\t\tthis.resource = new Resource();\r\n\t}\r\n}","import { isArray } from '../../utility/kit';\r\n\r\nexport class Json {\r\n\tread(data) {\r\n\t\tconst rows = JSON.parse(data);\r\n\t\tif (isArray(rows)) {\r\n\t\t\treturn rows;\r\n\t\t}\r\n\t\treturn [rows];\r\n\t}\r\n}","import { isArray } from '../../utility/kit';\r\n\r\nconst NODE_TYPE = {\r\n\tELEMENT: 1,\r\n\tATTRIBUTE: 2,\r\n\tTEXT: 3,\r\n\tDOCUMENT: 9\r\n};\r\n\r\nexport class Xml {\r\n\tread(text) {\r\n\t\tif (!text) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t\tconst parser = new DOMParser();\r\n\t\tconst root = parser.parseFromString(text, 'text/xml').documentElement;\r\n\t\tconst statistics = this.getStatistics(root);\r\n\t\tconst graph = this.build(root, statistics, 'root');\r\n\t\tconst key = Object.keys(graph)[0];\r\n\t\tconst result = graph[key];\r\n\t\tif (isArray(result)) {\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\treturn [result];\r\n\t}\r\n\r\n\tarrayFromChildren(node, statistics, path, tag) {\r\n\t\tconst result = [];\r\n\t\tconst children = Array.from(node.children).filter(child => child.nodeName === tag);\r\n\t\tfor (let child of children) {\r\n\t\t\tresult.push(this.buildNonArray(child, statistics, path));\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tbuild(node, statistics, path = 'root') {\r\n\t\tconst st = statistics.get(path);\r\n\t\tif (st.isArray) {\r\n\t\t\treturn this.arrayFromChildren(node.parentNode, statistics, path, node.nodeName);\r\n\t\t}\r\n\r\n\t\treturn this.buildNonArray(node, statistics, path);\r\n\t}\r\n\r\n\tbuildNonArray(node, statistics, path = 'root') {\r\n\t\tconst st = statistics.get(path);\r\n\t\tif (st.isObject) {\r\n\t\t\tconst result = {};\r\n\t\t\tconst visited = new Set();\r\n\t\t\tfor (let attr of Array.from(node.attributes)) {\r\n\t\t\t\tresult[attr.name] = attr.value;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let child of Array.from(node.children)) {\r\n\t\t\t\tconst childPath = this.getPath(path, child.nodeName);\r\n\t\t\t\tif (visited.has(childPath)) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvisited.add(childPath);\r\n\t\t\t\tresult[child.nodeName] = this.build(child, statistics, childPath);\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tif (st.isText) {\r\n\t\t\treturn node.textContent;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tinfo(node, lastInfo) {\r\n\t\tif (!lastInfo) {\r\n\t\t\tlastInfo = {\r\n\t\t\t\tisArray: false,\r\n\t\t\t\tisObject: false,\r\n\t\t\t\tisText: false\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tisArray: lastInfo.isArray || Array.from(node.parentNode.children).filter(child => child.nodeName === node.nodeName).length > 1,\r\n\t\t\tisObject: lastInfo.isObject || node.children.length > 0 || node.attributes.length > 0,\r\n\t\t\tisText: lastInfo.isText || this.isTextContainer(node)\r\n\t\t};\r\n\t}\r\n\r\n\tgetStatistics(node, path = 'root', statistics = new Map()) {\r\n\t\tstatistics.set(path, this.info(node, statistics.get(path)));\r\n\r\n\t\tconst children = Array.from(node.children);\r\n\t\tif (children.length > 0) {\r\n\t\t\tfor (let child of children) {\r\n\t\t\t\tconst childPath = this.getPath(path, child.nodeName);\r\n\t\t\t\tthis.getStatistics(child, childPath, statistics);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn statistics;\r\n\t}\r\n\r\n\tisTextContainer(node) {\r\n\t\treturn node.nodeType === NODE_TYPE.ELEMENT && !node.children.length && node.childNodes.length;\r\n\t}\r\n\r\n\tgetPath(...args) {\r\n\t\treturn args.join('/');\r\n\t}\r\n}","import {AppError} from './error';\r\n\r\nexport class Cache {\r\n\tconstructor() {\r\n\t\tthis.items = {};\r\n\t}\r\n\r\n\tset(key, value) {\r\n\t\tthis.items[key] = value;\r\n\t}\r\n\r\n\tget(key) {\r\n\t\tconst entry = this.find(key);\r\n\t\tif (!entry) {\r\n\t\t\tthrow new AppError(\r\n\t\t\t\t'cache.get',\r\n\t\t\t\t`Entry with key was not found \"${key}\"`);\r\n\t\t}\r\n\r\n\t\treturn entry;\r\n\t}\r\n\r\n\thas(key) {\r\n\t\tconst items = this.items;\r\n\t\treturn items.hasOwnProperty(key);\r\n\t}\r\n\r\n\tfind(key) {\r\n\t\tconst items = this.items;\r\n\t\tif (items.hasOwnProperty(key)) {\r\n\t\t\treturn items[key];\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tremove(key) {\r\n\t\tif (!this.items.hasOwnProperty(key)) {\r\n\t\t\tthrow new AppError(\r\n\t\t\t\t'cache.remove',\r\n\t\t\t\t`Entry with key was not found \"${key}\"`);\r\n\t\t}\r\n\r\n\t\tdelete this.items[key];\r\n\t}\r\n\r\n\tclear() {\r\n\t\tthis.items = {};\r\n\t}\r\n}","import { Command } from '../command/command';\r\nimport { noop } from '../utility/kit';\r\n\r\nexport class Composite {\r\n\tstatic func(list, reduce = noop, memo = null) {\r\n\t\treturn (...args) => {\r\n\t\t\tfor (const f of list) {\r\n\t\t\t\tmemo = reduce(memo, f(...args));\r\n\t\t\t}\r\n\r\n\t\t\treturn memo;\r\n\t\t};\r\n\t}\r\n\r\n\tstatic command(list) {\r\n\t\treturn new Command({\r\n\t\t\tsource: 'composite',\r\n\t\t\tcanExecute: (...args) => {\r\n\t\t\t\treturn list.reduce((memo, cmd) => memo || cmd.canExecute(...args), false);\r\n\t\t\t},\r\n\t\t\texecute: (...args) => {\r\n\t\t\t\treturn list\r\n\t\t\t\t\t.filter(cmd => cmd.canExecute(...args))\r\n\t\t\t\t\t.reduce((memo, cmd) => cmd.execute(...args) || memo, undefined);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tstatic list(list) {\r\n\t\treturn list.reduce((memo, xs) => memo.concat(xs), []);\r\n\t}\r\n\r\n\tstatic object(list, memo = {}) {\r\n\t\treturn Object.assign(memo, ...list);\r\n\t}\r\n}","import { Event } from './event';\r\n\r\nexport class Defer {\r\n\tconstructor() {\r\n\t\tthis.promise = new DeferPromise();\r\n\t}\r\n\r\n\treject() {\r\n\t\tthis.promise.reject();\r\n\t}\r\n\r\n\tresolve() {\r\n\t\tthis.promise.resolve();\r\n\t}\r\n}\r\n\r\nclass DeferPromise {\r\n\tconstructor() {\r\n\t\tthis.catchEvent = new Event();\r\n\t\tthis.thenEvent = new Event();\r\n\t}\r\n\r\n\treject() {\r\n\t\tthis.catchEvent.emit();\r\n\t}\r\n\r\n\tresolve() {\r\n\t\tthis.thenEvent.emit();\r\n\t}\r\n\r\n\tcatch(handler) {\r\n\t\tthis.catchEvent.on(handler);\r\n\t}\r\n\r\n\tthen(handler) {\r\n\t\tthis.thenEvent.on(handler);\r\n\t}\r\n}","import { Guard } from '../infrastructure/guard';\r\n\r\nexport class Disposable {\r\n\tconstructor() {\r\n\t\tthis.disposes = [];\r\n\t}\r\n\r\n\tusing(instance) {\r\n\t\tif (instance instanceof Disposable) {\r\n\t\t\tthis.disposes.push(() => instance.dispose());\r\n\t\t\treturn instance;\r\n\t\t}\r\n\r\n\t\tGuard.invokable(instance, 'instance');\r\n\t\tthis.disposes.push(instance);\r\n\t\treturn instance;\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tconst temp = this.disposes;\r\n\t\tthis.disposes = [];\r\n\t\tfor (let dispose of temp) {\r\n\t\t\tdispose();\r\n\t\t}\r\n\t}\r\n}","import { isFunction } from '../utility/kit';\r\n\r\nexport class AppError extends Error {\r\n\tconstructor(name, message) {\r\n\t\tsuper(message);\r\n\t\tthis.name = this.constructor.name;\r\n\t\tthis.message = `qgrid.${name}: ${message}`;\r\n\t\tif (isFunction(Error.captureStackTrace)) {\r\n\t\t\tError.captureStackTrace(this, this.constructor);\r\n\t\t} else {\r\n\t\t\tthis.stack = (new Error(message)).stack;\r\n\t\t}\r\n\t}\r\n}","export class Event {\r\n\tconstructor(e = () => null) {\r\n\t\tthis.handlers = [];\r\n\t\tthis.isDirty = false;\r\n\t\tthis.e = e;\r\n\t}\r\n\r\n\ton(f, lifecycle = 'app') {\r\n\t\tconst handlers = this.handlers;\r\n\t\tconst handler = {f: f};\r\n\t\tconst off = () => {\r\n\t\t\tconst index = handlers.indexOf(handler);\r\n\t\t\tif (index >= 0) {\r\n\t\t\t\thandlers.splice(index, 1);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\thandler.off = off;\r\n\t\thandler.lifecycle = lifecycle;\r\n\t\thandlers.push(handler);\r\n\t\treturn off;\r\n\t}\r\n\r\n\twatch(f, lifecycle = 'app') {\r\n\t\tconst off = this.on(f, lifecycle);\r\n\t\tif (this.isDirty) {\r\n\t\t\tf(this.e(), off);\r\n\t\t}\r\n\r\n\t\treturn off;\r\n\t}\r\n\r\n\temit(e) {\r\n\t\tthis.isDirty = true;\r\n\t\tconst temp = Array.from(this.handlers);\r\n\t\tfor (let i = 0, length = temp.length; i < length; i++) {\r\n\t\t\tconst handler = temp[i];\r\n\t\t\thandler.f(e, handler.off);\r\n\t\t}\r\n\t}\r\n\r\n\tdispose(lifecycle = null) {\r\n\t\tconst temp = Array.from(this.handlers);\r\n\t\tfor (let i = 0, length = temp.length; i < length; i++) {\r\n\t\t\tconst handler = temp[i];\r\n\t\t\tif (!lifecycle || handler.lifecycle === lifecycle) {\r\n\t\t\t\thandler.off();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","export class EventListener {\r\n\tconstructor(element, manager) {\r\n\t\tthis.element = element;\r\n\t\tthis.manager = manager;\r\n\t\tthis.handlers = {};\r\n\t}\r\n\r\n\ton(name, f, settings = false) {\r\n\t\tconst manager = this.manager;\r\n\t\tconst handler = manager.bind(f);\r\n\t\tconst handlerSet = this.handlers[name] || (this.handlers[name] = []);\r\n\t\thandlerSet.push(handler);\r\n\t\tthis.element.addEventListener(name, handler, settings);\r\n\t\treturn () => {\r\n\t\t\tthis.element.removeEventListener(name, handler);\r\n\t\t\tconst index = handlerSet.indexOf(handler);\r\n\t\t\tif (index >= 0) {\r\n\t\t\t\thandlerSet.splice(index, 1);\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\toff() {\r\n\t\tconst handlers = this.handlers;\r\n\t\tconst element = this.element;\r\n\t\tfor (let key of Object.keys(handlers)) {\r\n\t\t\tfor (let handler of Array.from(handlers[key])) {\r\n\t\t\t\telement.removeEventListener(key, handler);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","export class EventManager {\r\n\tconstructor(context, apply = f => f()) {\r\n\t\tthis.context = context;\r\n\t\tthis.apply = apply;\r\n\t}\r\n\r\n\tbind(f) {\r\n\t\tconst handler = f.bind(this.context);\r\n\t\tconst apply = this.apply;\r\n\t\treturn (...args) => apply(() => handler(...args));\r\n\t}\r\n}","import { isFunction, isUndefined } from '../utility/kit';\r\n\r\nexport class Fetch {\r\n\tconstructor(select) {\r\n\t\tthis.select = select;\r\n\t\tthis.busy = null;\r\n\t\tthis.result = null;\r\n\t}\r\n\r\n\trun(item) {\r\n\t\tconst select = this.select;\r\n\r\n\t\tthis.result = null;\r\n\t\tlet alive = true;\r\n\t\tthis.busy = new Promise((resolveBusy, rejectBusy) => {\r\n\t\t\tconst resolve = data => {\r\n\t\t\t\tif (alive) {\r\n\t\t\t\t\tthis.result = data;\r\n\t\t\t\t\tresolveBusy(data);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tif (isFunction(select)) {\r\n\t\t\t\tconst deferred = {\r\n\t\t\t\t\tresolve: resolve,\r\n\t\t\t\t\treject: rejectBusy\r\n\t\t\t\t};\r\n\r\n\t\t\t\tconst args = Array.from(arguments).slice(1) || [];\r\n\t\t\t\tconst result = select(item, deferred, ...args);\r\n\t\t\t\tif (!isUndefined(result)) {\r\n\t\t\t\t\tthis.invoke(result, resolve, rejectBusy);\r\n\t\t\t\t}\r\n\t\t\t\t// when user should invoke d.resolve or d.reject\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.invoke(select, resolve, rejectBusy);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn () => {\r\n\t\t\tthis.busy = null;\r\n\t\t\talive = false;\r\n\t\t};\r\n\t}\r\n\r\n\tinvoke(instance, resolve, reject) {\r\n\t\tif (instance && isFunction(instance.then)) {\r\n\t\t\t// when options.fetch returns promise\r\n\t\t\tinstance.then(resolve);\r\n\t\t\tif (isFunction(instance.catch)) {\r\n\t\t\t\tinstance.catch(reject);\r\n\t\t\t}\r\n\t\t} else if (instance && isFunction(instance.subscribe)) {\r\n\t\t\t// when options.fetch returns observable\r\n\t\t\tlet isProcessed = false;\r\n\t\t\tlet subscription;\r\n\t\t\tsubscription = instance.subscribe(\r\n\t\t\t\t(...args) => {\r\n\t\t\t\t\tresolve(...args);\r\n\t\t\t\t\tisProcessed = true;\r\n\t\t\t\t\tif (subscription && isFunction(subscription.unsubscribe)) {\r\n\t\t\t\t\t\t// when async\r\n\t\t\t\t\t\tsubscription.unsubscribe(); \r\n\t\t\t\t\t\tsubscription = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\treject\r\n\t\t\t);\r\n\r\n\t\t\tif (isProcessed) {\r\n\t\t\t\tif (subscription && isFunction(subscription.unsubscribe)) {\r\n\t\t\t\t\t// when sync\r\n\t\t\t\t\tsubscription.unsubscribe();\r\n\t\t\t\t\tsubscription = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// when options.fetch return result\r\n\t\t\tresolve(instance);\r\n\t\t}\r\n\t}\r\n}","import { AppError } from './error';\r\nimport { isUndefined, isFunction } from '../utility/kit';\r\n\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\nexport class Guard {\r\n\t/**\r\n\t * If value is undefined exception will be thrown\r\n\t * @param {any} value - Value to check\r\n\t * @param {string} name - Argument name\r\n\t */\r\n\tstatic notUndefined(value, name) {\r\n\t\tif (isUndefined(value)) {\r\n\t\t\tthrow new AppError('guard.notUndefined', name);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * If value is null or undefined exception will be thrown\r\n\t * @param {any} value - Value to check\r\n\t * @param {string} name - Argument name\r\n\t */\r\n\tstatic notNull(value, name) {\r\n\t\tif (value === null || isUndefined(value)) {\r\n\t\t\tthrow new AppError('guard.notNull', name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * If value is null or undefined or empty exception will be thrown\r\n\t * @param {any} value - Value to check\r\n\t * @param {string} name - Argument name\r\n\t */\r\n\tstatic notNullOrEmpty(value, name) {\r\n\t\tif (value === null || isUndefined(value) || value === '') {\r\n\t\t\tthrow new AppError('guard.notNullOrEmpty', name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * If value is not a function exception will be thrown\r\n\t * @param {any} value - Value to check\r\n\t * @param {string} name - Argument name\r\n\t */\r\n\tstatic invokable(value, name) {\r\n\t\tif (!isFunction(value)) {\r\n\t\t\tthrow new AppError('guard.invokable', name);\r\n\t\t}\r\n\t}\r\n\t\r\n\tstatic hasProperty(instance, name) {\r\n\t\tGuard.notNull(instance, 'instance');\r\n\t\tif (!hasOwnProperty.call(instance, name)) {\r\n\t\t\tthrow new AppError('guard.hasProperty', name);\r\n\t\t}\r\n\t}\r\n}","/*eslint-disable  no-console*/\n\nexport class Log {\n\tstatic info(/*source, message*/) {\n\t\t// console.info(`qgrid.${source}: ${message}`);\n\t}\n\n\tstatic warn(source, message) {\n\t\t// console.warn(`qgrid.${source}: ${message}`);\n\t}\n\n\tstatic error(source, message) {\n\t\tconsole.error(`qgrid.${source}: ${message}`);\n\t}\n}\n\n/*eslint-enable*/","import { noop, toCamelCase, isUndefined, isArray, isObject } from '../utility/kit';\nimport { Disposable } from './disposable';\nimport { Log } from './log';\n\nexport class ModelBinder extends Disposable {\n\tconstructor(host) {\n\t\tsuper();\n\n\t\tthis.host = host;\n\t}\n\n\tcanWrite(oldValue, newValue, key) {\n\t\tif (isUndefined(newValue)) {\n\t\t\tLog.warn('model.bind', `can't write undefined to the model[${key}]`);\n\t\t\treturn false;\n\t\t}\n\n\t\t// As `Observable | async` returns null by default so we need to filter it out\n\t\tif (isArray(oldValue) && newValue === null) {\n\t\t\tLog.warn('model.bind', `the model[${key}] expects array, got ${newValue}`);\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tbound(model, names, run = true, track = true) {\n\t\tif (model) {\n\t\t\tconst commits = [];\n\t\t\tfor (let name of names) {\n\t\t\t\tconst state = model[name];\n\t\t\t\tconst pack = this.packFactory(name);\n\t\t\t\tconst write = this.writeFactory(name);\n\n\t\t\t\tif (run) {\n\t\t\t\t\tconst oldState = state();\n\t\t\t\t\tconst newState = pack(oldState);\n\t\t\t\t\tconst changes = this.buildChanges(newState);\n\t\t\t\t\twrite({ changes });\n\t\t\t\t}\n\n\t\t\t\tif (track) {\n\t\t\t\t\tthis.using(model[name + 'Changed'].on(write));\n\t\t\t\t}\n\n\t\t\t\tcommits.push(() => {\n\t\t\t\t\tLog.info('model.bind', `to model \"${name}\"`);\n\n\t\t\t\t\tconst oldState = state();\n\t\t\t\t\tconst newState = pack(oldState);\n\t\t\t\t\tstate(newState);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn () => commits.forEach(commit => commit());\n\t\t}\n\n\t\treturn noop;\n\t}\n\n\twriteFactory(name) {\n\t\tconst host = this.host;\n\t\treturn e => {\n\t\t\tconst changes = Object.keys(e.changes);\n\t\t\tfor (let diffKey of changes) {\n\t\t\t\tconst hostKey = toCamelCase(name, diffKey);\n\t\t\t\tif (host.hasOwnProperty(hostKey)) {\n\t\t\t\t\tconst diff = e.changes[diffKey];\n\t\t\t\t\thost[hostKey] = diff.newValue;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tpackFactory(name) {\n\t\treturn state => {\n\t\t\tconst host = this.host;\n\t\t\tconst newState = {};\n\t\t\tfor (let stateKey of Object.keys(state)) {\n\t\t\t\tconst hostKey = toCamelCase(name, stateKey);\n\t\t\t\tif (host.hasOwnProperty(hostKey)) {\n\t\t\t\t\tconst oldValue = state[stateKey];\n\t\t\t\t\tconst newValue = host[hostKey];\n\t\t\t\t\tif (this.canWrite(oldValue, newValue, stateKey)) {\n\t\t\t\t\t\tnewState[stateKey] = newValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn newState;\n\t\t};\n\t}\n\n\tbuildChanges(state) {\n\t\treturn Object\n\t\t\t.keys(state)\n\t\t\t.reduce((memo, key) => {\n\t\t\t\tconst value = state[key];\n\t\t\t\tmemo[key] = {\n\t\t\t\t\tnewValue: value,\n\t\t\t\t\toldValue: value\n\t\t\t\t};\n\t\t\t\treturn memo;\n\t\t\t}, {})\n\t}\n}\n","import { Model } from './model';\nimport { AppError } from './error';\nimport { isFunction } from '../utility/kit';\nimport { GridModel } from '../grid/grid.model';\nimport { PipeModel } from '../pipe/pipe.model';\nimport { SceneModel } from '../scene/scene.model';\nimport { ViewModel } from '../view/view.model';\nimport { DataModel } from '../data/data.model';\nimport { HeadModel } from '../head/head.model';\nimport { BodyModel } from '../body/body.model';\nimport { LayoutModel } from '../layout/layout.model';\nimport { NavigationModel } from '../navigation/navigation.model';\nimport { FocusModel } from '../focus/focus.model';\nimport { ColumnListModel } from '../column-list/column.list.model';\nimport { RowModel } from '../row/row.model';\nimport { SelectionModel } from '../selection/selection.model';\nimport { FootModel } from '../foot/foot.model';\nimport { SortModel } from '../sort/sort.model';\nimport { GroupModel } from '../group/group.model';\nimport { PivotModel } from '../pivot/pivot.model';\nimport { PluginModel } from '../plugin/plugin.model';\nimport { EditModel } from '../edit/edit.model';\nimport { ToolbarModel } from '../toolbar/toolbar.model';\nimport { LayerModel } from '../layer/layer.model';\nimport { PaginationModel } from '../pagination/pagination.model';\nimport { ProgressModel } from '../progress/progress.model';\nimport { HighlightModel } from '../highlight/highlight.model';\nimport { VisibilityModel } from '../visibility/visibility.model';\nimport { FilterModel } from '../filter/filter.model';\nimport { DragModel } from '../drag/drag.model';\nimport { StyleModel } from '../style/style.model';\nimport { ScrollModel } from '../scroll/scroll.model';\nimport { ExportModel } from '../export/export.model';\nimport { ImportModel } from '../import/import.model';\nimport { ActionModel } from '../action/action.model';\nimport { FetchModel } from '../fetch/fetch.model';\nimport { PersistenceModel } from '../persistence/persistence.model';\nimport { ValidationModel } from '../validation/validation.model';\nimport { TemplateModel } from '../template/template.model';\nimport { RestModel } from '../rest/rest.model';\nimport { AnimationModel } from '../animation/animation.model';\nimport { RowListModel } from '../row-list/row.list.model';\n\nexport class ModelBuilder {\n    constructor() {\n        this.state = {};\n\n        this\n            .register('grid', GridModel)\n            .register('pipe', PipeModel)\n            .register('scene', SceneModel)\n            .register('view', ViewModel)\n            .register('data', DataModel)\n            .register('selection', SelectionModel)\n            .register('head', HeadModel)\n            .register('body', BodyModel)\n            .register('navigation', NavigationModel)\n            .register('focus', FocusModel)\n            .register('foot', FootModel)\n            .register('layout', LayoutModel)\n            .register('row', RowModel)\n            .register('columnList', ColumnListModel)\n            .register('rowList', RowListModel)\n            .register('sort', SortModel)\n            .register('group', GroupModel)\n            .register('pivot', PivotModel)\n            .register('edit', EditModel)\n            .register('plugin', PluginModel)\n            .register('toolbar', ToolbarModel)\n            .register('layer', LayerModel)\n            .register('pagination', PaginationModel)\n            .register('progress', ProgressModel)\n            .register('highlight', HighlightModel)\n            .register('visibility', VisibilityModel)\n            .register('filter', FilterModel)\n            .register('drag', DragModel)\n            .register('style', StyleModel)\n            .register('scroll', ScrollModel)\n            .register('export', ExportModel)\n            .register('import', ImportModel)\n            .register('action', ActionModel)\n            .register('fetch', FetchModel)\n            .register('persistence', PersistenceModel)\n            .register('validation', ValidationModel)\n            .register('template', TemplateModel)\n            .register('rest', RestModel)\n            .register('animation', AnimationModel);\n    }\n\n    register(key, ctor) {\n        if (this.state.hasOwnProperty(key)) {\n            throw new AppError(\n                'model',\n                `\"${key}\" is already registered`);\n        }\n\n        if (!isFunction(ctor)) {\n            throw new AppError(\n                `model.${key}`,\n                `\"${ctor}\" is not a valid type, should be an constructor function`);\n        }\n\n        this.state[key] = ctor;\n        return this;\n    }\n\n    build() {\n        return new Model(this.state);\n    }\n}","import { Event } from './event';\nimport { AppError } from './error';\nimport { Guard } from './guard';\nimport { isObject, isArray } from '../utility/kit';\n\nfunction equals(x, y) {\n\t// TODO: improve equality algorithm\n\tif (x === y) {\n\t\treturn true;\n\t}\n\n\tif (isArray(x)) {\n\t\tif (x.length === 0 && y.length === 0) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tif (x instanceof Map) {\n\t\tif (x.size === 0 && y.size === 0) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tif (x instanceof Set) {\n\t\tif (x.size === 0 && y.size === 0) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\nexport class Model {\n\tconstructor(state) {\n\t\tfor (let name of Object.keys(state)) {\n\t\t\tconst Type = state[name];\n\t\t\tconst model = new Type();\n\t\t\tconst changeSet = new Set();\n\t\t\tconst watchArg = () => {\n\t\t\t\tconst prevChanges = Array.from(changeSet.values())\n\t\t\t\t\t.reduce((memo, key) => {\n\t\t\t\t\t\tconst value = model[key];\n\t\t\t\t\t\tmemo[key] = { newValue: value, oldValue: value };\n\t\t\t\t\t\treturn memo;\n\t\t\t\t\t}, {});\n\n\t\t\t\treturn {\n\t\t\t\t\tstate: model,\n\t\t\t\t\tchanges: prevChanges,\n\t\t\t\t\thasChanges: prevChanges.hasOwnProperty.bind(prevChanges),\n\t\t\t\t\ttag: {},\n\t\t\t\t\tsource: 'watch',\n\t\t\t\t};\n\t\t\t};\n\n\t\t\tconst event = new Event(watchArg);\n\t\t\tthis[name + 'Changed'] = event;\n\t\t\tthis[name] = function (state, tag) {\n\t\t\t\tconst { length } = arguments;\n\t\t\t\tif (length) {\n\t\t\t\t\tif (!isObject(state)) {\n\t\t\t\t\t\tthrow new AppError(\n\t\t\t\t\t\t\t`model.${name}`,\n\t\t\t\t\t\t\t`\"${state}\" is not a valid type, should be an object`);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst changes = {};\n\t\t\t\t\tlet hasChanges = false;\n\t\t\t\t\tconst keys = Object.keys(state);\n\t\t\t\t\tfor (let i = 0, keyLength = keys.length; i < keyLength; i++) {\n\t\t\t\t\t\tconst key = keys[i];\n\t\t\t\t\t\tif (!model.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tthrow new AppError(\n\t\t\t\t\t\t\t\t`model.${name}`,\n\t\t\t\t\t\t\t\t`\"${key}\" is not a valid key, only [${Object.keys(model).join(', ')}] keys are supported`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst newValue = state[key];\n\t\t\t\t\t\tconst oldValue = model[key];\n\t\t\t\t\t\tif (!equals(newValue, oldValue)) {\n\t\t\t\t\t\t\t// Log.info('model', `value changed - \"${name}.${key}\"`);\n\t\t\t\t\t\t\tGuard.notUndefined(newValue, `model.${name}.${key}`);\n\n\t\t\t\t\t\t\tmodel[key] = newValue;\n\t\t\t\t\t\t\thasChanges = true;\n\t\t\t\t\t\t\tchanges[key] = {\n\t\t\t\t\t\t\t\tnewValue: newValue,\n\t\t\t\t\t\t\t\toldValue: oldValue\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tchangeSet.add(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// else {\n\t\t\t\t\t\t// \tLog.warn('model', `value was not changed - \"${name}.${key}\"`);\n\t\t\t\t\t\t// }\n\t\t\t\t\t}\n\n\t\t\t\t\tif (hasChanges) {\n\t\t\t\t\t\tevent.emit({\n\t\t\t\t\t\t\tstate: model,\n\t\t\t\t\t\t\tchanges,\n\t\t\t\t\t\t\thasChanges: changes.hasOwnProperty.bind(changes),\n\t\t\t\t\t\t\ttag: length > 1 ? tag : {},\n\t\t\t\t\t\t\tsource: 'emit'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t\treturn model;\n\t\t\t};\n\t\t}\n\t}\n}\n","import { Guard } from './guard';\nimport { Disposable } from './disposable';\n\nexport class ModelProxy extends Disposable {\n\tconstructor(target, temp) {\n\t\tsuper();\n\n\t\tconst modelHandler = {\n\t\t\tget: (target, key) => {\n\t\t\t\tGuard.hasProperty(target, key);\n\n\t\t\t\tconst selector = target[key];\n\t\t\t\tif (key.endsWith('Changed')) {\n\t\t\t\t\tconst eventHandler = {\n\t\t\t\t\t\tget: (event, key) => (...args) => this.using(event[key](...args))\n\t\t\t\t\t};\n\n\t\t\t\t\treturn new Proxy(selector, eventHandler);\n\t\t\t\t}\n\n\t\t\t\tif (temp) {\n\t\t\t\t\tconst modelGetter = {\n\t\t\t\t\t\tget: (model, key) => (...args) => {\n\t\t\t\t\t\t\tconst state = model[key];\n\t\t\t\t\t\t\tif (!args.length) {\n\t\t\t\t\t\t\t\treturn state;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst value = args[0];\n\t\t\t\t\t\t\tconst inst = state();\n\t\t\t\t\t\t\tconst originValue = Object\n\t\t\t\t\t\t\t\t.keys(value)\n\t\t\t\t\t\t\t\t.reduce((memo, key) => {\n\t\t\t\t\t\t\t\t\tmemo[key] = inst[key];\n\t\t\t\t\t\t\t\t\treturn memo;\n\t\t\t\t\t\t\t\t}, {});\n\n\t\t\t\t\t\t\tthis.using(() => state(originValue, { source: 'model.proxy' }));\n\t\t\t\t\t\t\treturn state(...args);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\treturn new Proxy(selector, modelGetter);\n\t\t\t\t}\n\n\t\t\t\treturn selector;\n\t\t\t}\n\t\t};\n\n\t\tthis.target = target;\n\t\tthis.subject = new Proxy(target, modelHandler);\n\t}\n\n\ttoString() {\n\t\treturn this.target.toString ? this.target.toString() : JSON.stringify(this.toJSON());\n\t}\n\n\ttoJSON() {\n\t\treturn this.target.toJSON ? this.target.toJSON() : this.target;\n\t}\n}","export class Range {\r\n\tconstructor(start, end) {\r\n\t\tthis.start = start;\r\n\t\tthis.end = end;\r\n\t}\r\n}","export class CharReader {\r\n\tconstructor(text) {\r\n\t\tthis.text = text || '';\r\n\t\tthis.peeks = [];\r\n\t\tthis.position = 0;\r\n\t\tthis.length = this.text.length;\r\n\t}\r\n\r\n\tstatic get eof() {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tread() {\r\n\t\tconst peeks = this.peeks;\r\n\t\tif (peeks.length > 0) {\r\n\t\t\treturn peeks.pop();\r\n\t\t}\r\n\r\n\t\tconst nextPosition = this.position + 1;\r\n\t\tif (nextPosition < this.length) {\r\n\t\t\tconst c = this.text[this.position];\r\n\t\t\tthis.position = nextPosition;\r\n\t\t\treturn c;\r\n\t\t}\r\n\r\n\t\treturn CharReader.eof;\r\n\t}\r\n\r\n\tpeek() {\r\n\t\treturn this.peekCore(0);\r\n\t}\r\n\r\n\tpeekPeek() {\r\n\t\treturn this.peekCore(1);\r\n\t}\r\n\r\n\tpeekCore(offset) {\r\n\t\tconst peeks = this.peeks;\r\n\t\tif (offset < peeks.length) {\r\n\t\t\treturn peeks[offset];\r\n\t\t}\r\n\r\n\t\tconst length = this.length;\r\n\t\tfor (let i = peeks.length; i <= offset; i++) {\r\n\t\t\tconst nextPosition = this.position + 1;\r\n\t\t\tif (nextPosition >= length) {\r\n\t\t\t\treturn CharReader.eof;\r\n\t\t\t}\r\n\r\n\t\t\tconst c = this.text[this.position];\r\n\t\t\tthis.position = nextPosition;\r\n\t\t\tpeeks.push(c);\r\n\t\t}\r\n\r\n\t\treturn peeks[offset];\r\n\t}\r\n\r\n\tseek(offset) {\r\n\t\tconst peeks = this.peeks;\r\n\t\tconst peekCount = peeks.length;\r\n\t\tpeeks.splice(0, Math.Min(offset, peekCount));\r\n\t\toffset -= peekCount;\r\n\t\twhile (--offset >= 0) {\r\n\t\t\tthis.read();\r\n\t\t}\r\n\r\n\t\treturn this.peek();\r\n\t}\r\n}","const controlSet = new Set([\r\n\t'shift',\r\n\t'ctrl',\r\n\t'alt',\r\n\t'pause',\r\n\t'break',\r\n\t'capslock',\r\n\t'escape',\r\n\t'insert',\r\n\t'left',\r\n\t'right',\r\n\t'end',\r\n\t'home',\r\n\t'pageup',\r\n\t'pagedown',\r\n\t'up',\r\n\t'down',\r\n\t'f1',\r\n\t'f2',\r\n\t'f3',\r\n\t'f4',\r\n\t'f5',\r\n\t'f6',\r\n\t'f7',\r\n\t'f8',\r\n\t'f9',\r\n\t'f10',\r\n\t'f11',\r\n\t'f12',\r\n\t'numlock',\r\n\t'scrolllock'\r\n]);\r\n\r\nconst nonPrintableSet = new Set([\r\n\t'enter'\r\n]);\r\n\r\nconst codeMap = new Map()\r\n\t.set(8, 'backspace')\r\n\t.set(9, 'tab')\r\n\t.set(13, 'enter')\r\n\t.set(16, 'shift')\r\n\t.set(17, 'ctrl')\r\n\t.set(20, 'capslock')\r\n\t.set(27, 'escape')\r\n\t.set(32, 'space')\r\n\t.set(33, 'pageup')\r\n\t.set(34, 'pagedown')\r\n\t.set(35, 'end')\r\n\t.set(36, 'home')\r\n\t.set(37, 'left')\r\n\t.set(38, 'up')\r\n\t.set(39, 'right')\r\n\t.set(40, 'down')\r\n\t.set(45, 'insert')\r\n\t.set(46, 'delete')\r\n\t.set(96, 'numpad0')\r\n\t.set(97, 'numpad1')\r\n\t.set(98, 'numpad2')\r\n\t.set(99, 'numpad3')\r\n\t.set(100, 'numpad4')\r\n\t.set(101, 'numpad5')\r\n\t.set(102, 'numpad6')\r\n\t.set(103, 'numpad7')\r\n\t.set(104, 'numpad8')\r\n\t.set(105, 'numpad9')\r\n\t.set(112, 'f1')\r\n\t.set(113, 'f2')\r\n\t.set(114, 'f3')\r\n\t.set(115, 'f4')\r\n\t.set(116, 'f5')\r\n\t.set(117, 'f6')\r\n\t.set(118, 'f7')\r\n\t.set(119, 'f8')\r\n\t.set(120, 'f9')\r\n\t.set(121, 'f10')\r\n\t.set(122, 'f11')\r\n\t.set(123, 'f12')\r\n\t.set(144, 'numlock')\r\n\t.set(145, 'scrolllock');\r\n\r\nconst codeSet = new Set(codeMap.values());\r\n\r\nconst printableMap = new Map()\r\n\t.set('space', ' ');\r\n\r\nexport class Keyboard {\r\n\tstatic isPrintable(code) {\r\n\t\treturn !nonPrintableSet.has(code) && !Keyboard.isControl(code);\r\n\t}\r\n\r\n\tstatic isControl(code) {\r\n\t\treturn controlSet.has(code);\r\n\t}\r\n\r\n\tstatic stringify(code, key) {\r\n\t\tif (codeSet.has(code)) {\r\n\t\t\treturn printableMap.get(code) || '';\r\n\t\t}\r\n\r\n\t\treturn key;\r\n\t}\r\n\r\n\tstatic translate(code) {\r\n\t\treturn codeMap.get(code) || String.fromCharCode(code);\r\n\t}\r\n}\r\n\r\n","import { Resource } from '../resource/resource';\r\n\r\nexport class LayerModel {\r\n\tconstructor() {\r\n\t\tthis.resource = new Resource();\r\n\t}\r\n}","export class LayoutModel {\r\n\tconstructor() {\r\n\t\tthis.columns = new Map();\r\n\t\tthis.rows = new Map();\r\n\t}\r\n}","import * as css from '../services/css';\nimport * as columnService from '../column/column.service';\nimport { Log } from '../infrastructure/log';\nimport { Disposable } from '../infrastructure/disposable';\n\nexport class LayoutView extends Disposable {\n\tconstructor(model, table, service) {\n\t\tsuper();\n\n\t\tthis.model = model;\n\t\tthis.table = table;\n\t\tthis.service = service;\n\n\t\tmodel.navigationChanged.watch(e => {\n\t\t\tif (e.hasChanges('cell')) {\n\t\t\t\tconst oldColumn = e.changes.cell.oldValue ? e.changes.cell.oldValue.column : {};\n\t\t\t\tconst newColumn = e.changes.cell.newValue ? e.changes.cell.newValue.column : {};\n\n\t\t\t\tif (oldColumn.key !== newColumn.key && (oldColumn.viewWidth || newColumn.viewWidth)) {\n\t\t\t\t\tconst form = this.updateColumnForm();\n\t\t\t\t\tthis.invalidateColumns(form);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.onInit();\n\t}\n\n\tonInit() {\n\t\tconst model = this.model;\n\n\t\tconst styleRow = this.styleRow.bind(this);\n\t\tmodel.layoutChanged.watch(e => {\n\t\t\tif (e.tag.source === 'layout.view') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (e.hasChanges('columns')) {\n\t\t\t\tconst form = this.updateColumnForm();\n\t\t\t\tthis.invalidateColumns(form);\n\t\t\t}\n\t\t});\n\n\t\tmodel.rowChanged.watch(e => {\n\t\t\tif (e.hasChanges('canResize')) {\n\t\t\t\tconst rows = Array.from(model.style().rows);\n\t\t\t\tif (e.state.canResize) {\n\t\t\t\t\trows.push(styleRow);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst index = model.style.rows.indexOf(styleRow);\n\t\t\t\t\trows.splice(index, 1);\n\t\t\t\t}\n\t\t\t\tmodel.style({ rows }, { source: 'layout.view' });\n\t\t\t}\n\t\t});\n\n\t\tmodel.dataChanged.watch(e => {\n\t\t\tif (e.hasChanges('columns')) {\n\t\t\t\tmodel.layout({\n\t\t\t\t\tcolumns: new Map()\n\t\t\t\t}, {\n\t\t\t\t\t\tsource: 'layout.view',\n\t\t\t\t\t\tbehavior: 'core'\n\t\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tmodel.sceneChanged.watch(e => {\n\t\t\tif (e.hasChanges('column')) {\n\t\t\t\tthis.invalidateColumns();\n\t\t\t}\n\n\t\t\tif (e.hasChanges('status')) {\n\t\t\t\tif (e.state.status === 'stop') {\n\t\t\t\t\tthis.updateColumnForm();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tupdateColumnForm() {\n\t\tconst { model, table } = this;\n\t\tconst { head } = table;\n\t\tconst { cells } = head.context.bag;\n\t\tconst layout = model.layout().columns;\n\n\t\tconst form = new Map();\n\t\tfor (let cell of cells) {\n\t\t\tconst { column, rowIndex, columnIndex } = cell;\n\t\t\tif (!column.canResize) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst { key } = column;\n\t\t\tif (layout.has(key)) {\n\t\t\t\tform.set(key, { width: layout.get(key).width });\n\t\t\t} else {\n\t\t\t\tconst th = head.cell(rowIndex, columnIndex);\n\t\t\t\tconst width = th.width();\n\n\t\t\t\t// It can be that clientWidth is zero on start, while css is not applied.\n\t\t\t\tif (width) {\n\t\t\t\t\tform.set(key, { width });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmodel.layout({ columns: form }, { source: 'layout.view', behavior: 'core' });\n\n\t\tconst { column } = model.navigation();\n\t\tif (column && column.viewWidth) {\n\t\t\tconst viewForm = new Map(form)\n\t\t\tconst columnForm = form.get(column.key);\n\t\t\tviewForm.set(column.key, { width: columnForm ? Math.max(columnForm.width, column.viewWidth) : column.viewWidth });\n\t\t\treturn viewForm;\n\t\t}\n\n\t\treturn form;\n\t}\n\n\tinvalidateColumns(form) {\n\t\tLog.info('layout', 'invalidate columns');\n\n\t\tconst table = this.table;\n\t\tconst columns = table.data.columns();\n\t\tconst getWidth = columnService.widthFactory(table, form);\n\n\t\tconst style = {};\n\t\tlet { length } = columns;\n\n\t\twhile (length--) {\n\t\t\tconst column = columns[length];\n\t\t\tconst width = getWidth(column.key);\n\t\t\tif (null !== width) {\n\t\t\t\tconst key = css.escape(column.key);\n\t\t\t\tconst size = width + 'px';\n\t\t\t\tconst sizeStyle = {\n\t\t\t\t\t'width': size,\n\t\t\t\t\t'min-width': size,\n\t\t\t\t\t'max-width': size\n\t\t\t\t};\n\n\t\t\t\tstyle[`td.q-grid-the-${key}`] = sizeStyle;\n\t\t\t\tstyle[`th.q-grid-the-${key}`] = sizeStyle;\n\t\t\t}\n\t\t}\n\n\t\tconst sheet = css.sheet(this.gridId, 'layout-column');\n\t\tsheet.set(style);\n\t}\n\n\tstyleRow(row, context) {\n\t\tconst model = this.model;\n\t\tconst layout = model.layout;\n\t\tconst form = layout().rows;\n\t\tconst style = form.get(row);\n\t\tif (style) {\n\t\t\tcontext.class(`resized-${style.height}px`, { height: style.height + 'px' });\n\t\t}\n\t}\n\n\tdispose() {\n\t\tsuper.dispose();\n\n\t\tconst sheet = css.sheet(this.gridId, 'layout-column');\n\t\tsheet.remove();\n\t}\n\n\tget gridId() {\n\t\treturn this.model.grid().id;\n\t}\n}","export const NO_BUTTON = 0;\nexport const LEFT_BUTTON = 1;\nexport const MIDDLE_BUTTON = 2;\nexport const RIGHT_BUTTON = 3;\n\nexport function checkButtonCode(event, code) {\n    return getButtonCode(event) === code;\n}\n\nexport function getButtonCode(event) {\n    return event.which;\n}\n\n","import { Command } from '../command/command';\n\nexport class Navigation {\n\tconstructor(model, table) {\n\t\tthis.model = model;\n\t\tthis.table = table;\n\t}\n\n\tpositon(y, direction) {\n\t\tconst table = this.table;\n\t\tconst body = table.body;\n\t\tconst lastRow = this.lastRow;\n\t\tconst lower = table.view.scrollHeight() - table.view.height();\n\n\t\tlet index = 0;\n\t\tlet offset = 0;\n\n\t\t// TODO: improve performance\n\t\twhile (index <= lastRow && offset <= y) {\n\t\t\toffset += body.row(index).height();\n\t\t\tindex++;\n\t\t}\n\n\t\tif (direction === 'down' && body.row(index)) {\n\t\t\toffset -= body.row(index).height();\n\t\t\tindex--;\n\t\t}\n\n\t\tconst row = Math.max(this.firstRow, Math.min(lastRow, index));\n\t\toffset = Math.min(offset, lower);\n\t\treturn { row, offset };\n\t}\n\n\tgoTo(rowIndex, columnIndex, source = 'navigation') {\n\t\tlet cell = this.cell(rowIndex, columnIndex);\n\t\tif (!cell) {\n\t\t\t// TODO: make it better, right it just a huck for row-details,\n\t\t\t// need to support rowspan and colspan\n\t\t\tcell = this.cell(rowIndex, this.firstColumn);\n\t\t}\n\n\t\tthis.model.navigation({ cell }, { source });\n\t\treturn true;\n\t}\n\n\tcolumns(rowIndex) {\n\t\tconst columns = this.table.body.columns(rowIndex);\n\t\tconst index = [];\n\t\tfor (let i = 0, length = columns.length; i < length; i++) {\n\t\t\tconst column = columns[i];\n\t\t\tif (column.model().canFocus) {\n\t\t\t\tindex.push(column.index);\n\t\t\t}\n\t\t}\n\t\treturn index;\n\t}\n\n\tget currentColumn() {\n\t\tconst columns = this.columns(this.currentRow);\n\t\tconst columnIndex = this.model.navigation().columnIndex;\n\t\tconst index = columns.indexOf(columnIndex);\n\t\treturn columns.length ? columns[Math.max(index, 0)] : -1;\n\t}\n\n\tget nextColumn() {\n\t\tconst columns = this.columns(this.currentRow);\n\t\tconst index = columns.indexOf(this.currentColumn);\n\t\treturn index >= 0 && index < columns.length - 1 ? columns[index + 1] : -1;\n\t}\n\n\tget prevColumn() {\n\t\tconst columns = this.columns(this.currentRow);\n\t\tconst index = columns.indexOf(this.currentColumn);\n\t\treturn index > 0 && index < columns.length ? columns[index - 1] : -1;\n\t}\n\n\tget lastColumn() {\n\t\tconst columns = this.columns(this.currentRow);\n\t\tconst index = columns.length - 1;\n\t\treturn index >= 0 ? columns[index] : -1;\n\t}\n\n\tget firstColumn() {\n\t\tconst columns = this.columns(this.currentRow);\n\t\treturn columns.length ? columns[0] : -1;\n\t}\n\n\tget currentRow() {\n\t\tconst { rowIndex } = this.model.navigation();\n\t\tif (rowIndex < 0) {\n\t\t\treturn this.model.scene().rows.length ? 0 : -1;\n\t\t}\n\n\t\treturn rowIndex;\n\t}\n\n\tget nextRow() {\n\t\tconst row = this.currentRow + 1;\n\t\treturn row <= this.lastRow ? row : -1;\n\t}\n\n\tget prevRow() {\n\t\tconst row = this.currentRow - 1;\n\t\treturn row >= 0 ? row : -1;\n\t}\n\n\tget firstRow() {\n\t\treturn Math.min(0, this.lastRow);\n\t}\n\n\tget lastRow() {\n\t\treturn this.table.body.rowCount(this.currentColumn) - 1;\n\t}\n\n\tcell(rowIndex, columnIndex) {\n\t\tconst cell = this.table.body.cell(rowIndex, columnIndex);\n\t\tconst model = cell.model();\n\t\tif (model) {\n\t\t\tconst { row, column } = model;\n\t\t\treturn {\n\t\t\t\trowIndex,\n\t\t\t\tcolumnIndex,\n\t\t\t\trow,\n\t\t\t\tcolumn\n\t\t\t};\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tcontext(type, settings) {\n\t\tconst model = this.model;\n\t\tconst oldRow = this.currentRow;\n\t\tconst oldColumn = this.currentColumn;\n\t\tconst keyCode = model.action().shortcut.keyCode;\n\n\t\treturn Object.assign({\n\t\t\tmodel,\n\t\t\ttype,\n\t\t\toldRow,\n\t\t\toldColumn,\n\t\t\tkeyCode\n\t\t}, settings);\n\t}\n\n\tget commands() {\n\t\tconst model = this.model;\n\t\tconst table = this.table;\n\t\tconst shortcut = model.navigation().shortcut;\n\t\tconst edit = model.edit;\n\n\t\tconst canNavigate = () => {\n\t\t\tif (edit().state === 'view') {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst column = table.body.column(this.currentColumn).model();\n\t\t\treturn column && (column.editorOptions.trigger === 'focus' || column.editorOptions.cruise === 'transparent');\n\t\t};\n\n\t\tconst go = this.model.navigation().go;\n\n\t\tconst commands = {\n\t\t\tgoDown: new Command({\n\t\t\t\tsource: 'navigation',\n\t\t\t\tshortcut: shortcut.down,\n\t\t\t\tcanExecute: () => {\n\t\t\t\t\tif (canNavigate()) {\n\t\t\t\t\t\tconst newRow = this.nextRow;\n\t\t\t\t\t\treturn newRow >= 0 && go.canExecute(this.context('down', { newRow }));\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t},\n\t\t\t\texecute: () => {\n\t\t\t\t\tconst newRow = this.nextRow;\n\t\t\t\t\tconst newColumn = this.currentColumn;\n\t\t\t\t\treturn go.execute(this.context('down', { newRow, newColumn })) && this.goTo(newRow, newColumn);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tgoUp: new Command({\n\t\t\t\tsource: 'navigation',\n\t\t\t\tshortcut: shortcut.up,\n\t\t\t\tcanExecute: () => {\n\t\t\t\t\tif (canNavigate()) {\n\t\t\t\t\t\tconst newRow = this.prevRow;\n\t\t\t\t\t\treturn newRow >= 0 && go.canExecute(this.context('up', { newRow }));\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t},\n\t\t\t\texecute: () => {\n\t\t\t\t\tconst newRow = this.prevRow;\n\t\t\t\t\tconst newColumn = this.currentColumn;\n\t\t\t\t\treturn go.execute(this.context('up', { newRow, newColumn })) && this.goTo(newRow, newColumn);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tgoRight: new Command({\n\t\t\t\tsource: 'navigation',\n\t\t\t\tshortcut: shortcut.right,\n\t\t\t\tcanExecute: () => {\n\t\t\t\t\tif (canNavigate()) {\n\t\t\t\t\t\tconst newColumn = this.nextColumn;\n\t\t\t\t\t\treturn newColumn >= 0 && go.canExecute(this.context('right', { newColumn }));\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t},\n\t\t\t\texecute: () => {\n\t\t\t\t\tconst newRow = this.currentRow;\n\t\t\t\t\tconst newColumn = this.nextColumn;\n\t\t\t\t\treturn go.execute(this.context('right', { newRow, newColumn })) && this.goTo(newRow, newColumn);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tgoLeft: new Command({\n\t\t\t\tsource: 'navigation',\n\t\t\t\tshortcut: shortcut.left,\n\t\t\t\tcanExecute: () => {\n\t\t\t\t\tif (canNavigate()) {\n\t\t\t\t\t\tconst newColumn = this.prevColumn;\n\t\t\t\t\t\treturn newColumn >= 0 && go.canExecute(this.context('left', { newColumn }));\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t},\n\t\t\t\texecute: () => {\n\t\t\t\t\tconst newRow = this.currentRow;\n\t\t\t\t\tconst newColumn = this.prevColumn;\n\t\t\t\t\treturn go.execute(this.context('left', { newRow, newColumn })) && this.goTo(newRow, newColumn);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tgoNext: new Command({\n\t\t\t\tsource: 'navigation',\n\t\t\t\tshortcut: shortcut.next,\n\t\t\t\tcanExecute: () => {\n\t\t\t\t\tconst newRow = this.nextRow;\n\t\t\t\t\tconst newColumn = this.nextColumn;\n\t\t\t\t\tconst hasNextColumn = newColumn >= 0;\n\t\t\t\t\tconst hasNextRow = newRow >= 0;\n\t\t\t\t\treturn (hasNextColumn || hasNextRow) && go.canExecute(this.context('next', { newRow, newColumn }));\n\t\t\t\t},\n\t\t\t\texecute: () => {\n\t\t\t\t\tconst nextColumn = this.nextColumn;\n\t\t\t\t\tconst hasNextColumn = nextColumn >= 0;\n\t\t\t\t\tconst newRow = hasNextColumn ? this.currentRow : this.nextRow;\n\t\t\t\t\tconst newColumn = hasNextColumn ? nextColumn : this.firstColumn;\n\n\t\t\t\t\treturn go.execute(this.context('next', { newRow, newColumn })) && this.goTo(newRow, newColumn);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tgoPrevious: new Command({\n\t\t\t\tsource: 'navigation',\n\t\t\t\tshortcut: shortcut.previous,\n\t\t\t\tcanExecute: () => {\n\t\t\t\t\tconst newColumn = this.prevColumn;\n\t\t\t\t\tconst newRow = this.prevRow;\n\t\t\t\t\tconst hasPrevColumn = newColumn >= 0;\n\t\t\t\t\tconst hasPrevRow = newRow >= 0;\n\t\t\t\t\treturn (hasPrevColumn || hasPrevRow) && go.canExecute(this.context('previous', { newRow, newColumn }));\n\t\t\t\t},\n\t\t\t\texecute: () => {\n\t\t\t\t\tconst prevColumn = this.prevColumn;\n\t\t\t\t\tconst hasPrevColumn = prevColumn >= 0;\n\t\t\t\t\tconst newColumn = hasPrevColumn ? prevColumn : this.lastColumn;\n\t\t\t\t\tconst newRow = hasPrevColumn ? this.currentRow : this.prevRow;\n\t\t\t\t\treturn go.execute(this.context('previous', { newRow, newColumn })) && this.goTo(newRow, newColumn);\n\t\t\t\t}\n\t\t\t}),\n\t\t\thome: new Command({\n\t\t\t\tsource: 'navigation',\n\t\t\t\tshortcut: shortcut.home,\n\t\t\t\tcanExecute: () => {\n\t\t\t\t\tif (canNavigate()) {\n\t\t\t\t\t\tconst newColumn = this.prevColumn;\n\t\t\t\t\t\treturn newColumn >= 0 && go.canExecute(this.context('end', { newColumn }));\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t},\n\t\t\t\texecute: () => {\n\t\t\t\t\tconst newRow = this.currentRow;\n\t\t\t\t\tconst newColumn = this.firstColumn;\n\t\t\t\t\treturn go.execute(this.context('home', { newRow, newColumn })) && this.goTo(newRow, newColumn);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tend: new Command({\n\t\t\t\tsource: 'navigation',\n\t\t\t\tshortcut: shortcut.end,\n\t\t\t\tcanExecute: () => {\n\t\t\t\t\tif (canNavigate()) {\n\t\t\t\t\t\tconst newColumn = this.nextColumn;\n\t\t\t\t\t\treturn newColumn >= 0 && go.canExecute(this.context('home', { newColumn }));\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t},\n\t\t\t\texecute: () => {\n\t\t\t\t\tconst newRow = this.currentRow;\n\t\t\t\t\tconst newColumn = this.lastColumn;\n\t\t\t\t\treturn go.execute(this.context('end', { newRow, newColumn })) && this.goTo(newRow, newColumn);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tupward: new Command({\n\t\t\t\tsource: 'navigation',\n\t\t\t\tshortcut: shortcut.upward,\n\t\t\t\tcanExecute: () => {\n\t\t\t\t\tif (canNavigate()) {\n\t\t\t\t\t\tconst newRow = this.prevRow;\n\t\t\t\t\t\treturn newRow >= 0 && go.canExecute(this.context('upward', { newRow }));\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t},\n\t\t\t\texecute: () => {\n\t\t\t\t\tconst newRow = this.firstRow;\n\t\t\t\t\tconst newColumn = this.currentColumn;\n\t\t\t\t\treturn go.execute(this.context('upward', { newRow, newColumn })) && this.goTo(newRow, newColumn);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tdownward: new Command({\n\t\t\t\tsource: 'navigation',\n\t\t\t\tshortcut: shortcut.downward,\n\t\t\t\tcanExecute: () => {\n\t\t\t\t\tif (canNavigate()) {\n\t\t\t\t\t\tconst newRow = this.nextRow;\n\t\t\t\t\t\treturn newRow >= 0 && go.canExecute(this.context('downward', { newRow }));\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t},\n\t\t\t\texecute: () => {\n\t\t\t\t\tconst newRow = this.lastRow;\n\t\t\t\t\tconst newColumn = this.currentColumn;\n\t\t\t\t\treturn go.execute(this.context('downward', { newRow, newColumn })) && this.goTo(newRow, newColumn);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tpageUp: new Command({\n\t\t\t\tsource: 'navigation',\n\t\t\t\tshortcut: shortcut.pageUp,\n\t\t\t\tcanExecute: () => {\n\t\t\t\t\tif (canNavigate()) {\n\t\t\t\t\t\tconst newRow = this.prevRow;\n\t\t\t\t\t\treturn newRow >= 0 && go.canExecute(this.context('pageUp', { newRow }));\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t},\n\t\t\t\texecute: () => {\n\t\t\t\t\tconst view = table.view;\n\t\t\t\t\tconst position = this.positon(view.scrollTop() - view.height(), 'up');\n\t\t\t\t\tconst newRow = position.row;\n\t\t\t\t\tconst newColumn = this.currentColumn;\n\t\t\t\t\tif (go.execute(this.context('pageUp', { newRow, newColumn }))) {\n\t\t\t\t\t\tthis.model.scroll({ top: position.offset }, { source: 'navigation' });\n\t\t\t\t\t\treturn this.goTo(newRow, newColumn, 'navigation.scroll');\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}),\n\t\t\tpageDown: new Command({\n\t\t\t\tsource: 'navigation',\n\t\t\t\tshortcut: shortcut.pageDown,\n\t\t\t\tcanExecute: () => {\n\t\t\t\t\tif (canNavigate()) {\n\t\t\t\t\t\tconst newRow = this.nextRow;\n\t\t\t\t\t\treturn newRow >= 0 && go.canExecute(this.context('pageDown', { newRow }));\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t},\n\t\t\t\texecute: () => {\n\t\t\t\t\tconst view = table.view;\n\t\t\t\t\tconst position = this.positon(view.scrollTop() + view.height(), 'down');\n\t\t\t\t\tconst newRow = position.row;\n\t\t\t\t\tconst newColumn = this.currentColumn;\n\t\t\t\t\tif (go.execute(this.context('pageDown', { newRow, newColumn }))) {\n\t\t\t\t\t\tthis.model.scroll({ top: position.offset }, { source: 'navigation' });\n\t\t\t\t\t\treturn this.goTo(position.row, this.currentColumn, 'navigation.scroll');\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t})\n\t\t};\n\n\t\treturn new Map(Object.entries(commands));\n\t}\n}","import { Command } from '../command/command';\n\nexport class NavigationModel {\n\tconstructor() {\n\t\tthis.cell = null;\n\n\t\tthis.debounce = 0;\n\n\t\tthis.shortcut = {\n\t\t\tup: 'up',\n\t\t\tdown: 'down',\n\t\t\tleft: 'left',\n\t\t\tright: 'right',\n\t\t\tnext: 'tab',\n\t\t\tprevious: 'shift+tab',\n\t\t\thome: 'home',\n\t\t\tend: 'end',\n\t\t\tpageUp: 'pageUp',\n\t\t\tpageDown: 'pageDown',\n\t\t\tupward: 'shift+pageUp',\n\t\t\tdownward: 'shift+pageDown'\n\t\t};\n\n\t\tthis.go = new Command({ source: 'navigation.model' });\n\n\t\tthis.prevent = new Set([\n\t\t\t'space',\n\t\t\t'shift+space',\n\t\t\t'up',\n\t\t\t'down',\n\t\t\t'left',\n\t\t\t'right',\n\t\t\t'tab',\n\t\t\t'shift+tab',\n\t\t\t'home',\n\t\t\t'end',\n\t\t\t'pageUp',\n\t\t\t'pageDown',\n\t\t\t'shift+pageDown',\n\t\t\t'shift+pageUp'\n\t\t]);\n\t}\n\n\tget rowIndex() {\n\t\treturn this.cell ? this.cell.rowIndex : -1;\n\t}\n\n\tget columnIndex() {\n\t\treturn this.cell ? this.cell.columnIndex : -1;\n\t}\n\n\tget row() {\n\t\treturn this.cell ? this.cell.row : null;\n\t}\n\n\tget column() {\n\t\treturn this.cell ? this.cell.column : null;\n\t}\n}","import { Command } from '../command/command';\nimport { Navigation } from './navigation';\nimport { GRID_PREFIX } from '../definition';\nimport { Fastdom } from '../services/fastdom';\nimport { Td } from '../dom/td';\n\nexport class NavigationView {\n\tconstructor(model, table, shortcut) {\n\t\tthis.model = model;\n\t\tthis.table = table;\n\n\t\tconst navigation = new Navigation(model, table);\n\t\tlet focusBlurs = [];\n\n\t\tshortcut.register(navigation.commands);\n\n\t\tthis.focus = new Command({\n\t\t\tsource: 'navigation.view',\n\t\t\texecute: e => {\n\t\t\t\tconst { rowIndex, columnIndex, behavior } = e;\n\t\t\t\tconst td = table.body.cell(rowIndex, columnIndex).model();\n\t\t\t\tif (td) {\n\t\t\t\t\tconst { row, column } = td;\n\t\t\t\t\tmodel.navigation({\n\t\t\t\t\t\tcell: {\n\t\t\t\t\t\t\trowIndex,\n\t\t\t\t\t\t\tcolumnIndex,\n\t\t\t\t\t\t\trow,\n\t\t\t\t\t\t\tcolumn\n\t\t\t\t\t\t}\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\tsource: 'navigation.view',\n\t\t\t\t\t\t\tbehavior\n\t\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tmodel.navigation({\n\t\t\t\t\t\tcell: null\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\tsource: 'navigation.view',\n\t\t\t\t\t\t\tbehavior\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tcanExecute: newCell => {\n\t\t\t\tconst oldCell = model.navigation().cell;\n\t\t\t\tif (newCell && newCell.column.canFocus && !Td.equals(newCell, oldCell)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\n\t\tthis.scrollTo = new Command({\n\t\t\tsource: 'navigation.view',\n\t\t\texecute: (row, column) => {\n\t\t\t\tconst cell = table.body.cell(row, column);\n\t\t\t\tthis.scroll(table.view, cell);\n\t\t\t},\n\t\t\tcanExecute: (row, column) => table.body.cell(row, column).model() !== null\n\t\t});\n\n\t\tmodel.navigationChanged.watch(e => {\n\t\t\tif (e.hasChanges('cell')) {\n\t\t\t\tif (e.tag.behavior !== 'core') {\n\t\t\t\t\t// We need this one to toggle focus from details to main grid\n\t\t\t\t\t// or when user change navigation cell through the model\n\t\t\t\t\tif (!this.table.view.isFocused()) {\n\t\t\t\t\t\tthis.table.view.focus();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst { rowIndex, columnIndex } = e.state;\n\t\t\t\tfocusBlurs = this.invalidateFocus(focusBlurs);\n\t\t\t\tif (e.tag.source !== 'navigation.scroll' && this.scrollTo.canExecute(rowIndex, columnIndex)) {\n\t\t\t\t\tthis.scrollTo.execute(rowIndex, columnIndex);\n\t\t\t\t}\n\n\t\t\t\tmodel.focus({\n\t\t\t\t\trowIndex,\n\t\t\t\t\tcolumnIndex\n\t\t\t\t}, {\n\t\t\t\t\t\tsource: 'navigation.view'\n\t\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tmodel.focusChanged.watch(e => {\n\t\t\tif (e.tag.source === 'navigation.view') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (e.hasChanges('isActive')) {\n\t\t\t\tconst { view } = table;\n\t\t\t\tconst activeClassName = `${GRID_PREFIX}-active`;\n\t\t\t\tif (e.state.isActive) {\n\t\t\t\t\tFastdom.mutate(() => view.addClass(activeClassName));\n\t\t\t\t\tview.focus();\n\t\t\t\t} else {\n\t\t\t\t\tFastdom.mutate(() => view.removeClass(activeClassName));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (e.hasChanges('rowIndex') || e.hasChanges('columnIndex')) {\n\t\t\t\tthis.focus.execute(e.state);\n\t\t\t}\n\n\t\t});\n\n\t\tmodel.sceneChanged.watch(e => {\n\t\t\tif (e.hasChanges('status')) {\n\t\t\t\tconst { status } = e.state;\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase 'stop':\n\t\t\t\t\t\tconst { row, column, columnIndex } = model.navigation();\n\t\t\t\t\t\tif (row && column) {\n\t\t\t\t\t\t\tconst newRowIndex = table.data.rows().indexOf(row);\n\t\t\t\t\t\t\tlet newColumnIndex = table.data.columns().findIndex(c => c.key === column.key);\n\t\t\t\t\t\t\tif (newColumnIndex < 0 && column.class === 'control') {\n\t\t\t\t\t\t\t\tnewColumnIndex = columnIndex;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.focus.execute({\n\t\t\t\t\t\t\t\trowIndex: newRowIndex,\n\t\t\t\t\t\t\t\tcolumnIndex: newColumnIndex,\n\t\t\t\t\t\t\t\tbehavior: 'core'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tinvalidateFocus(dispose) {\n\t\tdispose.forEach(f => f());\n\t\tdispose = [];\n\n\t\tconst { rowIndex, columnIndex } = this.model.navigation();\n\t\tconst cell = this.table.body.cell(rowIndex, columnIndex);\n\t\tif (cell.model()) {\n\t\t\tFastdom.mutate(() => cell.addClass(`${GRID_PREFIX}-focused`));\n\t\t\tdispose.push(() => Fastdom.mutate(() => cell.removeClass(`${GRID_PREFIX}-focused`)));\n\t\t}\n\n\t\treturn dispose;\n\t}\n\n\tscroll(view, target) {\n\t\tconst { scroll } = this.model;\n\t\tFastdom.measure(() => {\n\t\t\tconst tr = target.rect();\n\t\t\tconst vr = view.rect();\n\t\t\tconst state = {};\n\n\t\t\tif (view.canScrollTo(target, 'left')) {\n\t\t\t\tif (vr.left > tr.left\n\t\t\t\t\t|| vr.left > tr.right\n\t\t\t\t\t|| vr.right < tr.left\n\t\t\t\t\t|| vr.right < tr.right) {\n\n\t\t\t\t\tif (vr.width < tr.width || vr.left > tr.left || vr.left > tr.right) {\n\t\t\t\t\t\tstate.left = tr.left - vr.left + scroll().left;\n\t\t\t\t\t}\n\t\t\t\t\telse if (vr.left < tr.left || vr.right < tr.right) {\n\t\t\t\t\t\tstate.left = tr.right - vr.right + scroll().left;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (view.canScrollTo(target, 'top')) {\n\t\t\t\tif (vr.top > tr.top\n\t\t\t\t\t|| vr.top > tr.bottom\n\t\t\t\t\t|| vr.bottom < tr.top\n\t\t\t\t\t|| vr.bottom < tr.bottom) {\n\n\t\t\t\t\tif (vr.height < tr.height || vr.top > tr.top || vr.top > tr.bottom) {\n\t\t\t\t\t\tstate.top = tr.top - vr.top + scroll().top;\n\t\t\t\t\t}\n\t\t\t\t\telse if (vr.top < tr.top || vr.bottom < tr.bottom) {\n\t\t\t\t\t\tstate.top = tr.bottom - vr.bottom + scroll().top;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (Object.keys(state).length) {\n\t\t\t\tscroll(state, { behavior: 'core', source: 'navigation.view' });\n\t\t\t}\n\t\t});\n\t}\n}","import { AppError } from '../infrastructure/error';\r\nimport { Node } from './node';\r\n\r\nexport function nodeBuilder(columnMap, groupBy, valueFactory, level = 0) {\r\n\tif (groupBy.length === 0) {\r\n\t\treturn () => [];\r\n\t}\r\n\r\n\tconst groupKey = groupBy[0];\r\n\tif (!columnMap.hasOwnProperty(groupKey)) {\r\n\t\tthrow new AppError('node.build', `can't find column \"${groupKey}\"`);\r\n\t}\r\n\r\n\tconst column = columnMap[groupKey];\r\n\tconst getValue = valueFactory(column);\r\n\treturn (rows, getRowIndex = (i) => i) => {\r\n\t\tconst keys = [];\r\n\t\tconst nodes = [];\r\n\t\tconst groups = {};\r\n\t\tfor (let i = 0, length = rows.length; i < length; i++) {\r\n\t\t\tconst row = rows[i];\r\n\t\t\tconst index = getRowIndex(i);\r\n\t\t\tconst key = getValue(row);\r\n\t\t\tif (!groups.hasOwnProperty(key)) {\r\n\t\t\t\tconst node = new Node(key, level);\r\n\t\t\t\tnode.source = groupKey;\r\n\t\t\t\tnode.rows.push(index);\r\n\t\t\t\tkeys.push(key);\r\n\t\t\t\tnodes.push(node);\r\n\t\t\t\tgroups[key] = {\r\n\t\t\t\t\tnode,\r\n\t\t\t\t\trows: [row]\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst group = groups[key];\r\n\t\t\t\tgroup.node.rows.push(index);\r\n\t\t\t\tgroup.rows.push(row);\r\n\t\t\t\tkeys.push(key);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst nextGroupBy = groupBy.slice(1);\r\n\t\tif (nextGroupBy.length) {\r\n\t\t\tconst build = nodeBuilder(columnMap, nextGroupBy, valueFactory, level + 1);\r\n\t\t\tfor (let i = 0, length = keys.length; i < length; i++) {\r\n\t\t\t\tconst key = keys[i];\r\n\t\t\t\tconst group = groups[key];\r\n\t\t\t\tconst node = group.node;\r\n\t\t\t\tconst rows = node.rows;\r\n\t\t\t\tnode.children = build(group.rows, i => rows[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn nodes;\r\n\t};\r\n}","export class Node {\n\tconstructor(key, level = 0, type = 'group') {\n\t\tthis.key = key;\n\t\tthis.level = level;\n\t\tthis.rows = [];\n\t\tthis.children = [];\n\t\tthis.type = type;\n\t\tthis.source = null;\n\t\tthis.value = null;\n\t\t\n\t\tthis.state = {\n\t\t\texpand: false\n\t\t};\n\t}\n}","import { Node } from './node';\nimport { cloneDeep } from '../utility/kit';\nimport { AppError } from '../infrastructure/error';\n\nexport function preOrderDFS(nodes, visit, memo = null, parent = null) {\n\tfor (let i = 0, length = nodes.length; i < length; i++) {\n\t\tconst node = nodes[i];\n\t\tconst nodeMemo = visit(node, memo, parent, i);\n\t\tpreOrderDFS(node.children, visit, nodeMemo, node);\n\t}\n\n\treturn memo;\n}\n\nexport function filter(node, test, parent = null) {\n\tconst { children } = node;\n\tnode = copy(node);\n\n\tlet result = false;\n\tfor (let i = 0, length = children.length; i < length; i++) {\n\t\tconst child = children[i];\n\t\tresult = filter(child, test, node) || result;\n\t}\n\n\tif (parent) {\n\t\tif (result || test(node)) {\n\t\t\tparent.children.push(node);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\treturn node;\n}\n\nexport function findLeaves(node, result = []) {\n\tconst { children } = node;\n\tif (!children.length) {\n\t\tresult.push(node);\n\t\treturn result;\n\t}\n\n\tfor (let i = 0, length = children.length; i < length; i++) {\n\t\tconst child = children[i];\n\t\tfindLeaves(child, result);\n\t}\n\n\treturn result;\n}\n\nexport function find(node, test, parent = null, index = -1, path = []) {\n\tif (test(node)) {\n\t\treturn { node, parent, index, path };\n\t}\n\n\tpath = path.slice();\n\tpath.push(node);\n\n\tconst { children } = node;\n\tfor (let i = 0, length = children.length; i < length; i++) {\n\t\tconst child = children[i];\n\t\tconst result = find(child, test, node, i, path);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport function calk(node) {\n\tconst result = new Node(node.key, node.level, node.type);\n\tresult.rows = Array.from(node.rows);\n\tresult.children = Array.from(node.children);\n\tresult.state = cloneDeep(node.state);\n\tresult.source = node.source;\n\tresult.value = node.value;\n\treturn result;\n}\n\nexport function copy(node) {\n\tconst result = new Node(node.key, node.level, node.type);\n\tresult.value = node.value;\n\tresult.source = node.source;\n\tresult.state.expand = node.state.expand;\n\treturn result;\n}\n\nexport function bend(line) {\n\tif (line.length === 0) {\n\t\tthrow new AppError('node.service', 'Line have no nodes');\n\t}\n\n\tconst root = copy(line[0]);\n\tconst parentStack = [root];\n\tfor (let i = 1, length = line.length; i < length; i++) {\n\t\tconst current = line[i];\n\n\t\tlet parent = parentStack[parentStack.length - 1];\n\t\twhile (current.level <= parent.level) {\n\t\t\tparentStack.pop();\n\t\t\tparent = parentStack[parentStack.length - 1];\n\t\t}\n\n\t\tconst child = copy(current);\n\t\tchild.level = parent.level + 1;\n\n\t\tparent.children.push(child);\n\t\tparentStack.push(child);\n\t}\n\n\treturn root;\n}\n","import { Resource } from '../resource/resource';\n\nexport class PaginationModel {\n\tconstructor() {\n\t\tthis.resource = new Resource();\n\t\tthis.current = 0;\n\t\tthis.size = 50;\n\t\tthis.sizeList = [5, 10, 20, 30, 40, 50];\n\t\tthis.count = 0;\n\t\tthis.resetTriggers = {\n\t\t\t'filter': ['by'],\n\t\t\t'pivot': ['by'],\n\t\t\t'group': ['by']\n\t\t};\n\t}\n}\n","export class PaginationView {\n\tconstructor(model) {\n\t\tthis.model = model;\n\n\t\tconst { resetTriggers } = model.pagination();\n\t\tObject.keys(resetTriggers)\n\t\t\t.forEach(name =>\n\t\t\t\tmodel[name + 'Changed']\n\t\t\t\t\t.on(e => {\n\t\t\t\t\t\tif (e.tag.behavior === 'core') {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (model.scroll().mode === 'virtual') {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst trigger = resetTriggers[name];\n\t\t\t\t\t\tfor (const key of trigger) {\n\t\t\t\t\t\t\tif (e.hasChanges(key)) {\n\t\t\t\t\t\t\t\tmodel.pagination({ current: 0 }, { source: e.tag.source || 'pagination.view' });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t}\n\n\tget current() {\n\t\treturn this.model.pagination().current;\n\t}\n\n\tget size() {\n\t\treturn this.model.pagination().size;\n\t}\n}","import { AppError } from '../infrastructure/error';\r\n\r\nexport class PathService {\r\n\tconstructor(bag) {\r\n\t\tthis.bag = bag;\r\n\t}\r\n\r\n\tcell(path) {\r\n\t\tfor (let node of path) {\r\n\t\t\tif (node.nodeName === 'TD' || node.nodeName === 'TH') {\r\n\t\t\t\tconst model = this.bag.findModel(node);\r\n\t\t\t\tif (!model) {\r\n\t\t\t\t\tnew AppError('path.find', `Can't find model for ${node.nodeName}`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn model;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\trow(path) {\r\n\t\tfor (let node of path) {\r\n\t\t\tif (node.nodeName === 'TR') {\r\n\t\t\t\tconst model = this.bag.findModel(node);\r\n\t\t\t\tif (!model) {\r\n\t\t\t\t\tnew AppError('path.find', `Can't find model for ${node.nodeName}`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn model;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n}","import { PersistenceStorage } from './persistence.storage';\r\nimport { Command } from '../command/command';\r\nimport { compare } from '../utility/kit';\r\n\r\nexport class PersistenceModel {\r\n\tconstructor() {\r\n\t\tthis.id = 'default';\r\n\t\tthis.defaultGroup = 'My Presets';\r\n\t\tthis.load = new Command({ source: 'persistence.model' });\r\n\t\tthis.remove = new Command({ source: 'persistence.model' });\r\n\t\tthis.create = new Command({ source: 'persistence.model' });\r\n\t\tthis.modify = new Command({ source: 'persistence.model' });\r\n\t\tthis.setDefault = new Command({ source: 'persistence.model' });\r\n\t\tthis.reset = new Command({ source: 'persistence.model' });\r\n\r\n\t\tthis.storage = new PersistenceStorage(localStorage);\r\n\t\tthis.settings = {\r\n\t\t\tgroup: ['by'],\r\n\t\t\tsort: ['by'],\r\n\t\t\tpivot: ['by'],\r\n\t\t\tfilter: ['by'],\r\n\t\t\tqueryBuilder: ['node']\r\n\t\t};\r\n\t}\r\n}\r\n","import { clone } from '../utility/kit';\n\nexport class PersistenceService {\n\tconstructor(model, createDefaultModel) {\n\t\tthis.model = model;\n\t\tthis.createDefaultModel = createDefaultModel;\n\t}\n\n\tsave(settings) {\n\t\tconst gridModel = this.model;\n\t\tsettings = settings || gridModel.persistence().settings;\n\n\t\tconst model = {};\n\t\tfor (const key in settings) {\n\t\t\tconst source = gridModel[key]();\n\t\t\tconst target = {};\n\t\t\tmodel[key] = target;\n\t\t\tfor (const p of settings[key]) {\n\t\t\t\tconst value = source[p];\n\t\t\t\ttarget[p] = clone(value);\n\t\t\t}\n\t\t}\n\n\t\treturn model;\n\t}\n\n\tload(model, settings) {\n\t\tconst gridModel = this.model;\n\t\tsettings = settings || gridModel.persistence().settings;\n\n\t\tfor (let key in settings) {\n\t\t\tconst source = model[key];\n\t\t\tif (source) {\n\t\t\t\tconst target = gridModel[key];\n\t\t\t\ttarget(source, { source: 'persistence.service' });\n\t\t\t}\n\t\t}\n\n\t\treturn model;\n\t}\n\n\treset(settings) {\n\t\tconst defaultModel = this.createDefaultModel();\n\t\tconst gridModel = this.model;\n\t\tsettings = settings || gridModel.persistence().settings;\n\n\t\tconst model = {};\n\t\tfor (let key in settings) {\n\t\t\tmodel[key] = {};\n\t\t\tconst source = defaultModel[key];\n\t\t\tconst target = gridModel[key];\n\t\t\tfor (const p of settings[key]) {\n\t\t\t\tmodel[key][p] = source()[p];\n\t\t\t}\n\t\t\ttarget(model[key], { source: 'behavior.core' });\n\t\t}\n\n\t\treturn model;\n\t}\n}\n","export class PersistenceStorage {\r\n\tconstructor(storage) {\r\n\t\tthis.storage = storage;\r\n\t}\r\n\r\n\tgetItem(key) {\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tconst item = JSON.parse(this.storage.getItem(key));\r\n\t\t\tresolve(item);\r\n\t\t});\r\n\t}\r\n\r\n\tsetItem(key, value) {\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tconst item = this.storage.setItem(key, JSON.stringify(value));\r\n\t\t\tresolve(item);\r\n\t\t});\r\n\t}\r\n}","import { Guard } from '../infrastructure/guard';\nimport { flatten } from '../column/column.matrix';\nimport { Node } from '../node/node';\n\nexport function columnIndexPipe(root, context, next) {\n\tGuard.notNull(root, 'root');\n\n\tconst { model } = context;\n\tconst filteredIndex = filter(model, root);\n\tconst columnRows = flatten(filteredIndex);\n\n\tnext({ columns: columnRows, index: root });\n}\n\nfunction filter(model, root) {\n\tconst groupBy = new Set(model.group().by);\n\tconst pivotBy = new Set(model.pivot().by);\n\n\tfunction doFilter(node, newNode) {\n\t\tconst { children } = node;\n\t\tfor (let i = 0, length = children.length; i < length; i++) {\n\t\t\tconst child = children[i];\n\t\t\tconst view = child.key;\n\t\t\tconst { isVisible, key } = view.model;\n\t\t\tif (isVisible && !groupBy.has(key) && !pivotBy.has(key)) {\n\t\t\t\tconst newChild = new Node(child.key, child.level);\n\t\t\t\tnewNode.children.push(newChild);\n\t\t\t\tdoFilter(child, newChild);\n\t\t\t}\n\t\t}\n\n\t\treturn newNode;\n\t}\n\n\treturn doFilter(root, new Node(root.key, root.level));\n}\n","import { Guard } from '../infrastructure/guard';\nimport { noop } from '../utility/kit';\nimport { columnFactory } from '../column/column.factory';\nimport { generateFactory } from '../column-list/column.list.generate';\nimport { columnIndexPipe } from './column.index.pipe';\nimport { Node } from '../node/node';\nimport { sortIndexFactory, merge } from '../column-list/column.list.sort';\n\nexport function columnPipe(memo, context, next) {\n\tGuard.hasProperty(memo, 'pivot');\n\tGuard.hasProperty(memo, 'nodes');\n\n\tconst { model } = context;\n\tconst { pivot, nodes } = memo;\n\tconst { head } = pivot;\n\n\tconst createColumn = columnFactory(model);\n\tconst root = new Node(createColumn('cohort', { key: '$root' }), 0);\n\tconst addDataColumns = dataColumnsFactory(model);\n\tconst addSelectColumn = selectColumnFactory(model);\n\tconst addGroupColumn = groupColumnFactory(model, nodes);\n\tconst addRowExpandColumn = rowExpandColumnFactory(model);\n\tconst addRowIndicatorColumn = rowIndicatorColumnFactory(model);\n\tconst addPivotColumns = pivotColumnsFactory(model);\n\tconst addPadColumn = padColumnFactory(model);\n\n\t/*\n\t * We need to invoke addDataColumns earlier that others because it setups data.columns model property\n\t *\n\t */\n\taddDataColumns(root);\n\n\t/**\n\t * Control columns should be filled in reverse order because they use unshift inside.\n\t */\n\n\t/*\n\t * Add row expand column\n\t */\n\taddRowExpandColumn(root);\n\n\t/*\n\t * Add group column with nodes\n\t *\n\t */\n\taddGroupColumn(root);\n\n\t/*\n\t * Add column with select boxes\n\t * if selection unit is row\n\t *\n\t */\n\taddSelectColumn(root);\n\n\t/*\n\t * Add row indicator column\n\t * if rows can be dragged or resized\n\t *\n\t */\n\taddRowIndicatorColumn(root);\n\n\t/*\n\t * Add column rows for pivoted data\n\t * if pivot is turned on\n\t *\n\t */\n\taddPivotColumns(root, head);\n\n\tconst { columnList } = model;\n\tconst buildIndex = sortIndexFactory(model);\n\tconst tree = merge(root, columnList().index, buildIndex);\n\n\t/*\n\t * Add special column type\n\t * that fills remaining place (width = 100%)\n\t *\n\t */\n\taddPadColumn(tree);\n\n\tcolumnIndexPipe(tree, context, ({ columns, index }) => {\n\t\tmemo.columns = columns;\n\n\t\tcolumnList({\n\t\t\tindex\n\t\t}, {\n\t\t\t\tbehavior: 'core',\n\t\t\t\tsource: 'column.pipe'\n\t\t\t});\n\n\t\tnext(memo);\n\t});\n}\n\nfunction selectColumnFactory(model) {\n\tconst dataColumns = model.columnList().line;\n\tconst selection = model.selection();\n\n\tconst selectColumn = dataColumns.find(item => item.type === 'select');\n\tconst indicatorColumn = dataColumns.find(item => item.type === 'row-indicator');\n\n\tif (!indicatorColumn && selection.unit === 'mix') {\n\t\tconst createColumn = columnFactory(model);\n\t\treturn node => {\n\t\t\tconst indicatorColumn = createColumn('row-indicator');\n\t\t\tindicatorColumn.model.source = 'generation';\n\t\t\tif (indicatorColumn.model.isVisible) {\n\t\t\t\tnode.children.unshift(new Node(indicatorColumn, node.level + 1));\n\t\t\t\treturn indicatorColumn;\n\t\t\t}\n\t\t};\n\t}\n\n\tif (!selectColumn && selection.unit === 'row' && selection.mode !== 'range') {\n\t\tconst createColumn = columnFactory(model);\n\t\treturn node => {\n\t\t\tconst selectColumn = createColumn('select');\n\t\t\tselectColumn.model.source = 'generation';\n\t\t\tif (selectColumn.model.isVisible) {\n\t\t\t\tnode.children.unshift(new Node(selectColumn, node.level + 1));\n\t\t\t\treturn selectColumn;\n\t\t\t}\n\t\t};\n\t}\n\n\treturn noop;\n}\n\nfunction groupColumnFactory(model, nodes) {\n\tconst dataColumns = model.columnList().line;\n\tconst groupColumn = dataColumns.find(item => item.type === 'group');\n\tconst { by, mode } = model.group();\n\tconst createColumn = columnFactory(model);\n\n\tif (!groupColumn && (nodes.length || by.length)) {\n\t\tswitch (mode) {\n\t\t\tcase 'nest': {\n\t\t\t\treturn node => {\n\t\t\t\t\tconst groupColumn = createColumn('group');\n\t\t\t\t\tgroupColumn.model.source = 'generation';\n\t\t\t\t\tif (groupColumn.model.isVisible) {\n\t\t\t\t\t\tnode.children.unshift(new Node(groupColumn, node.level + 1));\n\t\t\t\t\t\treturn groupColumn;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\tcase 'rowspan':\n\t\t\tcase 'flat': {\n\t\t\t\treturn node => {\n\t\t\t\t\tconst nodes = by\n\t\t\t\t\t\t.map(key => {\n\t\t\t\t\t\t\tconst groupColumn = createColumn('group');\n\t\t\t\t\t\t\tgroupColumn.model.source = 'generation';\n\t\t\t\t\t\t\tgroupColumn.model.key = `$group-${key}`;\n\t\t\t\t\t\t\tgroupColumn.model.title = key;\n\t\t\t\t\t\t\tgroupColumn.model.by = key;\n\t\t\t\t\t\t\treturn new Node(groupColumn, node.level + 1);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.filter(n => n.key.model.isVisible);\n\n\t\t\t\t\tnode.children.splice(0, 0, ...nodes);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn noop;\n}\n\nfunction rowExpandColumnFactory(model) {\n\tconst dataColumns = model.columnList().line;\n\tconst expandColumn = dataColumns.find(item => item.type === 'row-expand');\n\tif (model.row().unit === 'details' && !expandColumn) {\n\t\tconst createColumn = columnFactory(model);\n\t\treturn node => {\n\t\t\tconst expandColumn = createColumn('row-expand');\n\t\t\texpandColumn.model.source = 'generation';\n\t\t\tif (expandColumn.model.isVisible) {\n\t\t\t\tnode.children.unshift(new Node(expandColumn, node.level + 1));\n\t\t\t\treturn expandColumn;\n\t\t\t}\n\t\t};\n\t}\n\n\treturn noop;\n}\n\nfunction rowIndicatorColumnFactory(model) {\n\tconst dataColumns = model.columnList().line;\n\tconst rowIndicatorColumn = dataColumns.find(item => item.type === 'row-indicator');\n\tconst { canMove, canResize } = model.row();\n\tif ((canMove || canResize) && !rowIndicatorColumn) {\n\t\tconst createColumn = columnFactory(model);\n\t\treturn node => {\n\t\t\tconst expandColumn = createColumn('row-indicator');\n\t\t\texpandColumn.model.source = 'generation';\n\t\t\tif (expandColumn.model.isVisible) {\n\t\t\t\tnode.children.unshift(new Node(expandColumn, node.level + 1));\n\t\t\t\treturn expandColumn;\n\t\t\t}\n\t\t};\n\t}\n\n\treturn noop;\n}\n\nfunction dataColumnsFactory(model) {\n\tconst getColumns = generateFactory(model);\n\tconst createColumn = columnFactory(model);\n\tconst { hasChanges, columns } = getColumns();\n\tif (hasChanges) {\n\t\tmodel.data({ columns }, { source: 'column.pipe', behavior: 'core' });\n\t}\n\n\tfunction fill(node, columns) {\n\t\tfor (let column of columns) {\n\t\t\tconst view = createColumn(column.type, column);\n\t\t\tconst child = new Node(view, node.level + 1);\n\t\t\tnode.children.push(child);\n\t\t\tfill(child, view.model.children);\n\t\t}\n\t}\n\n\treturn node => fill(node, columns);\n}\n\nfunction padColumnFactory(model) {\n\tconst createColumn = columnFactory(model);\n\treturn node => {\n\t\tconst padColumn = createColumn('pad');\n\t\tpadColumn.model.key = '$pad';\n\n\t\tconst index = node.children.findIndex(n => n.key.model.pin === 'right');\n\t\tconst padNode = new Node(padColumn, node.level + 1);\n\t\tif (index >= 0) {\n\t\t\tnode.children.splice(index, 0, padNode);\n\t\t} else {\n\t\t\tnode.children.push(padNode);\n\t\t}\n\n\t\treturn padColumn;\n\t};\n}\n\nfunction pivotColumnsFactory(model) {\n\tconst createColumn = columnFactory(model);\n\treturn function fill(node, head) {\n\t\tconst { children } = head;\n\t\tfor (let i = 0, length = children.length; i < length; i++) {\n\t\t\tconst child = children[i];\n\t\t\tconst pivotColumn = createColumn('pivot');\n\t\t\tconst pivotColumnModel = pivotColumn.model;\n\t\t\tpivotColumnModel.title = child.key;\n\t\t\tpivotColumnModel.key = `$pivot-${child.key}`;\n\t\t\tconst pivotNode = new Node(pivotColumn, node.level + 1);\n\t\t\tnode.children.push(pivotNode);\n\t\t\tfill(pivotNode, child);\n\t\t}\n\t};\n}\n","import { columnFactory } from '../column/column.factory';\r\nimport { generateFactory } from '../column-list/column.list.generate';\r\n\r\nexport function dataPipe(rows, context, next) {\r\n\tconst { model } = context;\r\n\r\n\tmodel.pipe({\r\n\t\teffect: Object.assign({}, model.pipe().effect, { data: rows })\r\n\t});\r\n\r\n\taddDataRows(model, rows);\r\n\taddDataColumns(model);\r\n\r\n\tnext(rows);\r\n\r\n\tmodel.pipe({\r\n\t\teffect: Object.assign({}, model.pipe().effect, { data: rows })\r\n\t}, {\r\n\t\t\tsource: 'data.pipe',\r\n\t\t\tbehavior: 'core'\r\n\t\t});\r\n}\r\n\r\nfunction addDataRows(model, rows) {\r\n\tmodel.data({ rows }, { source: 'data.pipe', behavior: 'core' });\r\n}\r\n\r\nfunction addDataColumns(model) {\r\n\tconst getColumns = generateFactory(model);\r\n\tconst createColumn = columnFactory(model);\r\n\tconst result = getColumns();\r\n\tconst columns = result.columns.map(columnBody => createColumn(columnBody.type, columnBody).model);\r\n\r\n\tif (result.hasChanges) {\r\n\t\tmodel.data({ columns }, { source: 'data.pipe', behavior: 'core' });\r\n\t}\r\n}\r\n\r\n","import { Guard } from '../infrastructure/guard';\n\nexport function filterPipe(rows, context, next) {\n\tGuard.notNull(rows, 'rows');\n\n\tconst { model } = context;\n\n\tconst result = [];\n\tif (rows.length) {\n\t\tconst { match } = model.filter();\n\t\tconst test = match(context);\n\n\t\tfor (let i = 0, length = rows.length; i < length; i++) {\n\t\t\tconst row = rows[i];\n\t\t\tif (test(row)) {\n\t\t\t\tresult.push(row);\n\t\t\t}\n\t\t}\n\t}\n\n\tmodel.pipe({\n\t\teffect: Object.assign({}, model.pipe().effect, { filter: result })\n\t}, {\n\t\t\tsource: 'filter.pipe',\n\t\t\tbehavior: 'core'\n\t\t});\n\n\tnext(result);\n}","import { map as getColumnMap } from '../column/column.service';\r\nimport { nodeBuilder } from '../node/node.build';\r\nimport { Guard } from '../infrastructure/guard';\r\n\r\nexport function groupPipe(memo, context, next) {\r\n\tGuard.notNull(memo, 'rows');\r\n\r\n\tconst { model } = context;\r\n\tif (memo.rows.length) {\r\n\t\tconst { rows } = model.data();\r\n\t\tconst { by } = model.group();\r\n\t\tconst columns = model.columnList().line;\r\n\t\tconst columnMap = getColumnMap(columns);\r\n\t\tconst build = nodeBuilder(columnMap, by, context.valueFactory);\r\n\r\n\t\tconst memoRows = memo.rows;\r\n\t\tmemo.nodes = build(memoRows, i => {\r\n\t\t\tconst row = memoRows[i];\r\n\t\t\tconst index = rows.indexOf(row);\r\n\t\t\treturn index < 0 ? i : index;\r\n\t\t});\r\n\t}\r\n\r\n\tmodel.pipe({\r\n\t\teffect: Object.assign({}, model.pipe().effect, { group: memo.nodes })\r\n\t}, {\r\n\t\t\tsource: 'group.pipe',\r\n\t\t\tbehavior: 'core'\r\n\t\t});\r\n\r\n\tnext(memo);\r\n}","import { Guard } from '../infrastructure/guard';\nimport { Node } from '../node/node';\n\nexport function memoPipe(rows, context, next) {\n\tGuard.notNull(rows, 'rows');\n\n\tconst { model } = context;\n\n\tmodel.pipe({\n\t\teffect: Object.assign({}, model.pipe().effect, { memo: rows })\n\t}, {\n\t\t\tsource: 'memo.pipe',\n\t\t\tbehavior: 'core'\n\t\t});\n\n\tnext({\n\t\trows,\n\t\tpivot: { head: new Node('$root', 0), rows: [] },\n\t\tnodes: []\n\t});\n}","import { Guard } from '../infrastructure/guard';\n\nexport function paginationPipe(memo, context, next) {\n\tGuard.notNull(memo, 'memo');\n\n\tconst { model } = context;\n\n\tif (memo.hasOwnProperty('nodes') && memo.nodes.length) {\n\t\tconst { flattenFactory } = model.group();\n\t\tconst page = paginate(model, memo.nodes);\n\t\tconst flatten = flattenFactory(model);\n\t\tmemo.rows = flatten(page);\n\t\tnext(memo);\n\t\treturn;\n\t}\n\n\tif (memo.hasOwnProperty('rows')) {\n\t\tconst page = paginate(model, memo.rows);\n\t\tmemo.rows = page;\n\t\tnext(memo);\n\t\treturn;\n\t}\n\n\tconst rows = paginate(model, memo);\n\tnext(rows);\n}\n\nfunction paginate(model, rows) {\n\tconst { pinTop, pinBottom } = model.row();\n\tconst { mode } = model.scroll();\n\tlet { size, current } = model.pagination();\n\n\tconst pinned = new Set([...pinTop, ...pinBottom]);\n\tif (pinned.size) {\n\t\trows = rows.filter(row => !pinned.has(row))\n\t}\n\n\tconst count = rows.length;\n\tconst last = Math.max(0, Math.floor((count - 1) / size));\n\tcurrent = Math.min(last, current);\n\tconst start = current * size;\n\n\tmodel.pagination({ count, current }, { source: 'pagination.pipe', behavior: 'core' });\n\treturn mode === 'virtual' ? rows : rows.slice(start, start + size);\n}\n\n","import { Middleware } from '../services/middleware';\r\nimport { getFactory as valueFactory } from '../services/value';\r\nimport { getFactory as labelFactory } from '../services/label';\r\n\r\nexport function build(model) {\r\n\treturn function run(source, changes, pipe) {\r\n\t\tconst middleware = new Middleware(pipe);\r\n\t\tconst context = {\r\n\t\t\tmodel,\r\n\t\t\tsource,\r\n\t\t\tchanges,\r\n\t\t\tvalueFactory,\r\n\t\t\tlabelFactory\r\n\t\t};\r\n\r\n\t\tconst { rows } = model.data();\r\n\t\treturn middleware.run(context, rows);\r\n\t};\r\n}","import { dataPipe } from './data.pipe';\nimport { filterPipe } from './filter.pipe';\nimport { paginationPipe } from './pagination.pipe';\nimport { sortPipe } from './sort.pipe';\nimport { memoPipe } from './memo.pipe';\nimport { groupPipe } from './group.pipe';\nimport { pivotPipe } from './pivot.pipe';\nimport { columnPipe } from './column.pipe';\nimport { columnIndexPipe } from './column.index.pipe';\nimport { viewPipe } from './view.pipe';\n\nexport class Pipe {\n\tstatic get data() {\n\t\treturn dataPipe;\n\t}\n\n\tstatic get filter() {\n\t\treturn filterPipe;\n\t}\n\n\tstatic get pagination() {\n\t\treturn paginationPipe;\n\t}\n\n\tstatic get sort() {\n\t\treturn sortPipe;\n\t}\n\n\tstatic get memo() {\n\t\treturn memoPipe;\n\t}\n\n\tstatic get group() {\n\t\treturn groupPipe;\n\t}\n\n\tstatic get pivot() {\n\t\treturn pivotPipe;\n\t}\n\n\tstatic get column() {\n\t\treturn columnPipe;\n\t}\n\n\tstatic get columnIndex() {\n\t\treturn columnIndexPipe;\n\t}\n\n\tstatic get view() {\n\t\treturn viewPipe;\n\t}\n}","import { PipeUnit as PU } from '../pipe/pipe.unit';\nimport { uniq } from '../utility/kit';\n\nexport class PipeModel {\n\tconstructor() {\n\t\tthis.reduce = (units, model) => {\n\t\t\tconst dataPipe = model.data().pipe;\n\t\t\t// Change one of default pipes to data pipes - cause default literaly means data\n\t\t\t// we can change only one because all other will be moved out during reduce\n\t\t\tconst index = units.indexOf(PU.default);\n\t\t\tif (index >= 0) {\n\t\t\t\tunits[index] = dataPipe;\n\t\t\t}\n\n\t\t\tunits = uniq(units);\n\t\t\tconst set = new Set(units);\n\n\t\t\tconst schema = new Map([\n\t\t\t\t[PU.default, dataPipe],\n\t\t\t\t[PU.view, PU.default],\n\t\t\t\t[PU.column, PU.view]\n\t\t\t]);\n\n\t\t\tconst shouldKeep = unit => {\n\t\t\t\tlet next;\n\t\t\t\twhile ((next = schema.get(unit))) {\n\t\t\t\t\tif (next === unit) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (set.has(next)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tunit = next;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t};\n\n\t\t\treturn units.reduce((memo, unit) => {\n\t\t\t\tif (shouldKeep(unit)) {\n\t\t\t\t\tmemo.push(unit);\n\t\t\t\t}\n\n\t\t\t\treturn memo;\n\t\t\t}, []);\n\t\t};\n\n\t\tthis.triggers = {\n\t\t\t'data': {\n\t\t\t\t'rows': PU.default,\n\t\t\t\t'columns': PU.column\n\t\t\t},\n\t\t\t'pagination': {\n\t\t\t\t'current': PU.default,\n\t\t\t\t'size': PU.default\n\t\t\t},\n\t\t\t'fetch': {\n\t\t\t\t'skip': PU.default\n\t\t\t},\n\t\t\t'sort': {\n\t\t\t\t'by': PU.default\n\t\t\t},\n\t\t\t'filter': {\n\t\t\t\t'by': PU.default,\n\t\t\t\t'match': PU.default,\n\t\t\t\t'unit': PU.column\n\t\t\t},\n\t\t\t'group': {\n\t\t\t\t'by': PU.default\n\t\t\t},\n\t\t\t'pivot': {\n\t\t\t\t'by': PU.default\n\t\t\t},\n\t\t\t'columnList': {\n\t\t\t\t'index': PU.columnIndex\n\t\t\t},\n\t\t\t'row': {\n\t\t\t\t'status': PU.rowDetails,\n\t\t\t\t'unit': PU.rowDetails,\n\t\t\t\t'canMove': PU.column,\n\t\t\t\t'canResize': PU.column\n\t\t\t},\n\t\t\t'rowList': {\n\t\t\t\t'index': PU.row\n\t\t\t}\n\t\t};\n\n\t\tthis.effect = {};\n\t}\n}\n","import { columnPipeUnit } from './units/column.pipe.unit';\nimport { columnIndexPipeUnit } from './units/column.index.pipe.unit';\nimport { defaultPipeUnit } from './units/default.pipe.unit';\nimport { groupPipeUnit } from './units/group.pipe.unit';\nimport { rowDetailsPipeUnit } from './units/row.details.pipe.unit';\nimport { viewPipeUnit } from './units/view.pipe.unit';\nimport { rowPipeUnit } from './units/row.pipe.unit';\n\nexport class PipeUnit {\n\tstatic get default() {\n\t\treturn defaultPipeUnit;\n\t}\n\n\tstatic get view() {\n\t\treturn viewPipeUnit;\n\t}\n\n\tstatic get column() {\n\t\treturn columnPipeUnit;\n\t}\n\n\tstatic get columnIndex() {\n\t\treturn columnIndexPipeUnit;\n\t}\n\n\tstatic get rowDetails() {\n\t\treturn rowDetailsPipeUnit;\n\t}\n\n\tstatic get group() {\n\t\treturn groupPipeUnit;\n\t}\n\n\tstatic get row() {\n\t\treturn rowPipeUnit;\n\t}\n}","import { map as getColumnMap } from '../column/column.service';\nimport { build as pivotBuilder } from '../pivot/pivot.build';\nimport { Guard } from '../infrastructure/guard';\n\nexport function pivotPipe(memo, context, next) {\n\tGuard.hasProperty(memo, 'rows');\n\n\tconst { model } = context;\n\tif (memo.rows.length) {\n\t\tconst { valueFactory } = context;\n\t\tconst { line } = model.columnList();\n\t\tconst { by } = model.pivot();\n\n\t\tconst build = pivotBuilder(getColumnMap(line), by, valueFactory);\n\t\tmemo.pivot = build(memo.rows);\n\t}\n\n\tmodel.pipe({\n\t\teffect: Object.assign({}, model.pipe().effect, { pivot: memo.pivot })\n\t}, {\n\t\tsource: 'pivot.pipe',\n\t\tbehavior: 'core'\n\t});\n\n\tnext(memo);\n}","import { AppError } from '../infrastructure/error';\r\nimport { orderBy } from '../utility/kit';\r\nimport { key as getKey, direction as getDirection } from '../sort/sort.service';\r\nimport { find } from '../column/column.service';\r\nimport { parseFactory } from '../services/convert';\r\nimport { Guard } from '../infrastructure/guard';\r\n\r\nexport function sortPipe(rows, context, next) {\r\n\tGuard.notNull(rows, 'rows');\r\n\r\n\tconst { model } = context;\r\n\r\n\tlet result = rows;\r\n\tif (rows.length) {\r\n\t\tconst { by } = model.sort();\r\n\t\tif (by.length) {\r\n\t\t\tconst columns = model.columnList().line;\r\n\t\t\tconst mappings = [];\r\n\t\t\tconst comparers = [];\r\n\r\n\t\t\tfor (let i = 0, length = by.length; i < length; i++) {\r\n\t\t\t\tconst sortEntry = by[i];\r\n\t\t\t\tconst sortKey = getKey(sortEntry);\r\n\t\t\t\tconst sortDir = getDirection(sortEntry);\r\n\t\t\t\tconst sortColumn = find(columns, sortKey);\r\n\t\t\t\tif (!sortColumn) {\r\n\t\t\t\t\tthrow new AppError('sort.pipe', `Column \"${sortKey}\" is not found`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst getValue = context.valueFactory(sortColumn);\r\n\t\t\t\tconst parseValue = parseFactory(sortColumn.type, sortColumn.editor);\r\n\t\t\t\tconst compare = sortColumn.compare;\r\n\r\n\t\t\t\tmappings.push(row => {\r\n\t\t\t\t\tconst value = getValue(row);\r\n\t\t\t\t\tconst result = parseValue(value);\r\n\t\t\t\t\treturn result === null ? value : result;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tcomparers.push(sortDir === 'asc' ? compare : (x, y) => -compare(x, y));\r\n\t\t\t}\r\n\r\n\t\t\tresult = orderBy(rows, mappings, comparers);\r\n\t\t}\r\n\t}\r\n\r\n\tmodel.pipe({\r\n\t\teffect: Object.assign({}, model.pipe().effect, { sort: result })\r\n\t}, {\r\n\t\tsource: 'sort.pipe',\r\n\t\tbehavior: 'core'\r\n\t});\r\n\r\n\tnext(result);\r\n}\r\n\r\n","import { Pipe } from '../pipe';\nimport { Scene } from '../../scene/scene';\nimport { Guard } from '../../infrastructure/guard';\n\nexport const columnIndexPipeUnit = [\n\t(_, context, next) => {\n\t\tconst { index } = context.model.columnList();\n\t\tnext(index);\n\t},\n\tPipe.columnIndex,\n\t(memo, context, next) => {\n\t\tGuard.hasProperty(memo, 'columns');\t\t\n\n\t\tconst { model } = context;\n\t\tconst scene = new Scene(model);\n\t\tconst columnLine = scene.columnLine(memo.columns);\n\t\tconst tag = {\n\t\t\tsource: context.source || 'column.pipe.unit',\n\t\t\tbehavior: 'core'\n\t\t};\n\n\t\tconst columns = columnLine.map(c => c.model);\n\t\tmodel.view({ columns }, tag);\n\n\t\tconst column = {\n\t\t\trows: scene.columnRows(memo.columns),\n\t\t\tarea: scene.columnArea(memo.columns),\n\t\t\tline: columnLine\n\t\t};\n\n\t\tcontext.model.scene({ column }, tag);\n\n\t\tnext(memo);\n\t}\n];\n\ncolumnIndexPipeUnit.why = 'redraw';","import { Pipe } from '../pipe';\r\nimport { Scene } from '../../scene/scene';\r\nimport { Guard } from '../../infrastructure/guard';\r\n\r\nexport const columnPipeUnit = [\r\n\t(_, context, next) => {\r\n\t\tconst { view } = context.model;\r\n\t\tconst { rows, pivot, nodes } = view();\r\n\t\tnext({ rows, pivot, nodes });\r\n\t},\r\n\tPipe.column,\r\n\t(memo, context, next) => {\r\n\t\tGuard.hasProperty(memo, 'columns');\r\n\r\n\t\tconst { model } = context;\r\n\t\tconst scene = new Scene(model);\r\n\t\tconst columnLine = scene.columnLine(memo.columns);\r\n\t\tconst tag = {\r\n\t\t\tsource: context.source || 'column.pipe.unit',\r\n\t\t\tbehavior: 'core'\r\n\t\t};\r\n\r\n\t\tconst columns = columnLine.map(c => c.model);\r\n\t\tmodel.view({ columns }, tag);\r\n\r\n\t\tconst column = {\r\n\t\t\trows: scene.columnRows(memo.columns),\r\n\t\t\tarea: scene.columnArea(memo.columns),\r\n\t\t\tline: columnLine\r\n\t\t};\r\n\r\n\t\tcontext.model.scene({ column }, tag);\r\n\r\n\t\tnext(memo);\r\n\t}\r\n];\r\n\r\ncolumnPipeUnit.why = 'redraw';","import { Pipe } from '../pipe';\r\n\r\nexport const defaultPipeUnit = [\r\n\tPipe.data,\r\n\tPipe.filter,\r\n\tPipe.sort,\r\n\tPipe.memo,\r\n\tPipe.group,\r\n\tPipe.pivot,\r\n\tPipe.column,\r\n\tPipe.pagination,\r\n\tPipe.view\r\n];\r\n\r\ndefaultPipeUnit.why = 'refresh';","import { Pipe } from '../pipe';\r\n\r\nexport const groupPipeUnit = [\r\n\t(_, context, next) => {\r\n\t\tconst { model } = context;\r\n\t\tconst { nodes, rows } = model.view();\r\n\t\tnext({ nodes, rows });\r\n\t},\r\n\tPipe.pagination,\r\n\t(memo, context, next) => {\r\n\t\tconst { model } = context;\r\n\t\tconst tag = {\r\n\t\t\tsource: context.source || 'group.pipe.unit',\r\n\t\t\tbehavior: 'core'\r\n\t\t};\r\n\r\n\t\tconst { rows } = memo;\r\n\t\tmodel.view({ rows }, tag);\r\n\t\tmodel.scene({ rows }, tag);\r\n\r\n\t\tnext(memo);\r\n\t}\r\n];\r\n\r\ngroupPipeUnit.why = 'redraw';","import { flatView } from '../../row-details/row.details.service';\r\n\r\nexport const rowDetailsPipeUnit = [\r\n\t(_, context, next) => {\r\n\t\tconst tag = {\r\n\t\t\tsource: context.source || 'row.details.pipe.unit',\r\n\t\t\tbehavior: 'core'\r\n\t\t};\r\n\r\n\t\tconst { model } = context;\r\n\t\tconst { mode } = model.row();\r\n\t\tconst rows = flatView(model, mode);\r\n\t\tmodel.view({ rows }, tag);\r\n\t\tmodel.scene({ rows }, tag);\r\n\r\n\t\tnext(rows);\r\n\t}\r\n];\r\n\r\nrowDetailsPipeUnit.why = 'redraw';","import { sortFactory } from '../../row-list/row.list.sort';\r\n\r\nexport const rowPipeUnit = [\r\n\t(_, context, next) => {\r\n\t\tconst tag = {\r\n\t\t\tsource: context.source || 'row.pipe.unit',\r\n\t\t\tbehavior: 'core'\r\n\t\t};\r\n\r\n\t\tconst { model } = context;\r\n\t\tconst order = sortFactory(model);\r\n\t\tconst rows = order(model.view().rows);\r\n\t\tmodel.view({ rows }, tag);\r\n\t\tmodel.scene({ rows }, tag);\r\n\r\n\t\tnext(rows);\r\n\t}\r\n];\r\n\r\nrowPipeUnit.why = 'redraw';","import { Pipe } from '../pipe';\r\n\r\nexport const viewPipeUnit = [\r\n\tPipe.data,\r\n\tPipe.memo,\r\n\tPipe.column,\r\n\tPipe.view\r\n];\r\n\r\nviewPipeUnit.why = 'refresh';","import { Scene } from '../scene/scene';\r\nimport { Guard } from '../infrastructure/guard';\r\nimport { sortFactory } from '../row-list/row.list.sort';\r\n\r\nexport function viewPipe(memo, context, next) {\r\n\tGuard.hasProperty(memo, 'rows');\r\n\tGuard.hasProperty(memo, 'nodes');\r\n\tGuard.hasProperty(memo, 'pivot');\r\n\tGuard.hasProperty(memo, 'columns');\r\n\r\n\tconst tag = {\r\n\t\tsource: context.source || 'view.pipe',\r\n\t\tbehavior: 'core'\r\n\t};\r\n\r\n\tconst { model } = context;\r\n\r\n\tconst scene = new Scene(model);\r\n\tlet rows = scene.rows(memo);\r\n\r\n\tconst { columns, nodes, pivot } = memo;\r\n\tconst columnLine = scene.columnLine(columns);\r\n\r\n\tif (!model.sort().by.length) {\r\n\t\tconst order = sortFactory(model);\r\n\t\trows = order(rows);\r\n\t}\r\n\r\n\tmodel.view({\r\n\t\trows,\r\n\t\tcolumns: columnLine.map(c => c.model),\r\n\t\tnodes,\r\n\t\tpivot\r\n\t}, tag);\r\n\r\n\tmodel.scene({\r\n\t\trows,\r\n\t\tcolumn: {\r\n\t\t\trows: scene.columnRows(memo.columns),\r\n\t\t\tarea: scene.columnArea(memo.columns),\r\n\t\t\tline: columnLine\r\n\t\t}\r\n\t}, tag);\r\n\r\n\tnext(memo);\r\n}","import { identity } from '../utility/kit';\nimport { pivot } from './pivot';\nimport { pivotForm } from './pivot.form';\nimport { Node } from '../node/node';\nimport { AppError } from '../infrastructure/error';\n\nfunction buildFactory(columnMap, valueFactory) {\n\treturn function run(pivot, pivotBy, level = 0) {\n\t\tconst key = pivotBy[0];\n\t\tconst column = columnMap[key];\n\t\tif(!column) {\n\t\t\tthrow new AppError(\n\t\t\t\t'pivot.build',\n\t\t\t\t`Invalid key \"${key}\"`);\n\t\t}\n\t\t\n\t\tconst getValue = valueFactory(column);\n\n\t\treturn pivot({\n\t\t\tfactory: () => ({}),\n\t\t\tselector: row => [getValue(row)],\n\t\t\tname: identity,\n\t\t\tvalue: (parent, row, pivot) => {\n\t\t\t\tconst nextPivotBy = pivotBy.slice(1);\n\t\t\t\tif (nextPivotBy.length) {\n\t\t\t\t\treturn run(\n\t\t\t\t\t\tpivot,\n\t\t\t\t\t\tnextPivotBy,\n\t\t\t\t\t\tlevel + 1)(row);\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t};\n}\n\nexport function build(columnMap, pivotBy, valueFactory) {\n\tlet doPivot = null;\n\tif (pivotBy.length) {\n\t\tconst doBuild = buildFactory(columnMap, valueFactory);\n\t\tdoPivot = doBuild(pivot, pivotBy);\n\t}\n\n\treturn rows => {\n\t\tif (doPivot) {\n\t\t\tconst data = doPivot(rows);\n\t\t\treturn pivotForm(data);\n\t\t}\n\n\t\treturn { head: new Node('$root', 0), rows: [] };\n\t};\n}","import { flatten } from '../utility/kit';\nimport { Node } from '../node/node';\n\nfunction injectData(schema, source, target) {\n\treturn Object\n\t\t.keys(source)\n\t\t.filter(key => !schema.hasOwnProperty(key))\n\t\t.reduce((memo, key) => {\n\t\t\tmemo[key] = source[key];\n\t\t\treturn memo;\n\t\t}, target);\n}\n\nfunction expandData(schema, source) {\n\tconst baseline =\n\t\tObject.keys(schema)\n\t\t\t.map(key => {\n\t\t\t\tconst node = schema[key];\n\t\t\t\treturn source && source.hasOwnProperty(key)\n\t\t\t\t\t? expandData(node, source[key])\n\t\t\t\t\t: expandData(node);\n\t\t\t});\n\n\treturn baseline.length\n\t\t? flatten(baseline, true)\n\t\t: [source];\n}\n\nfunction liftSchema(schema) {\n\tconst baseline = [];\n\n\tfunction lift(schema, depth) {\n\t\tconst derivatives =\n\t\t\tschema\n\t\t\t\t? Object.keys(schema)\n\t\t\t\t\t.map(key => {\n\t\t\t\t\t\tconst node = schema[key];\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tkey: key,\n\t\t\t\t\t\t\tvalue: lift(node, depth + 1)\n\t\t\t\t\t\t};\n\t\t\t\t\t})\n\t\t\t\t: [];\n\n\t\tif (derivatives.length > 0)\n\t\t\tif (!baseline[depth]) {\n\t\t\t\tbaseline[depth] = derivatives;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbaseline[depth].push(...derivatives);\n\t\t\t}\n\n\t\treturn (derivatives.length && derivatives.reduce((memo, d) => memo + d.value, 0)) || 1;\n\t}\n\n\tlift(schema, 0);\n\treturn baseline;\n}\n\nfunction sortSchema(schema, comparator) {\n\treturn Object\n\t\t.keys(schema)\n\t\t.sort(comparator)\n\t\t.reduce((memo, key) => {\n\t\t\tmemo[key] = sortSchema(schema[key], comparator);\n\t\t\treturn memo;\n\t\t}, {});\n}\n\n\nfunction reduceSchema(schema) {\n\tconst baseline = [];\n\n\tfunction lift(schema, node) {\n\t\tif (schema) {\n\t\t\tObject\n\t\t\t\t.keys(schema)\n\t\t\t\t.forEach(key => {\n\t\t\t\t\tconst child = new Node(key, node.level + 1);\n\t\t\t\t\tnode.children.push(child);\n\t\t\t\t\tlift(schema[key], child);\n\t\t\t\t\treturn child;\n\t\t\t\t})\n\t\t}\n\n\t\treturn node;\n\t}\n\n\treturn lift(schema, new Node('$root', 0));\n}\n\nexport function pivotForm(source, comparator) {\n\tif (source.schema && source.data) {\n\t\tconst schema = sortSchema(source.schema, comparator);\n\t\tconst rows = source.data.map(row => injectData(schema, row, expandData(schema, row)));\n\t\tconst head = reduceSchema(schema);\n\t\treturn { head, rows };\n\t}\n\n\treturn { head: new Node('$root', 0), rows: [] };\n}","class Plan {\r\n\tconstructor(schema) {\r\n\t\tthis.isRoot = !arguments.length;\r\n\t\tthis.current = this.schema = schema || {};\r\n\t}\r\n\r\n\tbranch() {\r\n\t\treturn new Plan(this.current);\r\n\t}\r\n\r\n\tcursor(name) {\r\n\t\tconst schema = this.schema;\r\n\t\tthis.current =\r\n\t\t\tschema.hasOwnProperty(name)\r\n\t\t\t\t? schema[name]\r\n\t\t\t\t: schema[name] = {};\r\n\t}\r\n\r\n\tcompile(data) {\r\n\t\tif (this.isRoot) {\r\n\t\t\treturn {\r\n\t\t\t\tschema: this.schema,\r\n\t\t\t\tdata: data\r\n\t\t\t};\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn data;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction factory(plan) {\r\n\treturn name => {\r\n\t\tplan.cursor(name);\r\n\t\treturn settings => {\r\n\t\t\treturn pivot(settings, plan.branch());\r\n\t\t};\r\n\t};\r\n}\r\n\r\nexport function pivot(settings, plan) {\r\n\tplan = plan || new Plan();\r\n\r\n\tconst pivot = factory(plan);\r\n\tconst aggregate = row => {\r\n\t\treturn settings\r\n\t\t\t.selector(row)\r\n\t\t\t.reduce((memo, selection) => {\r\n\t\t\t\tconst name = settings.name(selection);\r\n\t\t\t\tmemo[name] = settings.value(selection, row, pivot(name));\r\n\t\t\t\treturn memo;\r\n\t\t\t}, settings.factory(row));\r\n\t};\r\n\r\n\treturn rows =>\r\n\t\tplan.compile(\r\n\t\t\tplan.isRoot\r\n\t\t\t\t? rows.map(aggregate)\r\n\t\t\t\t: aggregate(rows));\r\n}","import { Resource } from '../resource/resource';\r\n\r\nexport class PivotModel {\r\n\tconstructor() {\r\n\t\tthis.resource = new Resource();\r\n\t\tthis.by = [];\r\n\t}\r\n}","import { Resource } from '../resource/resource';\r\n\r\nexport class PluginModel {\r\n\tconstructor() {\r\n\t\tthis.resource = new Resource();\r\n\t\tthis.imports = {};\r\n\t}\r\n}","import { AppError } from '../../core/infrastructure/error';\r\n\r\nexport class PluginService {\r\n\tconstructor(model) {\r\n\t\tthis.model = model;\r\n\t}\r\n\r\n\tresolve(name) {\r\n\t\tconst lib = this.model.plugin().imports[name];\r\n\t\tif (!lib) {\r\n\t\t\tswitch (name) {\r\n\t\t\t\tcase 'xlsx': {\r\n\t\t\t\t\tthrow new AppError('plugin.service', 'To use export plugin for xlsx format please add http://github.com/SheetJS/js-xlsx library to your project');\r\n\t\t\t\t}\r\n\t\t\t\tcase 'fileSaver': {\r\n\t\t\t\t\tthrow new AppError('plugin.service', 'To use export plugin for file saving please add https://github.com/eligrey/FileSaver.js library to your project');\r\n\t\t\t\t}\r\n\t\t\t\tcase 'pdf': {\r\n\t\t\t\t\tthrow new AppError('plugin.service', 'To use export plugin for pdf format please add https://github.com/MrRio/jsPDF and https://github.com/simonbengtsson/jsPDF-AutoTable libraries to your project');\r\n\t\t\t\t}\r\n\t\t\t\tdefault: {\r\n\t\t\t\t\tthrow new AppError('import library', `Can't find ${name} library in imports`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn lib;\r\n\t}\r\n}\r\n\r\n","import { Resource } from '../resource/resource';\r\n\r\nexport class ProgressModel {\r\n\tconstructor() {\r\n\t\tthis.resource = new Resource();\r\n\t\tthis.isBusy = false;\r\n\t\tthis.queue = [];\r\n\t}\r\n}\r\n","import {Resource} from './resource';\r\n\r\nexport class EnumerableResource extends Resource {\r\n\tconstructor(data = {}, scope = {}, count = 0) {\r\n\t\tsuper(data, scope);\r\n\r\n\t\tthis.count = count;\r\n\t}\r\n}\r\n","export class Resource {\r\n\tconstructor(data = {}, scope = {}) {\r\n\t\tthis.data = data;\r\n\t\tthis.scope = scope;\r\n\t}\r\n}","export function serialize(model) {\r\n\tconst paginationState = model.pagination();\r\n\tconst sortState = model.sort();\r\n\tconst filterState = model.filter();\r\n\r\n\treturn {\r\n\t\torder: sortState.by\r\n\t\t\t.map(item => {\r\n\t\t\t\tconst field = Object.keys(item)[0];\r\n\t\t\t\tconst order = item[field];\r\n\t\t\t\treturn `${order === 'asc' ? '+' : '-'}${field}`;\r\n\t\t\t})\r\n\t\t\t.join(','),\r\n\t\tfilter: Object\r\n\t\t\t.keys(filterState.by)\r\n\t\t\t.map(field => {\r\n\t\t\t\tconst state = filterState.by[field];\r\n\t\t\t\tif(field === '$expression') {\r\n\t\t\t\t\treturn `$expression=where:${state}`;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (state.items) {\r\n\t\t\t\t\treturn `${field}=in:${state.items.join(',')}`;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (state.expression) {\r\n\t\t\t\t\treturn `${field}=where:${state.expression}`;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn '';\r\n\t\t\t})\r\n\t\t\t.filter(part => !!part)\r\n\t\t\t.join(';'),\r\n\t\tskip: paginationState.current * paginationState.size,\r\n\t\ttake: paginationState.size\r\n\t};\r\n}\r\n","export function serialize(model) {\r\n\tconst paginationState = model.pagination();\r\n\tconst sortState = model.sort();\r\n\tconst filterState = model.filter();\r\n\r\n\treturn {\r\n\t\tfilter: filterState.by,\r\n\t\torder: sortState.by.map(s => {\r\n\t\t\tconst key = Object.keys(s)[0];\r\n\t\t\tconst value = s[key];\r\n\t\t\treturn (value === 'asc' ? '+' : '-') + key;\r\n\t\t}),\r\n\t\tskip: paginationState.current * paginationState.size,\r\n\t\ttake: paginationState.size\r\n\t};\r\n}\r\n","import { serialize } from './get.serialize';\r\n\r\nexport class RestModel {\r\n\tconstructor() {\r\n\t\tthis.url = '';\r\n\t\tthis.method = 'get';\r\n\t\tthis.serialize = serialize;\r\n\t}\r\n}\r\n","export class RowDetails {\r\n\tconstructor(item, column) {\r\n\t\tthis.item = item;\r\n\t\tthis.column = column;\r\n\t}\r\n}","import { RowDetails } from './row.details';\nimport { RowDetailsStatus } from './row.details.status';\nimport { AppError } from '../infrastructure/error';\nimport { columnFactory } from '../column/column.factory';\n\nexport function flatView(model, mode) {\n\tconst { rows } = model.view();\n\tconst { status } = model.row();\n\tconst { line } = model.scene().column;\n\n\tconst showAll = mode === 'all';\n\tconst expandColumn = line.find(c => c.model.type === 'row-expand');\n\tconst columnIndex = expandColumn ? expandColumn.columnIndex : 0;\n\n\tconst result = [];\n\tconst createColumn = columnFactory(model);\n\tfor (let i = 0, length = rows.length; i < length; i++) {\n\t\tconst dataRow = rows[i];\n\t\tresult.push(dataRow);\n\n\t\tconst nextRow = rows[i + 1];\n\t\tconst detailsRow = nextRow instanceof RowDetails ? nextRow : null;\n\t\tconst state = status.get(dataRow) || (showAll && new RowDetailsStatus(true));\n\t\tif (state instanceof RowDetailsStatus && state.expand) {\n\t\t\tif (detailsRow) {\n\t\t\t\tresult.push(detailsRow);\n\t\t\t\ti++;\n\t\t\t} else {\n\t\t\t\tconst column = createColumn('row-details');\n\t\t\t\tcolumn.columnIndex = columnIndex;\n\t\t\t\tresult.push(new RowDetails(dataRow, column));\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (detailsRow) {\n\t\t\ti++;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function invalidateStatus(rows, status, mode) {\n\tswitch (mode) {\n\t\tcase 'all':\n\t\t\tstatus = new Map(status.entries());\n\t\t\trows.forEach(row => {\n\t\t\t\tif (!status.has(row)) {\n\t\t\t\t\tstatus.set(row, new RowDetailsStatus(true));\n\t\t\t\t}\n\t\t\t});\n\t\t\tbreak;\n\t\tcase 'single':\n\t\t\tstatus = new Map(Array\n\t\t\t\t.from(status.entries())\n\t\t\t\t.filter(entry => {\n\t\t\t\t\tconst row = entry[0];\n\t\t\t\t\tconst status = entry[1];\n\t\t\t\t\treturn rows.indexOf(row) >= 0 || !(status instanceof RowDetailsStatus);\n\t\t\t\t}));\n\t\t\tbreak;\n\t\tcase 'multiple':\n\t\t\tstatus = new Map(status.entries());\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new AppError('row.details.service', `Invalid mode ${mode}`);\n\t}\n\n\treturn status;\n}\n\nexport function toggleStatus(rows, status, mode = 'single') {\n\tstatus = invalidateStatus(rows, status, mode);\n\tif (mode !== 'all') {\n\t\trows.forEach(row => {\n\t\t\tconst state = status.get(row);\n\t\t\tif (!state) {\n\t\t\t\tstatus.set(row, new RowDetailsStatus(true));\n\t\t\t} else {\n\t\t\t\tstate.expand = !state.expand;\n\t\t\t}\n\t\t});\n\t}\n\n\treturn status;\n}","export class RowDetailsStatus {\r\n\tconstructor(expand) {\r\n\t\tthis.expand = expand;\r\n\t}\r\n}","import { Command } from '../command/command';\nimport { toggleStatus, invalidateStatus } from './row.details.service';\nimport { RowDetails } from './row.details';\n\nexport class RowDetailsView {\n\tconstructor(model, table, shortcut) {\n\t\tthis.model = model;\n\n\t\tthis.toggleStatus = new Command({\n\t\t\tsource: 'row.details.view',\n\t\t\texecute: row => {\n\t\t\t\tif (!row) {\n\t\t\t\t\trow = model.navigation().row;;\n\t\t\t\t}\n\n\t\t\t\tconst { toggle } = model.row();\n\t\t\t\tif (toggle.execute({ row }) !== false) {\n\t\t\t\t\tconst status = toggleStatus([row], model.row().status, model.row().mode);\n\t\t\t\t\tmodel.row({ status }, {\n\t\t\t\t\t\tsource: 'row.details.view'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tcanExecute: row => {\n\t\t\t\tif (!row) {\n\t\t\t\t\tconst { cell } = model.navigation();\n\t\t\t\t\tif (cell && cell.column.type === 'row-expand') {\n\t\t\t\t\t\trow = cell.row;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst { toggle } = model.row();\n\t\t\t\treturn !!row && toggle.canExecute({ row });\n\t\t\t},\n\t\t\tshortcut: model.row().shortcut.toggle\n\t\t});\n\n\t\tmodel.sceneChanged.watch(e => {\n\t\t\tif (e.tag.source === 'row.details.view') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (e.hasChanges('rows')) {\n\t\t\t\tconst rowState = model.row();\n\t\t\t\tconst status = invalidateStatus(model.data().rows, rowState.status, rowState.mode);\n\t\t\t\tmodel.row({ status }, { source: 'row.details.view' });\n\t\t\t}\n\t\t});\n\n\t\tshortcut.register([this.toggleStatus]);\n\t}\n\n\tstatus(row) {\n\t\tif (row instanceof RowDetails) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst { status } = this.model.row();\n\t\tconst state = status.get(row);\n\t\treturn state && state.expand ? 'expand' : 'collapse';\n\t}\n}","export class RowListModel {\r\n\tconstructor() {\r\n\t\tthis.index = new Map();\r\n\t}\r\n}","import { identity } from \"../utility/kit\";\r\n\r\nexport function sortFactory(model) {\r\n    const { index } = model.rowList();\r\n    if (!index.size) {\r\n        return identity;\r\n    }\r\n\r\n    const { id } = model.data();\r\n    return rows => {\r\n        let cursor = 0;\r\n        const positions = new Map();\r\n        const result =\r\n            rows\r\n                .filter((row, i) => {\r\n                    const key = id.row(i, row);\r\n                    const position = index.get(key)\r\n                    if (position || position === 0) {\r\n                        positions.set(position, row);\r\n                        return false;\r\n                    }\r\n\r\n                    return true;\r\n                })\r\n                .reduce((memo, row) => {\r\n                    let indexRow;\r\n                    while (indexRow = positions.get(cursor)) {\r\n                        positions.delete(cursor);\r\n                        memo.push(indexRow)\r\n                        cursor++;\r\n                    }\r\n\r\n                    memo.push(row);\r\n                    cursor++;\r\n\r\n                    return memo;\r\n                }, []);\r\n\r\n        if (positions.size) {\r\n            const remain = Array.from(positions.entries());\r\n            remain.sort((x, y) => x[0] - y[0]);\r\n\r\n            return result.concat(remain.map(pos => pos[1]));\r\n        }\r\n\r\n        return result;\r\n    };\r\n}``","import { Resource } from '../resource/resource';\nimport { Command } from '../command/command';\n\nexport class RowModel {\n\tconstructor() {\n\t\tthis.resource = new Resource();\n\n\t\tthis.mode = 'single'; // single | multiple | all\n\t\tthis.unit = 'data'; // data | details\n\t\tthis.height = element => element && element.offsetHeight || 64; // number | function(element, index)\n\t\tthis.status = new Map();\n\t\tthis.shortcut = {\n\t\t\ttoggle: 'space|enter'\n\t\t};\n\t\tthis.canMove = false;\n\t\tthis.canResize = false;\n\t\tthis.pinTop = [];\n\t\tthis.pinBottom = [];\n\t\tthis.toggle = new Command();\n\t}\n}\n","import { PathService } from '../path/path.service';\nimport { Command } from '../command/command';\nimport { isNumber } from '../utility/kit';\nimport { GRID_PREFIX } from '../definition';\nimport { eventPath } from '../services/dom';\n\nexport class RowView {\n\tconstructor(model, table, tagName) {\n\t\tthis.model = model;\n\t\tthis.tagName = tagName;\n\n\t\tconst pathFinder = new PathService(table.context.bag.body);\n\n\t\tthis.drop = new Command({\n\t\t\tsource: 'row.view',\n\t\t\tcanExecute: e => {\n\t\t\t\tif (e.action === 'end') {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tconst row = pathFinder.row(eventPath(e));\n\t\t\t\treturn !!row;\n\t\t\t},\n\t\t\texecute: e => {\n\t\t\t\tconst oldIndex = e.dragData;\n\t\t\t\tswitch (e.action) {\n\t\t\t\t\tcase 'over': {\n\t\t\t\t\t\tconst row = pathFinder.row(eventPath(e));\n\t\t\t\t\t\tif (!e.inAreaY(row.element)) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst newIndex = row.index;\n\t\t\t\t\t\tif (oldIndex !== newIndex) {\n\t\t\t\t\t\t\tif (model.scroll().mode === 'virtual') {\n\t\t\t\t\t\t\t\tconst oldRow = table.body.row(oldIndex);\n\t\t\t\t\t\t\t\toldRow.removeClass(`${GRID_PREFIX}-drag`);\n\n\t\t\t\t\t\t\t\tconst newRow = table.body.row(newIndex);\n\t\t\t\t\t\t\t\tnewRow.addClass(`${GRID_PREFIX}-drag`);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst tr = table.body.row(oldIndex).model();\n\t\t\t\t\t\t\tconst entries = [];\n\t\t\t\t\t\t\tfor (let entry of model.rowList().index.entries()) {\n\t\t\t\t\t\t\t\tconst index = entry[1];\n\t\t\t\t\t\t\t\tif (oldIndex < index && index <= newIndex) {\n\t\t\t\t\t\t\t\t\tentry[1] = index - 1;\n\t\t\t\t\t\t\t\t} else if (oldIndex > index && index >= newIndex) {\n\t\t\t\t\t\t\t\t\tentry[1] = index + 1;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tentries.push(entry);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst index = new Map(entries);\n\t\t\t\t\t\t\tconst { id } = model.data();\n\t\t\t\t\t\t\tconst key = id.row(newIndex, tr.model);\n\t\t\t\t\t\t\tindex.set(key, newIndex);\n\t\t\t\t\t\t\tmodel.rowList({ index }, { source: 'row.view' });\n\n\t\t\t\t\t\t\te.dragData = newIndex;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'drop':\n\t\t\t\t\tcase 'end': {\n\t\t\t\t\t\tconst oldRow = table.body.row(oldIndex);\n\t\t\t\t\t\toldRow.removeClass(`${GRID_PREFIX}-drag`);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.drag = new Command({\n\t\t\tsource: 'row.view',\n\t\t\texecute: e => {\n\t\t\t\tconst index = e.data;\n\t\t\t\tconst row = table.body.row(index);\n\t\t\t\trow.addClass(`${GRID_PREFIX}-drag`);\n\t\t\t\tconst tr = row.model();\n\t\t\t\tif (tr) {\n\t\t\t\t\treturn tr.element;\n\t\t\t\t}\n\t\t\t},\n\t\t\tcanExecute: e => {\n\t\t\t\tif (isNumber(e.data)) {\n\t\t\t\t\tconst index = e.data;\n\t\t\t\t\treturn index >= 0 && model.view().rows.length > index;\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\n\t\tthis.resize = new Command({\n\t\t\tsource: 'row.view'\n\t\t});\n\n\t\tmodel.dataChanged.on(e => {\n\t\t\tif (e.hasChanges('rows')) {\n\t\t\t\tmodel.rowList({\n\t\t\t\t\tindex: new Map(),\n\t\t\t\t}, {\n\t\t\t\t\t\tsource: 'row.view',\n\t\t\t\t\t\tbehavior: 'core'\n\t\t\t\t\t});\n\t\t\t}\n\t\t})\n\t}\n\n\tget canMove() {\n\t\treturn this.model.row().canMove;\n\t}\n\n\tget canResize() {\n\t\treturn this.model.row().canResize;\n\t}\n}","import { getFactory as valueFactory } from '../../services/value';\nimport { getFactory as labelFactory } from '../../services/label';\n\nexport class CacheStrategy {\n    constructor(model, strategy) {\n        let storage = new Map();\n\n        const defaultGetValue =\n            (row, column, select, rowIndex, columnIndex) => {\n                const key = `valueFactory-${column.key}`;\n                select = storage.get(key);\n                if (!select) {\n                    select = valueFactory(column);\n                    storage.set(key, select);\n                }\n\n                return strategy.getValue(row, column, select, rowIndex, columnIndex);\n            };\n\n        const readonlyGetValue =\n            (row, column, select, rowIndex, columnIndex) => {\n                const key = `getValue-${rowIndex}x${column.key}`;\n                if (storage.has(key)) {\n                    return storage.get(key);\n                }\n\n                const value = defaultGetValue(row, column, select, rowIndex, columnIndex);\n                storage.set(key, value);\n                return value;\n            };\n\n        const defaultGetLabel =\n            (row, column, select, rowIndex, columnIndex) => {\n                const key = `labelFactory-${column.key}`;\n                select = storage.get(key);\n                if (!select) {\n                    select = labelFactory(column);\n                    storage.set(key, select);\n                }\n\n                return strategy.getLabel(row, column, select, rowIndex, columnIndex);\n            };\n\n        const readonlyGetLabel =\n            (row, column, select, rowIndex, columnIndex) => {\n                const key = `getLabel-${rowIndex}x${column.key}`;\n                if (storage.has(key)) {\n                    return storage.get(key);\n                }\n\n                const value = defaultGetLabel(row, column, select, rowIndex, columnIndex);\n                storage.set(key, value);\n                return value;\n            };\n\n\n        this.getValue = defaultGetValue;\n        this.getLabel = defaultGetLabel;\n\n        this.colspan = (row, column, rowIndex, columnIndex) => {\n            const key = `colspan-${rowIndex}x${column.model.key}`;\n            if (storage.has(key)) {\n                return storage.get(key);\n            }\n\n            const value = strategy.colspan(row, column, rowIndex, columnIndex);\n            storage.set(key, value);\n            return value;\n        };\n\n        this.rowspan = (row, column, rowIndex, columnIndex) => {\n            const key = `rowspan-${rowIndex}x${column.model.key}`;\n            if (storage.has(key)) {\n                return storage.get(key);\n            }\n\n            const value = strategy.rowspan(row, column, rowIndex, columnIndex);\n            storage.set(key, value);\n            return value;\n        };\n\n        this.columns = (row, pin, rowIndex) => {\n            const key = `columns-${pin}-${rowIndex}`;\n            if (storage.has(key)) {\n                return storage.get(key);\n            }\n\n            const value = strategy.columns(row, pin, rowIndex);\n            storage.set(key, value);\n            return value;\n        }\n\n        this.setValue = (...args) => strategy.setValue(...args);\n        this.setLabel = (...args) => strategy.setLabel(...args);\n\n        this.columnList = (pin = null) => {\n            const key = `columnList-${pin}`;\n            if (storage.has(key)) {\n                return storage.get(key);\n            }\n\n            const value = strategy.columnList(pin);\n            storage.set(key, value);\n            return value;\n        }\n\n        model.sceneChanged.watch(e => {\n            if (e.hasChanges('status')) {\n                if (e.state.status !== 'stop') {\n                    storage = new Map();\n                }\n            }\n        });\n\n        model.gridChanged.watch(e => {\n            if (e.hasChanges('isReadonly')) {\n                storage = new Map();\n\n                if (e.state.isReadonly) {\n                    this.getValue = readonlyGetValue;\n                    this.getLabel = readonlyGetLabel;\n                } else {\n                    this.getValue = getValue;\n                    this.getLabel = this.getLabel;\n                }\n            }\n        });\n    }\n}","import { set as setValue } from '../../services/value';\nimport { set as setLabel } from '../../services/label';\nimport { isUndefined } from '../../utility/kit';\n\nfunction defaultGetValue(row, column, select) {\n\treturn select(row, column);\n}\n\n// This class is not inheritable, but construct in a way to use it as a composition without binding to `this`.\nexport class DataRow {\n\tconstructor(model) {\n\t\tlet area = {};\n\t\tlet line = [];\n\n\t\tmodel.sceneChanged.watch(e => {\n\t\t\tif (e.hasChanges('column')) {\n\t\t\t\tarea = e.state.column.area;\n\t\t\t\tline = e.state.column.line;\n\t\t\t}\n\t\t});\n\n\t\tthis.getValue = defaultGetValue;\n\t\tthis.getLabel = defaultGetValue;\n\t\tthis.setValue = setValue;\n\t\tthis.setLabel = setLabel;\n\n\t\tthis.colspan = (row, column) => column.colspan;\n\t\tthis.rowspan = () => 1;\n\n\t\tconst columnList = (pin = null) => {\n\t\t\tif (isUndefined(pin)) {\n\t\t\t\treturn line;\n\t\t\t}\n\n\t\t\treturn area[pin] || [];\n\t\t};\n\n\t\tthis.columnList = columnList;\n\t\tthis.columns = (row, pin) => columnList(pin);\n\t}\n}\n","import { AppError } from '../../infrastructure/error';\nimport { sumBy } from '../../utility/kit';\nimport { columnFactory } from '../../column/column.factory';\n\nexport class DetailsRow {\n\tconstructor(model, dataRow) {\n\t\tconst createColumn = columnFactory(model);\n\t\tconst emptyColumn = createColumn('pad', { key: 'row-details-pad' });\n\n\t\tthis.columns = dataRow.getColumns;\n\t\tthis.rowspan = dataRow.rowspan;\n\n\t\tthis.colspan = (rowDetails, column) => {\n\t\t\treturn sumBy(dataRow.columnList(column.model.pin), c => c.colspan);\n\t\t};\n\n\t\tthis.columns = (rowDetails, pin) => {\n\t\t\tif (rowDetails.column.model.pin === pin) {\n\t\t\t\treturn [rowDetails.column];\n\t\t\t}\n\n\t\t\treturn [emptyColumn];\n\t\t};\n\n\t\tthis.getValue = () => { throw new AppError('details.row', `Can't get value from row details`); };\n\t\tthis.getLabel = () => { throw new AppError('details.row', `Can't get label from row details`); };\n\t\tthis.setValue = () => { throw new AppError('details.row', `Can't set value to row details`); };\n\t\tthis.setLabel = () => { throw new AppError('details.row', `Can't set label to row details`); };\n\t}\n}","import { takeWhile, dropWhile, sumBy } from '../../utility/kit';\nimport { columnFactory } from '../../column/column.factory';\nimport { Aggregation } from '../../services/aggregation';\nimport { AppError } from '../../infrastructure/error';\nimport { findFirstLeaf } from '../../group/group.service';\n\nexport class NodeRow {\n\tconstructor(model, dataRow) {\n\t\tconst { columnList, rowspan } = dataRow;\n\n\t\tthis.columnList = columnList;\n\t\tthis.rowspan = rowspan;\n\n\t\tconst createColumn = columnFactory(model);\n\t\tconst reference = {\n\t\t\tgroup: createColumn('group'),\n\t\t\tsummary: createColumn('group-summary')\n\t\t};\n\n\t\tthis.getLabel =\n\t\t\tthis.getValue = (node, column, select, rowIndex, columnIndex) => {\n\t\t\t\tif (column.type === 'pivot') {\n\t\t\t\t\treturn dataRow.getLabel(node, column, select, rowIndex, columnIndex);\n\t\t\t\t}\n\n\t\t\t\tconst { rows } = model.data();\n\t\t\t\tswitch (node.type) {\n\t\t\t\t\tcase 'group':\n\t\t\t\t\tcase 'summary': {\n\t\t\t\t\t\tconst agg = column.aggregation;\n\t\t\t\t\t\tif (agg) {\n\t\t\t\t\t\t\tif (!Aggregation.hasOwnProperty(agg)) {\n\t\t\t\t\t\t\t\tthrow new AppError(\n\t\t\t\t\t\t\t\t\t'node.row',\n\t\t\t\t\t\t\t\t\t`Aggregation ${agg} is not supported`);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst groupRows = node.rows.map(i => rows[i]);\n\t\t\t\t\t\t\treturn Aggregation[agg](groupRows, select, column.aggregationOptions);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'row': {\n\t\t\t\t\t\tconst rowIndex = node.rows[0];\n\t\t\t\t\t\treturn select(rows[rowIndex], column);\n\t\t\t\t\t}\n\t\t\t\t\tcase 'value': {\n\t\t\t\t\t\treturn select(node, column);\n\t\t\t\t\t}\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new AppError(\n\t\t\t\t\t\t\t'node.row',\n\t\t\t\t\t\t\t`Invalid node type ${node.type}`\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t};\n\n\t\tthis.setValue = (node, column, value, rowIndex, columnIndex) => {\n\t\t\tswitch (node.type) {\n\t\t\t\tcase 'row': {\n\t\t\t\t\tconst { rows } = model.data();\n\t\t\t\t\tconst rowIndex = node.rows[0];\n\t\t\t\t\tdataRow.setValue(rows[rowIndex], column, value, rowIndex, columnIndex);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'value': {\n\t\t\t\t\tdataRow.setValue(node, column, value, rowIndex, columnIndex);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new AppError('node.row', `Can't set value to ${node.type} node`);\n\t\t\t}\n\t\t};\n\n\t\tthis.setLabel = (node, column, value, rowIndex, columnIndex) => {\n\t\t\tswitch (node.type) {\n\t\t\t\tcase 'row': {\n\t\t\t\t\tconst { rows } = model.data();\n\t\t\t\t\tconst rowIndex = node.rows[0];\n\t\t\t\t\tdataRow.setLabel(rows[rowIndex], column, value, rowIndex, columnIndex);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'value': {\n\t\t\t\t\tdataRow.setLabel(node, column, value, rowIndex, columnIndex);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new AppError('node.row', `Can't set label to ${node.type} node`);\n\t\t\t}\n\t\t};\n\n\t\tthis.colspan = (node, column) => {\n\t\t\tif (node.type === 'summary') {\n\t\t\t\treturn sumBy(columnList(column.model.pin), c => c.colspan);\n\t\t\t}\n\n\t\t\treturn column.colspan;\n\t\t};\n\n\t\tthis.columns = (node, pin) => {\n\t\t\tif (node.type === 'summary') {\n\t\t\t\t// TODO: add pin support\n\t\t\t\treturn [reference.summary];\n\t\t\t}\n\n\t\t\treturn columnList(pin);\n\t\t};\n\n\t\tthis.findGroupColumn = (pin) => {\n\t\t\tconst columns = columnList();\n\t\t\tlet groupColumn = columns.find(c => c.model.type === 'group');\n\t\t\tif (!groupColumn) {\n\t\t\t\tgroupColumn = reference.group;\n\t\t\t\tif (groupColumn.model.pin === pin) {\n\t\t\t\t\tconst firstColumn = columnList(pin)[0];\n\t\t\t\t\tgroupColumn.columnIndex = firstColumn ? firstColumn.columnIndex : 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn groupColumn.model.pin !== pin ? null : groupColumn;\n\t\t};\n\t}\n}\n\nexport class RowspanNodeRow {\n\tconstructor(model, nodeRow) {\n\t\tconst { columnList, getValue, getLabel, columns } = nodeRow;\n\n\t\tthis.setValue = nodeRow.setValue;\n\t\tthis.setLabel = nodeRow.setLabel;\n\t\tthis.colspan = nodeRow.colspan;\n\t\tthis.columnList = columnList;\n\t\t\n\t\tconst rowspan = (node, column, isRoot = true) => {\n\t\t\tswitch (node.type) {\n\t\t\t\tcase 'group': {\n\t\t\t\t\tif (column.model.type === 'group') {\n\t\t\t\t\t\tif (node.state.expand) {\n\t\t\t\t\t\t\tif (!isRoot || node.source === column.model.by) {\n\t\t\t\t\t\t\t\treturn node.children.reduce((memo, child, i) => memo + rowspan(child, column, false), 0);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (node.children.length) {\n\t\t\t\t\t\t\t\t\treturn rowspan(node.children[0], column, false);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn 1;\n\t\t};\n\n\t\tthis.rowspan = rowspan;\n\n\t\tconst spanValue = getValue => (node, column, select) => {\n\t\t\tswitch (node.type) {\n\t\t\t\tcase 'group': {\n\t\t\t\t\tconst leaf = findFirstLeaf(node);\n\t\t\t\t\tif (leaf) {\n\t\t\t\t\t\tconst { rows } = model.data();\n\t\t\t\t\t\tconst rowIndex = leaf.rows[0];\n\t\t\t\t\t\treturn select(rows[rowIndex], column);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn getValue(node, column, select);\n\t\t};\n\n\t\tthis.getLabel = spanValue(getLabel);\n\t\tthis.getValue = spanValue(getValue);\n\n\t\tthis.columns = (node, pin) => {\n\t\t\tswitch (node.type) {\n\t\t\t\tcase 'group': {\n\t\t\t\t\treturn dropWhile(columnList(pin), c => c.model.type === 'group' && c.model.by !== node.source);\n\t\t\t\t}\n\t\t\t\tcase 'row': {\n\t\t\t\t\treturn columnList(pin).filter(c => c.model.type !== 'group');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn columns(node, pin);\n\t\t};\n\t}\n}\n\nexport class SubheadNodeRow {\n\tconstructor(nodeRow) {\n\t\tconst { columnList, columns, findGroupColumn } = nodeRow;\n\n\t\tthis.setValue = nodeRow.setValue;\n\t\tthis.setLabel = nodeRow.setLabel;\n\t\tthis.getValue = nodeRow.getValue;\n\t\tthis.getLabel = nodeRow.getLabel;\n\t\tthis.rowspan = nodeRow.rowspan;\n\t\tthis.columnList = columnList;\n\n\t\tthis.colspan = (node, column) => {\n\t\t\tswitch (node.type) {\n\t\t\t\tcase 'group': {\n\t\t\t\t\tif (column.model.type === 'group') {\n\t\t\t\t\t\tconst groupColumn = findGroupColumn(column.model.pin);\n\t\t\t\t\t\tif (groupColumn) {\n\t\t\t\t\t\t\tconst nearGroupColumns = columnList(column.model.pin);\n\t\t\t\t\t\t\tconst groupSpan = takeWhile(nearGroupColumns, c => !c.model.aggregation);\n\t\t\t\t\t\t\treturn sumBy(groupSpan, c => c.colspan);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn nodeRow.colspan(node, column);\n\t\t};\n\n\t\tthis.columns = (node, pin) => {\n\t\t\tswitch (node.type) {\n\t\t\t\tcase 'group': {\n\t\t\t\t\tconst groupColumn = findGroupColumn(pin);\n\t\t\t\t\tif (groupColumn) {\n\t\t\t\t\t\tconst nextColumns = dropWhile(columnList(pin), c => !c.model.aggregation);\n\t\t\t\t\t\treturn [groupColumn].concat(nextColumns);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn columns(node, pin);\n\t\t};\n\t}\n}\n","import { getFactory } from '../../services/value';\nimport { groupBuilder } from '../../group/group.build';\n\nexport class PivotRow {\n\tconstructor(model, dataRow) {\n\t\tthis.columns = dataRow.columns;\n\t\tthis.rowspan = dataRow.rowspan;\n\t\tthis.colspan = dataRow.colspan;\n\n\t\tthis.getValue = dataRow.getValue;\n\t\tthis.setValue = dataRow.setValue;\n\n\t\tthis.getLabel = dataRow.getLabel;\n\t\tthis.setLabel = dataRow.setLabel;\n\n\t\tthis.columnList = dataRow.columnList;\n\n\t\tlet pivotRows = [];\n\n\t\tmodel.sceneChanged.watch(e => {\n\t\t\tif (e.hasChanges('column') || e.hasChanges('rows')) {\n\t\t\t\tconst { rows } = model.view().pivot;\n\t\t\t\tif (rows.length) {\n\t\t\t\t\tif (model.group().by.length) {\n\t\t\t\t\t\tconst build = groupBuilder(model);\n\t\t\t\t\t\tpivotRows = build(getFactory);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpivotRows = rows;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst pivotIndex = e.state.column.line.findIndex(c => c.model.type === 'pivot');\n\n\t\t\t\t\tthis.getValue = (row, column, select, rowIndex, columnIndex) => {\n\t\t\t\t\t\tif (column.type === 'pivot') {\n\t\t\t\t\t\t\tconst pivotRow = pivotRows[rowIndex];\n\t\t\t\t\t\t\treturn pivotRow[columnIndex - pivotIndex];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn dataRow.getValue(row, column, select, rowIndex, columnIndex);\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.getLabel = (row, column, select, rowIndex, columnIndex) => {\n\t\t\t\t\t\tif (column.type === 'pivot') {\n\t\t\t\t\t\t\tconst pivotRow = pivotRows[rowIndex];\n\t\t\t\t\t\t\treturn pivotRow[columnIndex - pivotIndex];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn dataRow.getLabel(row, column, select, rowIndex, columnIndex);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpivotRows = [];\n\t\t\t\t\tthis.getValue = dataRow.getValue;\n\t\t\t\t\tthis.getLabel = dataRow.getLabel;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n","import { Node } from '../../node/node';\nimport { RowDetails } from '../../row-details/row.details';\nimport { CacheStrategy } from './cache.strategy';\nimport { get as getValue } from '../../services/value';\nimport { get as getLabel } from '../../services/label';\nimport { DataRow } from './data.row';\nimport { DetailsRow } from './details.row';\nimport { NodeRow, SubheadNodeRow, RowspanNodeRow } from './node.row';\nimport { PivotRow } from './pivot.row';\n\nexport class Renderer {\n\tconstructor(model) {\n\t\tconst dataRow = new DataRow(model);\n\t\tconst pivotRow = new CacheStrategy(model, new PivotRow(model, dataRow));\n\t\tconst nodeRow = new NodeRow(model, pivotRow);\n\t\tconst nestNodeRow = new CacheStrategy(model, nodeRow);\n\t\tconst subheadNodeRow = new CacheStrategy(model, new SubheadNodeRow(nodeRow));\n\t\tconst rowspanNodeRow = new CacheStrategy(model, new RowspanNodeRow(model, nodeRow));\n\t\tconst rowDetails = new CacheStrategy(model, new DetailsRow(model, pivotRow));\n\t\tconst defaultStrategy = pivotRow;\n\n\t\tconst strategies = new Map();\n\t\tstrategies.set(RowDetails, rowDetails);\n\n\t\tconst selectNodeRowStrategy = () => {\n\t\t\tconst { mode } = model.group();\n\t\t\tswitch (mode) {\n\t\t\t\tcase 'subhead':\n\t\t\t\t\tstrategies.set(Node, subheadNodeRow);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'rowspan':\n\t\t\t\t\tstrategies.set(Node, rowspanNodeRow);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tstrategies.set(Node, nestNodeRow);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t};\n\n\t\tselectNodeRowStrategy();\n\t\tmodel.groupChanged.on(selectNodeRowStrategy);\n\n\t\t// Public interface\n\t\tthis.defaultStrategy = defaultStrategy;\n\n\t\tthis.colspan = (row, column, rowIndex, columnIndex) => {\n\t\t\tconst strategy = strategies.get(row.constructor) || defaultStrategy;\n\t\t\treturn strategy.colspan(row, column, rowIndex, columnIndex);\n\t\t};\n\n\t\tthis.rowspan = (row, column, rowIndex, columnIndex) => {\n\t\t\tconst strategy = strategies.get(row.constructor) || defaultStrategy;\n\t\t\treturn strategy.rowspan(row, column, rowIndex, columnIndex);\n\t\t};\n\n\t\tthis.columns = (row, pin, rowIndex) => {\n\t\t\tconst strategy = strategies.get(row.constructor) || defaultStrategy;\n\t\t\treturn strategy.columns(row, pin, rowIndex);\n\t\t};\n\n\t\tthis.getValue = (row, column, rowIndex, columnIndex) => {\n\t\t\tconst strategy = strategies.get(row.constructor) || defaultStrategy;\n\t\t\treturn strategy.getValue(row, column, getValue, rowIndex, columnIndex);\n\t\t};\n\n\t\tthis.setValue = (row, column, value, rowIndex, columnIndex) => {\n\t\t\tconst strategy = strategies.get(row.constructor) || defaultStrategy;\n\t\t\treturn strategy.setValue(row, column, value, rowIndex, columnIndex);\n\t\t};\n\n\t\tthis.getLabel = (row, column, rowIndex, columnIndex) => {\n\t\t\tconst strategy = strategies.get(row.constructor) || defaultStrategy;\n\t\t\treturn strategy.getLabel(row, column, getLabel, rowIndex, columnIndex);\n\t\t};\n\n\t\tthis.setLabel = (row, column, value, rowIndex, columnIndex) => {\n\t\t\tconst strategy = strategies.get(row.constructor) || defaultStrategy;\n\t\t\treturn strategy.setLabel(row, column, value, rowIndex, columnIndex);\n\t\t};\n\n\t\tthis.rows = {\n\t\t\tleft: [],\n\t\t\tright: [],\n\t\t\tnull: []\n\t\t};\n\n\t\tconst invalidateRows = () => {\n\t\t\tconst { rows } = model.scene();\n\t\t\tconst { pinTop, pinBottom } = model.row();\n\n\t\t\tthis.rows = {\n\t\t\t\ttop: pinTop,\n\t\t\t\tbody: rows,\n\t\t\t\tbottom: pinBottom\n\t\t\t};\n\t\t}\n\n\t\tmodel.sceneChanged.watch(e => {\n\t\t\tif (e.hasChanges('rows')) {\n\t\t\t\tinvalidateRows();\n\t\t\t}\n\t\t});\n\n\t\tmodel.rowChanged.watch(e => {\n\t\t\tif (e.hasChanges('pinTop') || e.hasChanges('pinBottom')) {\n\t\t\t\tinvalidateRows();\n\t\t\t}\n\t\t});\n\t}\n}","import { AppError } from '../infrastructure/error';\r\nimport { lineView } from '../column/column.service';\r\nimport { Node } from '../node/node';\r\n\r\nexport class Scene {\r\n\tconstructor(model) {\r\n\t\tthis.model = model;\r\n\t}\r\n\r\n\trows(memo) {\r\n\t\tconst { nodes, rows } = memo;\r\n\t\tif (nodes.length) {\r\n\t\t\tif (!(rows.length && rows[0] instanceof Node)) {\r\n\t\t\t\tconst { flattenFactory } = this.model.group();\r\n\t\t\t\tconst flatten = flattenFactory(this.model);\r\n\t\t\t\treturn flatten(nodes);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn rows;\r\n\t}\r\n\r\n\tcolumnRows(items) {\r\n\t\treturn items;\r\n\t}\r\n\r\n\tcolumnLine(items) {\r\n\t\treturn lineView(items);\r\n\t}\r\n\r\n\tcolumnArea(items) {\r\n\t\tconst line = lineView(items);\r\n\t\tconst result = {\r\n\t\t\tleft: [],\r\n\t\t\tright: [],\r\n\t\t\tnull: []\r\n\t\t};\r\n\r\n\t\tfor (let i = 0, length = line.length; i < length; i++) {\r\n\t\t\tconst column = line[i];\r\n\t\t\tconst pin = column.model.pin;\r\n\t\t\tlet area = result[pin];\r\n\t\t\tif (!area) {\r\n\t\t\t\tthrow new AppError('scene', `Unsupported pin ${pin}`);\r\n\t\t\t}\r\n\r\n\t\t\tarea.push(column);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n}","export class SceneModel {\n\tconstructor() {\n\t\tthis.status = 'stop'; // start | pull | push | stop\n\t\tthis.rows = [];\n\t\tthis.column = {\n\t\t\trows: [],\n\t\t\tline: [],\n\t\t\tarea: {\n\t\t\t\tleft: [],\n\t\t\t\tnull: [],\n\t\t\t\tright: []\n\t\t\t}\n\t\t};\n\t}\n}","import { ColumnModel } from '../../column-type/column.model';\nimport { isObject, isFunction, isArray } from '../../utility/kit';\n\nexport class ColumnView {\n\tconstructor(model) {\n\t\tthis.model = model;\n\n\t\tthis.colspan = 1;\n\t\tthis.rowspan = 1;\n\t\tthis.rowIndex = -1;\n\t\tthis.columnIndex = -1;\n\t}\n\n\tstatic model(model) {\n\t\tif (model) {\n\t\t\tColumnView.assign(model);\n\t\t}\n\t\telse {\n\t\t\tmodel = new ColumnModel();\n\t\t}\n\n\t\tmodel.origin = 'custom';\n\t\treturn model;\n\t}\n\n\tstatic assign(body) {\n\t\tconst etalon = this.model();\n\t\tfor (let key of Object.keys(etalon)) {\n\t\t\tif (!body.hasOwnProperty(key)) {\n\t\t\t\tlet etalonValue = etalon[key];\n\t\t\t\tif (isFunction(etalonValue)) {\n\t\t\t\t\tetalonValue = etalonValue.bind(body);\n\t\t\t\t}\n\t\t\t\tbody[key] = etalonValue;\n\t\t\t} else {\n\t\t\t\tconst value = body[key];\n\t\t\t\tif (isArray(value)) {\n\t\t\t\t\tbody[key] = Array.from(value);\n\t\t\t\t} else if (isObject(value) && !isFunction(value)) {\n\t\t\t\t\tbody[key] = Object.assign({}, etalon[key], value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn body;\n\t}\n}","import { identity } from '../utility/kit';\r\n\r\nexport class ScrollModel {\r\n\tconstructor() {\r\n\t\tthis.mode = 'default';\r\n\r\n\t\tthis.top = 0;\r\n\t\tthis.left = 0;\t\t\r\n\t\tthis.cursor = 0;\r\n\r\n\t\tthis.map = {\r\n\t\t\trowToView: identity,\r\n\t\t\tviewToRow: identity\r\n\t\t};\r\n\r\n\t\tthis.resetTriggers = [\r\n\t\t\t'sort.view',\r\n\t\t\t'column.filter.view',\r\n\t\t\t'data.manipulation'\r\n\t\t];\r\n\t}\r\n}","import { Log } from '../infrastructure/log';\nimport { isFunction, identity } from '../utility/kit';\nimport { Fastdom } from '../services/fastdom';\n\nexport class ScrollView {\n\tconstructor(model, table, vscroll, gridService) {\n\t\tthis.model = model;\n\t\tthis.table = table;\n\n\t\tconst scroll = model.scroll;\n\t\tconst rowHeight = model.row().height;\n\t\tconst pagination = model.pagination;\n\t\tconst settings = {\n\t\t\tthreshold: model.pagination().size,\n\t\t\tresetTriggers: []\n\t\t};\n\n\t\tif (rowHeight > 0 || isFunction(rowHeight)) {\n\t\t\tsettings.rowHeight = rowHeight;\n\t\t}\n\n\t\tthis.y = vscroll.factory(settings);\n\n\t\tthis.y.container.read = Fastdom.measure;\n\t\tthis.y.container.write = Fastdom.mutate;\n\n\t\tconst subscribe =\n\t\t\t(this.y.container.drawEvent.on || this.y.container.drawEvent.subscribe)\n\t\t\t\t.bind(this.y.container.drawEvent);\n\n\t\tconst updateCurrentPage = position => {\n\t\t\tconst { size, current, count } = pagination();\n\t\t\tconst newCurrent = size === 0\n\t\t\t\t? 0\n\t\t\t\t: count - 1 <= position + size\n\t\t\t\t\t? Math.ceil(count / size) - 1\n\t\t\t\t\t: Math.floor((position + size / 2) / size);\n\n\t\t\tif (newCurrent !== current) {\n\t\t\t\tpagination({ current: newCurrent }, {\n\t\t\t\t\tsource: 'scroll.view',\n\t\t\t\t\tbehavior: 'core'\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tconst updateTotalCount = () => {\n\t\t\tconst { effect } = model.pipe();\n\t\t\tif (effect.hasOwnProperty('memo')) {\n\t\t\t\tconst count = effect.memo.length;\n\t\t\t\tpagination({ count }, {\n\t\t\t\t\tsource: 'scroll.view',\n\t\t\t\t\tbehavior: 'core'\n\t\t\t\t});\n\n\t\t\t\treturn count;\n\t\t\t}\n\n\t\t\treturn pagination().count;\n\t\t};\n\n\t\tsubscribe(e => {\n\t\t\tconst { position } = e;\n\t\t\tupdateCurrentPage(position);\n\n\t\t\tscroll({ cursor: position }, {\n\t\t\t\tsource: 'scroll.view',\n\t\t\t\tbehavior: 'core'\n\t\t\t});\n\t\t});\n\n\n\t\tswitch (scroll().mode) {\n\t\t\tcase 'virtual': {\n\t\t\t\tthis.y.settings.fetch = (skip, take, d) => {\n\t\t\t\t\tmodel.fetch({ skip }, {\n\t\t\t\t\t\tsource: 'scroll.view',\n\t\t\t\t\t\tbehavior: 'core'\n\t\t\t\t\t});\n\n\t\t\t\t\tif (skip === 0) {\n\t\t\t\t\t\tconst count = updateTotalCount();\n\t\t\t\t\t\td.resolve(count);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgridService.invalidate({\n\t\t\t\t\t\t\tsource: 'scroll.view',\n\t\t\t\t\t\t\twhy: 'refresh'\n\t\t\t\t\t\t}).then(() => {\n\t\t\t\t\t\t\tconst count = updateTotalCount();\n\t\t\t\t\t\t\td.resolve(count);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tlet startSource;\n\t\t\t\tconst resetTriggers = new Set(scroll().resetTriggers);\n\t\t\t\tmodel.sceneChanged.watch(e => {\n\t\t\t\t\tif (e.hasChanges('status')) {\n\t\t\t\t\t\tconst { status } = e.state;\n\t\t\t\t\t\tswitch (status) {\n\t\t\t\t\t\t\tcase 'start': {\n\t\t\t\t\t\t\t\tstartSource = e.tag.source;\n\t\t\t\t\t\t\t\tif (resetTriggers.has(startSource)) {\n\t\t\t\t\t\t\t\t\tmodel.fetch({ skip: 0 }, {\n\t\t\t\t\t\t\t\t\t\tsource: 'scroll.view',\n\t\t\t\t\t\t\t\t\t\tbehavior: 'core'\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcase 'stop': {\n\t\t\t\t\t\t\t\tif (resetTriggers.has(startSource)) {\n\t\t\t\t\t\t\t\t\tthis.y.container.reset();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tmodel.paginationChanged.watch(e => {\n\t\t\t\t\tif (e.tag.behavior !== 'core') {\n\t\t\t\t\t\tthis.y.container.reset();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tmodel.scrollChanged.watch(e => {\n\t\t\tif (e.source === 'scroll.view') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (e.hasChanges('mode')) {\n\t\t\t\tswitch (e.state.mode) {\n\t\t\t\t\tcase 'virtual': {\n\t\t\t\t\t\tscroll({\n\t\t\t\t\t\t\tmap: {\n\t\t\t\t\t\t\t\trowToView: index => index - this.y.container.position,\n\t\t\t\t\t\t\t\tviewToRow: index => index + this.y.container.position\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\tsource: 'scroll.view',\n\t\t\t\t\t\t\t\tbehavior: 'core'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'default': {\n\t\t\t\t\t\tscroll({\n\t\t\t\t\t\t\tmap: {\n\t\t\t\t\t\t\t\trowToView: identity,\n\t\t\t\t\t\t\t\tviewToRow: identity\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (e.hasChanges('left') || e.hasChanges('top')) {\n\t\t\t\tthis.invalidate();\n\t\t\t}\n\t\t});\n\t}\n\n\tinvalidate() {\n\t\tLog.info('layout', 'invalidate scroll');\n\n\t\tconst { view } = this.table;\n\t\tconst { left, top } = this.model.scroll();\n\n\t\tFastdom.mutate(() => {\n\t\t\tview.scrollLeft(left);\n\t\t\tview.scrollTop(top);\n\t\t});\n\t}\n\n\tget mode() {\n\t\treturn this.model.scroll().mode;\n\t}\n}","import { CompositeCommandManager } from '../command/composite.command.manager';\r\n\r\nexport class SelectionCommandManager extends CompositeCommandManager {\r\n\tconstructor(model, manager) {\r\n\t\tsuper(manager);\r\n\r\n\t\tthis.model = model;\r\n\t}\r\n\r\n\tfilter(commands) {\r\n\t\tif (this.model.edit().state === 'edit') {\r\n\t\t\tconst cell = this.model.navigation().cell;\r\n\t\t\tif (cell && cell.column.type !== 'select') {\r\n\t\t\t\treturn [];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn super.filter(commands);\r\n\t}\r\n}\r\n","import { Resource } from '../resource/resource';\r\nimport { identity } from '../utility/kit';\r\nimport { Command } from '../command/command';\r\n\r\nexport class SelectionModel {\r\n\tconstructor() {\r\n\t\tthis.resource = new Resource();\r\n\t\tthis.unit = 'cell'; //row|cell|column|mix\r\n\t\tthis.mode = 'single'; //single|multiple|range\r\n\t\tthis.items = [];\r\n\t\tthis.area = 'body'; //body, custom\r\n\t\tthis.toggle = new Command({ source: 'selection.model' });\r\n\t\tthis.key = {\r\n\t\t\trow: identity,\r\n\t\t\tcolumn: identity\r\n\t\t};\r\n\t\tthis.shortcut = {\r\n\t\t\ttoggleRow: 'shift+space',\r\n\t\t\ttogglePreviousRow: 'shift+up',\r\n\t\t\ttoggleNextRow: 'shift+down',\r\n\t\t\ttoggleColumn: 'ctrl+space',\r\n\t\t\ttoggleNextColumn: 'shift+right',\r\n\t\t\ttogglePreviousColumn: 'shift+left',\r\n\t\t\tselectAll: 'ctrl+a'\r\n\t\t};\r\n\t}\r\n}\r\n","import { AppError } from '../infrastructure/error';\r\n\r\nexport class SelectionRange {\r\n\tconstructor(model) {\r\n\t\tthis.model = model;\r\n\t}\r\n\r\n\tbuild() {\r\n\t\tconst rangeMap = {\r\n\t\t\t'row': this.buildRows.bind(this),\r\n\t\t\t'column': this.buildColumns.bind(this),\r\n\t\t\t'cell': this.buildCells.bind(this),\r\n\t\t\t'mix': this.buildMix.bind(this)\r\n\t\t};\r\n\r\n\t\tconst model = this.model;\r\n\t\treturn (...args) => {\r\n\t\t\tconst selection = model.selection();\r\n\t\t\tconst buildRange = rangeMap[selection.unit];\r\n\t\t\tif (!buildRange) {\r\n\t\t\t\tthrow new AppError('range.builder', `Invalid unit ${selection.unit}`);\r\n\t\t\t}\r\n\r\n\t\t\treturn buildRange(...args);\r\n\t\t};\r\n\t}\r\n\r\n\tbuildRows(startCell, endCell) {\r\n\t\tconst model = this.model;\r\n\t\tconst { rows } = model.view();\r\n\t\tif (!endCell) {\r\n\t\t\treturn [rows[startCell.rowIndex]];\r\n\t\t}\r\n\r\n\t\tconst startIndex = Math.min(startCell.rowIndex, endCell.rowIndex);\r\n\t\tconst endIndex = Math.max(startCell.rowIndex, endCell.rowIndex);\r\n\t\treturn rows.slice(startIndex, endIndex + 1);\r\n\t}\r\n\r\n\tbuildColumns(startCell, endCell) {\r\n\t\tif (!endCell) {\r\n\t\t\treturn [startCell.column];\r\n\t\t}\r\n\r\n\t\tconst columns = this.model.columnList().line;\r\n\t\tconst startIndex = Math.min(startCell.columnIndex, endCell.columnIndex);\r\n\t\tconst endIndex = Math.max(startCell.columnIndex, endCell.columnIndex);\r\n\t\treturn columns.slice(startIndex, endIndex + 1);\r\n\t}\r\n\r\n\tbuildCells(startCell, endCell) {\r\n\t\tif (!endCell) {\r\n\t\t\treturn [{\r\n\t\t\t\tcolumn: startCell.column,\r\n\t\t\t\trow: startCell.row\r\n\t\t\t}];\r\n\t\t}\r\n\r\n\t\tconst model = this.model;\r\n\t\tconst { rows, columns } = model.view();\r\n\r\n\t\tconst startRowIndex = Math.min(startCell.rowIndex, endCell.rowIndex);\r\n\t\tconst endRowIndex = Math.max(startCell.rowIndex, endCell.rowIndex);\r\n\r\n\t\tconst startColumnIndex = Math.min(startCell.columnIndex, endCell.columnIndex);\r\n\t\tconst endColumnIndex = Math.max(startCell.columnIndex, endCell.columnIndex);\r\n\r\n\t\tconst selectedRows = rows.slice(startRowIndex, endRowIndex + 1);\r\n\t\tconst selectedColumns = columns.slice(startColumnIndex, endColumnIndex + 1);\r\n\r\n\t\tconst items = [];\r\n\t\tselectedRows.forEach(row => {\r\n\t\t\tselectedColumns\r\n\t\t\t\t.filter(column => column.class === 'data')\r\n\t\t\t\t.forEach(column => {\r\n\t\t\t\t\titems.push({\r\n\t\t\t\t\t\tcolumn: column,\r\n\t\t\t\t\t\trow: row\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn items;\r\n\t}\r\n\r\n\tbuildMix(startCell, endCell) {\r\n\t\tconst mixUnit = startCell.column.type === 'row-indicator' ? 'row' : 'cell';\r\n\t\tconst range = (mixUnit === 'row' ? this.buildRows(startCell, endCell) : this.buildCells(startCell, endCell));\r\n\t\treturn range\r\n\t\t\t.map(item => ({\r\n\t\t\t\titem: item,\r\n\t\t\t\tunit: mixUnit\r\n\t\t\t}));\r\n\t}\r\n}","import { isUndefined, identity } from '../utility/kit';\nimport { AppError } from '../infrastructure/error';\nimport { getFactory } from '../services/value';\n\nfunction hashColumnKeyFactory(model) {\n\tconst selectionState = model.selection();\n\tconst selectionKey = selectionState.key;\n\tif (selectionKey.column === identity) {\n\t\treturn column => column.key;\n\t}\n\n\t// TODO: investigate if is it necessary to use JSON.stringify here\n\treturn identity;\n}\n\nfunction hashRowKeyFactory(model) {\n\tconst selectionState = model.selection();\n\tconst selectionKey = selectionState.key;\n\tif (selectionKey.row === identity) {\n\t\tconst { rows } = model.data();\n\t\tconst columns = model.columnList().line;\n\t\tconst index = columns.findIndex(column => column.type === 'id');\n\t\tif (index >= 0) {\n\t\t\tconst idColumn = columns[index];\n\t\t\tconst getId = getFactory(idColumn);\n\t\t\treturn getId;\n\t\t}\n\n\t\treturn row => rows.indexOf(row);\n\t}\n\n\t// TODO: investigate if is it necessary to use JSON.stringify here\n\treturn identity;\n}\n\nfunction hashKeyFactory(model) {\n\tconst selectionState = model.selection();\n\tswitch (selectionState.unit) {\n\t\tcase 'row':\n\t\t\treturn hashRowKeyFactory(model);\n\t\tcase 'column':\n\t\t\treturn hashColumnKeyFactory(model);\n\t\tcase 'cell': {\n\t\t\tconst hashColumnKey = hashColumnKeyFactory(model);\n\t\t\tconst hashRowKey = hashRowKeyFactory(model);\n\t\t\treturn key => `${hashColumnKey(key.column)}[${hashRowKey(key.row)}]`;\n\t\t}\n\t\tcase 'mix': {\n\t\t\tconst hashColumnKey = hashColumnKeyFactory(model);\n\t\t\tconst hashRowKey = hashRowKeyFactory(model);\n\t\t\treturn (key, entry) => {\n\t\t\t\tif (!entry.unit) {\n\t\t\t\t\treturn key;\n\t\t\t\t}\n\n\t\t\t\tswitch (entry.unit) {\n\t\t\t\t\tcase 'column':\n\t\t\t\t\t\treturn hashColumnKey(key);\n\t\t\t\t\tcase 'row':\n\t\t\t\t\t\treturn hashRowKey(key);\n\t\t\t\t\tcase 'cell':\n\t\t\t\t\t\treturn `${hashColumnKey(key.column)}[${hashRowKey(key.row)}]`;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new AppError('selection.service', `Invalid unit ${entry.unit}`);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\tdefault:\n\t\t\tthrow new AppError('selection.service', `Invalid unit ${selectionState.unit}`);\n\t}\n}\n\nfunction cellMatchFactory() {\n\treturn (x, y) => x.column === y.column && x.row === y.row;\n}\n\nfunction keySelector(unit, selector) {\n\tswitch (unit) {\n\t\tcase 'row':\n\t\t\treturn selector.row;\n\t\tcase 'column':\n\t\t\treturn selector.column;\n\t\tcase 'cell':\n\t\t\treturn entry => {\n\t\t\t\tif (entry.row && entry.column) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\trow: selector.row(entry.row),\n\t\t\t\t\t\tcolumn: selector.column(entry.column)\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn entry;\n\t\t\t};\n\t\tdefault:\n\t\t\tthrow new AppError('selection.state', `Invalid unit ${unit}`);\n\t}\n}\n\nfunction lookupColumnFactory(model, selectKey) {\n\tconst selectionState = model.selection();\n\tif (selectionState.key.column === identity) {\n\t\treturn identity;\n\t}\n\n\tconst columns = model.columnList().line;\n\treturn items => {\n\t\tconst result = [];\n\t\tcolumns.forEach(column => {\n\t\t\tconst columnKey = selectKey(column);\n\t\t\tconst found = items.indexOf(columnKey) > -1;\n\t\t\tif (found) {\n\t\t\t\tresult.push(column);\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t};\n}\n\nfunction lookupRowFactory(model, selectKey) {\n\tconst selectionState = model.selection();\n\tif (selectionState.key.row === identity) {\n\t\treturn identity;\n\t}\n\n\tconst { rows } = model.data();\n\treturn items => {\n\t\tconst result = [];\n\t\trows.forEach(row => {\n\t\t\tconst rowKey = selectKey(row);\n\t\t\tconst found = items.indexOf(rowKey) > -1;\n\t\t\tif (found) {\n\t\t\t\tresult.push(row);\n\t\t\t}\n\t\t});\n\t\treturn result;\n\t};\n}\n\nfunction lookupCellFactory(model, selectKey) {\n\tconst selectionState = model.selection();\n\tif (selectionState.key.row === identity && selectionState.key.column === identity) {\n\t\treturn identity;\n\t}\n\n\tconst { rows } = model.data();\n\tconst columns = model.columnList().line;\n\tconst match = cellMatchFactory();\n\treturn items => {\n\t\tconst result = [];\n\t\tcolumns.forEach(column => {\n\t\t\trows.forEach(row => {\n\t\t\t\tconst cell = {\n\t\t\t\t\tcolumn: column,\n\t\t\t\t\trow: row\n\t\t\t\t};\n\n\t\t\t\tconst index = items.findIndex(item => match(item, selectKey(cell)));\n\t\t\t\tif (index >= 0) {\n\t\t\t\t\tresult.push(cell);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\treturn result;\n\t};\n}\n\nexport class SelectionService {\n\tconstructor(model) {\n\t\tthis.model = model;\n\t}\n\n\tlookup(items, unit) {\n\t\tlet entries = [];\n\t\tif (items.length === 0) {\n\t\t\treturn entries;\n\t\t}\n\n\t\tconst model = this.model;\n\t\tif (isUndefined(unit)) {\n\t\t\tunit = model.selection().unit;\n\t\t}\n\n\t\tswitch (unit) {\n\t\t\tcase 'column': {\n\t\t\t\tconst selectKey = this.keyFactory('column');\n\t\t\t\tconst lookup = lookupColumnFactory(model, selectKey);\n\t\t\t\tentries = lookup(items);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'row': {\n\t\t\t\tconst selectKey = this.keyFactory('row');\n\t\t\t\tconst lookup = lookupRowFactory(model, selectKey);\n\t\t\t\tentries = lookup(items);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'cell': {\n\t\t\t\tconst selectKey = this.keyFactory('cell');\n\t\t\t\tconst lookup = lookupCellFactory(model, selectKey);\n\t\t\t\tentries = lookup(items);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'mix': {\n\t\t\t\tconst rowKeys = items.filter(key => key.unit === 'row').map(key => key.item);\n\t\t\t\tconst columnKeys = items.filter(key => key.unit === 'column').map(key => key.item);\n\t\t\t\tconst cellKeys = items.filter(key => key.unit === 'cell').map(key => key.item);\n\n\t\t\t\tentries.push(...this.lookup(rowKeys, 'row').map(entry => ({ item: entry, unit: 'row' })));\n\t\t\t\tentries.push(...this.lookup(columnKeys, 'column').map(entry => ({ item: entry, unit: 'column' })));\n\t\t\t\tentries.push(...this.lookup(cellKeys, 'cell').map(entry => ({ item: entry, unit: 'cell' })));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tthrow new AppError('selection.state', `Invalid unit ${unit}`);\n\t\t}\n\n\t\treturn entries;\n\t}\n\n\tmap(entries) {\n\t\tconst selectionState = this.model.selection();\n\t\tconst selectKey = this.keyFactory();\n\t\tswitch (selectionState.unit) {\n\t\t\tcase 'column':\n\t\t\tcase 'row':\n\t\t\tcase 'cell':\n\t\t\t\treturn entries.map(selectKey);\n\t\t\tcase 'mix':\n\t\t\t\treturn entries.map(entry => ({\n\t\t\t\t\tunit: entry.unit,\n\t\t\t\t\titem: selectKey(entry)\n\t\t\t\t}));\n\t\t\tdefault:\n\t\t\t\tthrow new AppError('selection.state', `Invalid unit ${selectionState.unit}`);\n\t\t}\n\t}\n\n\tkeyFactory(unit) {\n\t\tconst selectionState = this.model.selection();\n\t\tunit = unit || selectionState.unit;\n\t\tswitch (unit) {\n\t\t\tcase 'column':\n\t\t\tcase 'row':\n\t\t\tcase 'cell':\n\t\t\t\treturn keySelector(unit, selectionState.key);\n\t\t\tcase 'mix': {\n\t\t\t\tconst cellKey = keySelector('cell', selectionState.key);\n\t\t\t\tconst rowKey = keySelector('row', selectionState.key);\n\t\t\t\tconst columnKey = keySelector('column', selectionState.key);\n\n\t\t\t\treturn entry => {\n\t\t\t\t\tif (!entry.unit) {\n\t\t\t\t\t\treturn identity;\n\t\t\t\t\t}\n\n\t\t\t\t\tswitch (entry.unit) {\n\t\t\t\t\t\tcase 'column':\n\t\t\t\t\t\t\treturn columnKey(entry.item);\n\t\t\t\t\t\tcase 'row':\n\t\t\t\t\t\t\treturn rowKey(entry.item);\n\t\t\t\t\t\tcase 'cell':\n\t\t\t\t\t\t\treturn cellKey(entry.item);\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new AppError('selection.service', `Invalid unit ${entry.unit}`);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tthrow new AppError('selection.service', `Invalid unit ${unit}`);\n\t\t}\n\t}\n\n\thashFactory() {\n\t\tconst selectKey = this.keyFactory();\n\t\tconst selectHash = hashKeyFactory(this.model);\n\t\treturn entry => {\n\t\t\tconst key = selectKey(entry);\n\t\t\tconst hashKey = selectHash(key, entry);\n\t\t\treturn hashKey;\n\t\t};\n\t}\n}\n","import { AppError } from '../infrastructure/error';\nimport { Command } from '../command/command';\nimport { selectionStateFactory as formFactory } from './state/selection.state.factory';\nimport { SelectionRange } from './selection.range';\nimport { SelectionService } from './selection.service';\nimport { noop, isArray, isUndefined } from '../utility/kit';\nimport { GRID_PREFIX } from '../definition';\n\nexport class SelectionView {\n\tconstructor(model, table, shortcut) {\n\t\tthis.model = model;\n\t\tthis.table = table;\n\n\t\tthis.selectionService = new SelectionService(model);\n\t\tthis.form = formFactory(model, this.selectionService);\n\t\tthis.selectionRange = new SelectionRange(model);\n\n\t\tconst commands = this.commands;\n\t\tshortcut.register(commands);\n\n\t\tthis.toggleRow = commands.get('toggleRow');\n\t\tthis.toggleColumn = commands.get('toggleColumn');\n\t\tthis.toggleCell = commands.get('toggleCell');\n\t\tthis.reset = commands.get('reset');\n\n\t\tmodel.navigationChanged.watch(e => {\n\t\t\tif (e.tag.source === 'selection.view') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (e.hasChanges('cell')) {\n\t\t\t\tif (this.toggleCell.canExecute(e.state.cell)) {\n\t\t\t\t\tthis.toggleCell.execute(e.state.cell);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst modeClass = `${GRID_PREFIX}-select-${model.selection().mode}`;\n\t\tconst unitClass = `${GRID_PREFIX}-select-${model.selection().unit}`;\n\t\tconst view = table.view;\n\t\tview.addClass(modeClass);\n\t\tview.addClass(unitClass);\n\n\t\tmodel.selectionChanged.watch(e => {\n\t\t\tif (e.hasChanges('mode')) {\n\t\t\t\tconst newModeClass = `${GRID_PREFIX}-select-${e.state.mode}`;\n\t\t\t\tconst oldModeClass = `${GRID_PREFIX}-select-${e.changes.mode.oldValue}`;\n\n\t\t\t\tview.removeClass(oldModeClass);\n\t\t\t\tview.addClass(newModeClass);\n\t\t\t}\n\n\t\t\tif (e.hasChanges('unit')) {\n\t\t\t\tconst newUnitClass = `${GRID_PREFIX}-select-${e.state.unit}`;\n\t\t\t\tconst oldUnitClass = `${GRID_PREFIX}-select-${e.changes.unit.oldValue}`;\n\n\t\t\t\tview.removeClass(oldUnitClass);\n\t\t\t\tview.addClass(newUnitClass);\n\t\t\t}\n\n\t\t\tif (e.hasChanges('unit') || e.hasChanges('mode')) {\n\t\t\t\tif (!e.hasChanges('items')) {\n\t\t\t\t\tthis.form.clear();\n\t\t\t\t\tmodel.selection({ items: [] }, {\n\t\t\t\t\t\tsource: 'selection.view'\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.form = formFactory(model, this.selectionService);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (e.hasChanges('items') && e.tag.source !== 'selection.view') {\n\t\t\t\t// Don't use commit it came outside already\n\n\t\t\t\tconst oldEntries = this.selectionService.lookup(e.changes.items.oldValue);\n\t\t\t\tthis.select(oldEntries, false);\n\n\t\t\t\tconst newEntries = this.selectionService.lookup(e.state.items);\n\t\t\t\tthis.select(newEntries, true);\n\t\t\t}\n\t\t});\n\t}\n\n\tget commands() {\n\t\tconst model = this.model;\n\t\tconst shortcut = model.selection().shortcut;\n\n\t\tconst toggleActiveRow = new Command({\n\t\t\tsource: 'selection.view',\n\t\t\tcanExecute: () => model.selection().unit === 'row' && this.rows.length > 0,\n\t\t\texecute: () => {\n\t\t\t\tconst { rowIndex } = model.navigation();\n\t\t\t\tconst row = this.rows[rowIndex >= 0 ? rowIndex : rowIndex + 1];\n\t\t\t\tconst commit = this.toggle(row);\n\t\t\t\tcommit();\n\t\t\t},\n\t\t\tshortcut: shortcut.toggleRow\n\t\t});\n\n\t\tconst commands = {\n\t\t\ttoggleCell: new Command({\n\t\t\t\tsource: 'selection.view',\n\t\t\t\tcanExecute: item => {\n\t\t\t\t\tconst selectionState = model.selection();\n\t\t\t\t\treturn item && selectionState.mode !== 'range' && (selectionState.unit === 'cell' || selectionState.unit === 'mix');\n\t\t\t\t},\n\t\t\t\texecute: (item, source) => {\n\t\t\t\t\tconst selectionState = model.selection();\n\t\t\t\t\tswitch (selectionState.unit) {\n\t\t\t\t\t\tcase 'cell': {\n\t\t\t\t\t\t\tconst commit = this.toggle(item, source);\n\t\t\t\t\t\t\tcommit();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase 'mix': {\n\t\t\t\t\t\t\tif (item.column.type === 'row-indicator') {\n\t\t\t\t\t\t\t\tconst commit = this.toggle({ item: item.row, unit: 'row' }, source);\n\t\t\t\t\t\t\t\tcommit();\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tconst commit = this.toggle({ item: item, unit: 'cell' }, source);\n\t\t\t\t\t\t\t\tcommit();\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t\ttoggleRow: new Command({\n\t\t\t\tsource: 'selection.view',\n\t\t\t\texecute: (item, source) => {\n\t\t\t\t\tconst commit = this.toggle(item, source);\n\t\t\t\t\tcommit();\n\t\t\t\t},\n\t\t\t\tcanExecute: row => {\n\t\t\t\t\tconst e = {\n\t\t\t\t\t\titems: isUndefined(row)\n\t\t\t\t\t\t\t? this.model.view().rows\n\t\t\t\t\t\t\t: [row],\n\t\t\t\t\t\tsource: 'custom',\n\t\t\t\t\t\tkind: 'toggleRow'\n\t\t\t\t\t};\n\n\t\t\t\t\tif (!row) {\n\t\t\t\t\t\treturn model.selection().toggle.canExecute(e) && this.mode === 'multiple';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn model.selection().toggle.canExecute(e);\n\t\t\t\t}\n\t\t\t}),\n\t\t\ttoggleColumn: new Command({\n\t\t\t\tsource: 'selection.view',\n\t\t\t\texecute: (item, source) => {\n\t\t\t\t\tconst commit = this.toggle(item, source);\n\t\t\t\t\tcommit();\n\t\t\t\t}\n\t\t\t}),\n\t\t\tcommitRow: new Command({\n\t\t\t\tsource: 'selection.view',\n\t\t\t\tcanExecute: () => {\n\t\t\t\t\tconst { column } = model.navigation();\n\t\t\t\t\treturn column && column.type === 'select';\n\t\t\t\t},\n\t\t\t\texecute: () => {\n\t\t\t\t\tif (toggleActiveRow.canExecute()) {\n\t\t\t\t\t\ttoggleActiveRow.execute();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tshortcut: model.edit().commitShortcuts['select'] || ''\n\t\t\t}),\n\t\t\ttoggleActiveRow: toggleActiveRow,\n\t\t\ttogglePrevRow: new Command({\n\t\t\t\tsource: 'selection.view',\n\t\t\t\tcanExecute: () => model.selection().unit === 'row' && model.navigation().rowIndex > 0,\n\t\t\t\texecute: () => {\n\t\t\t\t\tconst { rowIndex, columnIndex } = model.navigation();\n\t\t\t\t\tconst row = this.rows[rowIndex];\n\t\t\t\t\tconst commit = this.toggle(row);\n\t\t\t\t\tcommit();\n\n\t\t\t\t\tthis.navigateTo(rowIndex - 1, columnIndex);\n\t\t\t\t},\n\t\t\t\tshortcut: shortcut.togglePreviousRow\n\t\t\t}),\n\t\t\ttoggleNextRow: new Command({\n\t\t\t\tsource: 'selection.view',\n\t\t\t\tcanExecute: () => model.selection().unit === 'row' && model.navigation().rowIndex < this.rows.length - 1,\n\t\t\t\texecute: () => {\n\t\t\t\t\tconst { rowIndex, columnIndex } = model.navigation();\n\t\t\t\t\tconst row = this.rows[rowIndex];\n\t\t\t\t\tconst commit = this.toggle(row);\n\t\t\t\t\tcommit();\n\n\t\t\t\t\tthis.navigateTo(rowIndex + 1, columnIndex);\n\t\t\t\t},\n\t\t\t\tshortcut: shortcut.toggleNextRow\n\t\t\t}),\n\t\t\ttoggleActiveColumn: new Command({\n\t\t\t\tsource: 'selection.view',\n\t\t\t\tcanExecute: () => model.selection().unit === 'column' && model.navigation().columnIndex >= 0,\n\t\t\t\texecute: () => {\n\t\t\t\t\tconst { columnIndex } = model.navigation();\n\t\t\t\t\tconst column = this.columns[columnIndex];\n\t\t\t\t\tconst commit = this.toggle(column);\n\t\t\t\t\tcommit();\n\t\t\t\t},\n\t\t\t\tshortcut: shortcut.toggleColumn\n\t\t\t}),\n\t\t\ttoggleNextColumn: new Command({\n\t\t\t\tsource: 'selection.view',\n\t\t\t\tcanExecute: () => model.selection().unit === 'column' && model.navigation().columnIndex < this.columns.length - 1,\n\t\t\t\texecute: () => {\n\t\t\t\t\tconst { rowIndex, columnIndex } = model.navigation();\n\t\t\t\t\tconst column = this.columns[columnIndex];\n\t\t\t\t\tconst commit = this.toggle(column);\n\t\t\t\t\tcommit();\n\n\t\t\t\t\tthis.navigateTo(rowIndex, columnIndex + 1);\n\t\t\t\t},\n\t\t\t\tshortcut: shortcut.toggleNextColumn\n\t\t\t}),\n\t\t\ttogglePrevColumn: new Command({\n\t\t\t\tsource: 'selection.view',\n\t\t\t\tcanExecute: () => model.selection().unit === 'column' && model.navigation().columnIndex > 0,\n\t\t\t\texecute: () => {\n\t\t\t\t\tconst { rowIndex, columnIndex } = model.navigation();\n\t\t\t\t\tconst column = this.columns[columnIndex];\n\t\t\t\t\tconst commit = this.toggle(column);\n\t\t\t\t\tcommit();\n\n\t\t\t\t\tthis.navigateTo(rowIndex, columnIndex - 1);\n\t\t\t\t},\n\t\t\t\tshortcut: shortcut.togglePreviousColumn\n\t\t\t}),\n\t\t\tselectAll: new Command({\n\t\t\t\tsource: 'selection.view',\n\t\t\t\tcanExecute: () => model.selection().mode === 'multiple',\n\t\t\t\texecute: () => {\n\t\t\t\t\tlet entries = [];\n\t\t\t\t\tswitch (model.selection().unit) {\n\t\t\t\t\t\tcase 'row': {\n\t\t\t\t\t\t\tentries = model.data().rows;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase 'column': {\n\t\t\t\t\t\t\tentries = model.columnList().line;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase 'cell':\n\t\t\t\t\t\tcase 'mix': {\n\t\t\t\t\t\t\tconst buildRange = this.selectionRange.build();\n\t\t\t\t\t\t\tconst body = this.table.body;\n\t\t\t\t\t\t\tconst startCell = body.cell(0, 0);\n\t\t\t\t\t\t\tconst endCell = body.cell(body.rowCount() - 1, body.columnCount() - 1);\n\t\t\t\t\t\t\tentries = buildRange(startCell, endCell);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new AppError('selection.view', `Invalid unit ${model.selection().unit}`);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst commit = this.select(entries, true);\n\t\t\t\t\tcommit();\n\t\t\t\t},\n\t\t\t\tshortcut: shortcut.selectAll\n\t\t\t})\n\t\t};\n\n\t\treturn new Map(\n\t\t\tObject.entries(commands)\n\t\t);\n\t}\n\n\tselectRange(startCell, endCell, source) {\n\t\tconst buildRange = this.selectionRange.build();\n\t\tconst range = buildRange(startCell, endCell);\n\t\tconst commit = this.select(range, true, source);\n\t\tcommit();\n\t}\n\n\ttoggle(items, source = 'custom') {\n\t\tconst { toggle } = this.model.selection();\n\n\t\titems = !arguments.length || isUndefined(items)\n\t\t\t? this.model.view().rows\n\t\t\t: isArray(items)\n\t\t\t\t? items : [items];\n\n\t\tconst e = { items, source, kind: 'toggle' };\n\t\tif (toggle.canExecute(e)) {\n\t\t\ttoggle.execute(e);\n\n\t\t\tconst { form } = this;\n\t\t\tform.toggle(items);\n\n\t\t\treturn () => {\n\t\t\t\tthis.model.selection({\n\t\t\t\t\titems: this.selectionService.map(form.entries())\n\t\t\t\t}, {\n\t\t\t\t\t\tsource: 'selection.view'\n\t\t\t\t\t});\n\t\t\t};\n\t\t}\n\n\t\treturn noop;\n\t}\n\n\tselect(items, state, source = 'custom') {\n\t\tconst { toggle } = this.model.selection();\n\t\tconst e = {\n\t\t\titems,\n\t\t\tsource,\n\t\t\tkind: 'select'\n\t\t};\n\n\t\tif (toggle.canExecute(e)) {\n\t\t\ttoggle.execute(e);\n\n\t\t\tconst selectionState = this.form;\n\t\t\tselectionState.select(items, state);\n\n\t\t\treturn () => {\n\t\t\t\tconst items = this.selectionService.map(selectionState.entries());\n\t\t\t\tthis.model.selection({ items }, {\n\t\t\t\t\tsource: 'selection.view'\n\t\t\t\t});\n\t\t\t};\n\t\t} else {\n\t\t\treturn noop;\n\t\t}\n\t}\n\n\tstate(item) {\n\t\tif (!arguments.length) {\n\t\t\treturn !!this.form.stateAll(this.rows);\n\t\t}\n\n\t\treturn this.form.state(item) === true;\n\t}\n\n\tisIndeterminate(item) {\n\t\tif (!arguments.length) {\n\t\t\treturn this.form.stateAll(this.rows) === null;\n\t\t}\n\n\t\treturn this.form.state(item) === null;\n\t}\n\n\tget selection() {\n\t\treturn this.model.selection();\n\t}\n\n\tget mode() {\n\t\treturn this.selection.mode;\n\t}\n\n\tget items() {\n\t\treturn this.selection.items;\n\t}\n\n\tget rows() {\n\t\treturn this.table.data.rows();\n\t}\n\n\tget columns() {\n\t\treturn this.table.data.columns();\n\t}\n\n\tnavigateTo(rowIndex, columnIndex) {\n\t\tconst { row, column } = this.table.body.cell(rowIndex, columnIndex).model();\n\t\tthis.model.navigation({\n\t\t\tcell: {\n\t\t\t\trowIndex,\n\t\t\t\tcolumnIndex,\n\t\t\t\trow,\n\t\t\t\tcolumn\n\t\t\t}\n\t\t}, { source: 'selection.view' });\n\t}\n}\n","import {SelectionState} from './selection.state';\r\n\r\nexport class MultipleSelectionState extends SelectionState {\r\n\tconstructor(model, service) {\r\n\t\tsuper(model, service);\r\n\r\n\t\tthis.items = new Map();\r\n\t}\r\n\r\n\tentries() {\r\n\t\treturn Array.from(this.items.values());\r\n\t}\r\n\r\n\tselectCore(item, state, key) {\r\n\t\tif (state) {\r\n\t\t\tthis.items.set(key(item), item);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.items.delete(key(item));\r\n\t\t}\r\n\t}\r\n\r\n\tstateCore(item, key) {\r\n\t\treturn this.items.has(key(item));\r\n\t}\r\n\r\n\tclearCore() {\r\n\t\tthis.items = new Map();\r\n\t}\r\n}","import { MultipleSelectionState } from './multiple.selection.state';\r\nimport { isArray } from '../../utility/kit';\r\n\r\nexport class RangeSelectionState extends MultipleSelectionState {\r\n\tconstructor(model, service) {\r\n\t\tsuper(model, service);\r\n\t}\r\n\r\n\tselect(item, state = true) {\r\n\t\tif (isArray(item)) {\r\n\t\t\tthis.clear();\r\n\t\t}\r\n\r\n\t\tsuper.select(item, state);\r\n\t}\r\n}","import { AppError } from '../../infrastructure/error';\r\nimport { SingleSelectionState } from './single.selection.state';\r\nimport { MultipleSelectionState } from './multiple.selection.state';\r\nimport { RangeSelectionState } from './range.selection.state';\r\n\r\nexport function selectionStateFactory(model, service) {\r\n\tconst mode = model.selection().mode;\r\n\r\n\tswitch (mode) {\r\n\t\tcase 'single':\r\n\t\t\treturn new SingleSelectionState(model, service);\r\n\t\tcase 'multiple':\r\n\t\t\treturn new MultipleSelectionState(model, service);\r\n\t\tcase 'range':\r\n\t\t\treturn new RangeSelectionState(model, service);\r\n\t\tdefault:\r\n\t\t\tthrow new AppError('selection.state.factory', `Invalid selection mode \"${mode}\"`);\r\n\t}\r\n}\r\n\r\n","import { isArray } from '../../utility/kit';\r\nimport { Node } from '../../node/node';\r\n\r\nexport class SelectionState {\r\n\tconstructor(model, service) {\r\n\t\tthis.model = model;\r\n\t\tthis.service = service;\r\n\t}\r\n\r\n\tselect(item, state = true, key) {\r\n\t\tkey = key || this.keyFactory();\r\n\t\tif (isArray(item)) {\r\n\t\t\titem.forEach(item => this.select(item, state, key));\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (item instanceof Node) {\r\n\t\t\tconst { rows } = this.model.data();\r\n\t\t\tif (rows.length) {\r\n\t\t\t\titem.rows.forEach(index => this.select(rows[index], state, key));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.selectCore(item, state, key);\r\n\t}\r\n\r\n\ttoggle(item) {\r\n\t\tconst state = this.state(item);\r\n\t\treturn this.select(item, state === null || !state);\r\n\t}\r\n\r\n\tstate(item, key) {\r\n\t\tkey = key || this.keyFactory();\r\n\t\tif (isArray(item)) {\r\n\t\t\tconst all = item.every(item => this.state(item, key));\r\n\t\t\treturn all ? true : item.some(item => this.state(item, key)) ? null : false;\r\n\t\t}\r\n\r\n\t\tif (item instanceof Node) {\r\n\t\t\tconst { rows } = this.model.data();\r\n\t\t\tif (rows.length) {\r\n\t\t\t\tconst all = item.rows.length && item.rows.every(index => this.state(rows[index], key));\r\n\t\t\t\treturn all ? true : item.rows.some(index => this.state(rows[index], key)) ? null : false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this.stateCore(item, key);\r\n\t}\r\n\r\n\tstateAll(items) {\r\n\t\tconst entries = this.entries();\r\n\t\tif (items.length === entries.length) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn entries.length > 0 ? null : false;\r\n\t}\r\n\r\n\tkeyFactory() {\r\n\t\treturn this.service.hashFactory();\r\n\t}\r\n\r\n\tclear() {\r\n\t\tthis.clearCore();\r\n\t}\r\n\r\n\tentries() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\tselectCore() {\r\n\t}\r\n\r\n\tclearCore() {\r\n\t}\r\n\r\n\tstateCore() {\r\n\t\treturn false;\r\n\t}\r\n}","import {SelectionState} from './selection.state';\r\n\r\nexport class SingleSelectionState extends SelectionState {\r\n\tconstructor(model, service) {\r\n\t\tsuper(model, service);\r\n\r\n\t\tthis.item = null;\r\n\t}\r\n\r\n\tentries() {\r\n\t\treturn this.item ? [this.item] : [];\r\n\t}\r\n\r\n\tselectCore(item, state) {\r\n\t\tif (state) {\r\n\t\t\tthis.item = item;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.item = null;\r\n\t\t}\r\n\t}\r\n\r\n\tstateCore(item, key) {\r\n\t\treturn this.item !== null && key(item) === key(this.item);\r\n\t}\r\n\r\n\tclearCore() {\r\n\t\tthis.item = null;\r\n\t}\r\n}","export class Aggregation {\n\tconstructor() {\n\t}\n\n\tstatic first(rows, getValue) {\n\t\tif (!rows.length) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn getValue(rows[0]);\n\t}\n\n\tstatic last(rows, getValue) {\n\t\tconst length = rows.length;\n\t\tif (!length) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn getValue(rows[length - 1]);\n\t}\n\n\tstatic max(rows, getValue) {\n\t\tlet length = rows.length;\n\t\tif (!length) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet max = Number.MIN_SAFE_INTEGER;\n\t\twhile (length--) {\n\t\t\tmax = Math.max(max, getValue(rows[length]));\n\t\t}\n\n\t\treturn max;\n\t}\n\n\tstatic min(rows, getValue) {\n\t\tlet length = rows.length;\n\t\tif (!length) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet min = Number.MAX_SAFE_INTEGER;\n\t\twhile (length--) {\n\t\t\tmin = Math.min(min, getValue(rows[length]));\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tstatic minMax(rows, getValue) {\n\t\tlet length = rows.length;\n\t\tif (!length) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet min = Number.MAX_SAFE_INTEGER;\n\t\tlet max = Number.MIN_SAFE_INTEGER;\n\t\twhile (length--) {\n\t\t\tconst value = getValue(rows[length]);\n\t\t\tmin = Math.min(min, value);\n\t\t\tmax = Math.max(max, value);\n\t\t}\n\n\t\treturn [min, max];\n\t}\n\n\tstatic avg(rows, getValue, options) {\n\t\tconst length = rows.length;\n\t\tif (!length) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (options.distinct) {\n\t\t\tconst set = new Set();\n\t\t\treturn Aggregation.sum(rows, getValue, options, set) / set.size;\n\t\t}\n\n\t\treturn Aggregation.sum(rows, getValue, options) / length;\n\t}\n\n\tstatic sum(rows, getValue, options, set) {\n\t\tlet length = rows.length;\n\t\tif (!length) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet sum = 0;\n\t\tif (options.distinct) {\n\t\t\tset = set || new Set();\n\t\t\twhile (length--) {\n\t\t\t\tconst value = getValue(rows[length]);\n\t\t\t\tif (!set.has(value)) {\n\t\t\t\t\tsum += value;\n\t\t\t\t\tset.add(value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\twhile (length--) {\n\t\t\t\tsum += Number(getValue(rows[length]));\n\t\t\t}\n\t\t}\n\n\t\treturn sum;\n\t}\n\n\tstatic join(rows, getValue, options) {\n\t\tconst length = rows.length;\n\t\tif (!length) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet result = getValue(rows[0]);\n\t\tconst separator = options.separator || '';\n\n\t\tif (options.distinct) {\n\t\t\tconst set = new Set();\n\t\t\tlet value = result;\n\t\t\tset.add(value);\n\n\t\t\tlet i = 1;\n\t\t\twhile (i < length) {\n\t\t\t\tvalue = getValue(rows[i]);\n\n\t\t\t\tif (!set.has(value)) {\n\t\t\t\t\tresult += separator + value;\n\t\t\t\t\tset.add(value);\n\t\t\t\t}\n\n\t\t\t\ti++;\n\t\t\t}\n\t\t} else {\n\t\t\tlet i = 1;\n\t\t\twhile (i < length) {\n\t\t\t\tresult += separator + getValue(rows[i]);\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tstatic count(rows, getValue, options) {\n\t\tlet length = rows.length;\n\t\tif (!length) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (options.distinct) {\n\t\t\tlet set = new Set();\n\t\t\twhile (length--) {\n\t\t\t\tconst count = Number(getValue(rows[length]));\n\t\t\t\tset.add(count);\n\t\t\t}\n\n\t\t\treturn set.size;\n\t\t}\n\n\t\treturn length;\n\t}\n\n}\n","import { identity, isObject, isArray, isBoolean, isEmail, isString, isUrl, isImage, isUndefined } from '../utility/kit';\n\n// TODO: right now we check the empty result on null, we need to have a way to make it more explicitly\nexport function parseFactory(type, editor) {\n\tswitch (type) {\n\t\tcase 'id': {\n\t\t\ttype = editor ? editor : 'text';\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tswitch (type) {\n\t\tcase 'text':\n\t\tcase 'email':\n\t\tcase 'url':\n\t\tcase 'password':\n\t\t\treturn parseText;\n\t\tcase 'number':\n\t\tcase 'currency':\n\t\t\treturn parseNumber;\n\t\tcase 'time':\n\t\tcase 'date':\n\t\t\treturn parseDate;\n\t\tcase 'bool':\n\t\t\treturn parseBool;\n\t\tcase 'array':\n\t\t\treturn parseArray;\n\t\tdefault:\n\t\t\treturn identity;\n\t}\n}\n\nexport function resolveType(values) {\n\tconst types = values\n\t\t.filter(x => !(isUndefined(x) || x === null || x === ''))\n\t\t.map(getType);\n\n\tif (types.length) {\n\t\tconst test = types[0];\n\t\tif (types.every(x => x === test)) {\n\t\t\treturn test;\n\t\t}\n\t}\n\n\treturn 'text';\n}\n\nexport function getType(value) {\n\tif (isArray(value)) {\n\t\tif (value.length) {\n\t\t\tconst itemType = getType(value[0]);\n\t\t\tif (!isPrimitive(itemType)) {\n\t\t\t\treturn 'collection';\n\t\t\t}\n\t\t}\n\n\t\treturn 'array';\n\t}\n\n\tif (isNumber(value)) {\n\t\treturn 'number';\n\t}\n\n\tif (isBoolean(value)) {\n\t\treturn 'bool';\n\t}\n\n\tif (isDate(value)) {\n\t\treturn 'date';\n\t}\n\n\tif (isEmail(value)) {\n\t\treturn 'email';\n\t}\n\n\tif (isImage(value)) {\n\t\treturn 'image';\n\t}\n\n\tif (isUrl(value)) {\n\t\treturn 'url';\n\t}\n\n\tif (isString(value)) {\n\t\treturn 'text';\n\t}\n\n\tif (isObject(value)) {\n\t\treturn 'object';\n\t}\n\n\treturn 'text';\n}\n\nexport function isPrimitive(type) {\n\tswitch (type) {\n\t\tcase 'date':\n\t\tcase 'time':\n\t\tcase 'bool':\n\t\tcase 'text':\n\t\tcase 'number':\n\t\tcase 'email':\n\t\tcase 'url':\n\t\t\treturn true;\n\t\tdefault:\n\t\t\treturn false;\n\t}\n}\n\nfunction isDate(value) {\n\tif (value === null || isUndefined(value) || value === '') {\n\t\treturn false;\n\t}\n\n\tif (value instanceof Date) {\n\t\treturn true;\n\t}\n\n\tvalue = '' + value;\n\treturn !!value.match(/^(\\d{4})(-(\\d{2})(-(\\d{2})([T ](\\d{2}):(\\d{2})(:(\\d{2})(\\.(\\d+))?)?(Z|(([-+])(\\d{2})(:?(\\d{2}))?))?)?)?)?$/);\n}\n\nfunction isNumber(value) {\n\tif (isNaN(value)) {\n\t\treturn false;\n\t}\n\n\tconst number = parseFloat(value);\n\treturn !isNaN(number) && isFinite(number);\n}\n\nfunction parseBool(value) {\n\treturn value === null || isUndefined(value)\n\t\t? value\n\t\t: !!value;\n}\n\nfunction parseText(value) {\n\treturn value === null || isUndefined(value)\n\t\t? value\n\t\t: '' + value;\n}\n\nfunction parseDate(value) {\n\tif (value === null || isUndefined(value)) {\n\t\treturn value\n\t}\n\n\tif (value === '') {\n\t\treturn null;\n\t}\n\n\tif (value instanceof Date) {\n\t\treturn value;\n\t}\n\n\treturn new Date('' + value);\n}\n\nfunction parseNumber(value) {\n\tif (value === null || isUndefined(value)) {\n\t\treturn value\n\t}\n\n\tif (value === '' || isNaN(value)) {\n\t\treturn null;\n\t}\n\n\tconst number = parseFloat(value);\n\tif (!isNaN(number) && isFinite(number)) {\n\t\treturn number;\n\t}\n\n\treturn null;\n}\n\nfunction parseArray(value) {\n\treturn value;\n}\n","import * as markup from './markup';\r\nimport cssEscape from 'css.escape';\r\n\r\nexport function sheet(id, source) {\r\n\tconst sheetId = `${id}-${source}`;\r\n\tlet sheet = document.getElementById(sheetId);\r\n\tconst getSheet = () => {\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = document.createElement('style');\r\n\t\t\tsheet.type = 'text/css';\r\n\t\t\tsheet.id = escapeAttr(sheetId);\r\n\t\t\tdocument.getElementsByTagName('head')[0].appendChild(sheet);\r\n\t\t}\r\n\r\n\t\treturn sheet;\r\n\t};\r\n\r\n\treturn {\r\n\t\tset: css => {\r\n\t\t\tconst sheet = getSheet();\r\n\t\t\tconst lines = markup.buildLines(css);\r\n\t\t\tconst styleId = `#${escape(id)}`;\r\n\t\t\tsheet.innerHTML = lines.map(line => `${styleId} ${line}`).join('\\n');\r\n\t\t},\r\n\t\tremove: () => {\r\n\t\t\tif (sheet) {\r\n\t\t\t\tsheet.parentNode.removeChild(sheet);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport function escapeAttr(name) {\r\n\treturn ('' + name).replace(/\\s|\\t|\\n|\"|'/g, '_');\r\n}\r\n\r\nexport function escape(name) {\r\n\treturn cssEscape(escapeAttr(name));\r\n}\r\n","import { isUndefined } from '../utility/kit';\n\nexport function css(element, property, value) {\n\tconst normalizedProperty = normalize(property);\n\tif (isUndefined(value)) {\n\t\treturn element.style[normalizedProperty];\n\t} else {\n\t\telement.style[normalizedProperty] = value;\n\t\treturn normalizedProperty;\n\t}\n}\n\nfunction normalize(property) {\n\treturn property.replace(/-([a-z])/g, upperFirst);\n}\n\nfunction upperFirst(match, letter) {\n\treturn letter.toUpperCase();\n}\n\nexport function parents(element) {\n\tconst path = [];\n\twhile (element) {\n\t\tpath.unshift(element);\n\t\telement = element.parentNode;\n\t}\n\n\treturn path;\n}\n\nexport function eventPath(event) {\n\tconst path = (event.composedPath && event.composedPath()) || event.path;\n\tconst target = event.target;\n\n\tif (path) {\n\t\t// Safari doesn't include Window, but it should.\n\t\treturn (path.indexOf(window) < 0) ? path.concat(window) : path;\n\t}\n\n\tif (target === window) {\n\t\treturn [window];\n\t}\n\n\treturn [target].concat(parents(target), window);\n}\n\nexport function elementFromPoint(x, y) {\n\treturn document.elementFromPoint(x, y);\n}","import FastDom from 'fastdom';\n\nexport class Fastdom {\n    static mutate(task) {\n        return Fastdom.invoke(() => FastDom.mutate(task));\n    }\n\n    static measure(task) {\n        return Fastdom.invoke(() => FastDom.measure(task));\n    }\n\n    static clear(task) {\n        return Fastdom.invoke(() => FastDom.clear(task));\n    }\n\n    static invoke(task) {\n        return task();\n    }\n}\n","export function isImage(name) {\r\n\treturn !!name && name.toLowerCase().search(/png|jpg|jpeg|svg/) > -1;\r\n}\r\n","import { build as buildPipe } from '../pipe/pipe.build';\nimport { Log } from '../infrastructure/log';\nimport { guid } from './guid';\nimport { PersistenceService } from '../persistence/persistence.service';\nimport { Scheduler } from './scheduler';\nimport { Defer } from '../infrastructure/defer';\nimport { noop } from '../utility/kit';\nimport { FocusService } from '../focus/focus.service';\nimport { isString } from '../utility/kit';\nimport { Fastdom } from './fastdom';\n\nfunction invalidateSettings(...args) {\n\tif (args.length) {\n\t\tif (isString(args[0])) {\n\t\t\treturn {\n\t\t\t\tsource: args[0],\n\t\t\t\tchanges: args[1] || {},\n\t\t\t\tpipe: args[2],\n\t\t\t\twhy: 'refresh'\n\t\t\t};\n\t\t}\n\n\t\treturn Object.assign({\n\t\t\tsource: 'invalidate',\n\t\t\tchanges: {},\n\t\t\tpipe: null,\n\t\t\twhy: 'refresh'\n\t\t}, args[0])\n\t}\n\n\treturn {\n\t\tsource: 'invalidate',\n\t\tchanges: {},\n\t\tpipe: null,\n\t\twhy: 'refresh'\n\t};\n}\n\nexport class GridService {\n\tconstructor(model) {\n\t\tthis.model = model;\n\t\tthis.scheduler = new Scheduler();\n\t}\n\n\tinvalidate(...args /*source = 'invalidate', changes = {}, pipe = null*/) {\n\t\tconst settings = invalidateSettings(...args);\n\t\tconst { source, changes, pipe, why } = settings;\n\t\tconst { scheduler, model } = this;\n\t\tconst { scene } = model;\n\t\tconst runPipe = buildPipe(model);\n\t\tconst cancelBusy = why === 'refresh' ? this.busy() : noop;\n\n\t\tconst nextTask = () => {\n\t\t\tcancelBusy();\n\n\t\t\tif (!scheduler.next()) {\n\t\t\t\tscene({ status: 'pull' }, {\n\t\t\t\t\tsource,\n\t\t\t\t\tbehavior: 'core'\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tconst defer = new Defer();\n\t\tconst task = () => {\n\t\t\tLog.info('grid', `start task ${source}`);\n\t\t\tscene({ status: 'start' }, {\n\t\t\t\tsource,\n\t\t\t\tbehavior: 'core'\n\t\t\t});\n\n\t\t\tmodel.head().cache.clear();\n\t\t\tmodel.body().cache.clear();\n\t\t\tmodel.foot().cache.clear();\n\n\t\t\treturn Fastdom.invoke(() => runPipe(source, changes, pipe || model.data().pipe))\n\t\t\t\t.then(() => {\n\t\t\t\t\tLog.info('grid', `finish task ${source}`);\n\n\t\t\t\t\tnextTask();\n\t\t\t\t\tdefer.resolve();\n\t\t\t\t})\n\t\t\t\t.catch(ex => {\n\t\t\t\t\tLog.error('grid', ex);\n\n\t\t\t\t\tnextTask();\n\t\t\t\t\tdefer.reject();\n\t\t\t\t});\n\t\t};\n\n\t\tLog.info('grid', `add task ${source}`);\n\t\tscheduler.add(task);\n\n\t\treturn defer.promise;\n\t}\n\n\tbusy() {\n\t\tconst id = guid();\n\t\tconst { progress } = this.model;\n\t\tconst queue = progress().queue.concat([id]);\n\t\tprogress({ queue });\n\n\t\treturn () => {\n\t\t\tconst queue = Array.from(progress().queue);\n\t\t\tconst index = queue.indexOf(id);\n\t\t\tif (index >= 0) {\n\t\t\t\tqueue.splice(index, 1);\n\t\t\t\tprogress({ queue });\n\t\t\t}\n\t\t};\n\t}\n\n\tfocus(rowIndex, columnIndex) {\n\t\tconst focus = new FocusService(this.model);\n\t\tfocus.activate(rowIndex, columnIndex);\n\t}\n}\n","export function guid() {\r\n\tfunction p8(s) {\r\n\t\tconst p = (Math.random().toString(16) + '000000000').substr(2, 8);\r\n\t\treturn s ? '-' + p.substr(0, 4) + '-' + p.substr(4, 4) : p;\r\n\t}\r\n\r\n\treturn p8() + p8(true) + p8(true) + p8();\r\n}","﻿import { Defer } from '../infrastructure/defer';\nimport { AppError } from '../infrastructure/error';\nimport { isFunction } from '../utility/kit';\nimport { Fastdom } from './fastdom';\n\nexport function jobLine(delay) {\n\tlet defer = null;\n\tconst reset = () => {\n\t\tif (defer) {\n\t\t\tdefer.reject();\n\t\t\tdefer = null;\n\t\t}\n\t};\n\n\treturn job => {\n\t\treset();\n\n\t\tif (!isFunction(job)) {\n\t\t\tthrow new AppError('job.line', 'job is not invocable');\n\t\t}\n\n\t\tconst doJob = () => {\n\t\t\tif (defer) {\n\t\t\t\tjob();\n\t\t\t\tdefer.resolve();\n\t\t\t\tdefer = null;\n\t\t\t}\n\t\t};\n\n\t\tdefer = jobLine.run(doJob, delay);\n\t\treturn defer.promise;\n\t};\n}\n\njobLine.run = (job, delay) => {\n\tconst defer = new Defer();\n\n\tconst token = Fastdom.invoke(() => setTimeout(job, delay));\n\tdefer.promise.catch(() => clearTimeout(token));\n\n\treturn defer;\n};","import { isFunction } from '../utility/kit';\nimport { compileGet, compileSet } from '../services/path';\nimport { get as getValue } from '../services/value';\n\nexport function get(row, column) {\n\treturn column.$label\n\t\t? isFunction(column.$label) ? column.$label({ $row: row }) : column.$label\n\t\t: column.label\n\t\t\t? isFunction(column.label) ? column.label(row) : column.label\n\t\t\t: column.labelPath\n\t\t\t\t? compileGet(column.labelPath)(row)\n\t\t\t\t: getValue(row, column);\n}\n\nexport function getFactory(column) {\n\tconst get = column.$label\n\t\t? isFunction(column.$label) ? row => column.$label({ $row: row }) : row => column.label\n\t\t: column.label\n\t\t\t? isFunction(column.label) ? row => column.label(row) : row => column.label\n\t\t\t: column.labelPath\n\t\t\t\t? compileGet(column.labelPath)\n\t\t\t\t: row => getValue(row, column);\n\n\treturn get;\n}\n\nexport function set(row, column, label) {\n\tif (isFunction(column.$label)) {\n\t\treturn column.$label({ $row: row, $label: label });\n\t}\n\n\tif (isFunction(column.label)) {\n\t\treturn column.label(row, label);\n\t}\n\n\tif (column.labelPath) {\n\t\treturn compileSet(column.labelPath)(row, label);\n\t}\n}","export function build(style) {\r\n\treturn buildLines(style).join('\\n');\r\n}\r\n\r\nexport function buildLines(style) {\r\n\treturn Object\r\n\t\t.keys(style)\r\n\t\t.reduce((memo, key) => {\r\n\t\t\tconst entry = style[key];\r\n\t\t\tconst body = Object\r\n\t\t\t\t.keys(entry)\r\n\t\t\t\t.reduce((memo, key) => {\r\n\t\t\t\t\tmemo.push(`\\t${key}:${entry[key]} !important;`);\r\n\t\t\t\t\treturn memo;\r\n\t\t\t\t}, []);\r\n\r\n\t\t\tmemo.push(`${key}{\\n${body.join('\\n')}\\n}`);\r\n\t\t\treturn memo;\r\n\t\t}, []);\r\n}","﻿import {assignWith} from '../utility/kit';\r\n\r\nexport function merge(settings) {\r\n\tconst context = assignWith({\r\n\t\tequals: (l, r) => l === r,\r\n\t\tupdate: (l, r /*left, i*/) => {\r\n\t\t\tassignWith(l, r);\r\n\t\t\treturn l;\r\n\t\t},\r\n\t\tremove: (l, left, i) => {\r\n\t\t\tleft.splice(i, 1);\r\n\t\t\treturn l;\r\n\t\t},\r\n\t\tinsert: (r, left) => {\r\n\t\t\tleft.push(r);\r\n\t\t\treturn r;\r\n\t\t}\r\n\t}, settings);\r\n\r\n\treturn (left, right, result) => {\r\n\t\tconst ls = left.slice();\r\n\t\tconst rs = right.slice();\r\n\t\tlet updated = 0;\r\n\t\tlet removed = 0;\r\n\r\n\t\tresult = result || left;\r\n\t\tfor (let i = 0, lsLength = ls.length; i < lsLength; i++) {\r\n\t\t\tconst l = ls[i];\r\n\t\t\tlet matched = false;\r\n\t\t\tfor (let j = 0, rsLength = rs.length; j < rsLength; j++) {\r\n\t\t\t\tconst r = rs[j];\r\n\t\t\t\tif (context.equals(l, r, i, j)) {\r\n\t\t\t\t\tcontext.update(l, r, result, result.indexOf(l));\r\n\t\t\t\t\tupdated++;\r\n\t\t\t\t\tmatched = true;\r\n\t\t\t\t\trs.splice(j, 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!matched) {\r\n\t\t\t\tcontext.remove(l, result, result.indexOf(l));\r\n\t\t\t\tremoved++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst inserted = rs.length;\r\n\t\tfor (let i = 0; i < inserted; i++) {\r\n\t\t\tcontext.insert(rs[i], result);\r\n\t\t}\r\n\r\n\t\tif (context.sort) {\r\n\t\t\tleft.sort(context.sort(left, right));\r\n\t\t}\r\n\r\n\t\treturn {updated, removed, inserted};\r\n\t};\r\n}","export class Middleware {\n\tconstructor(pipes) {\n\t\tthis.pipes = pipes;\n\t}\n\n\trun(context, memo = []) {\n\t\tconst tasks = this.pipes\n\t\t\t.map(pipe => memo =>\n\t\t\t\tnew Promise((resolve, reject) =>\n\t\t\t\t\tpipe(memo, context, resolve, reject)));\n\n\t\treturn start(tasks, memo);\n\t}\n}\n\nfunction start(tasks, memo) {\n\ttasks = Array.from(tasks);\n\treturn new Promise((resolve, reject) => {\n\t\tinvoke(memo);\n\n\t\tfunction invoke(memo) {\n\t\t\tif (tasks.length) {\n\t\t\t\tconst task = tasks.shift();\n\t\t\t\tconst promise = task(memo);\n\t\t\t\tpromise\n\t\t\t\t\t.then(invoke)\n\t\t\t\t\t.catch(ex => {\n\t\t\t\t\t\treject(ex);\n\t\t\t\t\t\tthrow ex;\n\t\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tresolve(memo);\n\t\t\t}\n\t\t}\n\t});\n}","import {flatten} from '../utility/kit';\r\n\r\nexport function stringifyFactory(property) {\r\n\tswitch (property) {\r\n\t\tcase 'filter':\r\n\t\t\treturn filter;\r\n\t\tcase 'sort':\r\n\t\t\treturn sort;\r\n\t\tcase 'group':\r\n\t\tcase 'pivot':\r\n\t\t\treturn transformBy(property);\r\n\t\tdefault:\r\n\t\t\treturn () => '';\r\n\t}\r\n}\r\n\r\nfunction filter(model) {\r\n\tconst values = Object.values(model.by)\r\n\t\t.map(column => column.items);\r\n\r\n\tif (values.length === 0) return '';\r\n\r\n\tconst by = flatten(values).join(', ');\r\n\treturn `filter ${by}`;\r\n}\r\n\r\nfunction sort(model) {\r\n\tconst keys = [];\r\n\tfor (let item of model.by) {\r\n\t\tfor (let key in item) {\r\n\t\t\tkeys.push(key);\r\n\t\t}\r\n\t}\r\n\r\n\tif (keys.length === 0) return '';\r\n\r\n\tconst by = keys.join(', ');\r\n\treturn `sort ${by}`;\r\n}\r\n\r\nfunction transformBy(property) {\r\n\treturn model => {\r\n\t\tconst keys = model.by;\r\n\t\tif (keys.length === 0) return '';\r\n\r\n\t\tconst by = keys.join(', ');\r\n\t\treturn `${property} ${by}`;\r\n\t};\r\n}","import { Log } from '../infrastructure/log';\n\nexport function compile(parts) {\n\tconst last = parts.length - 1;\n\tconst accessor = getAccessor(parts, last);\n\tconst key = parts[last];\n\tif (accessor) {\n\t\treturn function (entry, value) {\n\t\t\tif (arguments.length === 2) {\n\t\t\t\tconst host = accessor(entry);\n\t\t\t\tif (host) {\n\t\t\t\t\thost[key] = value;\n\t\t\t\t}\n\n\t\t\t\tLog.warn('path.compile', `Object reference ${parts.join('.')} is not set.`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst host = accessor(entry);\n\t\t\tif (host) {\n\t\t\t\treturn host[key];\n\t\t\t}\n\n\t\t\tLog.warn('path.compile', `Object reference ${parts.join('.')} is not set.`);\n\t\t\treturn null;\n\t\t};\n\t}\n\n\treturn function (entry, value) {\n\t\tif (!entry) {\n\t\t\tLog.warn('path.compile', `Object reference ${parts.join('.')} is not set.`);\n\t\t\treturn null;\n\t\t}\n\n\t\tif (arguments.length === 2) {\n\t\t\tentry[key] = value;\n\t\t}\n\n\t\treturn entry[key];\n\t};\n}\n\nexport function compileGet(path) {\n\tconst parts = path.split('.');\n\tconst last = parts.length - 1;\n\tconst accessor = getAccessor(parts, last);\n\tconst key = parts[last];\n\tif (accessor) {\n\t\treturn function (entry) {\n\t\t\tconst host = accessor(entry);\n\t\t\tif (host) {\n\t\t\t\treturn host[key];\n\t\t\t}\n\n\t\t\tLog.warn('path.compile', `Object reference ${parts.join('.')} is not set.`);\n\t\t\treturn null;\n\t\t};\n\t}\n\n\treturn function (entry) {\n\t\tif (!entry) {\n\t\t\tLog.warn('path.compile', `Object reference ${parts.join('.')} is not set.`);\n\t\t\treturn null;\n\t\t}\n\n\t\treturn entry[key];\n\t};\n}\n\nexport function compileSet(path) {\n\tconst parts = path.split('.');\n\tconst last = parts.length - 1;\n\tconst accessor = getAccessor(parts, last);\n\tconst key = parts[last];\n\tif (accessor) {\n\t\treturn function (entry, value) {\n\t\t\tconst host = accessor(entry);\n\t\t\tif (host) {\n\t\t\t\thost[key] = value;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tLog.warn('path.compile', `Object reference ${parts.join('.')} is not set.`);\n\t\t};\n\t}\n\n\treturn function (entry, value) {\n\t\tif (entry) {\n\t\t\tentry[key] = value;\n\t\t\treturn;\n\t\t}\n\n\t\tLog.warn('path.compile', `Object reference ${parts.join('.')} is not set.`);\n\t};\n}\n\nfunction getAccessor(parts, last) {\n\tif (parts.length > 1) {\n\t\tconst firstPart = parts[0];\n\t\treturn parts\n\t\t\t.filter((_, index) => index > 0 && index !== last)\n\t\t\t.reduce(\n\t\t\t\t(accessor, part) => {\n\t\t\t\t\treturn graph => {\n\t\t\t\t\t\tconst host = accessor(graph);\n\t\t\t\t\t\tif (host) {\n\t\t\t\t\t\t\treturn host[part];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tgraph => {\n\t\t\t\t\tif (graph) {\n\t\t\t\t\t\treturn graph[firstPart];\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t);\n\t}\n\n\treturn null;\n}\n","import { isObject, yes, escapeRegexp } from '../utility/kit';\nimport { compileGet } from './path';\n\nexport function predicateFactory(search) {\n\tif (isObject(search)) {\n\t\t// TODO: improve performance\n\t\tconst getters = Object\n\t\t\t.keys(search)\n\t\t\t.map(key => {\n\t\t\t\tconst value = compileGet(key);\n\t\t\t\treturn { key, value };\n\t\t\t});\n\n\t\tconst { length } = getters;\n\t\tswitch (length) {\n\t\t\tcase 0: {\n\t\t\t\treturn yes;\n\t\t\t}\n\t\t\tcase 1: {\n\t\t\t\tconst get = getters[0];\n\t\t\t\tconst pattern = search[get.key];\n\t\t\t\tif (!pattern) {\n\t\t\t\t\treturn yes;\n\t\t\t\t}\n\n\t\t\t\tconst expr = new RegExp(pattern, 'gi');\n\t\t\t\treturn item => expr.test(get.value(item));\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\treturn item =>\n\t\t\t\t\tgetters.reduce((memo, get) =>\n\t\t\t\t\t\t(memo && new RegExp(search[get.key], 'gi').test(get.value(item)) || search[get.key] === ''),\n\t\t\t\t\t\ttrue);\n\n\t\t\t}\n\t\t}\n\t}\n\n\tconst pattern = escapeRegexp(search);\n\tconst expr = new RegExp(pattern, 'gi');\n\treturn item => {\n\t\texpr.lastIndex = 0;\n\t\treturn expr.test(item);\n\t}\n}","export class Scheduler {\n\tconstructor() {\n\t\tthis.tasks = [];\n\t}\n\n\tnext() {\n\t\tthis.tasks.shift();\n\t\tconst task = this.tasks[0];\n\t\tif (task) {\n\t\t\ttask();\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tadd(task) {\n\t\tthis.tasks.push(task);\n\t\tif (this.tasks.length === 1) {\n\t\t\ttask();\n\t\t}\n\n\t\treturn this.tasks.length;\n\t}\n}","function firstRowTitle(index, row) {\r\n\treturn row[index];\r\n}\r\nfunction numericTitle(index) {\r\n\treturn index;\r\n}\r\nfunction alphaTitle(index) {\r\n\tconst alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n\r\n\tif (index < alphabet.length) {\r\n\t\treturn alphabet[index];\r\n\t} else {\r\n\t\tconst indexFirst = Math.floor(index / alphabet.length - 1);\r\n\t\tconst indexSecond = index % alphabet.length;\r\n\t\treturn `${alphabet[indexFirst]}${alphabet[indexSecond]}`;\r\n\t}\r\n}\r\n\r\nexport {\r\n\tfirstRowTitle,\r\n\tnumericTitle,\r\n\talphaTitle\r\n};","function upload(element) {\r\n\tconst doc = element.ownerDocument;\r\n\tconst input = doc.createElement('input');\r\n\tinput.type = 'file';\r\n\tinput.style.display = 'none';\r\n\telement.appendChild(input);\r\n\tinput.click();\r\n}\r\n\r\nexport {\r\n\tupload\r\n};","import { isFunction } from '../utility/kit';\r\nimport { compileSet, compileGet } from './path';\r\nimport { AppError } from '../infrastructure/error';\r\n\r\nexport function get(row, column) {\r\n\treturn column.$value\r\n\t\t? column.$value({ $row: row, $column: column })\r\n\t\t: column.value\r\n\t\t\t? column.value(row)\r\n\t\t\t: column.path\r\n\t\t\t\t? compileGet(column.path)(row)\r\n\t\t\t\t: row[column.key];\r\n}\r\n\r\nexport function getFactory(column) {\r\n\tconst get = column.$value\r\n\t\t? row => column.$value({ $row: row, $column: column })\r\n\t\t: column.value\r\n\t\t\t? row => column.value(row)\r\n\t\t\t: column.path\r\n\t\t\t\t? compileGet(column.path)\r\n\t\t\t\t: row => row[column.key];\r\n\r\n\treturn get;\r\n}\r\n\r\nexport function set(row, column, value) {\r\n\tif (isFunction(column.$value)) {\r\n\t\treturn column.$value({ $row: row, $value: value, $column: column });\r\n\t}\r\n\r\n\tif (isFunction(column.value)) {\r\n\t\treturn column.value(row, value);\r\n\t}\r\n\r\n\tif (column.path) {\r\n\t\treturn compileSet(column.path)(row, value);\r\n\t}\r\n\r\n\tif (row.hasOwnProperty(column.key)) {\r\n\t\treturn row[column.key] = value;\r\n\t}\r\n\r\n\tthrow new AppError(\r\n\t\t'value',\r\n\t\t`Row can't be edit on \"${column.key}\" column`);\r\n}","import { flatten, isFunction, yes } from '../utility/kit';\r\n\r\nexport class ShortcutDispatcher {\r\n\tconstructor() {\r\n\t\tthis.managerMap = new Map();\r\n\t}\r\n\r\n\tregister(manager, commands) {\r\n\t\tconst cmds = commands.values ? commands.values() : commands;\r\n\t\tlet context = this.managerMap.get(manager);\r\n\t\tif (!context) {\r\n\t\t\tcontext = {\r\n\t\t\t\tcommands: [],\r\n\t\t\t\tshortcuts: new Map()\r\n\t\t\t};\r\n\r\n\t\t\tthis.managerMap.set(manager, context);\r\n\t\t}\r\n\r\n\t\tconst disposes = [];\r\n\t\tfor (let cmd of cmds) {\r\n\t\t\tif (cmd.shortcut) {\r\n\t\t\t\tif (isFunction(cmd.shortcut)) {\r\n\t\t\t\t\tcontext.commands.push(cmd);\r\n\t\t\t\t\tdisposes.push(() => {\r\n\t\t\t\t\t\tconst index = context.commands.indexOf(cmd);\r\n\t\t\t\t\t\tif (index >= 0) {\r\n\t\t\t\t\t\t\tcontext.commands.splice(index, 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tcmd.shortcut\r\n\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t.split('|')\r\n\t\t\t\t\t\t.forEach(shortcut => {\r\n\t\t\t\t\t\t\tlet temp = [];\r\n\t\t\t\t\t\t\tif (context.shortcuts.has(shortcut)) {\r\n\t\t\t\t\t\t\t\ttemp = context.shortcuts.get(shortcut);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ttemp.push(cmd);\r\n\t\t\t\t\t\t\tcontext.shortcuts.set(shortcut, temp);\r\n\t\t\t\t\t\t\tdisposes.push(() => {\r\n\t\t\t\t\t\t\t\tconst shortcutCommands = context.shortcuts.get(shortcut);\r\n\t\t\t\t\t\t\t\tif (shortcutCommands) {\r\n\t\t\t\t\t\t\t\t\tconst index = shortcutCommands.indexOf(cmd);\r\n\t\t\t\t\t\t\t\t\tif (index >= 0) {\r\n\t\t\t\t\t\t\t\t\t\tshortcutCommands.splice(index, 1);\r\n\t\t\t\t\t\t\t\t\t\tif (!shortcutCommands.length) {\r\n\t\t\t\t\t\t\t\t\t\t\tcontext.shortcuts.delete(shortcut);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn () => {\r\n\t\t\tdisposes.forEach(dispose => dispose());\r\n\t\t\tif (context.commands.length === 0 && Object.keys(context.shortcuts).length === 0) {\r\n\t\t\t\tthis.managerMap.delete(manager);\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\texecute(code, source) {\r\n\t\tconst activities = this.fetchActivities(code, source);\r\n\r\n\t\treturn activities.reduce((memo, activity) => {\r\n\t\t\tconst commands = activity.commands;\r\n\t\t\tconst manager = activity.manager;\r\n\t\t\tconst result = manager.invoke(commands, source) || result;\r\n\t\t\tif (result) {\r\n\t\t\t\tmemo.push(...commands.map(cmd => cmd.source));\r\n\t\t\t}\r\n\t\t\treturn memo;\r\n\t\t}, []);\r\n\t}\r\n\r\n\tcanExecute(code, source) {\r\n\t\tconst activities = this.fetchActivities(code, source);\r\n\t\treturn activities.length > 0;\r\n\t}\r\n\r\n\tfetchActivities(code, source) {\r\n\t\tconst notWildcard = cmd => cmd.shortcut !== '*';\r\n\t\tconst search = this.searchFactory(code);\r\n\t\tconst entries = Array\r\n\t\t\t.from(this.managerMap.entries())\r\n\t\t\t.map(entry => {\r\n\t\t\t\tconst manager = entry[0];\r\n\t\t\t\tconst commands = entry[1];\r\n\t\t\t\treturn {\r\n\t\t\t\t\tcommands: manager.filter(search(commands), source),\r\n\t\t\t\t\tmanager: entry[0]\r\n\t\t\t\t};\r\n\t\t\t})\r\n\t\t\t.filter(entry => entry.commands.length > 0);\r\n\r\n\t\tconst allCommands = flatten(entries.map(x => x.commands));\r\n\r\n\t\t// Skip wildcard commands if there are some explicit shortcuts\r\n\t\tconst isActive = allCommands.filter(notWildcard).length > 0 ? notWildcard : yes;\r\n\t\treturn entries\r\n\t\t\t.map(entry => {\r\n\t\t\t\tconst commands = entry.commands;\r\n\t\t\t\tconst manager = entry.manager;\r\n\t\t\t\tconst activeCommands = commands.filter(isActive);\r\n\t\t\t\treturn {\r\n\t\t\t\t\tcommands: activeCommands,\r\n\t\t\t\t\tmanager: manager\r\n\t\t\t\t};\r\n\t\t\t})\r\n\t\t\t.filter(entry => entry.commands.length > 0);\r\n\t}\r\n\r\n\tsearchFactory(code) {\r\n\t\treturn context => {\r\n\t\t\tlet result = [];\r\n\t\t\tif (context.shortcuts.has(code)) {\r\n\t\t\t\tresult = result.concat(context.shortcuts.get(code));\r\n\t\t\t}\r\n\r\n\t\t\tresult = result.concat(context.commands\r\n\t\t\t\t.map(cmd => cmd.clone({ shortcut: cmd.shortcut() }))\r\n\t\t\t\t.filter(cmd => this.test(cmd.shortcut, code)));\r\n\r\n\t\t\treturn result;\r\n\t\t};\r\n\t}\r\n\r\n\ttest(shortcut, code) {\r\n\t\tcode = code.toLowerCase();\r\n\t\treturn ('' + shortcut)\r\n\t\t\t.toLowerCase()\r\n\t\t\t.split('|')\r\n\t\t\t.some(shct => shct === '*' || code === shct);\r\n\t}\r\n}\r\n","import {Keyboard} from '../io/keyboard';\r\n\r\nexport class Shortcut {\r\n\tconstructor(dispatcher) {\r\n\t\tthis.dispatcher = dispatcher;\r\n\t\tthis.keyCode = {\r\n\t\t\tkey: null,\r\n\t\t\tcode: null\r\n\t\t};\r\n\t}\r\n\r\n\tstatic isControl(keyCode) {\r\n\t\tif (!keyCode) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst code = keyCode.code;\r\n\t\tconst parts = code.split('+');\r\n\t\treturn parts.some(part => part === 'ctrl' || part === 'alt') ||\r\n\t\t\tparts.every(part => Keyboard.isControl(part));\r\n\t}\r\n\r\n\tstatic isPrintable(keyCode) {\r\n\t\tif (!keyCode) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst code = keyCode.code;\r\n\t\tconst parts = code.split('+');\r\n\t\treturn parts.some(part => Keyboard.isPrintable(part));\r\n\t}\r\n\r\n\tstatic stringify(keyCode) {\r\n\t\tif (!keyCode) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\r\n\t\treturn Keyboard.stringify(keyCode.code, keyCode.key);\r\n\t}\r\n\r\n\tstatic translate(e) {\r\n\t\tconst codes = [];\r\n\t\tconst code = Keyboard.translate(e.keyCode).toLowerCase();\r\n\t\tif (e.ctrlKey) {\r\n\t\t\tcodes.push('ctrl');\r\n\t\t}\r\n\r\n\t\tif (e.shiftKey) {\r\n\t\t\tcodes.push('shift');\r\n\t\t}\r\n\r\n\t\tif (e.altKey) {\r\n\t\t\tcodes.push('alt');\r\n\t\t}\r\n\r\n\t\tif (code !== 'ctrl' &&\r\n\t\t\tcode !== 'shift' &&\r\n\t\t\tcode !== 'alt') {\r\n\t\t\tcodes.push(code);\r\n\t\t}\r\n\r\n\t\treturn codes.join('+');\r\n\t}\r\n\r\n\tfactory(manager) {\r\n\t\tconst self = this;\r\n\t\treturn {\r\n\t\t\tregister: commands => self.register(manager, commands)\r\n\t\t};\r\n\t}\r\n\r\n\tkeyDown(e, source) {\r\n\t\tconst code = Shortcut.translate(e);\r\n\t\tthis.keyCode = {\r\n\t\t\tkey: e.key,\r\n\t\t\tcode: code\r\n\t\t};\r\n\r\n\t\treturn this.dispatcher.execute(code, source);\r\n\t}\r\n\r\n\tregister(manager, commands) {\r\n\t\treturn this.dispatcher.register(manager, commands);\r\n\t}\r\n}\r\n","import { Resource } from '../resource/resource';\r\n\r\nexport class SortModel {\r\n\tconstructor() {\r\n\t\tthis.resource = new Resource();\r\n\t\tthis.by = [];\r\n\t\tthis.mode = 'multiple';\r\n\t\tthis.trigger = ['reorder'];\r\n\t}\r\n}","import { isString } from '../utility/kit';\nimport { AppError } from '../infrastructure/error';\nimport { preOrderDFS } from '../node/node.service';\n\nexport const key = getKey;\nexport const index = getIndex;\nexport const direction = getDirection;\nexport const map = getMap;\n\nexport function orderFactory(model) {\n\tconst { sort } = model;\n\treturn by => {\n\t\tconst { trigger } = sort();\n\t\tif (trigger.indexOf('reorder') >= 0) {\n\t\t\tlet index = 0;\n\t\t\tconst indexMap = {};\n\t\t\tpreOrderDFS(model.columnList().index.children, node => {\n\t\t\t\tconst { key } = node.key.model;\n\t\t\t\tindexMap[key] = index++;\n\t\t\t});\n\n\t\t\tby.sort((x, y) => indexMap[getKey(x)] - indexMap[getKey(y)]);\n\t\t}\n\n\t\treturn by;\n\t};\n}\n\nfunction getKey(pair) {\n\tlet key;\n\tif (isString(pair)) {\n\t\tconst signedKey = pair.split(/[+-]/);\n\t\tkey = signedKey[1] || signedKey[0];\n\t} else {\n\t\tkey = Object.keys(pair)[0]\n\t}\n\n\tif (!key) {\n\t\tthrow new AppError(\n\t\t\t'sort.service',\n\t\t\t`Key is not defined in \"${pair}\"`);\n\t}\n\n\treturn key;\n}\n\nfunction getDirection(pair) {\n\tif (isString(pair)) {\n\t\tconst directions = { '-': 'desc', '+': 'asc' };\n\t\treturn directions[pair[0]] || 'asc';\n\t}\n\n\tconst pairKey = getKey(pair);\n\treturn pair[pairKey];\n}\n\nfunction getMap(pairs) {\n\treturn pairs.reduce((memo, pair) => {\n\t\tconst key = getKey(pair);\n\t\tmemo[key] = getDirection(pair);\n\t\treturn memo;\n\t}, {});\n}\n\nfunction getIndex(pairs, key) {\n\treturn pairs.map(getKey).findIndex(pairKey => pairKey === key);\n}","import { AppError } from '../infrastructure/error';\nimport { Command } from '../command/command';\nimport * as columnService from '../column/column.service';\nimport * as sortService from '../sort/sort.service';\n\nexport class SortView {\n\tconstructor(model) {\n\t\tthis.model = model;\n\n\t\tthis.hover = false;\n\t\tthis.toggle = new Command({\n\t\t\tsource: 'sort.view',\n\t\t\tcanExecute: column => {\n\t\t\t\tconst key = column.key;\n\t\t\t\tconst map = columnService.map(model.columnList().line);\n\t\t\t\treturn map.hasOwnProperty(key) && map[key].canSort !== false;\n\t\t\t},\n\t\t\texecute: column => {\n\t\t\t\tconst key = column.key;\n\t\t\t\tconst sort = model.sort;\n\t\t\t\tconst sortState = sort();\n\t\t\t\tconst by = Array.from(sortState.by);\n\t\t\t\tconst index = sortService.index(by, key);\n\t\t\t\tif (index >= 0) {\n\t\t\t\t\tconst dir = sortService.direction(by[index]);\n\t\t\t\t\tswitch (dir) {\n\t\t\t\t\t\tcase 'desc': {\n\t\t\t\t\t\t\tby.splice(index, 1);\n\t\t\t\t\t\t\tthis.hover = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase 'asc': {\n\t\t\t\t\t\t\tconst entry = { [key]: 'desc' };\n\t\t\t\t\t\t\tby[index] = entry;\n\t\t\t\t\t\t\tthis.hover = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow AppError(\n\t\t\t\t\t\t\t\t'head.core',\n\t\t\t\t\t\t\t\t`Invalid sort direction ${dir}`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (sortState.mode === 'single') {\n\t\t\t\t\t\tby.length = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst entry = { [key]: 'asc' };\n\t\t\t\t\tby.push(entry);\n\n\t\t\t\t\tconst order = sortService.orderFactory(model);\n\t\t\t\t\torder(by);\n\t\t\t\t}\n\n\t\t\t\tsort({ by }, { source: 'sort.view' });\n\t\t\t}\n\t\t});\n\n\t\tthis.onInit();\n\t}\n\n\tonInit() {\n\t\tconst model = this.model;\n\t\tconst { sort } = model;\n\n\t\tmodel.columnListChanged.watch(e => {\n\t\t\tif (e.hasChanges('index')) {\n\t\t\t\tconst sortState = sort();\n\t\t\t\tconst order = sortService.orderFactory(model);\n\t\t\t\tconst sortBy = order(Array.from(sortState.by));\n\t\t\t\tif (!this.equals(sortBy, sortState.by)) {\n\t\t\t\t\tsort({ by: sortBy }, { source: 'sort.view' });\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tmodel.dataChanged.watch(e => {\n\t\t\tif (e.hasChanges('columns')) {\n\t\t\t\tconst { by } = sort();\n\t\t\t\tconst columnMap = columnService.map(e.state.columns);\n\t\t\t\tconst newBy = by.filter(entry => columnMap.hasOwnProperty(sortService.key(entry)));\n\t\t\t\tif (!this.equals(newBy, by)) {\n\t\t\t\t\tsort({ by: newBy }, { source: 'sort.view' });\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tequals(x, y) {\n\t\treturn JSON.stringify(x) === JSON.stringify(y);\n\t}\n\n\tdirection(column) {\n\t\tconst { key } = column;\n\t\tconst { by } = this.model.sort();\n\t\treturn sortService.map(by)[key];\n\t}\n\n\torder(column) {\n\t\tconst { key } = column;\n\t\tconst { by } = this.model.sort();\n\t\treturn sortService.index(by, key);\n\t}\n}","import {noop} from '../utility/kit';\r\nimport {Command} from '../command/command';\r\n\r\nexport class StyleModel {\r\n\tconstructor() {\r\n\t\tthis.row = noop;\r\n\t\tthis.cell = noop;\r\n\t\tthis.rows = [];\r\n\t\tthis.cells = [];\r\n\t\tthis.classList = [];\r\n\r\n\t\tthis.invalidate = new Command({\r\n\t\t\tsource: 'style.model',\r\n\t\t\tcanExecute: context => context.model.edit().state === 'view'\r\n\t\t});\r\n\t}\r\n}","import * as css from '../services/css';\r\n\r\nclass Entry {\r\n\tconstructor(element, sheets, markDirty) {\r\n\t\tthis.element = element;\r\n\t\tthis.list = new Set();\r\n\t\tthis.sheets = sheets;\r\n\t\tthis.markDirty = markDirty;\r\n\t}\r\n\r\n\tclass(key, style) {\r\n\t\tkey = css.escape(key);\r\n\t\tthis.list.add(key);\r\n\t\tthis.markDirty(this);\r\n\t\tif (style) {\r\n\t\t\tconst sheets = this.sheets;\r\n\t\t\tif (!sheets.has(key)) {\r\n\t\t\t\tsheets.set(key, style);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class Monitor {\r\n\tconstructor(model) {\r\n\t\tthis.model = model;\r\n\t\tthis.entries = new Set();\r\n\t\tthis.newSheets = new Map();\r\n\t\tthis.oldSheets = new Map();\r\n\t}\r\n\r\n\tenter() {\r\n\t\tconst newSheets = this.newSheets;\r\n\t\tlet entries = this.entries;\r\n\t\tfor (let entry of entries) {\r\n\t\t\tfor (let cls of entry.list) {\r\n\t\t\t\tentry.element.removeClass(cls, true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tentries = this.entries = new Set();\r\n\t\tconst markDirty = entry => entries.add(entry);\r\n\r\n\t\treturn element => {\r\n\t\t\tconst entry = new Entry(element, newSheets, markDirty);\r\n\t\t\treturn entry.class.bind(entry);\r\n\t\t};\r\n\t}\r\n\r\n\texit() {\r\n\t\tconst entries = this.entries;\r\n\t\tfor (let entry of entries) {\r\n\t\t\tfor (let cls of entry.list) {\r\n\t\t\t\tentry.element.addClass(cls, true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst newSheets = this.newSheets;\r\n\t\tconst oldSheets = this.oldSheets;\r\n\t\tconst id = this.model.grid().id;\r\n\t\tfor (let cls of oldSheets.keys()) {\r\n\t\t\tif (!newSheets.has(cls)) {\r\n\t\t\t\tconst sheet = css.sheet(id, cls);\r\n\t\t\t\tsheet.remove();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let [cls, style] of newSheets.entries()) {\r\n\t\t\tif (!oldSheets.has(cls)) {\r\n\t\t\t\tconst sheet = css.sheet(id, cls);\r\n\t\t\t\tsheet.set({[`.${cls}`]: style});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.oldSheets = newSheets;\r\n\t\tthis.newSheets = new Map();\r\n\t}\r\n}","import { noop, isFunction } from '../utility/kit';\r\nimport { Composite } from '../infrastructure/composite';\r\n\r\nexport class StyleService {\r\n\tconstructor(model) {\r\n\t\tthis.style = model.style;\r\n\t}\r\n\r\n\trow() {\r\n\t\tconst { rows, row } = this.style();\r\n\t\tconst visitors = row === noop\r\n\t\t\t? rows\r\n\t\t\t: rows.concat([row]);\r\n\r\n\t\treturn Composite.func(visitors);\r\n\t}\r\n\r\n\tcell() {\r\n\t\tconst { cells, cell } = this.style();\r\n\t\tif (isFunction(cell)) {\r\n\t\t\tconst visitors = cell === noop\r\n\t\t\t\t? cells\r\n\t\t\t\t: cells.concat([cell]);\r\n\r\n\t\t\treturn Composite.func(visitors);\r\n\t\t}\r\n\r\n\t\tconst keys = Object.keys(cell);\r\n\t\tif (keys.length) {\r\n\t\t\tconst visitors = cells.concat(keys.map(key => {\r\n\t\t\t\tconst visit = cell[key];\r\n\t\t\t\treturn (row, column, context) => {\r\n\t\t\t\t\tif (column.key === key) {\r\n\t\t\t\t\t\tvisit(row, column, context);\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}));\r\n\r\n\t\t\treturn Composite.func(visitors);\r\n\t\t}\r\n\r\n\t\treturn Composite.func(cells);\r\n\t}\r\n}\r\n","import { Monitor } from './style.monitor';\nimport * as columnService from '../column/column.service';\nimport { getFactory as valueFactory } from '../services/value';\nimport { noop } from '../utility/kit';\nimport { VirtualRowStyle, VirtualCellStyle } from './style.virtual';\nimport { StyleService } from './style.service';\n\nexport class StyleView {\n\tconstructor(model, table) {\n\t\tthis.model = model;\n\t\tthis.table = table;\n\n\t\tthis.valueFactory = valueFactory;\n\t\tthis.service = new StyleService(model);\n\t\tthis.active = {\n\t\t\trow: false,\n\t\t\tcell: false\n\t\t};\n\n\t\tthis.monitor = {\n\t\t\trow: new Monitor(model),\n\t\t\tcell: new Monitor(model)\n\t\t};\n\n\t\tmodel.styleChanged.watch(e => {\n\t\t\tif (e.hasChanges('row') || e.hasChanges('rows')) {\n\t\t\t\tthis.active.row = e.state.row !== noop || e.state.rows.length > 0;\n\t\t\t}\n\n\t\t\tif (e.hasChanges('cell') || e.hasChanges('cells')) {\n\t\t\t\tthis.active.cell = e.state.cell !== noop || e.state.cells.length > 0;\n\t\t\t}\n\n\t\t\tthis.invalidate();\n\t\t});\n\t}\n\n\tneedInvalidate() {\n\t\tconst model = this.model;\n\t\tif (model.scene().status !== 'stop') {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst active = this.active;\n\t\tconst isVirtual = model.scroll().mode === 'virtual';\n\t\tconst isActive = isVirtual || active.row || active.cell;\n\n\t\tif (!isActive) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst context = { model };\n\t\tconst { invalidate } = model.style();\n\t\treturn invalidate.canExecute(context) && invalidate.execute(context) !== false;\n\t}\n\n\tinvalidate(domCell, domRow) {\n\t\tconst active = this.active;\n\t\tconst model = this.model;\n\t\tconst isVirtual = model.scroll().mode === 'virtual';\n\n\t\tconst table = this.table;\n\t\tconst valueFactory = this.valueFactory;\n\t\t// TODO: improve performance\n\t\tconst valueCache = new Map();\n\t\tconst value = (row, column) => {\n\t\t\tlet getValue = valueCache.get(column);\n\t\t\tif (!getValue) {\n\t\t\t\tgetValue = valueFactory(column);\n\t\t\t\tvalueCache.set(column, getValue);\n\t\t\t}\n\n\t\t\treturn getValue(row);\n\t\t};\n\n\t\tconst columnList = table.data.columns();\n\t\tconst columnMap = columnService.map(columnList);\n\n\t\tlet isRowActive = active.row;\n\t\tlet isCellActive = active.cell;\n\n\t\tlet visitRow = this.service.row();\n\t\tlet visitCell = this.service.cell();\n\t\tif (isVirtual) {\n\t\t\tisRowActive = true;\n\t\t\tisCellActive = true;\n\t\t\tvisitRow = new VirtualRowStyle(table, visitRow).visitFactory();\n\t\t\tvisitCell = new VirtualCellStyle(table, visitCell).visitFactory();\n\t\t}\n\n\t\t// For performance reason we make rowContext and cellContext the same reference \n\t\t// for the all style calls.\n\t\tconst rowContext = {\n\t\t\tclass: noop,\n\t\t\trow: -1,\n\t\t\tvalue: null,\n\t\t\tcolumns: {\n\t\t\t\tmap: columnMap,\n\t\t\t\tlist: columnList\n\t\t\t}\n\t\t};\n\n\t\tconst cellContext = {\n\t\t\tclass: noop,\n\t\t\trow: -1,\n\t\t\tcolumn: -1,\n\t\t\tvalue: null,\n\t\t\tcolumns: rowContext.columns\n\t\t};\n\n\t\t// To improve performance take rows and cells directly from the bag and not from the DOM table. \n\t\tconst { body } = table;\n\t\tconst { rowToView, columnToView } = table.context.mapper;\n\t\tconst bag = table.context.bag.body;\n\n\t\tif (isRowActive) {\n\t\t\tconst rows = table.context.bag.body.getRowElements();\n\t\t\tfor (let tr of rows) {\n\t\t\t\tconst { index, element, model } = tr;\n\t\t\t\t// This private method we use only for performance, don't use it in other places.\n\t\t\t\tconst row = body.createRowCore(rowToView(index), element);\n\n\t\t\t\trowContext.class = domRow(row);\n\t\t\t\trowContext.row = index;\n\t\t\t\trowContext.value = value;\n\n\t\t\t\tvisitRow(model, rowContext);\n\t\t\t}\n\t\t}\n\n\t\tif (isCellActive) {\n\t\t\tconst cells = table.context.bag.body.getCellElements();\n\t\t\tfor (let td of cells) {\n\t\t\t\tconst { rowIndex, columnIndex, element, row, column } = td;\n\t\t\t\t// This private method we use only for performance, don't use it in other places.\n\t\t\t\tconst cell = body.createCellCore(rowToView(rowIndex), columnToView(columnIndex), element);\n\n\t\t\t\tcellContext.class = domCell(cell);\n\t\t\t\tcellContext.row = rowIndex;\n\t\t\t\tcellContext.column = columnIndex;\n\t\t\t\tcellContext.value = value;\n\n\t\t\t\tvisitCell(row, column, cellContext);\n\t\t\t}\n\t\t}\n\t}\n}","export class VirtualRowStyle {\r\n\tconstructor(table, style) {\r\n\t\tthis.table = table;\r\n\t\tthis.style = style;\r\n\t}\r\n\r\n\tvisitFactory() {\r\n\t\tconst { style } = this;\r\n\t\tconst { rowBox } = this.table.body;\r\n\t\tconst { entries } = rowBox;\r\n\r\n\t\treturn (row, context) => {\r\n\t\t\tconst model = {\r\n\t\t\t\tdataIndex: context.row,\r\n\t\t\t};\r\n\r\n\t\t\tconst key = rowBox.key(model);\r\n\t\t\tconst classList = entries.get(key);\r\n\t\t\tif (classList) {\r\n\t\t\t\tfor (let cls of classList) {\r\n\t\t\t\t\tcontext.class(cls);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tstyle(row, context);\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport class VirtualCellStyle {\r\n\tconstructor(table, style) {\r\n\t\tthis.table = table;\r\n\t\tthis.style = style;\r\n\t}\r\n\r\n\tvisitFactory() {\r\n\t\tconst { style } = this;\r\n\t\tconst { cellBox } = this.table.body;\r\n\t\tconst { columnBox } = this.table.body;\r\n\r\n\t\tconst cellEntries = cellBox.entries;\r\n\t\tconst columnEntries = columnBox.entries;\r\n\r\n\t\treturn (row, column, context) => {\r\n\t\t\t// column level\r\n\t\t\tconst columnModel = {\r\n\t\t\t\tdataIndex: context.column,\r\n\t\t\t};\r\n\r\n\t\t\tconst columnKey = columnBox.key(columnModel);\r\n\t\t\tconst columnClassList = columnEntries.get(columnKey);\r\n\t\t\tif (columnClassList) {\r\n\t\t\t\tfor (let cls of columnClassList) {\r\n\t\t\t\t\tcontext.class(cls);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// cell level\r\n\t\t\tconst cellModel = {\r\n\t\t\t\tdataRowIndex: context.row,\r\n\t\t\t\tdataColumnIndex: context.column,\r\n\t\t\t};\r\n\r\n\t\t\tconst cellKey = cellBox.key(cellModel);\r\n\t\t\tconst cellClassList = cellEntries.get(cellKey);\r\n\t\t\tif (cellClassList) {\r\n\t\t\t\tfor (let cls of cellClassList) {\r\n\t\t\t\t\tcontext.class(cls);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// add classes\r\n\t\t\tstyle(row, column, context);\r\n\t\t};\r\n\t}\r\n}","export class TemplateModel {\r\n\tconstructor() {\r\n\t\tthis.resource = {};\r\n\t}\r\n}","import { AppError } from '../infrastructure/error';\r\nimport { isUndefined } from '../utility/kit';\r\n\r\nconst resolvers = {};\r\nexport class TemplatePath {\r\n\tconstructor() {\r\n\t}\r\n\r\n\tstatic register(name, resolve) {\r\n\t\tif (resolvers.hasOwnProperty(name)) {\r\n\t\t\tthrow new AppError(\r\n\t\t\t\t'template.path',\r\n\t\t\t\t`\"${name}\" is already registered`);\r\n\t\t}\r\n\r\n\r\n\t\tresolvers[name] = resolve;\r\n\t\treturn TemplatePath;\r\n\t}\r\n\r\n\tstatic get(source) {\r\n\t\tconst path = this.find(source);\r\n\t\tif (!path) {\r\n\t\t\tthrow new AppError(\r\n\t\t\t\t'template.path',\r\n\t\t\t\t'Template path can\\'t be found');\r\n\t\t}\r\n\r\n\t\treturn path;\r\n\t}\r\n\r\n\tstatic find(source) {\r\n\t\tconst getName = this.name;\r\n\t\tfor (let key of Object.keys(resolvers)) {\r\n\t\t\tconst name = getName(key);\r\n\t\t\tconst value = source[name];\r\n\t\t\tif (!isUndefined(value) && value !== null) {\r\n\t\t\t\tconst path = resolvers[key](source, value);\r\n\t\t\t\tif (path) {\r\n\t\t\t\t\treturn path;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tstatic name(name) {\r\n\t\treturn '_' + name;\r\n\t}\r\n\r\n\tstatic get require() {\r\n\t\tconst getName = this.name;\r\n\t\treturn Object.keys(resolvers)\r\n\t\t\t.reduce((memo, key) => {\r\n\t\t\t\tmemo[getName(key)] = `^^?${key}`;\r\n\t\t\t\treturn memo;\r\n\t\t\t}, {});\r\n\t}\r\n}","import { Resource } from '../resource/resource';\r\n\r\nexport class ToolbarModel {\r\n\tconstructor() {\r\n\t\tthis.resource = new Resource();\r\n\t}\r\n}","import isObject from 'lodash-es/isObject';\r\nimport isFunction from 'lodash-es/isFunction';\r\nimport isArray from 'lodash-es/isArray';\r\nimport isEqual from 'lodash-es/isEqual';\r\nimport isString from 'lodash-es/isString';\r\nimport isBoolean from 'lodash-es/isBoolean';\r\nimport isNumber from 'lodash-es/isNumber';\r\nimport isDate from 'lodash-es/isDate';\r\nimport clone from 'lodash-es/clone';\r\nimport cloneDeep from 'lodash-es/cloneDeepWith';\r\nimport isUndefined from 'lodash-es/isUndefined';\r\nimport debounce from 'lodash-es/debounce';\r\nimport merge from 'lodash-es/merge';\r\nimport flatten from 'lodash-es/flatten';\r\nimport startCase from 'lodash-es/startCase';\r\nimport assignWith from 'lodash-es/assignWith';\r\nimport uniq from 'lodash-es/uniq';\r\nimport sumBy from 'lodash-es/sumBy';\r\nimport max from 'lodash-es/maxBy';\r\nimport min from 'lodash-es/minBy';\r\nimport zip from 'lodash-es/zip';\r\nimport takeWhile from 'lodash-es/takeWhile';\r\nimport dropWhile from 'lodash-es/dropWhile';\r\nimport groupBy from 'lodash-es/groupBy';\r\n\r\nconst noop = () => {\r\n};\r\nconst yes = () => true;\r\nconst no = () => false;\r\nconst identity = arg => arg;\r\n\r\nconst toCamelCase = (...names) => {\r\n\tconst length = names.length;\r\n\tconst nameList = names.map(name => '' + name);\r\n\tif (length > 0) {\r\n\t\treturn (nameList[0] +\r\n\t\t\tnameList.slice(1)\r\n\t\t\t\t.map(name => name[0].toUpperCase() + name.substring(1, name.length))\r\n\t\t\t\t.join(''));\r\n\t}\r\n\r\n\treturn '';\r\n};\r\n\r\nconst isEmail = value => {\r\n\tif (value) {\r\n\t\tconst re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i; // eslint-disable-line no-useless-escape\r\n\t\treturn re.test(value);\r\n\t}\r\n\r\n\treturn false;\r\n};\r\n\r\nfunction compare(x, y) {\r\n\tif (x === y) {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tif (x > y) {\r\n\t\treturn 1;\r\n\t}\r\n\r\n\treturn -1;\r\n}\r\n\r\nfunction orderBy(data, selectors, compares) {\r\n\tconst length = selectors.length;\r\n\tconst result = [];\r\n\tconst count = data.length;\r\n\r\n\t// iterate through data to create array with applied selectors\r\n\tlet index = count;\r\n\twhile (index--) {\r\n\t\tconst row = data[index];\r\n\t\tconst criteria = [];\r\n\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\tconst select = selectors[i];\r\n\t\t\tcriteria.push(select(row));\r\n\t\t}\r\n\r\n\t\tresult.push({ row, criteria, index });\r\n\t}\r\n\r\n\t// multi selector comparator\r\n\tconst compare = (x, y) => {\r\n\t\tlet result = 0;\r\n\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\tconst compare = compares[i];\r\n\t\t\tconst xv = x.criteria[i];\r\n\t\t\tconst yv = y.criteria[i];\r\n\r\n\t\t\tresult = compare(xv, yv, x.row, y.row);\r\n\t\t\tif (result !== 0) {\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// ensures a stable sort\r\n\t\treturn x.index - y.index;\r\n\t};\r\n\r\n\tresult.sort(compare);\r\n\r\n\t// copy origin values to result array\r\n\tindex = count;\r\n\twhile (index--) {\r\n\t\tresult[index] = result[index].row;\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\nfunction htmlEncode(s) {\r\n\treturn String(s)\r\n\t\t.replace(/&/g, '&amp;')\r\n\t\t.replace(/\"/g, '&quot;')\r\n\t\t.replace(/'/g, '&#39;')\r\n\t\t.replace(/</g, '&lt;')\r\n\t\t.replace(/>/g, '&gt;');\r\n}\r\n\r\nfunction escapeRegexp(text) {\r\n\tif (!text)\r\n\t\treturn text;\r\n\r\n\treturn text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\r\n}\r\n\r\nfunction binarySearch(list, value) {\r\n\tlet low = 0;\r\n\tlet high = list.length;\r\n\twhile (low < high) {\r\n\t\tconst mid = (low + high) >>> 1;\r\n\t\tif (list[mid] < value) {\r\n\t\t\tlow = mid + 1\r\n\t\t}\r\n\t\telse {\r\n\t\t\thigh = mid\r\n\t\t}\r\n\t}\r\n\r\n\treturn low;\r\n}\r\n\r\nfunction isUrl(value) {\r\n\tvar a = document.createElement('a');\r\n\ta.href = value;\r\n\treturn (a.host && a.host != window.location.host);\r\n}\r\n\r\nfunction isImage(value) {\r\n\treturn ('' + value).match(/\\.(jpeg|jpg|gif|png)$/) != null;\r\n}\r\n\r\nexport {\r\n\tisObject,\r\n\tisFunction,\r\n\tisArray,\r\n\tisEqual,\r\n\tisString,\r\n\tisUndefined,\r\n\tisBoolean,\r\n\tisDate,\r\n\tisNumber,\r\n\tisEmail,\r\n\tisUrl,\r\n\tisImage,\r\n\tclone,\r\n\tcloneDeep,\r\n\tdebounce,\r\n\tmerge,\r\n\tflatten,\r\n\tstartCase,\r\n\tassignWith,\r\n\tuniq,\r\n\tidentity,\r\n\tyes,\r\n\tno,\r\n\ttoCamelCase,\r\n\tnoop,\r\n\tcompare,\r\n\torderBy,\r\n\tmax,\r\n\tmin,\r\n\tsumBy,\r\n\tzip,\r\n\ttakeWhile,\r\n\tdropWhile,\r\n\tgroupBy,\r\n\thtmlEncode,\r\n\tescapeRegexp,\r\n\tbinarySearch\r\n};\r\n","import { Resource } from '../resource/resource';\r\n\r\nexport class ValidationModel {\r\n\tconstructor() {\r\n\t\tthis.resource = new Resource();\r\n\t\tthis.rules = [];\r\n\t}\r\n}\r\n","import * as LIVR from 'livr';\r\n\r\nexport const { Validator } = LIVR;\r\n\r\nfunction toLIVR(rules, key) {\r\n\tconst validationRules = [];\r\n\trules.forEach(rule => {\r\n\t\tif (rule.key === key) {\r\n\t\t\tfor (let name of Object.keys(rule)) {\r\n\t\t\t\tif (name !== 'key' && name !== 'for') {\r\n\t\t\t\t\tvalidationRules.push({\r\n\t\t\t\t\t\t[name]: rule[name]\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\treturn {\r\n\t\thasRules: validationRules.length > 0,\r\n\t\trules: { [key]: validationRules }\r\n\t};\r\n}\r\n\r\nexport function hasRules(rules, key) {\r\n\treturn toLIVR(rules, key).hasRules;\r\n}\r\n\r\nexport function createValidator(rules, key) {\r\n\tif (arguments.length === 2) {\r\n\t\tconst settings = toLIVR(rules, key);\r\n\t\treturn new Validator(settings.rules);\r\n\t}\r\n\r\n\treturn new Validator(rules);\r\n}\r\n","import { jobLine } from '../services/job.line';\nimport { PipeUnit } from '../pipe/pipe.unit';\nimport { Fastdom } from '../services/fastdom';\n\nexport class ViewCtrl {\n\tconstructor(model, view, gridService) {\n\t\tthis.model = model;\n\t\tthis.view = view;\n\n\t\tthis.watch(gridService);\n\t\tthis.ticking = false;\n\t}\n\n\tinvalidate() {\n\t\tif (this.ticking) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { style } = this.view;\n\t\tif (style.needInvalidate()) {\n\t\t\tthis.ticking = true;\n\t\t\tconst rowMonitor = style.monitor.row;\n\t\t\tconst cellMonitor = style.monitor.cell;\n\n\t\t\tFastdom.mutate(() => {\n\t\t\t\t// Apply mutate inside another mutate to ensure that style.invalidate is triggered last.\n\t\t\t\tFastdom.mutate(() => {\n\t\t\t\t\tconst domCell = cellMonitor.enter();\n\t\t\t\t\tconst domRow = rowMonitor.enter();\n\t\t\t\t\ttry {\n\t\t\t\t\t\tstyle.invalidate(domCell, domRow);\n\t\t\t\t\t}\n\t\t\t\t\tfinally {\n\t\t\t\t\t\tthis.ticking = false;\n\t\t\t\t\t\trowMonitor.exit();\n\t\t\t\t\t\tcellMonitor.exit();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\ttriggerLine(service, timeout) {\n\t\tconst job = jobLine(timeout);\n\t\tconst model = this.model;\n\t\tconst reduce = model.pipe().reduce;\n\t\tlet sessionUnits = [];\n\n\t\treturn (source, changes, units) => {\n\t\t\tmodel.scene({ status: 'start' }, {\n\t\t\t\tsource\n\t\t\t});\n\n\t\t\tsessionUnits.push(...units);\n\t\t\tjob(() => {\n\t\t\t\tconst jobUnits = reduce(sessionUnits, model);\n\t\t\t\tsessionUnits = [];\n\n\t\t\t\tjobUnits.forEach(pipe => service.invalidate({\n\t\t\t\t\tsource,\n\t\t\t\t\tchanges,\n\t\t\t\t\tpipe,\n\t\t\t\t\twhy: pipe.why || 'refresh'\n\t\t\t\t}));\n\t\t\t});\n\t\t};\n\t}\n\n\twatch(service) {\n\t\tconst triggerJob = this.triggerLine(service, 10);\n\n\t\tconst model = this.model;\n\t\tconst { triggers } = model.pipe();\n\t\tconst { pipe } = model.data();\n\n\t\tif (pipe !== PipeUnit.default) {\n\t\t\ttriggerJob('grid', {}, [pipe]);\n\t\t}\n\n\t\tObject.keys(triggers)\n\t\t\t.forEach(name =>\n\t\t\t\tmodel[name + 'Changed']\n\t\t\t\t\t.watch(e => {\n\t\t\t\t\t\tif (e.tag.behavior === 'core') {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst units = [];\n\t\t\t\t\t\tconst trigger = triggers[name];\n\t\t\t\t\t\tfor (const key in e.changes) {\n\t\t\t\t\t\t\tconst unit = trigger[key];\n\t\t\t\t\t\t\tif (unit) {\n\t\t\t\t\t\t\t\tunits.push(unit);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (units.length > 0) {\n\t\t\t\t\t\t\ttriggerJob(e.tag.source || name, e.changes, units);\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t}\n}\n","import { Model } from '../infrastructure/model';\nimport { ModelProxy } from '../infrastructure/model.proxy';\nimport { Disposable } from '../infrastructure/disposable';\nimport { SelectionCommandManager } from '../selection/selection.command.manager';\nimport { BodyView } from '../body/body.view';\nimport { EditView } from '../edit/edit.view';\nimport { FilterView } from '../filter/filter.view';\nimport { FootView } from '../foot/foot.view';\nimport { GroupView } from '../group/group.view';\nimport { HeadView } from '../head/head.view';\nimport { HighlightView } from '../highlight/highlight.view';\nimport { LayoutView } from '../layout/layout.view';\nimport { NavigationView } from '../navigation/navigation.view';\nimport { PaginationView } from '../pagination/pagination.view';\nimport { RowDetailsView } from '../row-details/row.details.view';\nimport { RowView } from '../row/row.view';\nimport { ScrollView } from '../scroll/scroll.view';\nimport { SelectionView } from '../selection/selection.view';\nimport { SortView } from '../sort/sort.view';\nimport { StyleView } from '../style/style.view';\n\nexport function viewFactory(\n\tmodel,\n\ttable,\n\tcommandManager,\n\tgridService,\n\tvscroll,\n\tselectors\n) {\n\tconst proxy = new ModelProxy(model);\n\tconst basket = new Disposable();\n\tconst { shortcut } = model.action();\n\tconst navigationShortcut = {\n\t\tregister: commands => {\n\t\t\tbasket.using(shortcut.register(commandManager, commands));\n\t\t},\n\t\tkeyCode: () => shortcut.keyCode\n\t};\n\n\tconst selectionCommandManager = new SelectionCommandManager(model, commandManager);\n\tconst selectionShortcut = {\n\t\tregister: commands => {\n\t\t\tbasket.using(shortcut.register(selectionCommandManager, commands));\n\t\t}\n\t};\n\n\treturn host => {\n\t\tconst modelProxy = proxy.subject;\n\n\t\thost.head = new HeadView(modelProxy, table, selectors.th);\n\t\thost.body = new BodyView(modelProxy, table);\n\t\thost.foot = new FootView(modelProxy, table);\n\t\thost.row = new RowView(modelProxy, table, selectors.tr);\n\t\thost.layout = new LayoutView(modelProxy, table, gridService);\n\t\thost.scroll = new ScrollView(modelProxy, table, vscroll, gridService);\n\t\thost.highlight = new HighlightView(modelProxy, table);\n\t\thost.sort = new SortView(modelProxy);\n\t\thost.pagination = new PaginationView(modelProxy);\n\t\thost.nav = new NavigationView(modelProxy, table, navigationShortcut);\n\t\thost.group = new GroupView(modelProxy, table, gridService, navigationShortcut);\n\t\thost.edit = new EditView(modelProxy, table, navigationShortcut);\n\t\thost.filter = new FilterView(modelProxy);\n\t\thost.rowDetails = new RowDetailsView(modelProxy, table, navigationShortcut);\n\t\thost.selection = new SelectionView(modelProxy, table, selectionShortcut);\n\t\thost.style = new StyleView(modelProxy, table);\n\n\t\treturn () => {\n\t\t\thost.layout.dispose();\n\n\t\t\tproxy.dispose();\n\t\t\tbasket.dispose();\n\t\t};\n\t};\n}","import { Node } from '../node/node';\n\nexport class ViewModel {\n\tconstructor() {\n\t\tthis.rows = [];\n\t\tthis.columns = [];\n\t\tthis.nodes = [];\n\t\tthis.pivot = { head: new Node('$root', 0), rows: [] };\n\t}\n}","import { Resource } from '../resource/resource';\r\n\r\nexport class VisibilityModel {\r\n\tconstructor() {\r\n\t\tthis.resource = new Resource();\r\n\t\tthis.head = true;\r\n\t\tthis.foot = true;\r\n\t\tthis.body = true;\r\n\t\tthis.toolbar = {\r\n\t\t\ttop: true,\r\n\t\t\tbottom: true,\r\n\t\t\tright: false,\r\n\t\t\tleft: false\r\n\t\t};\r\n\r\n\t\tthis.pin = {\r\n\t\t\tleft: false,\r\n\t\t\tright: false,\r\n\t\t\ttop: false,\r\n\t\t\tbottom: false\r\n\t\t};\r\n\r\n\t\tthis.plugin = {};\r\n\t}\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n\tproduction: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","module.exports = \"<q-grid caption=\\\"Action Bar Basic\\\"\\n\\t\\t[rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n\\n\\t<q-grid-actions>\\n\\t\\t<q-grid-action icon=\\\"refresh\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Load Data\\\"\\n\\t\\t\\t\\t\\t   [command]=\\\"loadCommand\\\">\\n\\t\\t</q-grid-action>\\n\\t\\t<q-grid-action icon=\\\"clear_all\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Delete Data\\\"\\n\\t\\t\\t\\t\\t   [command]=\\\"clearCommand\\\">\\n\\t\\t</q-grid-action>\\n\\t</q-grid-actions>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable, of } from 'rxjs';\nimport { Command } from 'ng2-qgrid';\n\n@Component({\n\tselector: 'example-action-bar-basic',\n\ttemplateUrl: 'example-action-bar-basic.component.html',\n\tstyleUrls: ['example-action-bar-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleActionBarBasicComponent {\n\tstatic id = 'action-bar-basic';\n\n\tcanLoad = true;\n\trows: Observable<Atom[]>;\n\n\tloadCommand = new Command({\n\t\texecute: () => {\n\t\t\tthis.rows = this.dataService.getAtoms();\n\t\t\tthis.canLoad = false;\n\t\t},\n\t\tcanExecute: () => this.canLoad,\n\t\tshortcut: 'ctrl+l'\n\t});\n\n\tclearCommand = new Command({\n\t\texecute: () => {\n\t\t\tthis.rows = of([]);\n\t\t\tthis.canLoad = true;\n\t\t},\n\t\tcanExecute: () => !this.canLoad,\n\t\tshortcut: 'ctrl+d'\n\t});\n\n\tconstructor(private dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Action Bar On Enter\\\"\\n\\t\\t[rows]=\\\"rows | async\\\"\\n\\t\\t[model]=\\\"gridModel\\\"\\n\\t\\tclass=\\\"q-grid-embed\\\"\\n\\t\\tselectionUnit=\\\"row\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t\\t<q-grid-column type=\\\"select\\\"\\n\\t\\t\\t\\t\\t   [isVisible]=\\\"false\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column type=\\\"row-options\\\"\\n\\t\\t\\t\\t\\t   key=\\\"rowOptions\\\"\\n\\t\\t\\t\\t\\t   [editorOptions]=\\\"rowOptions\\\">\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n\\n\\t<q-grid-actions>\\n\\t\\t<q-grid-action id=\\\"pick-action\\\"\\n\\t\\t\\t\\t\\t   [command]=\\\"pickCommand\\\">\\n\\t\\t</q-grid-action>\\n\\t</q-grid-actions>\\n\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\nimport { GridModel, Action, GridService, Command, Grid } from 'ng2-qgrid';\n\n@Component({\n\tselector: 'example-action-bar-on-enter',\n\ttemplateUrl: 'example-action-bar-on-enter.component.html',\n\tstyleUrls: ['example-action-bar-on-enter.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleActionBarOnEnterComponent {\n\tstatic id = 'action-bar-on-enter';\n\n\trows: Observable<Atom[]>;\n\tgridModel: GridModel;\n\tgridService: GridService;\n\n\trowOptions = {\n\t\ttrigger: 'focus',\n\t\tactions: [\n\t\t\tnew Action(new Command(), 'Hello'),\n\t\t\tnew Action(new Command(), 'World')\n\t\t]\n\t};\n\n\tpickCommand = new Command({\n\t\texecute: () => {\n\t\t\tconst { rowIndex, columnIndex } = this.gridModel.navigation();\n\t\t\tconst { columns } = this.gridModel.view();\n\n\t\t\tconst newColumnIndex = columns.findIndex(c => c.key === 'rowOptions');\n\n\t\t\tthis.gridService.focus(rowIndex, newColumnIndex);\n\n\t\t\t// Comment this out if don't need to revert focus back after action\n\t\t\tthis.gridModel.editChanged.watch((e, off) => {\n\t\t\t\tif (e.hasChanges('state') && e.state.state === 'view') {\n\t\t\t\t\tthis.gridService.focus(rowIndex, columnIndex);\n\t\t\t\t\toff();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tcanExecute: () => {\n\t\t\tconst { items } = this.gridModel.selection();\n\t\t\treturn items.length > 0;\n\t\t},\n\t\tshortcut: 'enter'\n\t});\n\n\tconstructor(dataService: DataService, grid: Grid) {\n\t\tthis.rows = dataService.getAtoms();\n\t\tthis.gridModel = grid.model();\n\t\tthis.gridService = grid.service(this.gridModel);\n\n\t\tthis.gridModel.navigationChanged.watch(e => {\n\t\t\tif (e.hasChanges('cell') && e.state.cell) {\n\t\t\t\tthis.gridModel.selection({\n\t\t\t\t\titems: [e.state.row]\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Action Bar Template\\\"\\n\\t\\t[rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n\\n\\t<q-grid-actions>\\n\\t\\t<q-grid-action id=\\\"sort-by-symbol-asc\\\">\\n\\t\\t\\t<ng-template for=\\\"trigger\\\"\\n\\t\\t\\t\\t\\t\\t let-$action>\\n\\t\\t\\t\\t<button (click)=\\\"sortBySymbol($action.model, '+')\\\"\\n\\t\\t\\t\\t\\t\\tmat-button>\\n\\t\\t\\t\\t\\tSort By Symbol Asc\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</ng-template>\\n\\t\\t</q-grid-action>\\n\\t\\t<q-grid-action id=\\\"sort-by-symbol-desc\\\">\\n\\t\\t\\t<ng-template for=\\\"trigger\\\"\\n\\t\\t\\t\\t\\t\\t let-$action>\\n\\t\\t\\t\\t<button (click)=\\\"sortBySymbol($action.model, '-')\\\"\\n\\t\\t\\t\\t\\t\\tmat-button>\\n\\t\\t\\t\\t\\tSort By Symbol Desc\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</ng-template>\\n\\t\\t</q-grid-action>\\n\\t</q-grid-actions>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\nimport { GridModel } from 'ng2-qgrid';\n\n@Component({\n\tselector: 'example-action-bar-template',\n\ttemplateUrl: 'example-action-bar-template.component.html',\n\tstyleUrls: ['example-action-bar-template.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleActionBarTemplateComponent {\n\tstatic id = 'action-bar-template';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(private dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n\n\tsortBySymbol(gridModel: GridModel, dir: string) {\n\t\tgridModel.sort({ by: [`${dir}symbol`] });\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Aggregate Column Basic\\\"\\n        [rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t\\t<q-grid-column key=\\\"boil\\\"\\n\\t\\t               aggregation=\\\"max\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"melt\\\"\\n\\t\\t               aggregation=\\\"min\\\">\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-aggregate-column-basic',\n\ttemplateUrl: 'example-aggregate-column-basic.component.html',\n\tstyleUrls: ['example-aggregate-column-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleAggregateColumnBasicComponent {\n\tstatic id = 'aggregate-column-basic';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Column Array Basic\\\"\\n\\t\\t[rows]=\\\"rows\\\"\\n\\t\\teditMode=\\\"cell\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t\\t<q-grid-column [width]=\\\"170\\\"></q-grid-column>\\n\\t\\t<q-grid-column key=\\\"customTemplate\\\"\\n\\t\\t\\t\\t\\t   [viewWidth]=\\\"200\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Custom Template\\\"\\n\\t\\t\\t\\t\\t   type=\\\"array\\\">\\n\\t\\t\\t<ng-template for=\\\"body\\\"\\n\\t\\t\\t\\t\\t\\t let-$cell>\\n\\t\\t\\t\\t{{$cell.value.join(', ')}}\\n\\t\\t\\t</ng-template>\\n\\t\\t\\t<ng-template for=\\\"edit\\\"\\n\\t\\t\\t\\t\\t\\t let-$cell\\n\\t\\t\\t\\t\\t\\t let-$view=\\\"$view\\\">\\n\\t\\t\\t\\t<button mat-button\\n\\t\\t\\t\\t\\t\\t(click)=\\\"$view.edit.cell.value = [];$view.edit.cell.exit.execute($cell)\\\">\\n\\t\\t\\t\\t\\tDelete\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t<button mat-button\\n\\t\\t\\t\\t\\t\\t(click)=\\\"$view.edit.cell.cancel.execute($cell)\\\">\\n\\t\\t\\t\\t\\tCancel\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</ng-template>\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n\tselector: 'example-column-array-basic',\n\ttemplateUrl: 'example-column-array-basic.component.html',\n\tstyleUrls: ['example-column-array-basic.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleColumnArrayBasicComponent {\n\tstatic id = 'column-array-basic';\n\n\trows = [\n\t\t{\n\t\t\t'strings': ['Lorem', 'ipsum', 'dolor', 'sit', 'amet'],\n\t\t\t'numbers': [Number.MIN_SAFE_INTEGER, 1, Math.PI, 5, 7, 11, 13, 17, 19, 23, Number.MAX_VALUE],\n\t\t\t'booleans': [true, false, true],\n\t\t\t'nulls': [null, undefined, ''],\n\t\t\t'dates': [new Date(2018, 1, 12), new Date(2018, 2, 13)],\n\t\t\t'customTemplate': ['Lorem', 'ipsum', 'dolor', 'sit', 'amet']\n\t\t}\n\t];\n}\n","module.exports = \"<q-grid caption=\\\"Column Autocomplete Basic\\\"\\n        [rows]=\\\"rows\\\"\\n        editMode=\\\"cell\\\">\\n\\t<q-grid-columns>\\n\\t\\t<q-grid-column key=\\\"number\\\"\\n\\t\\t               title=\\\"Number\\\"\\n\\t\\t               type=\\\"number\\\"\\n\\t\\t               editor=\\\"autocomplete\\\"\\n\\t\\t               [editorOptions]=\\\"numberObservableFetchOptions\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"text\\\"\\n\\t\\t               title=\\\"Text Value\\\"\\n\\t\\t               type=\\\"text\\\"\\n\\t\\t               editor=\\\"autocomplete\\\"\\n\\t\\t               [editorOptions]=\\\"textValueFetchOptions\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"bool\\\"\\n\\t\\t               title=\\\"Bool\\\"\\n\\t\\t               type=\\\"bool\\\"\\n\\t\\t               editor=\\\"autocomplete\\\"\\n\\t\\t               [editorOptions]=\\\"boolFunctionFetchOptions\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"date\\\"\\n\\t\\t               title=\\\"Date\\\"\\n\\t\\t               type=\\\"date\\\"\\n\\t\\t\\t\\t\\t   editor=\\\"autocomplete\\\"\\n\\t\\t\\t\\t\\t   [editorOptions]=\\\"datePromiseFetchOptions\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"null\\\"\\n\\t\\t               title=\\\"Null\\\"\\n\\t\\t               type=\\\"text\\\"\\n\\t\\t               editor=\\\"autocomplete\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"undefined\\\"\\n\\t\\t               title=\\\"Undefined\\\"\\n\\t\\t               type=\\\"text\\\"\\n\\t\\t               editor=\\\"autocomplete\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"empty\\\"\\n\\t\\t               title=\\\"Empty Promise\\\"\\n\\t\\t               type=\\\"text\\\"\\n\\t\\t               editor=\\\"autocomplete\\\"\\n\\t\\t               [editorOptions]=\\\"textPromiseFetchOptions\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"multi\\\"\\n\\t\\t               title=\\\"Multi\\\"\\n\\t\\t               type=\\\"text\\\"\\n\\t\\t               editor=\\\"autocomplete\\\"\\n\\t\\t               [editorOptions]=\\\"multiFetchOptions\\\">\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n</q-grid>\\n\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\n@Component({\n\tselector: 'example-column-autocomplete-basic',\n\ttemplateUrl: 'example-column-autocomplete-basic.component.html',\n\tstyleUrls: ['example-column-autocomplete-basic.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleColumnAutocompleteBasicComponent {\n\tstatic id = 'column-autocomplete-basic';\n\n\trows = [\n\t\t{\n\t\t\t'number': 0,\n\t\t\t'text': 'Lorem',\n\t\t\t'bool': true,\n\t\t\t'date': new Date(2018, 9, 12),\n\t\t\t'null': null,\n\t\t\t'undefined': undefined,\n\t\t\t'empty': ''\n\t\t}\n\t];\n\n\tboolFunctionFetchOptions = {\n\t\tfetch: row => [true, false, null].filter(item => item !== row.bool)\n\t};\n\n\ttextValueFetchOptions = {\n\t\tfetch: ['Lorem', 'ipsum', 'dolor', 'sit', 'amet']\n\t};\n\n\ttextPromiseFetchOptions = {\n\t\tfetch: new Promise(resolve =>\n\t\t\tsetTimeout(\n\t\t\t\t() => resolve(['Lorem', 'ipsum', 'dolor', 'sit', 'amet']),\n\t\t\t\t5000\n\t\t\t)\n\t\t)\n\t};\n\n\tdatePromiseFetchOptions = {\n\t\tfetch: new Promise(resolve =>\n\t\t\tsetTimeout(\n\t\t\t\t() => resolve([new Date(2017, 7, 7), new Date(2016, 6, 6), new Date(2015, 5, 5)]),\n\t\t\t\t5000\n\t\t\t)\n\t\t)\n\t};\n\n\tnumberObservableFetchOptions = {\n\t\tfetch: of([Math.PI, Math.LN10, Math.LN2, Math.E, Math.LOG10E, Math.LOG2E, Math.SQRT1_2])\n\t};\n\n\tmultiFetchOptions = {\n\t\tfetch: of([])\n\t};\n}\n","module.exports = \"<q-grid caption=\\\"Column Bool Basic\\\"\\n        [rows]=\\\"rows\\\"\\n        editMode=\\\"cell\\\">\\n\\t<q-grid-columns>\\n\\t\\t<q-grid-column [width]=\\\"100\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"true\\\"\\n\\t\\t               title=\\\"True\\\"\\n\\t\\t               type=\\\"bool\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"false\\\"\\n\\t\\t               title=\\\"False\\\"\\n\\t\\t               type=\\\"bool\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"undefined\\\"\\n\\t\\t               title=\\\"Undefined\\\"\\n\\t\\t               type=\\\"bool\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"null\\\"\\n\\t\\t               title=\\\"Null\\\"\\n\\t\\t               type=\\\"bool\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"yesNo\\\"\\n\\t\\t               title=\\\"Yes/No\\\"\\n\\t\\t               trueValue=\\\"yes\\\"\\n\\t\\t               falseValue=\\\"no\\\"\\n\\t\\t               type=\\\"bool\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"noYes\\\"\\n\\t\\t               title=\\\"No/Yes\\\"\\n\\t\\t               trueValue=\\\"yes\\\"\\n\\t\\t               falseValue=\\\"no\\\"\\n\\t\\t               type=\\\"bool\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"nullYesNo\\\"\\n\\t\\t               title=\\\"Null/Yes/No\\\"\\n\\t\\t               trueValue=\\\"yes\\\"\\n\\t\\t               falseValue=\\\"no\\\"\\n\\t\\t               type=\\\"bool\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"triggerFocus\\\"\\n\\t\\t               [width]=\\\"120\\\"\\n\\t\\t               [editorOptions]=\\\"{trigger: 'focus'}\\\"\\n\\t\\t               title=\\\"Trigger Focus\\\"\\n\\t\\t               type=\\\"bool\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"customTemplate\\\"\\n\\t\\t\\t\\t\\t   [width]=\\\"120\\\"\\n\\t\\t\\t\\t\\t   [viewWidth]=\\\"300\\\"\\n\\t\\t               title=\\\"Custom Template\\\"\\n\\t\\t               [editorOptions]=\\\"{trigger: 'focus'}\\\"\\n\\t\\t               type=\\\"bool\\\">\\n\\t\\t\\t<ng-template for=\\\"body\\\"\\n\\t\\t\\t             let-$cell>\\n\\t\\t\\t\\t{{$cell.value === null ? 'NULL' : $cell.value ? 'YES' : 'NO'}}\\n\\t\\t\\t</ng-template>\\n\\t\\t\\t<ng-template for=\\\"edit\\\"\\n\\t\\t\\t             let-$view=\\\"$view\\\">\\n\\t\\t\\t\\t<button mat-button\\n\\t\\t\\t\\t        (click)=\\\"$view.edit.cell.value = true\\\">\\n\\t\\t\\t\\t\\tSET YES\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t<button mat-button\\n\\t\\t\\t\\t        (click)=\\\"$view.edit.cell.value = false\\\">\\n\\t\\t\\t\\t\\tSET NO\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t<button mat-button\\n\\t\\t\\t\\t        (click)=\\\"$view.edit.cell.value = null\\\">\\n\\t\\t\\t\\t\\tSET NULL\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</ng-template>\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n\tselector: 'example-column-bool-basic',\n\ttemplateUrl: 'example-column-bool-basic.component.html',\n\tstyleUrls: ['example-column-bool-basic.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleColumnBoolBasicComponent {\n\tstatic id = 'column-bool-basic';\n\n\trows = [\n\t\t{\n\t\t\t'true': true,\n\t\t\t'false': false,\n\t\t\t'null': null,\n\t\t\t'undefined': undefined,\n\t\t\t'yesNo': 'yes',\n\t\t\t'noYes': 'no',\n\t\t\t'nullYesNo': null,\n\t\t\t'triggerFocus': true,\n\t\t\t'customTemplate': true\n\t\t}\n\t];\n}\n","module.exports = \"<q-grid caption=\\\"Column Currency Basic\\\"\\r\\n        [rows]=\\\"rows\\\"\\r\\n        editMode=\\\"cell\\\">\\r\\n\\t<q-grid-columns>\\r\\n\\t\\t<q-grid-column key=\\\"number\\\"\\r\\n\\t\\t               title=\\\"Number\\\"\\r\\n\\t\\t               type=\\\"currency\\\">\\r\\n\\t\\t</q-grid-column>\\r\\n\\t\\t<q-grid-column key=\\\"euro\\\"\\r\\n\\t\\t               title=\\\"Euro\\\"\\r\\n\\t\\t               code=\\\"EUR\\\"\\r\\n\\t\\t               type=\\\"currency\\\">\\r\\n\\t\\t</q-grid-column>\\r\\n\\t\\t<q-grid-column key=\\\"null\\\"\\r\\n\\t\\t               title=\\\"Null\\\"\\r\\n\\t\\t               type=\\\"currency\\\">\\r\\n\\t\\t</q-grid-column>\\r\\n\\t\\t<q-grid-column key=\\\"undefined\\\"\\r\\n\\t\\t               title=\\\"Undefined\\\"\\r\\n\\t\\t               type=\\\"currency\\\">\\r\\n\\t\\t</q-grid-column>\\r\\n\\t\\t<q-grid-column key=\\\"empty\\\"\\r\\n\\t\\t               title=\\\"Empty\\\"\\r\\n\\t\\t               type=\\\"currency\\\">\\r\\n\\t\\t</q-grid-column>\\r\\n\\t\\t<q-grid-column key=\\\"string\\\"\\r\\n\\t\\t               title=\\\"String\\\"\\r\\n\\t\\t               type=\\\"currency\\\">\\r\\n\\t\\t</q-grid-column>\\r\\n\\t\\t<q-grid-column key=\\\"customTemplate\\\"\\r\\n\\t\\t               title=\\\"Custom Template\\\"\\r\\n\\t\\t               type=\\\"currency\\\">\\r\\n\\t\\t\\t<ng-template for=\\\"body\\\"\\r\\n\\t\\t\\t             let-$cell>\\r\\n\\t\\t\\t\\tusd: {{$cell.value}}\\r\\n\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t<ng-template for=\\\"edit\\\"\\r\\n\\t\\t\\t             let-$cell\\r\\n\\t\\t\\t             let-$view=\\\"$view\\\">\\r\\n\\t\\t\\t\\t<input type=\\\"number\\\"\\r\\n\\t\\t\\t\\t       style=\\\"width: 100%\\\"\\r\\n\\t\\t\\t\\t       q-grid-focus\\r\\n\\t\\t\\t\\t       [(ngModel)]=\\\"$view.edit.cell.value\\\"\\r\\n\\t\\t\\t\\t       (blur)=\\\"$view.edit.cell.exit.execute($cell)\\\" />\\r\\n\\t\\t\\t</ng-template>\\r\\n\\t\\t</q-grid-column>\\r\\n\\t</q-grid-columns>\\r\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n\tselector: 'example-column-currency-basic',\n\ttemplateUrl: 'example-column-currency-basic.component.html',\n\tstyleUrls: ['example-column-currency-basic.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleColumnCurrencyBasicComponent {\n\tstatic id = 'column-currency-basic';\n\n\trows = [\n\t\t{\n\t\t\t'number': 100,\n\t\t\t'euro': 200,\n\t\t\t'null': null,\n\t\t\t'undefined': undefined,\n\t\t\t'empty': '',\n\t\t\t'string': '120',\n\t\t\t'customTemplate': 30\n\t\t}\n\t];\n}\n","module.exports = \"<q-grid caption=\\\"Column Data Safe\\\"\\n\\t\\t[rows]=\\\"rows\\\"\\n\\t\\teditMode=\\\"cell\\\">\\n\\t<q-grid-columns>\\n\\t\\t<q-grid-column key=\\\"currency\\\"\\n\\t\\t\\t\\t\\t   type=\\\"currency\\\"\\n\\t\\t\\t\\t\\t   path=\\\"level0.currency\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Currency\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"number\\\"\\n\\t\\t\\t\\t\\t   type=\\\"number\\\"\\n\\t\\t\\t\\t\\t   path=\\\"level0.number\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Number\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"notProperty\\\"\\n\\t\\t\\t\\t\\t   path=\\\"notProperty\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Not Existing Property\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"notProperty2\\\"\\n\\t\\t\\t\\t\\t   path=\\\"level2.notProperty\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Not Existing Property on Level 2\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"time\\\"\\n\\t\\t\\t\\t\\t   type=\\\"time\\\"\\n\\t\\t\\t\\t\\t   path=\\\"level0.time\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Time\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"array\\\"\\n\\t\\t\\t\\t\\t   type=\\\"array\\\"\\n\\t\\t\\t\\t\\t   path=\\\"level0.array\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Array\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"email\\\"\\n\\t\\t\\t\\t\\t   type=\\\"email\\\"\\n\\t\\t\\t\\t\\t   path=\\\"level0.email\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Email\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"date\\\"\\n\\t\\t\\t\\t\\t   type=\\\"date\\\"\\n\\t\\t\\t\\t\\t   path=\\\"level0.date\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Date\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"image\\\"\\n\\t\\t\\t\\t\\t   type=\\\"image\\\"\\n\\t\\t\\t\\t\\t   path=\\\"level0.image\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Image\\\">\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n\tselector: 'example-column-data-safe',\n\ttemplateUrl: 'example-column-data-safe.component.html',\n\tstyleUrls: ['example-column-data-safe.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleColumnDataSafeComponent {\n\tstatic id = 'column-data-safe';\n\n\trows = [\n\t\t{\n\t\t\tlevel0: {\n\t\t\t\tcurrency: 10,\n\t\t\t\tnumber: 12,\n\t\t\t\tdate: '1983-09-18',\n\t\t\t\tboolean: true,\n\t\t\t\temail: 'john@mail.com',\n\t\t\t\ttime: '12:00',\n\t\t\t\timage: 'https://upload.wikimedia.org/wikipedia/commons/e/e4/Hydrogen_Spectra.jpg',\n\t\t\t\tarray: [1, 2, 3]\n\t\t\t}\n\t\t},\n\t\t{},\n\t\t{\n\t\t\tlevel0: {\n\t\t\t\ttime: '13:00'\n\t\t\t}\n\t\t}\n\n\t];\n}\n","module.exports = \"<q-grid caption=\\\"Column Date Basic\\\"\\n        [rows]=\\\"rows\\\"\\n        editMode=\\\"cell\\\">\\n\\t<q-grid-columns>\\n\\t\\t<q-grid-column key=\\\"number\\\"\\n\\t\\t               title=\\\"Number\\\"\\n\\t\\t               type=\\\"date\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"bool\\\"\\n\\t\\t               title=\\\"Bool\\\"\\n\\t\\t               type=\\\"date\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"date\\\"\\n\\t\\t               title=\\\"Date\\\"\\n\\t\\t               type=\\\"date\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"null\\\"\\n\\t\\t               title=\\\"Null\\\"\\n\\t\\t               type=\\\"date\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"undefined\\\"\\n\\t\\t               title=\\\"Undefined\\\"\\n\\t\\t               type=\\\"date\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"empty\\\"\\n\\t\\t               title=\\\"Empty\\\"\\n\\t\\t               type=\\\"date\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"format\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Format\\\"\\n\\t\\t\\t\\t\\t   format=\\\"short\\\"\\n\\t\\t               type=\\\"date\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"text\\\"\\n\\t\\t               title=\\\"Text\\\"\\n\\t\\t               type=\\\"date\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"customTemplate\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Custom Template\\\"\\n\\t\\t\\t\\t\\t   [width]=\\\"200\\\"\\n\\t\\t\\t\\t\\t   format=\\\"fullDate\\\"\\n\\t\\t               type=\\\"date\\\">\\n\\t\\t\\t<ng-template for=\\\"body\\\"\\n\\t\\t\\t             let-$cell>\\n\\t\\t\\t\\t<em>{{$cell.value | qGridDate: $cell.column.format}}</em>\\n\\t\\t\\t</ng-template>\\n\\t\\t\\t<ng-template for=\\\"edit\\\"\\n\\t\\t\\t             let-$cell\\n\\t\\t\\t             let-$view=\\\"$view\\\">\\n\\t\\t\\t\\t<input type=\\\"date\\\"\\n\\t\\t\\t\\t       style=\\\"width: 100%\\\"\\n\\t\\t\\t\\t\\t   q-grid-focus\\n\\t\\t\\t\\t\\t   [ngModel]=\\\"$view.edit.cell.value | qGridDate:'yyyy-MM-dd'\\\" \\n\\t\\t\\t\\t\\t   (ngModelChange)=\\\"$view.edit.cell.value = $event\\\"\\t\\t\\t\\t       \\n\\t\\t\\t\\t       (blur)=\\\"$view.edit.cell.exit.execute($cell)\\\" />\\n\\t\\t\\t</ng-template>\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n\tselector: 'example-column-date-basic',\n\ttemplateUrl: 'example-column-date-basic.component.html',\n\tstyleUrls: ['example-column-date-basic.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleColumnDateBasicComponent {\n\tstatic id = 'column-date-basic';\n\n\trows = [\n\t\t{\n\t\t\t'number': 100.12,\n\t\t\t'bool': true,\n\t\t\t'date': new Date(2018, 9, 12),\n\t\t\t'null': null,\n\t\t\t'undefined': undefined,\n\t\t\t'empty': '',\n\t\t\t'text': '2018/3/28',\n\t\t\t'maxLength2': 'PI',\n\t\t\t'format': new Date(2018, 9, 12),\n\t\t\t'customTemplate': new Date(2018, 9, 12)\n\t\t}\n\t];\n}\n","module.exports = \"<q-grid caption=\\\"Column Dropdown Basic\\\"\\n\\t\\t[rows]=\\\"rows\\\"\\n\\t\\teditMode=\\\"cell\\\">\\n\\t<q-grid-columns>\\n\\t\\t<q-grid-column key=\\\"number\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Number\\\"\\n\\t\\t\\t\\t\\t   type=\\\"number\\\"\\n\\t\\t\\t\\t\\t   editor=\\\"dropdown\\\"\\n\\t\\t\\t\\t\\t   [editorOptions]=\\\"numberObservableFetchOptions\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"text\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Text Value\\\"\\n\\t\\t\\t\\t\\t   type=\\\"text\\\"\\n\\t\\t\\t\\t\\t   editor=\\\"dropdown\\\"\\n\\t\\t\\t\\t\\t   [editorOptions]=\\\"textValueFetchOptions\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"bool\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Bool\\\"\\n\\t\\t\\t\\t\\t   type=\\\"bool\\\"\\n\\t\\t\\t\\t\\t   editor=\\\"dropdown\\\"\\n\\t\\t\\t\\t\\t   [editorOptions]=\\\"boolFunctionFetchOptions\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"date\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Date\\\"\\n\\t\\t\\t\\t\\t   type=\\\"date\\\"\\n\\t\\t\\t\\t\\t   editor=\\\"dropdown\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"null\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Null\\\"\\n\\t\\t\\t\\t\\t   type=\\\"text\\\"\\n\\t\\t\\t\\t\\t   editor=\\\"dropdown\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"undefined\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Undefined\\\"\\n\\t\\t\\t\\t\\t   type=\\\"text\\\"\\n\\t\\t\\t\\t\\t   editor=\\\"dropdown\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"empty\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Empty Promise\\\"\\n\\t\\t\\t\\t\\t   type=\\\"text\\\"\\n\\t\\t\\t\\t\\t   editor=\\\"dropdown\\\"\\n\\t\\t\\t\\t\\t   [editorOptions]=\\\"textPromiseFetchOptions\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"multi\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Multi\\\"\\n\\t\\t\\t\\t\\t   type=\\\"text\\\"\\n\\t\\t\\t\\t\\t   editor=\\\"dropdown\\\"\\n\\t\\t\\t\\t\\t   [editorOptions]=\\\"multiFetchOptions\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"object\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Object\\\"\\n\\t\\t\\t\\t\\t   type=\\\"text\\\"\\n\\t\\t\\t\\t\\t   editor=\\\"dropdown\\\"\\n\\t\\t\\t\\t\\t   [label]=\\\"getLabel\\\"\\n\\t\\t\\t\\t\\t   [itemLabel]=\\\"getItemLabel\\\"\\n\\t\\t\\t\\t\\t   [editorOptions]=\\\"objectFetchOptions\\\">\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\n@Component({\n\tselector: 'example-column-dropdown-basic',\n\ttemplateUrl: 'example-column-dropdown-basic.component.html',\n\tstyleUrls: ['example-column-dropdown-basic.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleColumnDropdownBasicComponent {\n\tstatic id = 'column-dropdown-basic';\n\n\trows = [\n\t\t{\n\t\t\t'number': 0,\n\t\t\t'text': 'Lorem',\n\t\t\t'bool': true,\n\t\t\t'date': new Date(2018, 9, 12),\n\t\t\t'null': null,\n\t\t\t'undefined': undefined,\n\t\t\t'empty': '',\n\t\t\t'object': null\n\t\t}\n\t];\n\n\tboolFunctionFetchOptions = {\n\t\tfetch: row => [true, false, null].filter(item => item !== row.bool)\n\t};\n\n\ttextValueFetchOptions = {\n\t\tfetch: ['Lorem', 'ipsum', 'dolor', 'sit', 'amet']\n\t};\n\n\ttextPromiseFetchOptions = {\n\t\tfetch: new Promise(resolve =>\n\t\t\tsetTimeout(\n\t\t\t\t() => resolve(['Lorem', 'ipsum', 'dolor', 'sit', 'amet']),\n\t\t\t\t5000\n\t\t\t)\n\t\t)\n\t};\n\n\tnumberObservableFetchOptions = {\n\t\tfetch: of([Math.PI, Math.LN10, Math.LN2, Math.E, Math.LOG10E, Math.LOG2E, Math.SQRT1_2])\n\t};\n\n\tobjectFetchOptions = {\n\t\tfetch: [\n\t\t\t{ label: 'hello' },\n\t\t\t{ label: 'world' }\n\t\t]\n\t};\n\n\tmultiFetchOptions = {\n\t\tfetch: of([])\n\t};\n\n\tgetLabel(row: any): string {\n\t\treturn row.object ? row.object.label : '';\n\t}\n\n\tgetItemLabel(item: { label: string }): string {\n\t\treturn item.label;\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Column Email Basic\\\"\\r\\n        [rows]=\\\"rows\\\"\\r\\n        editMode=\\\"cell\\\">\\r\\n\\t<q-grid-columns>\\r\\n\\t\\t<q-grid-column key=\\\"invalid\\\"\\r\\n\\t\\t               title=\\\"Invalid\\\"\\r\\n\\t\\t               type=\\\"email\\\">\\r\\n\\t\\t</q-grid-column>\\r\\n\\t\\t<q-grid-column key=\\\"valid\\\"\\r\\n\\t\\t               title=\\\"Valid\\\"\\r\\n\\t\\t               type=\\\"email\\\">\\r\\n\\t\\t</q-grid-column>\\r\\n\\t\\t<q-grid-column key=\\\"withLabel\\\"\\r\\n\\t\\t\\t\\t\\t   title=\\\"With Label\\\"\\r\\n\\t\\t\\t\\t\\t   [label]=\\\"myLabel\\\"\\r\\n\\t\\t               type=\\\"email\\\">\\r\\n\\t\\t</q-grid-column>\\r\\n\\t\\t<q-grid-column key=\\\"customTemplate\\\"\\r\\n\\t\\t               title=\\\"Custom Template\\\"\\r\\n\\t\\t               [editorOptions]=\\\"{trigger: 'click'}\\\"\\r\\n\\t\\t               type=\\\"email\\\">\\r\\n\\t\\t\\t<ng-template for=\\\"body\\\"\\r\\n\\t\\t\\t             let-$cell>\\r\\n\\t\\t\\t\\t<em>{{$cell.value}}</em>\\r\\n\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t<ng-template for=\\\"edit\\\"\\r\\n\\t\\t\\t             let-$cell\\r\\n\\t\\t\\t             let-$view=\\\"$view\\\">\\r\\n\\t\\t\\t\\t<input style=\\\"width: 100%\\\"\\r\\n\\t\\t\\t\\t       q-grid-focus\\r\\n\\t\\t\\t\\t       [(ngModel)]=\\\"$view.edit.cell.value\\\"\\r\\n\\t\\t\\t\\t       (blur)=\\\"$view.edit.cell.exit.execute($cell)\\\" />\\r\\n\\t\\t\\t</ng-template>\\r\\n\\t\\t</q-grid-column>\\r\\n\\t</q-grid-columns>\\r\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n\tselector: 'example-column-email-basic',\n\ttemplateUrl: 'example-column-email-basic.component.html',\n\tstyleUrls: ['example-column-email-basic.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleColumnEmailBasicComponent {\n\tstatic id = 'column-email-basic';\n\n\trows = [\n\t\t{\n\t\t\t'valid': 'qgrid.team@gmail.com',\n\t\t\t'invalid': 'Lorem ipsum dolor',\n\t\t\t'withLabel': 'qgrid.team@gmail.com',\n\t\t\t'null': null,\n\t\t\t'undefined': undefined,\n\t\t\t'empty': '',\n\t\t\t'customTemplate': 'qgrid.team@gmail.com'\n\t\t}\n\t];\n\n\tprivate label = 'QGRID';\n\n\tmyLabel: (row: any, value?: any) => string | undefined;\n\n\tconstructor() {\n\t\tconst self = this;\n\t\tthis.myLabel = (...args) => {\n\t\t\tconst [_, value] = args;\n\t\t\tif (args.length > 1) {\n\t\t\t\tself.label = value;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn self.label;\n\t\t};\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Column File Basic\\\"\\r\\n        [rows]=\\\"rows\\\"\\r\\n        editMode=\\\"cell\\\">\\r\\n\\t<q-grid-columns>\\r\\n\\t\\t<q-grid-column key=\\\"invalid\\\"\\r\\n\\t\\t               title=\\\"Invalid\\\"\\r\\n\\t\\t               type=\\\"file\\\">\\r\\n\\t\\t</q-grid-column>\\r\\n\\t\\t<q-grid-column key=\\\"valid\\\"\\r\\n\\t\\t               title=\\\"Valid\\\"\\r\\n\\t\\t               type=\\\"file\\\">\\r\\n\\t\\t</q-grid-column>\\r\\n\\t\\t<q-grid-column key=\\\"withLabel\\\"\\r\\n\\t\\t\\t\\t\\t   title=\\\"With Label\\\"\\r\\n\\t\\t\\t\\t\\t   label=\\\"QGRID\\\"\\r\\n\\t\\t               type=\\\"file\\\">\\r\\n\\t\\t</q-grid-column>\\r\\n\\t\\t<q-grid-column key=\\\"empty\\\"\\r\\n\\t\\t\\t\\t\\t   title=\\\"Empty\\\"\\r\\n\\t\\t               type=\\\"file\\\">\\r\\n\\t\\t</q-grid-column>\\r\\n\\t\\t<q-grid-column key=\\\"customTemplate\\\"\\r\\n\\t\\t               title=\\\"Custom Template\\\"\\r\\n\\t\\t               [editorOptions]=\\\"{trigger: 'click'}\\\"\\r\\n\\t\\t               type=\\\"file\\\">\\r\\n\\t\\t\\t<ng-template for=\\\"body\\\"\\r\\n\\t\\t\\t             let-$cell>\\r\\n\\t\\t\\t\\t<em>{{$cell.value}}</em>\\r\\n\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t<ng-template for=\\\"edit\\\"\\r\\n\\t\\t\\t             let-$cell\\r\\n\\t\\t\\t             let-$view=\\\"$view\\\">\\r\\n\\t\\t\\t\\t<input style=\\\"width: 100%\\\"\\r\\n\\t\\t\\t\\t       q-grid-focus\\r\\n\\t\\t\\t\\t       [(ngModel)]=\\\"$view.edit.cell.value\\\"\\r\\n\\t\\t\\t\\t       (blur)=\\\"$view.edit.cell.exit.execute($cell)\\\" />\\r\\n\\t\\t\\t</ng-template>\\r\\n\\t\\t</q-grid-column>\\r\\n\\t</q-grid-columns>\\r\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n\tselector: 'example-column-file-basic',\n\ttemplateUrl: 'example-column-file-basic.component.html',\n\tstyleUrls: ['example-column-file-basic.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleColumnFileBasicComponent {\n\tstatic id = 'column-file-basic';\n\n\trows = [\n\t\t{\n\t\t\t'valid': 'https://rawgit.com/qgrid/ng2/master/CHANGELOG.md',\n\t\t\t'invalid': 'Lorem ipsum dolor',\n\t\t\t'withLabel': 'https://rawgit.com/qgrid/ng2/master/CHANGELOG.md',\n\t\t\t'empty': '',\n\t\t\t'customTemplate': 'https://rawgit.com/qgrid/ng2/master/CHANGELOG.md'\n\t\t}\n\t];\n}\n","module.exports = \"<q-grid caption=\\\"Column Id Basic\\\"\\r\\n        [rows]=\\\"rows\\\"\\r\\n        editMode=\\\"cell\\\">\\r\\n\\t<q-grid-columns>\\r\\n\\t\\t<q-grid-column key=\\\"number\\\"\\r\\n\\t\\t\\t\\t\\t   title=\\\"Number\\\"\\r\\n\\t\\t\\t\\t\\t   editor=\\\"number\\\"\\r\\n\\t\\t               type=\\\"id\\\">\\r\\n\\t\\t</q-grid-column>\\r\\n\\t\\t<q-grid-column key=\\\"bool\\\"\\r\\n\\t\\t\\t\\t\\t   title=\\\"Bool\\\"\\r\\n\\t\\t\\t\\t\\t   editor=\\\"bool\\\"\\r\\n\\t\\t               type=\\\"id\\\">\\r\\n\\t\\t</q-grid-column>\\r\\n\\t\\t<q-grid-column key=\\\"date\\\"\\r\\n\\t\\t\\t\\t\\t   title=\\\"Date\\\"\\r\\n\\t\\t\\t\\t\\t   editor=\\\"date\\\"\\r\\n\\t\\t               type=\\\"id\\\">\\r\\n\\t\\t</q-grid-column>\\r\\n\\t\\t<q-grid-column key=\\\"text\\\"\\r\\n\\t\\t               title=\\\"Text\\\"\\r\\n\\t\\t               type=\\\"id\\\">\\r\\n\\t\\t</q-grid-column>\\r\\n\\t\\t<q-grid-column key=\\\"null\\\"\\r\\n\\t\\t               title=\\\"Null\\\"\\r\\n\\t\\t               type=\\\"id\\\">\\r\\n\\t\\t</q-grid-column>\\r\\n\\t\\t<q-grid-column key=\\\"undefined\\\"\\r\\n\\t\\t               title=\\\"Undefined\\\"\\r\\n\\t\\t               type=\\\"id\\\">\\r\\n\\t\\t</q-grid-column>\\r\\n\\t\\t<q-grid-column key=\\\"empty\\\"\\r\\n\\t\\t               title=\\\"Empty\\\"\\r\\n\\t\\t               type=\\\"id\\\">\\r\\n\\t\\t</q-grid-column>\\r\\n\\t\\t<q-grid-column key=\\\"customTemplate\\\"\\r\\n\\t\\t               title=\\\"Custom Template\\\"\\r\\n\\t\\t               type=\\\"text\\\">\\r\\n\\t\\t\\t<ng-template for=\\\"body\\\"\\r\\n\\t\\t\\t             let-$cell>\\r\\n\\t\\t\\t\\t<strong>{{$cell.value}}</strong>\\r\\n\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t<ng-template for=\\\"edit\\\"\\r\\n\\t\\t\\t             let-$cell\\r\\n\\t\\t\\t             let-$view=\\\"$view\\\">\\r\\n\\t\\t\\t\\t<input style=\\\"width: 100%\\\"\\r\\n\\t\\t\\t\\t       q-grid-focus\\r\\n\\t\\t\\t\\t       [(ngModel)]=\\\"$view.edit.cell.value\\\"\\r\\n\\t\\t\\t\\t       (blur)=\\\"$view.edit.cell.exit.execute($cell)\\\" />\\r\\n\\t\\t\\t</ng-template>\\r\\n\\t\\t</q-grid-column>\\r\\n\\t</q-grid-columns>\\r\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n\tselector: 'example-column-id-basic',\n\ttemplateUrl: 'example-column-id-basic.component.html',\n\tstyleUrls: ['example-column-id-basic.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleColumnIdBasicComponent {\n\tstatic id = 'column-id-basic';\n\n\trows = [\n\t\t{\n\t\t\t'number': 100.12,\n\t\t\t'bool': true,\n\t\t\t'date': new Date(2018, 9, 12),\n\t\t\t'text': 'some id',\n\t\t\t'null': null,\n\t\t\t'undefined': undefined,\n\t\t\t'empty': '',\n\t\t\t'customTemplate': 'my id'\n\t\t}\n\t];\n}\n","module.exports = \"<q-grid caption=\\\"Column Image Basic\\\"\\n        [rows]=\\\"rows\\\"\\n        editMode=\\\"cell\\\">\\n\\t<q-grid-columns>\\n\\t\\t<q-grid-column key=\\\"invalid\\\"\\n\\t\\t               title=\\\"Invalid\\\"\\n\\t\\t               type=\\\"image\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"valid\\\"\\n\\t\\t               title=\\\"Valid\\\"\\n\\t\\t               type=\\\"image\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"withLabel\\\"\\n\\t\\t\\t\\t\\t   title=\\\"With Label\\\"\\n\\t\\t\\t\\t\\t   label=\\\"QGRID\\\"\\n\\t\\t               type=\\\"image\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"empty\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Empty\\\"\\n\\t\\t               type=\\\"image\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"customTemplate\\\"\\n\\t\\t               title=\\\"Custom Template\\\"\\n\\t\\t\\t\\t\\t   [editorOptions]=\\\"{trigger: 'click'}\\\"\\n\\t\\t\\t\\t\\t   [width]=\\\"200\\\"\\n\\t\\t               type=\\\"image\\\">\\n\\t\\t\\t<ng-template for=\\\"body\\\"\\n\\t\\t\\t             let-$cell>\\n\\t\\t\\t\\t<em>{{$cell.value}}</em>\\n\\t\\t\\t</ng-template>\\n\\t\\t\\t<ng-template for=\\\"edit\\\"\\n\\t\\t\\t             let-$cell\\n\\t\\t\\t             let-$view=\\\"$view\\\">\\n\\t\\t\\t\\t<input style=\\\"width: 100%\\\"\\n\\t\\t\\t\\t       q-grid-focus\\n\\t\\t\\t\\t       [(ngModel)]=\\\"$view.edit.cell.value\\\"\\n\\t\\t\\t\\t       (blur)=\\\"$view.edit.cell.exit.execute($cell)\\\" />\\n\\t\\t\\t</ng-template>\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n\tselector: 'example-column-image-basic',\n\ttemplateUrl: 'example-column-image-basic.component.html',\n\tstyleUrls: ['example-column-image-basic.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleColumnImageBasicComponent {\n\tstatic id = 'column-image-basic';\n\n\trows = [\n\t\t{\n\t\t\t'valid': 'https://rawgit.com/qgrid/doc/master/themes/qgrid/source/assets/favicons/android-chrome-192x192.png',\n\t\t\t'invalid': 'Lorem ipsum dolor',\n\t\t\t'withLabel': 'https://rawgit.com/qgrid/doc/master/themes/qgrid/source/assets/favicons/android-chrome-512x512.png',\n\t\t\t'empty': '',\n\t\t\t'customTemplate': 'https://rawgit.com/qgrid/doc/master/themes/qgrid/source/assets/favicons/favicon-32x32.png'\n\t\t}\n\t];\n}\n","module.exports = \"<q-grid caption=\\\"Column List Basic\\\"\\n\\t\\t[rows]=\\\"rows | async\\\"\\n\\t\\t[ngSwitch]=\\\"group\\\">\\n\\t<q-grid-columns *ngSwitchCase=\\\"'name'\\\">\\n\\t\\t<q-grid-column key=\\\"firstName\\\"\\n\\t\\t\\t\\t\\t   path=\\\"name.first\\\"\\n\\t\\t\\t\\t\\t   title=\\\"First Name\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"lastName\\\"\\n\\t\\t\\t\\t\\t   path=\\\"name.last\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Last Name\\\">\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n\\n\\t<q-grid-columns *ngSwitchCase=\\\"'address'\\\">\\n\\t\\t<q-grid-column key=\\\"city\\\"\\n\\t\\t\\t\\t\\t   path=\\\"contact.address.city\\\"\\n\\t\\t\\t\\t\\t   title=\\\"City\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"state\\\"\\n\\t\\t\\t\\t\\t   path=\\\"contact.address.state\\\"\\n\\t\\t\\t\\t\\t   title=\\\"State\\\">\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n\\n\\t<q-grid-columns *ngSwitchCase=\\\"'gender'\\\">\\n\\t\\t<q-grid-column key=\\\"gender\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Gender\\\">\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n\\n\\t<q-grid-columns *ngSwitchDefault>\\n\\t\\t<q-grid-column key=\\\"rowNumber\\\"\\n\\t\\t\\t\\t\\t   type=\\\"row-number\\\">\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n\\n\\t<q-grid-toolbar>\\n\\t\\t<ng-template for=\\\"top\\\">\\n\\t\\t\\t<button mat-button\\n\\t\\t\\t\\t\\t(click)=\\\"group = 'name'\\\">\\n\\t\\t\\t\\tName\\n\\t\\t\\t</button>\\n\\t\\t\\t<button mat-button\\n\\t\\t\\t\\t\\t(click)=\\\"group = 'address'\\\">\\n\\t\\t\\t\\tAddress\\n\\t\\t\\t</button>\\n\\t\\t\\t<button mat-button\\n\\t\\t\\t\\t\\t(click)=\\\"group = 'gender'\\\">\\n\\t\\t\\t\\tGender\\n\\t\\t\\t</button>\\n\\t\\t\\t<button mat-button\\n\\t\\t\\t\\t\\t(click)=\\\"group = ''\\\">\\n\\t\\t\\t\\tDefault\\n\\t\\t\\t</button>\\n\\t\\t</ng-template>\\n\\t</q-grid-toolbar>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Human } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-column-list-basic',\n\ttemplateUrl: 'example-column-list-basic.component.html',\n\tstyleUrls: ['example-column-list-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleColumnListBasicComponent {\n\tstatic id = 'column-list-basic';\n\n\trows: Observable<Human[]>;\n\tgroup = '';\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getPeople();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Column List Loop\\\"\\n        [rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns>\\n\\t\\t<q-grid-column *ngFor=\\\"let column of columns\\\"\\n\\t\\t               [key]=\\\"column.key\\\"\\n\\t\\t               [title]=\\\"column.title\\\">\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n\\n\\t<q-grid-row [canMove]=\\\"true\\\"></q-grid-row>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-column-list-loop',\n\ttemplateUrl: 'example-column-list-loop.component.html',\n\tstyleUrls: ['example-column-list-loop.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleColumnListLoopComponent {\n\tstatic id = 'column-list-loop';\n\n\trows: Observable<Atom[]>;\n\n\tcolumns = [\n\t\t{\n\t\t\tkey: 'number',\n\t\t\ttitle: 'Number'\n\t\t},\n\t\t{\n\t\t\tkey: 'symbol',\n\t\t\ttitle: 'Symbol'\n\t\t},\n\t\t{\n\t\t\tkey: 'name',\n\t\t\ttitle: 'Name'\n\t\t},\n\t\t{\n\t\t\tkey: 'appearance',\n\t\t\ttitle: 'Appearance'\n\t\t}\n\t];\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Column Number Basic\\\"\\r\\n        [rows]=\\\"rows\\\"\\r\\n        editMode=\\\"cell\\\">\\r\\n\\t<q-grid-columns>\\r\\n\\t\\t<q-grid-column key=\\\"number\\\"\\r\\n\\t\\t               title=\\\"Number\\\"\\r\\n\\t\\t               type=\\\"number\\\">\\r\\n\\t\\t</q-grid-column>\\r\\n\\t\\t<q-grid-column key=\\\"format3.1-5\\\"\\r\\n\\t\\t               title=\\\"Format3.1-5\\\"\\r\\n\\t\\t               format=\\\"3.1-5\\\"\\r\\n\\t\\t               type=\\\"number\\\">\\r\\n\\t\\t</q-grid-column>\\r\\n\\t\\t<q-grid-column key=\\\"max\\\"\\r\\n\\t\\t               title=\\\"Max\\\"\\r\\n\\t\\t               type=\\\"number\\\">\\r\\n\\t\\t</q-grid-column>\\r\\n\\t\\t<q-grid-column key=\\\"min\\\"\\r\\n\\t\\t               title=\\\"Min\\\"\\r\\n\\t\\t               type=\\\"number\\\">\\r\\n\\t\\t</q-grid-column>\\r\\n\\t\\t<q-grid-column key=\\\"null\\\"\\r\\n\\t\\t               title=\\\"Null\\\"\\r\\n\\t\\t               type=\\\"number\\\">\\r\\n\\t\\t</q-grid-column>\\r\\n\\t\\t<q-grid-column key=\\\"undefined\\\"\\r\\n\\t\\t               title=\\\"Undefined\\\"\\r\\n\\t\\t               type=\\\"number\\\">\\r\\n\\t\\t</q-grid-column>\\r\\n\\t\\t<q-grid-column key=\\\"empty\\\"\\r\\n\\t\\t               title=\\\"Empty\\\"\\r\\n\\t\\t               type=\\\"number\\\">\\r\\n\\t\\t</q-grid-column>\\r\\n\\t\\t<q-grid-column key=\\\"string\\\"\\r\\n\\t\\t               title=\\\"String\\\"\\r\\n\\t\\t               type=\\\"number\\\">\\r\\n\\t\\t</q-grid-column>\\r\\n\\t\\t<q-grid-column key=\\\"customTemplate\\\"\\r\\n\\t\\t               title=\\\"Custom Template\\\"\\r\\n\\t\\t               type=\\\"number\\\">\\r\\n\\t\\t\\t<ng-template for=\\\"body\\\"\\r\\n\\t\\t\\t             let-$cell>\\r\\n\\t\\t\\t\\tvalue: {{$cell.value}}\\r\\n\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t<ng-template for=\\\"edit\\\"\\r\\n\\t\\t\\t             let-$cell\\r\\n\\t\\t\\t             let-$view=\\\"$view\\\">\\r\\n\\t\\t\\t\\t<input type=\\\"number\\\"\\r\\n\\t\\t\\t\\t       style=\\\"width: 100%\\\"\\r\\n\\t\\t\\t\\t       q-grid-focus\\r\\n\\t\\t\\t\\t       [(ngModel)]=\\\"$view.edit.cell.value\\\"\\r\\n\\t\\t\\t\\t       (blur)=\\\"$view.edit.cell.exit.execute($cell)\\\" />\\r\\n\\t\\t\\t</ng-template>\\r\\n\\t\\t</q-grid-column>\\r\\n\\t</q-grid-columns>\\r\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n\tselector: 'example-column-number-basic',\n\ttemplateUrl: 'example-column-number-basic.component.html',\n\tstyleUrls: ['example-column-number-basic.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleColumnNumberBasicComponent {\n\tstatic id = 'column-number-basic';\n\n\trows = [\n\t\t{\n\t\t\t'number': 100,\n\t\t\t'format3.1-5': Math.PI,\n\t\t\t'max': Number.MAX_VALUE,\n\t\t\t'min': Number.MIN_VALUE,\n\t\t\t'null': null,\n\t\t\t'undefined': undefined,\n\t\t\t'empty': '',\n\t\t\t'string': '120',\n\t\t\t'customTemplate': 30\n\t\t}\n\t];\n}\n","module.exports = \"<q-grid caption=\\\"Column Password Basic\\\"\\r\\n        [rows]=\\\"rows\\\"\\r\\n        editMode=\\\"cell\\\">\\r\\n\\t<q-grid-columns>\\r\\n\\t\\t<q-grid-column key=\\\"number\\\"\\r\\n\\t\\t               title=\\\"Number\\\"\\r\\n\\t\\t               type=\\\"password\\\">\\r\\n\\t\\t</q-grid-column>\\r\\n\\t\\t<q-grid-column key=\\\"bool\\\"\\r\\n\\t\\t               title=\\\"Bool\\\"\\r\\n\\t\\t               type=\\\"password\\\">\\r\\n\\t\\t</q-grid-column>\\r\\n\\t\\t<q-grid-column key=\\\"date\\\"\\r\\n\\t\\t               title=\\\"Date\\\"\\r\\n\\t\\t               type=\\\"password\\\">\\r\\n\\t\\t</q-grid-column>\\r\\n\\t\\t<q-grid-column key=\\\"null\\\"\\r\\n\\t\\t               title=\\\"Null\\\"\\r\\n\\t\\t               type=\\\"password\\\">\\r\\n\\t\\t</q-grid-column>\\r\\n\\t\\t<q-grid-column key=\\\"undefined\\\"\\r\\n\\t\\t               title=\\\"Undefined\\\"\\r\\n\\t\\t               type=\\\"password\\\">\\r\\n\\t\\t</q-grid-column>\\r\\n\\t\\t<q-grid-column key=\\\"empty\\\"\\r\\n\\t\\t               title=\\\"Empty\\\"\\r\\n\\t\\t               type=\\\"password\\\">\\r\\n\\t\\t</q-grid-column>\\r\\n\\t\\t<q-grid-column key=\\\"maxLength2\\\"\\r\\n\\t\\t               title=\\\"Max Length 2\\\"\\r\\n\\t\\t               maxLength=\\\"2\\\"\\r\\n\\t\\t               type=\\\"password\\\">\\r\\n\\t\\t</q-grid-column>\\r\\n\\t\\t<q-grid-column key=\\\"customTemplate\\\"\\r\\n\\t\\t               title=\\\"Custom Template\\\"\\r\\n\\t\\t               type=\\\"password\\\">\\r\\n\\t\\t\\t<ng-template for=\\\"body\\\"\\r\\n\\t\\t\\t             let-$cell>\\r\\n\\t\\t\\t\\t<strong>PASSWORD</strong>\\r\\n\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t<ng-template for=\\\"edit\\\"\\r\\n\\t\\t\\t             let-$cell\\r\\n\\t\\t\\t             let-$view=\\\"$view\\\">\\r\\n\\t\\t\\t\\t<input style=\\\"width: 100%\\\"\\r\\n\\t\\t\\t\\t       type=\\\"password\\\"\\r\\n\\t\\t\\t\\t       q-grid-focus\\r\\n\\t\\t\\t\\t       [(ngModel)]=\\\"$view.edit.cell.value\\\"\\r\\n\\t\\t\\t\\t       (blur)=\\\"$view.edit.cell.exit.execute($cell)\\\" />\\r\\n\\t\\t\\t</ng-template>\\r\\n\\t\\t</q-grid-column>\\r\\n\\t</q-grid-columns>\\r\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n\tselector: 'example-column-password-basic',\n\ttemplateUrl: 'example-column-password-basic.component.html',\n\tstyleUrls: ['example-column-password-basic.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleColumnPasswordBasicComponent {\n\tstatic id = 'column-password-basic';\n\n\trows = [\n\t\t{\n\t\t\t'number': 100.12,\n\t\t\t'bool': true,\n\t\t\t'date': new Date(2018, 9, 12),\n\t\t\t'null': null,\n\t\t\t'undefined': undefined,\n\t\t\t'empty': '',\n\t\t\t'maxLength2': 'PI',\n\t\t\t'customTemplate': 'Hello World'\n\t\t}\n\t];\n}\n","module.exports = \"<q-grid caption=\\\"Column Reference Basic\\\"\\n        [rows]=\\\"rows\\\"\\n        editMode=\\\"cell\\\">\\n\\t<q-grid-columns>\\n\\t\\t<q-grid-column type=\\\"reference\\\"\\n\\t\\t               key=\\\"notEditable\\\"\\n\\t\\t               title=\\\"Not Editable\\\"\\n\\t\\t               [editorOptions]=\\\"notEditableOptions\\\"\\n\\t\\t               label=\\\"Click to show\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column type=\\\"reference\\\"\\n\\t\\t               key=\\\"editable\\\"\\n\\t\\t               title=\\\"Editable\\\"\\n\\t\\t               [editorOptions]=\\\"editableOptions\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column type=\\\"reference\\\"\\n\\t\\t               key=\\\"singleValue\\\"\\n\\t\\t               title=\\\"Single Value\\\"\\n\\t\\t               [editorOptions]=\\\"singleValueOptions\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column type=\\\"reference\\\"\\n\\t\\t               key=\\\"customTemplate\\\"\\n\\t\\t               title=\\\"Custom Template\\\"\\n\\t\\t               [editorOptions]=\\\"editableOptions\\\">\\n\\t\\t\\t<ng-template for=\\\"body\\\"\\n\\t\\t\\t             let-$cell\\n\\t\\t\\t             let-$view=\\\"$view\\\">\\n\\t\\t\\t\\t<button style=\\\"width: 100%;text-overflow: ellipsis;overflow: hidden;\\\"\\n\\t\\t\\t\\t        mat-button\\n\\t\\t\\t\\t        (click)=\\\"$view.edit.cell.enter.execute($cell)\\\">\\n\\t\\t\\t\\t\\t{{$cell.value.join(', ') || 'EMPTY'}}\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</ng-template>\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column type=\\\"reference\\\"\\n\\t\\t               key=\\\"complexValues\\\"\\n\\t\\t               title=\\\"Complex Values\\\"\\n\\t\\t               [label]=\\\"complexValuesLabel\\\"\\n\\t\\t               [editorOptions]=\\\"complexValuesOptions\\\">\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { Grid, EditorOptions, Command } from 'ng2-qgrid';\n\n@Component({\n\tselector: 'example-column-reference-basic',\n\ttemplateUrl: 'example-column-reference-basic.component.html',\n\tstyleUrls: ['example-column-reference-basic.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleColumnReferenceBasicComponent {\n\tstatic id = 'column-reference-basic';\n\n\trows = [\n\t\t{\n\t\t\t'notEditable': ['Lorem', 'ipsum', 'dolor', 'sit', 'amet'],\n\t\t\t'editable': ['Lorem', 'ipsum'],\n\t\t\t'customTemplate': ['Lorem', 'dolor', 'amet'],\n\t\t\t'singleValue': 'Lorem',\n\t\t\t'complexValues': [{ value: 'Lorem' }, { value: 'dolor' }, { value: 'amet' }]\n\t\t}\n\t];\n\n\tnotEditableOptions: EditorOptions = {\n\t\tmodelFactory: ({ reference }) => {\n\t\t\treference.commit = new Command({\n\t\t\t\tcanExecute: () => false\n\t\t\t});\n\n\t\t\tconst model = this.qgrid.model();\n\t\t\tmodel\n\t\t\t\t.data({\n\t\t\t\t\trows: this.convert(this.rows[0].notEditable),\n\t\t\t\t\tcolumns: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: 'value',\n\t\t\t\t\t\t\ttitle: 'Not Editable'\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t})\n\t\t\t\t.selection({\n\t\t\t\t\tkey: {\n\t\t\t\t\t\trow: x => x.value,\n\t\t\t\t\t\tcolumn: x => x.key\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.visibility({\n\t\t\t\t\ttoolbar: {\n\t\t\t\t\t\ttop: false,\n\t\t\t\t\t\tbottom: false,\n\t\t\t\t\t\tright: false,\n\t\t\t\t\t\tleft: false\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\treturn model;\n\t\t}\n\t};\n\n\teditableOptions: EditorOptions = {\n\t\tmodelFactory: ({ row, column, reference }) => {\n\t\t\t// We need to override commit because of `this.convert`,\n\t\t\t// We need to pass ['Lorem', 'ipsum'] but not [{value: 'Lorem'}, {value: 'ipsum'}]\n\t\t\treference.commit = new Command({\n\t\t\t\texecute: e => {\n\t\t\t\t\trow[column.key] = e.items;\n\t\t\t\t\t// To prevent default cell commit return false.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treference.value = this.convert(row[column.key]);\n\n\t\t\tconst model = this.qgrid.model();\n\t\t\tmodel\n\t\t\t\t.data({\n\t\t\t\t\trows: this.convert(this.rows[0].notEditable),\n\t\t\t\t\tcolumns: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: 'value',\n\t\t\t\t\t\t\ttitle: 'Editable'\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t})\n\t\t\t\t.selection({\n\t\t\t\t\tunit: 'row',\n\t\t\t\t\tmode: 'multiple',\n\t\t\t\t\tkey: {\n\t\t\t\t\t\trow: x => x.value,\n\t\t\t\t\t\tcolumn: x => x.key\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\treturn model;\n\t\t}\n\t};\n\n\tsingleValueOptions: EditorOptions = {\n\t\tmodelFactory: ({ row, column, reference }) => {\n\t\t\t// We need to override commit because of `this.convert`,\n\t\t\t// We need to pass ['Lorem', 'ipsum'] but not [{value: 'Lorem'}, {value: 'ipsum'}]\n\t\t\treference.commit = new Command({\n\t\t\t\texecute: e => {\n\t\t\t\t\trow[column.key] = e.items[0];\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treference.value = { value: row[column.key] };\n\n\t\t\tconst model = this.qgrid.model();\n\t\t\tmodel\n\t\t\t\t.data({\n\t\t\t\t\trows: this.convert(this.rows[0].notEditable),\n\t\t\t\t\tcolumns: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: 'value',\n\t\t\t\t\t\t\ttitle: 'Editable'\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t})\n\t\t\t\t.selection({\n\t\t\t\t\tunit: 'row',\n\t\t\t\t\tmode: 'single',\n\t\t\t\t\tkey: {\n\t\t\t\t\t\trow: x => x.value,\n\t\t\t\t\t\tcolumn: x => x.key\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\treturn model;\n\t\t}\n\t};\n\n\tcomplexValuesOptions: EditorOptions = {\n\t\tmodelFactory: () => {\n\t\t\tconst model = this.qgrid.model();\n\n\t\t\tmodel\n\t\t\t\t.data({\n\t\t\t\t\trows: this.convert(this.rows[0].notEditable),\n\t\t\t\t\tcolumns: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: 'value',\n\t\t\t\t\t\t\ttitle: 'Editable'\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t})\n\t\t\t\t.selection({\n\t\t\t\t\tunit: 'row',\n\t\t\t\t\tmode: 'multiple',\n\t\t\t\t\tkey: {\n\t\t\t\t\t\trow: x => x.value,\n\t\t\t\t\t\tcolumn: x => x.key\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\treturn model;\n\t\t}\n\t};\n\n\tcomplexValuesLabel = row => row.complexValues.map(x => x.value).join(', ');\n\tconvert = rows => rows.map(value => ({ value }));\n\n\tconstructor(private qgrid: Grid) { }\n}\n","module.exports = \"<q-grid caption=\\\"Column Row Indicator Basic\\\"\\n\\t\\t[rows]=\\\"rows\\\"\\n\\t\\teditMode=\\\"cell\\\">\\n\\t<q-grid-columns>\\n\\t\\t<q-grid-column key=\\\"default\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Default Template\\\"\\n\\t\\t\\t\\t\\t   [width]=\\\"150\\\"\\n\\t\\t\\t\\t\\t   type=\\\"row-indicator\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"customTemplate\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Custom Template\\\"\\n\\t\\t\\t\\t\\t   [width]=\\\"150\\\"\\n\\t\\t\\t\\t\\t   type=\\\"row-number\\\">\\n\\t\\t\\t<ng-template for=\\\"body\\\"\\n\\t\\t\\t\\t\\t\\t let-$cell>\\n\\t\\t\\t\\t<strong>&rarr;</strong>\\n\\t\\t\\t</ng-template>\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n\tselector: 'example-column-row-indicator-basic',\n\ttemplateUrl: 'example-column-row-indicator-basic.component.html',\n\tstyleUrls: ['example-column-row-indicator-basic.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleColumnRowIndicatorBasicComponent {\n\tstatic id = 'column-row-indicator-basic';\n\n\trows = [\n\t\t{},\n\t\t{},\n\t\t{},\n\t\t{}\n\t];\n}\n","module.exports = \"<q-grid caption=\\\"Column Row Number Basic\\\"\\n\\t\\t[rows]=\\\"rows\\\"\\n\\t\\teditMode=\\\"cell\\\">\\n\\t<q-grid-columns>\\n\\t\\t<q-grid-column key=\\\"number\\\"\\n\\t\\t\\t\\t\\t   type=\\\"row-number\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"customTemplate\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Custom Template\\\"\\n\\t\\t\\t\\t\\t   [width]=\\\"150\\\"\\n\\t\\t\\t\\t\\t   type=\\\"row-number\\\">\\n\\t\\t\\t<ng-template for=\\\"body\\\"\\n\\t\\t\\t\\t\\t\\t let-$cell>\\n\\t\\t\\t\\t<strong>{{$cell.rowIndex + 1}}</strong>\\n\\t\\t\\t</ng-template>\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n\tselector: 'example-column-row-number-basic',\n\ttemplateUrl: 'example-column-row-number-basic.component.html',\n\tstyleUrls: ['example-column-row-number-basic.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleColumnRowNumberBasicComponent {\n\tstatic id = 'column-row-number-basic';\n\n\trows = [\n\t\t{},\n\t\t{},\n\t\t{},\n\t\t{}\n\t];\n}\n","module.exports = \"<q-grid caption=\\\"Column Row Options Basic\\\"\\n        [rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t\\t<q-grid-column key=\\\"source\\\"\\n\\t\\t               [isVisible]=\\\"false\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"rowOptions\\\"\\n\\t\\t               type=\\\"row-options\\\"\\n\\t\\t               [editorOptions]=\\\"{actions: rowActions}\\\">\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\nimport { Action, Command } from 'ng2-qgrid';\n\n@Component({\n\tselector: 'example-column-row-options-basic',\n\ttemplateUrl: 'example-column-row-options-basic.component.html',\n\tstyleUrls: ['example-column-row-options-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleColumnRowOptionsBasicComponent {\n\tstatic id = 'column-row-options-basic';\n\n\trows: Observable<Atom[]>;\n\trowActions = [\n\t\tnew Action(\n\t\t\tnew Command<{ row: Atom }>({\n\t\t\t\texecute: cell => window.open(cell.row.source, '_blank'),\n\t\t\t\tshortcut: 'alt+g'\n\t\t\t}),\n\t\t\t'Goto Wiki',\n\t\t\t'link'\n\t\t),\n\t\tnew Action(\n\t\t\tnew Command(),\n\t\t\t'---'\n\t\t),\n\t\tnew Action(\n\t\t\tnew Command({\n\t\t\t\texecute: () => alert('hello world'),\n\t\t\t\tshortcut: 'alt+h'\n\t\t\t}),\n\t\t\t'Hello World'\n\t\t)\n\t];\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Column Text Basic\\\"\\n\\t\\t[rows]=\\\"rows\\\"\\n\\t\\teditMode=\\\"cell\\\">\\n\\t<q-grid-columns>\\n\\t\\t<q-grid-column key=\\\"textArea\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Text Area\\\"\\n\\t\\t\\t\\t\\t   editor=\\\"text-area\\\"\\n\\t\\t\\t\\t\\t   [viewWidth]=\\\"300\\\"\\n\\t\\t\\t\\t\\t   type=\\\"text\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"number\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Number\\\"\\n\\t\\t\\t\\t\\t   type=\\\"text\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"bool\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Bool\\\"\\n\\t\\t\\t\\t\\t   type=\\\"text\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"date\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Date\\\"\\n\\t\\t\\t\\t\\t   type=\\\"text\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"null\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Null\\\"\\n\\t\\t\\t\\t\\t   type=\\\"text\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"undefined\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Undefined\\\"\\n\\t\\t\\t\\t\\t   type=\\\"text\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"empty\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Empty\\\"\\n\\t\\t\\t\\t\\t   type=\\\"text\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"maxLength2\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Max Length 2\\\"\\n\\t\\t\\t\\t\\t   [maxLength]=\\\"2\\\"\\n\\t\\t\\t\\t\\t   type=\\\"text\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"customTemplate\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Custom Template\\\"\\n\\t\\t\\t\\t\\t   type=\\\"text\\\">\\n\\t\\t\\t<ng-template for=\\\"body\\\"\\n\\t\\t\\t\\t\\t\\t let-$cell>\\n\\t\\t\\t\\t<strong>{{$cell.value}}</strong>\\n\\t\\t\\t</ng-template>\\n\\t\\t\\t<ng-template for=\\\"edit\\\"\\n\\t\\t\\t\\t\\t\\t let-$cell\\n\\t\\t\\t\\t\\t\\t let-$view=\\\"$view\\\">\\n\\t\\t\\t\\t<input style=\\\"width: 100%\\\"\\n\\t\\t\\t\\t\\t   q-grid-focus\\n\\t\\t\\t\\t\\t   [(ngModel)]=\\\"$view.edit.cell.value\\\"\\n\\t\\t\\t\\t\\t   (blur)=\\\"$view.edit.cell.exit.execute($cell)\\\" />\\n\\t\\t\\t</ng-template>\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n\tselector: 'example-column-text-basic',\n\ttemplateUrl: 'example-column-text-basic.component.html',\n\tstyleUrls: ['example-column-text-basic.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleColumnTextBasicComponent {\n\tstatic id = 'column-text-basic';\n\n\trows = [\n\t\t{\n\t\t\t'number': 100.12,\n\t\t\t'bool': true,\n\t\t\t'date': new Date(2018, 9, 12),\n\t\t\t'null': null,\n\t\t\t'undefined': undefined,\n\t\t\t'empty': '',\n\t\t\t'maxLength2': 'PI',\n\t\t\t'customTemplate': 'Hello World',\n\t\t\t'textArea': `Lorem ipsum dolor sit amet,\n\t\t\tne facete legendos incorrupte duo, sea quot sapientem te,\n\t\t\tlaudem repudiandae sit ne. Ut utinam ullamcorper quo.\n\t\t\tOdio quidam adolescens vim an, et quidam dolores pro.\n\t\t\tSemper malorum volumus mei id, utamur placerat volutpat ea pri,\n\t\t\tno ludus prompta lobortis mel. Quo in duis ferri, at atqui\n\t\t\tmandamus moderatius nec, eam inermis legendos at.\n\t\t\tPro id habemus adipiscing, tibique prodesset ex mei.`\n\t\t}\n\t];\n}\n","module.exports = \"<q-grid caption=\\\"Column Time Basic\\\"\\n\\t\\t[rows]=\\\"rows\\\"\\n\\t\\teditMode=\\\"cell\\\">\\n\\t<q-grid-columns>\\n\\t\\t<q-grid-column key=\\\"number\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Number\\\"\\n\\t\\t\\t\\t\\t   type=\\\"time\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"bool\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Bool\\\"\\n\\t\\t\\t\\t\\t   type=\\\"time\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"date\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Date\\\"\\n\\t\\t\\t\\t\\t   type=\\\"time\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"null\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Null\\\"\\n\\t\\t\\t\\t\\t   type=\\\"time\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"undefined\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Undefined\\\"\\n\\t\\t\\t\\t\\t   type=\\\"time\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"empty\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Empty\\\"\\n\\t\\t\\t\\t\\t   type=\\\"time\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"format\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Format\\\"\\n\\t\\t\\t\\t\\t   format=\\\"mediumTime\\\"\\n\\t\\t\\t\\t\\t   type=\\\"time\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"text\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Text\\\"\\n\\t\\t\\t\\t\\t   type=\\\"time\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"customTemplate\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Custom Template\\\"\\n\\t\\t\\t\\t\\t   [width]=\\\"200\\\"\\n\\t\\t\\t\\t\\t   format=\\\"fullTime\\\"\\n\\t\\t\\t\\t\\t   type=\\\"time\\\">\\n\\t\\t\\t<ng-template for=\\\"body\\\"\\n\\t\\t\\t\\t\\t\\t let-$cell>\\n\\t\\t\\t\\t<em>{{$cell.value | qGridDate: $cell.column.format}}</em>\\n\\t\\t\\t</ng-template>\\n\\t\\t\\t<ng-template for=\\\"edit\\\"\\n\\t\\t\\t\\t\\t\\t let-$cell\\n\\t\\t\\t\\t\\t\\t let-$view=\\\"$view\\\">\\n\\t\\t\\t\\t<input type=\\\"time\\\"\\n\\t\\t\\t\\t\\t   style=\\\"width: 100%\\\"\\n\\t\\t\\t\\t\\t   *q-grid-time=\\\"let time='time'\\\"\\n\\t\\t\\t\\t\\t   q-grid-focus\\n\\t\\t\\t\\t\\t   #input\\n\\t\\t\\t\\t\\t   [value]=\\\"$view.edit.cell.value | qGridDate: 'hh:mm'\\\"\\n\\t\\t\\t\\t\\t   (change)=\\\"$view.edit.cell.value = time($view.edit.cell.value, input.value)\\\"\\n\\t\\t\\t\\t\\t   (blur)=\\\"$view.edit.cell.exit.execute($cell)\\\" />\\n\\t\\t\\t</ng-template>\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n\tselector: 'example-column-time-basic',\n\ttemplateUrl: 'example-column-time-basic.component.html',\n\tstyleUrls: ['example-column-time-basic.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleColumnTimeBasicComponent {\n\tstatic id = 'column-time-basic';\n\n\trows = [\n\t\t{\n\t\t\t'number': 12000000,\n\t\t\t'bool': true,\n\t\t\t'date': new Date(2018, 9, 12, 12, 12, 12, 12),\n\t\t\t'null': null,\n\t\t\t'undefined': undefined,\n\t\t\t'empty': '',\n\t\t\t'text': '12:30',\n\t\t\t'maxLength2': 'PI',\n\t\t\t'format': new Date(2018, 9, 12, 12, 12, 12, 12),\n\t\t\t'customTemplate': new Date(2018, 9, 12, 12, 12, 12, 12)\n\t\t}\n\t];\n}\n","module.exports = \"<q-grid caption=\\\"Column Tooltip Basic\\\"\\n\\t\\t[rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t\\t<q-grid-column key=\\\"name.first\\\"\\n\\t\\t\\t\\t\\t   description=\\\"First Name\\\">\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Human } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-column-tooltip-basic',\n\ttemplateUrl: 'example-column-tooltip-basic.component.html',\n\tstyleUrls: ['example-column-tooltip-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleColumnTooltipBasicComponent {\n\tstatic id = 'column-tooltip-basic';\n\n\trows: Observable<Human[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getPeople();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Column Type Safe\\\"\\n\\t\\t[rows]=\\\"rows\\\">\\n\\t<q-grid-columns>\\n\\t\\t<q-grid-column key=\\\"notNumber\\\"\\n\\t\\t\\t\\t\\t   type=\\\"number\\\"\\n\\t\\t\\t\\t\\t   title=\\\"notNumber\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"notBoolean\\\"\\n\\t\\t\\t\\t\\t   type=\\\"boolean\\\"\\n\\t\\t\\t\\t\\t   title=\\\"notBoolean\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"notImage\\\"\\n\\t\\t\\t\\t\\t   type=\\\"image\\\"\\n\\t\\t\\t\\t\\t   title=\\\"notImage\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"notArray\\\"\\n\\t\\t\\t\\t\\t   type=\\\"array\\\"\\n\\t\\t\\t\\t\\t   title=\\\"notArray\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"notEmail\\\"\\n\\t\\t\\t\\t\\t   type=\\\"email\\\"\\n\\t\\t\\t\\t\\t   title=\\\"notEmail\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"notCurrency\\\"\\n\\t\\t\\t\\t\\t   type=\\\"currency\\\"\\n\\t\\t\\t\\t\\t   title=\\\"notCurrency\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"notTime\\\"\\n\\t\\t\\t\\t\\t   type=\\\"time\\\"\\n\\t\\t\\t\\t\\t   title=\\\"notTime\\\">\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n\tselector: 'example-column-type-safe',\n\ttemplateUrl: 'example-column-type-safe.component.html',\n\tstyleUrls: ['example-column-type-safe.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleColumnTypeSafeComponent {\n\tstatic id = 'column-type-safe';\n\n\trows = [\n\t\t{\n\t\t\tnotNumber: '1',\n\t\t\tnotCurrency: '10',\n\t\t\tnotDate: '1983-09-18',\n\t\t\tnotBoolean: 'true',\n\t\t\tnotEmail: 'john@mail.com',\n\t\t\tnotTime: '12:00',\n\t\t\tnotImage: 'https://upload.wikimedia.org/wikipedia/commons/e/e4/Hydrogen_Spectra.jpg',\n\t\t\tnotArray: ['1', '2', '3']\n\t\t},\n\t\t{\n\t\t\tnotNumber: 'some text',\n\t\t\tnotCurrency: 'some text',\n\t\t\tnotDate: 'some text',\n\t\t\tnotBoolean: 'some text',\n\t\t\tnotEmail: 'some text',\n\t\t\tnotTime: 'some text',\n\t\t\tnotImage: 'some text',\n\t\t\tnotArray: 'some text'\n\t\t}\n\t];\n}\n","module.exports = \"<q-grid caption=\\\"Column Url Basic\\\"\\r\\n        [rows]=\\\"rows\\\"\\r\\n        editMode=\\\"cell\\\">\\r\\n\\t<q-grid-columns>\\r\\n\\t\\t<q-grid-column key=\\\"invalid\\\"\\r\\n\\t\\t               title=\\\"Invalid\\\"\\r\\n\\t\\t               type=\\\"url\\\">\\r\\n\\t\\t</q-grid-column>\\r\\n\\t\\t<q-grid-column key=\\\"valid\\\"\\r\\n\\t\\t               title=\\\"Valid\\\"\\r\\n\\t\\t               type=\\\"url\\\">\\r\\n\\t\\t</q-grid-column>\\r\\n\\t\\t<q-grid-column key=\\\"withLabel\\\"\\r\\n\\t\\t\\t\\t\\t   title=\\\"With Label\\\"\\r\\n\\t\\t\\t\\t\\t   [label]=\\\"myLabel\\\"\\r\\n\\t\\t               type=\\\"email\\\">\\r\\n\\t\\t</q-grid-column>\\r\\n\\t\\t<q-grid-column key=\\\"customTemplate\\\"\\r\\n\\t\\t               title=\\\"Custom Template\\\"\\r\\n\\t\\t               [editorOptions]=\\\"{trigger: 'click'}\\\"\\r\\n\\t\\t               type=\\\"url\\\">\\r\\n\\t\\t\\t<ng-template for=\\\"body\\\"\\r\\n\\t\\t\\t             let-$cell>\\r\\n\\t\\t\\t\\t<em>{{$cell.value}}</em>\\r\\n\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t<ng-template for=\\\"edit\\\"\\r\\n\\t\\t\\t             let-$cell\\r\\n\\t\\t\\t             let-$view=\\\"$view\\\">\\r\\n\\t\\t\\t\\t<input style=\\\"width: 100%\\\"\\r\\n\\t\\t\\t\\t       type=\\\"url\\\"\\r\\n\\t\\t\\t\\t       q-grid-focus\\r\\n\\t\\t\\t\\t       [(ngModel)]=\\\"$view.edit.cell.value\\\"\\r\\n\\t\\t\\t\\t       (blur)=\\\"$view.edit.cell.exit.execute($cell)\\\" />\\r\\n\\t\\t\\t</ng-template>\\r\\n\\t\\t</q-grid-column>\\r\\n\\t</q-grid-columns>\\r\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n\tselector: 'example-column-url-basic',\n\ttemplateUrl: 'example-column-url-basic.component.html',\n\tstyleUrls: ['example-column-url-basic.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleColumnUrlBasicComponent {\n\tstatic id = 'column-url-basic';\n\n\trows = [\n\t\t{\n\t\t\t'valid': 'http://github.com/qgrid/ng2',\n\t\t\t'invalid': 'Lorem ipsum dolor',\n\t\t\t'withLabel': 'http://github.com/qgrid/ng2',\n\t\t\t'null': null,\n\t\t\t'undefined': undefined,\n\t\t\t'empty': '',\n\t\t\t'customTemplate': 'http://github.com/qgrid/ng2'\n\t\t}\n\t];\n\n\tprivate label = 'QGRID';\n\n\tmyLabel: (row: any, value?: any) => string | undefined;\n\n\tconstructor() {\n\t\tconst self = this;\n\t\tthis.myLabel = (...args) => {\n\t\t\tconst [_, value] = args;\n\t\t\tif (args.length > 1) {\n\t\t\t\tself.label = value;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn self.label;\n\t\t};\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Data Add Row\\\"\\n\\t\\t[rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n\\n\\t<q-grid-actions>\\n\\t\\t<q-grid-action id=\\\"addRow\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Add Row\\\"\\n\\t\\t\\t\\t\\t   icon=\\\"add\\\"\\n\\t\\t\\t\\t\\t   [command]=\\\"addRow\\\">\\n\\t\\t</q-grid-action>\\n\\t</q-grid-actions>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy, ViewChild } from '@angular/core';\nimport { DataService, Human } from '../data.service';\nimport { Observable } from 'rxjs';\nimport { GridComponent, Command, Grid } from 'ng2-qgrid';\n\n@Component({\n\tselector: 'example-data-row-add',\n\ttemplateUrl: 'example-data-row-add.component.html',\n\tstyleUrls: ['example-data-row-add.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleDataRowAddComponent {\n\tstatic id = 'data-row-add';\n\n\t@ViewChild(GridComponent) grid: GridComponent;\n\trows: Observable<Human[]>;\n\n\taddRow = new Command({\n\t\texecute: () => {\n\t\t\tconst { model } = this.grid;\n\n\t\t\tconst atom = new Human();\n\t\t\tconst rows = Array.from(model.data().rows).concat([atom]);\n\t\t\tmodel.data({ rows });\n\n\t\t\t// focus last row, second column\n\t\t\tconst service = this.qgrid.service(model);\n\t\t\tservice.focus(rows.length - 1);\n\t\t}\n\t});\n\n\n\tconstructor(dataService: DataService, private qgrid: Grid) {\n\t\tthis.rows = dataService.getPeople();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Data Delete Row\\\"\\n\\t\\t[rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t\\t<q-grid-column type=\\\"row-options\\\"\\n\\t\\t\\t\\t\\t   key=\\\"rowOptions\\\"\\n\\t\\t\\t\\t\\t   pin=\\\"left\\\"\\n\\t\\t\\t\\t\\t   width=\\\"150\\\"\\n\\t\\t\\t\\t\\t   [canEdit]=\\\"false\\\">\\n\\t\\t\\t<ng-template for=\\\"body\\\"\\n\\t\\t\\t\\t\\t\\t let-$cell>\\n\\t\\t\\t\\t<button mat-button\\n\\t\\t\\t\\t\\t\\t(click)=\\\"deleteRow.execute($cell.row)\\\">\\n\\t\\t\\t\\t\\tDELETE ROW\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</ng-template>\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy, ViewChild } from '@angular/core';\nimport { DataService, Human } from '../data.service';\nimport { Observable } from 'rxjs';\nimport { GridComponent, Command, Grid } from 'ng2-qgrid';\n\n@Component({\n\tselector: 'example-data-row-delete',\n\ttemplateUrl: 'example-data-row-delete.component.html',\n\tstyleUrls: ['example-data-row-delete.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleDataRowDeleteComponent {\n\tstatic id = 'data-row-delete';\n\n\t@ViewChild(GridComponent) grid: GridComponent;\n\trows: Observable<Human[]>;\n\n\tdeleteRow = new Command({\n\t\texecute: (row: Human) => {\n\t\t\tconst { model } = this.grid;\n\n\t\t\tconst rows = model.data().rows.filter(x => x !== row);\n\t\t\tmodel.data({ rows });\n\t\t}\n\t});\n\n\tconstructor(dataService: DataService, private qgrid: Grid) {\n\t\tthis.rows = dataService.getPeople();\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport class Human {\n\tid: number;\n\tcontact: { email: string[] };\n\tpassword: string;\n\tcomment: string;\n\tlikes: string[];\n\tgender: 'male' | 'female';\n}\n\nexport class Atom {\n\tname: string;\n\tappearance: string;\n\tmass: number;\n\tboil: number;\n\tcolor: string;\n\tdensity: number;\n\tdiscoveredBy: string;\n\tmelt: number;\n\tnamedBy: string;\n\tnumber: number;\n\tperiod: number;\n\tphase: string;\n\tsource: string;\n\tspectralImg: string;\n\tsummary: string;\n\tsymbol: string;\n\tshells: Array<number>;\n\tradius: number;\n\tdiscoveredIn: number;\n\tgroupBlock: string;\n\tbondingType: string;\n}\n\nexport class Quote {\n\tmetal: string;\n\tldn1: string;\n\tbid: number;\n\task: number;\n\tldn2: string;\n\tprevious: number;\n\tlast: number;\n\tldn3: string;\n\thigh: number;\n\tlow: number;\n\tvolume: number;\n\tsettle: number;\n\tldn4: string;\n}\n\n@Injectable()\nexport class DataService {\n\tconstructor(private http: HttpClient) { }\n\n\tgetPeople(count: string | number = 100): Observable<Human[]> {\n\t\treturn this.http.get<Human[]>(`assets/people/${count}.json`);\n\t}\n\n\tgetPresets(): Observable<any> {\n\t\treturn this.http.get('assets/presets/1.json');\n\t}\n\n\tgetAtoms(): Observable<Atom[]> {\n\t\treturn this.http.get<Atom[]>(`assets/atoms/118.json`);\n\t}\n\n\tgetQuotes(): Observable<Quote[]> {\n\t\treturn this.http.get<Quote[]>(`assets/quotes/9.json`);\n\t}\n\n\tgetAtomPresets(id, user): Observable<any> {\n\t\tconst commonPresets = this.http.get<any[]>('assets/presets/atoms.json');\n\t\tconst items = JSON.parse(localStorage.getItem(id));\n\t\tif (items && items.hasOwnProperty(user)) {\n\t\t\treturn combineLatest(\n\t\t\t\tcommonPresets,\n\t\t\t\tof(items[user] as any[])\n\t\t\t).pipe(\n\t\t\t\tmap((...lists) => lists.reduce((memo, list) => memo.concat(list), []))\n\t\t\t);\n\t\t}\n\t\treturn commonPresets;\n\t}\n\n\tsetAtomPresets(id, user, items): Observable<any> {\n\t\tconst oldItems = JSON.parse(localStorage.getItem(id));\n\t\tconst newItems = {\n\t\t\t...oldItems,\n\t\t\t...{ [user]: items }\n\t\t};\n\t\tlocalStorage.setItem(id, JSON.stringify(newItems));\n\t\treturn of(newItems[user]);\n\t}\n\n\tgetUsers(): Observable<string[]> {\n\t\treturn of(['user1', 'user2']);\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Define Column Async\\\"\\n        [model]=\\\"gridModel\\\">\\n\\t<q-grid-columns>\\n\\t\\t<q-grid-column key=\\\"number\\\"\\n\\t\\t               title=\\\"#\\\"\\n\\t\\t               [width]=\\\"60\\\"\\n\\t\\t               type=\\\"id\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"symbol+name\\\"\\n\\t\\t               title=\\\"Symbol+Name\\\"\\n\\t\\t               type=\\\"text\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"source\\\"\\n\\t\\t               title=\\\"Wiki\\\"\\n\\t\\t               type=\\\"url\\\">\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { GridModel, Grid } from 'ng2-qgrid';\n\n@Component({\n\tselector: 'example-define-column-async',\n\ttemplateUrl: 'example-define-column-async.component.html',\n\tstyleUrls: ['example-define-column-async.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleDefineColumnAsyncComponent implements OnInit {\n\tstatic id = 'define-column-async';\n\n\tgridModel: GridModel;\n\n\tconstructor(private dataService: DataService, qgrid: Grid) {\n\t\tthis.gridModel = qgrid.model();\n\t}\n\n\tngOnInit() {\n\t\tthis.dataService\n\t\t\t.getAtoms()\n\t\t\t.subscribe(rows => {\n\t\t\t\tthis.gridModel.data({ rows });\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.gridModel.data({\n\t\t\t\t\t\tcolumns: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: 'source',\n\t\t\t\t\t\t\t\twidth: 300\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: 'symbol+name',\n\t\t\t\t\t\t\t\tlabel: row => `[${row.symbol}]${row.name}`,\n\t\t\t\t\t\t\t\tvalue: row => row.symbol,\n\t\t\t\t\t\t\t\twidth: 150\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t});\n\t\t\t\t}, 1000);\n\t\t\t});\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Define Column Basic\\\"\\n        [rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns>\\n\\t\\t<q-grid-column key=\\\"number\\\"\\n\\t\\t               title=\\\"#\\\"\\n\\t\\t               [width]=\\\"60\\\"\\n\\t\\t               type=\\\"id\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"symbol\\\"\\n\\t\\t               title=\\\"Symbol\\\"\\n\\t\\t               [width]=\\\"80\\\"\\n\\t\\t               type=\\\"text\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"name\\\"\\n\\t\\t               title=\\\"Name\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"source\\\"\\n\\t\\t               title=\\\"Wiki\\\"\\n\\t\\t               [width]=\\\"300\\\"\\n\\t\\t               type=\\\"url\\\">\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-define-column-basic',\n\ttemplateUrl: 'example-define-column-basic.component.html',\n\tstyleUrls: ['example-define-column-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleDefineColumnBasicComponent {\n\tstatic id = 'define-column-basic';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Define Column Hybrid\\\"\\n\\t\\t[rows]=\\\"rows | async\\\"\\n\\t\\t[columns]=\\\"columns\\\">\\n\\t<q-grid-columns>\\n\\t\\t<q-grid-column key=\\\"number\\\"\\n\\t\\t               title=\\\"should be html №\\\"\\n\\t\\t               [width]=\\\"90\\\"\\n\\t\\t               type=\\\"id\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"symbol\\\"\\n\\t\\t               title=\\\"shouldn't be html Symbol\\\"\\n\\t\\t               type=\\\"text\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"name\\\"\\n\\t\\t               title=\\\"should be html Name\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"source\\\"\\n\\t\\t               title=\\\"should be html Wiki\\\"\\n\\t\\t               [width]=\\\"300\\\"\\n\\t\\t               type=\\\"url\\\">\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\nimport { Column } from 'ng2-qgrid';\n\n@Component({\n\tselector: 'example-define-column-hybrid',\n\ttemplateUrl: 'example-define-column-hybrid.component.html',\n\tstyleUrls: ['example-define-column-hybrid.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleDefineColumnHybridComponent {\n\tstatic id = 'define-column-hybrid';\n\n\trows: Observable<Atom[]>;\n\tcolumns: Column[] = [{\n\t\tkey: 'mass',\n\t\ttitle: 'should be js Mass'\n\t}, {\n\t\tkey: 'symbol',\n\t\ttitle: 'shouldnt be js Symbol',\n\t\twidth: 200\n\t}];\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<button mat-button\\n        (click)=\\\"isVisible = !isVisible\\\">\\n\\t{{ isVisible? 'Hide' : 'Show' }}\\n</button>\\n<ng-container *ngIf=\\\"isVisible\\\">\\n\\t<q-grid caption=\\\"Destroy Grid Basic\\\"\\n\\t        [rows]=\\\"rows | async\\\">\\n\\t\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t\\t</q-grid-columns>\\n\\t</q-grid>\\n</ng-container>\\n\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Human } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-destroy-grid-basic',\n\ttemplateUrl: 'example-destroy-grid-basic.component.html',\n\tstyleUrls: ['example-destroy-grid-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleDestroyGridBasicComponent {\n\tstatic id = 'destroy-grid-basic';\n\n\trows: Observable<Human[]>;\n\tisVisible = true;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getPeople();\n\t}\n}\n","module.exports = \"<button mat-button\\n        (click)=\\\"isVisible = !isVisible\\\">\\n\\t{{ isVisible? 'Hide' : 'Show' }} [handler counter: {{handlerCount}}]\\n</button>\\n<ng-container *ngIf=\\\"isVisible\\\">\\n\\t<q-grid caption=\\\"Destroy Grid Model\\\"\\n\\t        [model]=\\\"gridModel\\\"\\n\\t        id=\\\"example-destroy-grid-model\\\"\\n\\t        editMode=\\\"cell\\\"\\n\\t        selectionUnit=\\\"row\\\"\\n\\t        selectionMode=\\\"multiple\\\">\\n\\t\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t\\t\\t<q-grid-column type=\\\"row-indicator\\\"\\n\\t\\t\\t               key=\\\"rowIndicator\\\">\\n\\t\\t\\t</q-grid-column>\\n\\t\\t\\t<q-grid-column type=\\\"row-options\\\"\\n\\t\\t\\t               key=\\\"rowOptions\\\">\\n\\t\\t\\t</q-grid-column>\\n\\t\\t</q-grid-columns>\\n\\n\\t\\t<q-grid-data-manipulation>\\n\\t\\t</q-grid-data-manipulation>\\n\\n\\t\\t<q-grid-persistence>\\n\\t\\t</q-grid-persistence>\\n\\n\\t\\t<q-grid-query-builder>\\n\\t\\t</q-grid-query-builder>\\n\\n\\t\\t<q-grid-row [canResize]=\\\"true\\\"\\n\\t\\t            [canMove]=\\\"true\\\">\\n\\t\\t</q-grid-row>\\n\\t</q-grid>\\n</ng-container>\\n\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { GridModel, Grid } from 'ng2-qgrid';\n\n@Component({\n\tselector: 'example-destroy-grid-model',\n\ttemplateUrl: 'example-destroy-grid-model.component.html',\n\tstyleUrls: ['example-destroy-grid-model.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleDestroyGridModelComponent {\n\tstatic id = 'destroy-grid-model';\n\n\tgridModel: GridModel;\n\tisVisible = true;\n\n\tconstructor(dataService: DataService, qgrid: Grid) {\n\t\tthis.gridModel = qgrid.model();\n\n\t\tdataService\n\t\t\t.getPeople()\n\t\t\t.subscribe(rows => this.gridModel.data({ rows }));\n\t}\n\n\tget handlerCount(): number {\n\t\tconst model = this.gridModel as { [key: string]: any };\n\t\tlet count = 0;\n\t\tfor (const key in model) {\n\t\t\tif (model.hasOwnProperty(key) && key.endsWith('Changed')) {\n\t\t\t\tconst event = model[key];\n\n\t\t\t\t// `handlers` is private really\n\t\t\t\tconst { length } = event.handlers;\n\t\t\t\tif (length) {\n\t\t\t\t\tcount += length;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Details Row All\\\"\\n\\t\\t[rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t\\t<q-grid-column key=\\\"number\\\"\\n\\t\\t\\t\\t\\t   type=\\\"id\\\"\\n\\t\\t\\t\\t\\t   title=\\\"#\\\"\\n\\t\\t\\t\\t\\t   [width]=\\\"70\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"symbol\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Symbol\\\"\\n\\t\\t\\t\\t\\t   [width]=\\\"90\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"name\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Name\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"source\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Source\\\"\\n\\t\\t\\t\\t\\t   type=\\\"url\\\"\\n\\t\\t\\t\\t\\t   [width]=\\\"300\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column *ngFor=\\\"let key of ['color', 'appearance', 'groupBlock', 'bondingType', 'period', 'radius', 'boil', 'shells', 'melt']\\\"\\n\\t\\t\\t\\t\\t   [key]=key\\n\\t\\t\\t\\t\\t   [isVisible]=\\\"false\\\">\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n\\n\\t<q-grid-row unit=\\\"details\\\"\\n\\t\\t\\t\\tmode=\\\"all\\\">\\n\\t\\t<ng-template for=\\\"details\\\"\\n\\t\\t\\t\\t\\t let-$cell>\\n\\t\\t\\t<div class=\\\"atom-details\\\">\\n\\t\\t\\t\\t<div class=\\\"atom-box\\\"\\n\\t\\t\\t\\t\\t [style.background-color]=\\\"'#' + $cell.row.item.color\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"atom-number\\\">\\n\\t\\t\\t\\t\\t\\t{{$cell.row.item.number}}\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"atom-symbol\\\">\\n\\t\\t\\t\\t\\t\\t{{$cell.row.item.symbol}}\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"atom-name\\\">\\n\\t\\t\\t\\t\\t\\t{{$cell.row.item.name}}\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"atom-mass\\\">\\n\\t\\t\\t\\t\\t\\t{{$cell.row.item.mass}}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"atom-info\\\">\\n\\t\\t\\t\\t\\t<p class=\\\"atom-description\\\">\\n\\t\\t\\t\\t\\t\\t<a href={{$cell.row.item.source}}\\n\\t\\t\\t\\t\\t\\t   target=\\\"_blank\\\">{{$cell.row.item.name}}</a>\\n\\t\\t\\t\\t\\t\\twas discovered by\\n\\t\\t\\t\\t\\t\\t<a href=\\\"http://www.google.com/search?q={{$cell.row.item.discoveredBy}}\\\"\\n\\t\\t\\t\\t\\t\\t   target=\\\"_blank\\\">{{$cell.row.item.discoveredBy}}</a>\\n\\t\\t\\t\\t\\t\\tin\\n\\t\\t\\t\\t\\t\\t<em>{{$cell.row.item.discoveredIn}}</em>. {{$cell.row.item.summary}}\\n\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</ng-template>\\n\\n\\t</q-grid-row>\\n</q-grid>\"","module.exports = \"a {\\n  text-decoration: none;\\n  font-weight: bold; }\\n\\n.atom-details {\\n  display: flex;\\n  margin: 7px 0 7px -1px; }\\n\\n.atom-details .atom-box {\\n  width: 100px;\\n  height: 100px;\\n  border: 2px solid #C8C8C8;\\n  border-radius: 3px; }\\n\\n.atom-details .atom-info {\\n  display: flex;\\n  font-size: 15px;\\n  word-wrap: break-word;\\n  width: 40%;\\n  white-space: normal; }\\n\\n.atom-number {\\n  text-align: right;\\n  font-size: 15px;\\n  margin-top: 7px;\\n  margin-right: 7px; }\\n\\n.atom-symbol {\\n  top: 28px;\\n  font-size: 36px;\\n  text-align: center;\\n  margin-top: -4px; }\\n\\n.atom-name {\\n  text-align: center;\\n  margin-top: -6px; }\\n\\n.atom-mass {\\n  font-size: 10px;\\n  text-align: center;\\n  margin-top: 7px; }\\n\\n.atom-description {\\n  margin: auto;\\n  padding-left: 21px; }\\n\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-details-row-all',\n\ttemplateUrl: 'example-details-row-all.component.html',\n\tstyleUrls: ['example-details-row-all.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleDetailsRowAllComponent {\n\tstatic id = 'details-row-all';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Details Row API\\\"\\n\\t\\t[rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t\\t<q-grid-column key=\\\"number\\\"\\n\\t\\t\\t\\t\\t   type=\\\"id\\\"\\n\\t\\t\\t\\t\\t   title=\\\"#\\\"\\n\\t\\t\\t\\t\\t   [width]=\\\"70\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"symbol\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Symbol\\\"\\n\\t\\t\\t\\t\\t   [width]=\\\"90\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"name\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Name\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"source\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Source\\\"\\n\\t\\t\\t\\t\\t   type=\\\"url\\\"\\n\\t\\t\\t\\t\\t   [width]=\\\"300\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column *ngFor=\\\"let key of ['color', 'appearance', 'groupBlock', 'bondingType', 'period', 'radius', 'boil', 'shells', 'melt']\\\"\\n\\t\\t\\t\\t\\t   [key]=key\\n\\t\\t\\t\\t\\t   [isVisible]=\\\"false\\\">\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n\\n\\t<q-grid-row unit=\\\"details\\\"\\n\\t\\t\\t\\tmode=\\\"single\\\">\\n\\t\\t<ng-template for=\\\"details\\\"\\n\\t\\t\\t\\t\\t let-$cell>\\n\\t\\t\\t<div class=\\\"atom-details\\\">\\n\\t\\t\\t\\t<div class=\\\"atom-box\\\"\\n\\t\\t\\t\\t\\t [style.background-color]=\\\"'#' + $cell.row.item.color\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"atom-number\\\">\\n\\t\\t\\t\\t\\t\\t{{$cell.row.item.number}}\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"atom-symbol\\\">\\n\\t\\t\\t\\t\\t\\t{{$cell.row.item.symbol}}\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"atom-name\\\">\\n\\t\\t\\t\\t\\t\\t{{$cell.row.item.name}}\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"atom-mass\\\">\\n\\t\\t\\t\\t\\t\\t{{$cell.row.item.mass}}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"atom-info\\\">\\n\\t\\t\\t\\t\\t<p class=\\\"atom-description\\\">\\n\\t\\t\\t\\t\\t\\t<a href={{$cell.row.item.source}}\\n\\t\\t\\t\\t\\t\\t   target=\\\"_blank\\\">{{$cell.row.item.name}}</a>\\n\\t\\t\\t\\t\\t\\twas discovered by\\n\\t\\t\\t\\t\\t\\t<a href=\\\"http://www.google.com/search?q={{$cell.row.item.discoveredBy}}\\\"\\n\\t\\t\\t\\t\\t\\t   target=\\\"_blank\\\">{{$cell.row.item.discoveredBy}}</a>\\n\\t\\t\\t\\t\\t\\tin\\n\\t\\t\\t\\t\\t\\t<em>{{$cell.row.item.discoveredIn}}</em>. {{$cell.row.item.summary}}\\n\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</ng-template>\\n\\t</q-grid-row>\\n\\n\\t<q-grid-actions>\\n\\t\\t<q-grid-action id=\\\"expand-all\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Expand All\\\"\\n\\t\\t\\t\\t\\t   [command]=\\\"expandAllCommand\\\">\\n\\t\\t</q-grid-action>\\n\\t\\t<q-grid-action id=\\\"collapse-all\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Collapse All\\\"\\n\\t\\t\\t\\t\\t   [command]=\\\"collapseAllCommand\\\">\\n\\t\\t</q-grid-action>\\n\\t\\t<q-grid-action id=\\\"expand-second\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Expand Second\\\"\\n\\t\\t\\t\\t\\t   [command]=\\\"expandSecondCommand\\\">\\n\\t\\t</q-grid-action>\\n\\t\\t<q-grid-action id=\\\"disable-expand-all\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Disable Expand\\\"\\n\\t\\t\\t\\t\\t   [command]=\\\"disableExpandAllCommand\\\">\\n\\t\\t</q-grid-action>\\n\\t\\t<q-grid-action id=\\\"allow-expand-all\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Allow Expand\\\"\\n\\t\\t\\t\\t\\t   [command]=\\\"allowExpandAllCommand\\\">\\n\\t\\t</q-grid-action>\\n\\t</q-grid-actions>\\n\\n</q-grid>\"","module.exports = \"a {\\n  text-decoration: none;\\n  font-weight: bold; }\\n\\n.atom-details {\\n  display: flex;\\n  margin: 7px 0 7px -1px; }\\n\\n.atom-details .atom-box {\\n  width: 100px;\\n  height: 100px;\\n  border: 2px solid #C8C8C8;\\n  border-radius: 3px; }\\n\\n.atom-details .atom-info {\\n  display: flex;\\n  font-size: 15px;\\n  word-wrap: break-word;\\n  width: 40%;\\n  white-space: normal; }\\n\\n.atom-number {\\n  text-align: right;\\n  font-size: 15px;\\n  margin-top: 7px;\\n  margin-right: 7px; }\\n\\n.atom-symbol {\\n  top: 28px;\\n  font-size: 36px;\\n  text-align: center;\\n  margin-top: -4px; }\\n\\n.atom-name {\\n  text-align: center;\\n  margin-top: -6px; }\\n\\n.atom-mass {\\n  font-size: 10px;\\n  text-align: center;\\n  margin-top: 7px; }\\n\\n.atom-description {\\n  margin: auto;\\n  padding-left: 21px; }\\n\"","import { Component, ChangeDetectionStrategy, AfterViewInit, ViewChild } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\nimport { Command, GridComponent, RowDetailsStatus } from 'ng2-qgrid';\n\n@Component({\n\tselector: 'example-details-row-api',\n\ttemplateUrl: 'example-details-row-api.component.html',\n\tstyleUrls: ['example-details-row-api.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleDetailsRowApiComponent implements AfterViewInit {\n\tstatic id = 'details-row-api';\n\n\t@ViewChild(GridComponent) grid: GridComponent;\n\trows: Observable<Atom[]>;\n\tenableExpand = true;\n\n\texpandAllCommand = new Command({\n\t\texecute: () => {\n\t\t\tconst { model } = this.grid;\n\t\t\tmodel.row({\n\t\t\t\tstatus: new Map(model.data().rows.map<[Atom, RowDetailsStatus]>(x => [x, new RowDetailsStatus(true)]))\n\t\t\t});\n\t\t}\n\t});\n\n\tcollapseAllCommand = new Command({\n\t\texecute: () => {\n\t\t\tconst { model } = this.grid;\n\t\t\tmodel.row({\n\t\t\t\tstatus: new Map(model.data().rows.map<[Atom, RowDetailsStatus]>(x => [x, new RowDetailsStatus(false)]))\n\t\t\t});\n\t\t}\n\t});\n\n\texpandSecondCommand = new Command({\n\t\texecute: () => {\n\t\t\tthis.collapseAllCommand.execute();\n\t\t\tconst { model } = this.grid;\n\t\t\tmodel.row({\n\t\t\t\tstatus: new Map([[model.data().rows[1], new RowDetailsStatus(true)]])\n\t\t\t});\n\t\t}\n\t});\n\n\tdisableExpandAllCommand = new Command({ execute: () => this.enableExpand = false });\n\tallowExpandAllCommand = new Command({ execute: () => this.enableExpand = true });\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst { model } = this.grid;\n\n\t\tmodel.row({\n\t\t\ttoggle: new Command({\n\t\t\t\tcanExecute: ({ row }) => this.enableExpand\n\t\t\t})\n\t\t});\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Details Row Basic\\\"\\n\\t\\t[rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t\\t<q-grid-column key=\\\"number\\\"\\n\\t\\t\\t\\t\\t   type=\\\"id\\\"\\n\\t\\t\\t\\t\\t   title=\\\"#\\\"\\n\\t\\t\\t\\t\\t   [width]=\\\"70\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"symbol\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Symbol\\\"\\n\\t\\t\\t\\t\\t   [width]=\\\"90\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"name\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Name\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"source\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Source\\\"\\n\\t\\t\\t\\t\\t   type=\\\"url\\\"\\n\\t\\t\\t\\t\\t   [width]=\\\"300\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column *ngFor=\\\"let key of ['color', 'appearance', 'groupBlock', 'bondingType', 'period', 'radius', 'boil', 'shells', 'melt']\\\"\\n\\t\\t\\t\\t\\t   [key]=\\\"key\\\"\\n\\t\\t\\t\\t\\t   [isVisible]=\\\"false\\\">\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n\\n\\t<q-grid-row unit=\\\"details\\\"\\n\\t\\t\\t\\tmode=\\\"single\\\">\\n\\t\\t<ng-template for=\\\"details\\\"\\n\\t\\t\\t\\t\\t let-$cell>\\n\\t\\t\\t<div class=\\\"atom-details\\\">\\n\\t\\t\\t\\t<div class=\\\"atom-box\\\"\\n\\t\\t\\t\\t\\t [style.background-color]=\\\"'#' + $cell.row.item.color\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"atom-number\\\">\\n\\t\\t\\t\\t\\t\\t{{$cell.row.item.number}}\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"atom-symbol\\\">\\n\\t\\t\\t\\t\\t\\t{{$cell.row.item.symbol}}\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"atom-name\\\">\\n\\t\\t\\t\\t\\t\\t{{$cell.row.item.name}}\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"atom-mass\\\">\\n\\t\\t\\t\\t\\t\\t{{$cell.row.item.mass}}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"atom-info\\\">\\n\\t\\t\\t\\t\\t<p class=\\\"atom-description\\\">\\n\\t\\t\\t\\t\\t\\t<a href={{$cell.row.item.source}}\\n\\t\\t\\t\\t\\t\\t   target=\\\"_blank\\\">{{$cell.row.item.name}}</a>\\n\\t\\t\\t\\t\\t\\twas discovered by\\n\\t\\t\\t\\t\\t\\t<a href=\\\"http://www.google.com/search?q={{$cell.row.item.discoveredBy}}\\\"\\n\\t\\t\\t\\t\\t\\t   target=\\\"_blank\\\">{{$cell.row.item.discoveredBy}}</a>\\n\\t\\t\\t\\t\\t\\tin\\n\\t\\t\\t\\t\\t\\t<em>{{$cell.row.item.discoveredIn}}</em>. {{$cell.row.item.summary}}\\n\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</ng-template>\\n\\n\\t</q-grid-row>\\n</q-grid>\"","module.exports = \"a {\\n  text-decoration: none;\\n  font-weight: bold; }\\n\\n.atom-details {\\n  display: flex;\\n  margin: 7px 0 7px -1px; }\\n\\n.atom-details .atom-box {\\n  width: 100px;\\n  height: 100px;\\n  border: 2px solid #C8C8C8;\\n  border-radius: 3px; }\\n\\n.atom-details .atom-info {\\n  display: flex;\\n  font-size: 15px;\\n  word-wrap: break-word;\\n  width: 40%;\\n  white-space: normal; }\\n\\n.atom-number {\\n  text-align: right;\\n  font-size: 15px;\\n  margin-top: 7px;\\n  margin-right: 7px; }\\n\\n.atom-symbol {\\n  top: 28px;\\n  font-size: 36px;\\n  text-align: center;\\n  margin-top: -4px; }\\n\\n.atom-name {\\n  text-align: center;\\n  margin-top: -6px; }\\n\\n.atom-mass {\\n  font-size: 10px;\\n  text-align: center;\\n  margin-top: 7px; }\\n\\n.atom-description {\\n  margin: auto;\\n  padding-left: 21px; }\\n\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-details-row-basic',\n\ttemplateUrl: 'example-details-row-basic.component.html',\n\tstyleUrls: ['example-details-row-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleDetailsRowBasicComponent {\n\tstatic id = 'details-row-basic';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Details Row Grid\\\"\\n        [rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n\\n\\t<q-grid-row unit=\\\"details\\\"\\n\\t            mode=\\\"multiple\\\">\\n\\t\\t<ng-template for=\\\"details\\\"\\n\\t\\t             let-$cell>\\n\\t\\t\\t<q-grid caption=\\\"First 3 `{{$cell.row.item.phase}}` atoms\\\"\\n\\t\\t\\t        [rows]=\\\"getSamePhaseRows($cell.row.item) | async\\\"\\n\\t\\t\\t        class=\\\"q-grid-embed\\\"\\n\\t\\t\\t        style=\\\"padding: 20px\\\">\\n\\t\\t\\t\\t<q-grid-columns>\\n\\t\\t\\t\\t\\t<q-grid-column [canSort]=\\\"false\\\"\\n\\t\\t\\t\\t\\t               [canFilter]=\\\"false\\\">\\n\\t\\t\\t\\t\\t</q-grid-column>\\n\\t\\t\\t\\t\\t<q-grid-column key=\\\"number\\\"\\n\\t\\t\\t\\t\\t               title=\\\"Number\\\">\\n\\t\\t\\t\\t\\t</q-grid-column>\\n\\t\\t\\t\\t\\t<q-grid-column key=\\\"symbol\\\"\\n\\t\\t\\t\\t\\t               title=\\\"Symbol\\\">\\n\\t\\t\\t\\t\\t</q-grid-column>\\n\\t\\t\\t\\t\\t<q-grid-column key=\\\"name\\\"\\n\\t\\t\\t\\t\\t               title=\\\"Name\\\">\\n\\t\\t\\t\\t\\t</q-grid-column>\\n\\t\\t\\t\\t</q-grid-columns>\\n\\n\\t\\t\\t\\t<q-grid-toolbar>\\n\\t\\t\\t\\t\\t<ng-template for=\\\"top\\\">\\n\\t\\t\\t\\t\\t\\t<q-grid-caption></q-grid-caption>\\n\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t<ng-template for=\\\"bottom\\\">\\n\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t</q-grid-toolbar>\\n\\t\\t\\t</q-grid>\\n\\t\\t</ng-template>\\n\\t</q-grid-row>\\n</q-grid>\"","module.exports = \"a {\\n  text-decoration: none;\\n  font-weight: bold; }\\n\\n.atom-details {\\n  display: flex;\\n  margin: 7px 0 7px -1px; }\\n\\n.atom-details .atom-box {\\n  width: 100px;\\n  height: 100px;\\n  border: 2px solid #C8C8C8;\\n  border-radius: 3px; }\\n\\n.atom-details .atom-info {\\n  display: flex;\\n  font-size: 15px;\\n  word-wrap: break-word;\\n  width: 40%;\\n  white-space: normal; }\\n\\n.atom-number {\\n  text-align: right;\\n  font-size: 15px;\\n  margin-top: 7px;\\n  margin-right: 7px; }\\n\\n.atom-symbol {\\n  top: 28px;\\n  font-size: 36px;\\n  text-align: center;\\n  margin-top: -4px; }\\n\\n.atom-name {\\n  text-align: center;\\n  margin-top: -6px; }\\n\\n.atom-mass {\\n  font-size: 10px;\\n  text-align: center;\\n  margin-top: 7px; }\\n\\n.atom-description {\\n  margin: auto;\\n  padding-left: 21px; }\\n\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n\tselector: 'example-details-row-grid',\n\ttemplateUrl: 'example-details-row-grid.component.html',\n\tstyleUrls: ['example-details-row-grid.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleDetailsRowGridComponent {\n\tstatic id = 'details-row-grid';\n\n\trows: Observable<Atom[]>;\n\tmap = new Map<string, Observable<Atom[]>>();\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n\n\tgetSamePhaseRows(atom: Atom) {\n\t\tlet subject = this.map.get(atom.phase);\n\t\tif (!subject) {\n\t\t\tsubject = this.rows.pipe(map(rows => rows.filter(row => row.phase === atom.phase).slice(0, 3)));\n\t\t\tthis.map.set(atom.phase, subject);\n\t\t}\n\n\t\treturn subject;\n\t}\n}\n","module.exports = \"<q-grid id=\\\"details-row-pin\\\"\\n\\t\\tcaption=\\\"Details Row Pin\\\"\\n\\t\\t[rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns>\\n\\t\\t<q-grid-column key=\\\"name\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Name\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"groupBlock\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Group\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"phase\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Phase\\\"\\n\\t\\t\\t\\t\\t   [width]=\\\"80\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"appearance\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Appearance\\\"\\n\\t\\t\\t\\t\\t   [viewWidth]=\\\"300\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"melt\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Melt(℃)\\\"\\n\\t\\t\\t\\t\\t   type=\\\"number\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"boil\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Boil(℃)\\\"\\n\\t\\t\\t\\t\\t   type=\\\"number\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"shells\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Shells\\\"\\n\\t\\t\\t\\t\\t   type=\\\"array\\\"\\n\\t\\t\\t\\t\\t   pin=\\\"right\\\">\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n\\n\\t<q-grid-row unit=\\\"details\\\"\\n\\t\\t\\t\\tmode=\\\"single\\\">\\n\\t\\t<ng-template for=\\\"details\\\"\\n\\t\\t\\t\\t\\t let-$cell>\\n\\t\\t\\t<div class=\\\"atom-details\\\">\\n\\t\\t\\t\\t<div class=\\\"atom-box\\\"\\n\\t\\t\\t\\t\\t [style.background-color]=\\\"'#' + $cell.row.item.color\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"atom-number\\\">\\n\\t\\t\\t\\t\\t\\t{{$cell.row.item.number}}\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"atom-symbol\\\">\\n\\t\\t\\t\\t\\t\\t{{$cell.row.item.symbol}}\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"atom-name\\\">\\n\\t\\t\\t\\t\\t\\t{{$cell.row.item.name}}\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"atom-mass\\\">\\n\\t\\t\\t\\t\\t\\t{{$cell.row.item.mass}}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"atom-info\\\">\\n\\t\\t\\t\\t\\t<p class=\\\"atom-description\\\">\\n\\t\\t\\t\\t\\t\\t<a href={{$cell.row.item.source}}\\n\\t\\t\\t\\t\\t\\t   target=\\\"_blank\\\">{{$cell.row.item.name}}\\n\\t\\t\\t\\t\\t\\t</a> was discovered by\\n\\t\\t\\t\\t\\t\\t<a href=\\\"http://www.google.com/search?q={{$cell.row.item.discoveredBy}}\\\"\\n\\t\\t\\t\\t\\t\\t   target=\\\"_blank\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{$cell.row.item.discoveredBy}}\\n\\t\\t\\t\\t\\t\\t</a> in\\n\\t\\t\\t\\t\\t\\t<em>{{$cell.row.item.discoveredIn}}</em>. {{$cell.row.item.summary}}\\n\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</ng-template>\\n\\t</q-grid-row>\\n</q-grid>\"","module.exports = \"#details-row-pin td.q-grid-row-details, #details-row-pin td.q-grid-row-details-pad {\\n  height: 200px; }\\n\\n#details-row-pin a {\\n  text-decoration: none;\\n  font-weight: bold; }\\n\\n#details-row-pin .atom-details {\\n  display: flex;\\n  margin: 7px 0 7px -1px;\\n  height: 100%;\\n  overflow: auto; }\\n\\n#details-row-pin .atom-details .atom-box {\\n  width: 100px;\\n  height: 100px;\\n  border: 2px solid #C8C8C8;\\n  border-radius: 3px; }\\n\\n#details-row-pin .atom-details .atom-info {\\n  display: flex;\\n  font-size: 15px;\\n  word-wrap: break-word;\\n  width: 45%;\\n  white-space: normal; }\\n\\n#details-row-pin .atom-number {\\n  text-align: right;\\n  font-size: 15px;\\n  margin-top: 7px;\\n  margin-right: 7px; }\\n\\n#details-row-pin .atom-symbol {\\n  top: 28px;\\n  font-size: 36px;\\n  text-align: center;\\n  margin-top: -4px; }\\n\\n#details-row-pin .atom-name {\\n  text-align: center;\\n  margin-top: -6px; }\\n\\n#details-row-pin .atom-mass {\\n  font-size: 10px;\\n  text-align: center;\\n  margin-top: 7px; }\\n\\n#details-row-pin .atom-description {\\n  margin: auto;\\n  padding-left: 21px; }\\n\"","import { Component, ChangeDetectionStrategy, ViewEncapsulation } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-details-row-pin',\n\ttemplateUrl: 'example-details-row-pin.component.html',\n\tstyleUrls: ['example-details-row-pin.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ExampleDetailsRowPinComponent {\n\tstatic id = 'details-row-pin';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Details Row Start\\\"\\n\\t\\t[rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns>\\n\\t\\t<q-grid-column key=\\\"name\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Name\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"groupBlock\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Group\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"phase\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Phase\\\"\\n\\t\\t\\t\\t\\t   [width]=\\\"80\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"appearance\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Appearance\\\"\\n\\t\\t\\t\\t\\t   [viewWidth]=\\\"300\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"melt\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Melt(℃)\\\"\\n\\t\\t\\t\\t\\t   type=\\\"number\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"boil\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Boil(℃)\\\"\\n\\t\\t\\t\\t\\t   type=\\\"number\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"shells\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Shells\\\"\\n\\t\\t\\t\\t\\t   type=\\\"array\\\">\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n\\n\\t<q-grid-row unit=\\\"details\\\"\\n\\t\\t\\t\\tmode=\\\"single\\\">\\n\\t\\t<ng-template for=\\\"details\\\"\\n\\t\\t\\t\\t\\t let-$cell>\\n\\t\\t\\t<div class=\\\"atom-details\\\">\\n\\t\\t\\t\\t<div class=\\\"atom-box\\\"\\n\\t\\t\\t\\t\\t [style.background-color]=\\\"'#' + $cell.row.item.color\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"atom-number\\\">\\n\\t\\t\\t\\t\\t\\t{{$cell.row.item.number}}\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"atom-symbol\\\">\\n\\t\\t\\t\\t\\t\\t{{$cell.row.item.symbol}}\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"atom-name\\\">\\n\\t\\t\\t\\t\\t\\t{{$cell.row.item.name}}\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"atom-mass\\\">\\n\\t\\t\\t\\t\\t\\t{{$cell.row.item.mass}}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"atom-info\\\">\\n\\t\\t\\t\\t\\t<p class=\\\"atom-description\\\">\\n\\t\\t\\t\\t\\t\\t<a href={{$cell.row.item.source}}\\n\\t\\t\\t\\t\\t\\t   target=\\\"_blank\\\">{{$cell.row.item.name}}\\n\\t\\t\\t\\t\\t\\t</a> was discovered by\\n\\t\\t\\t\\t\\t\\t<a href=\\\"http://www.google.com/search?q={{$cell.row.item.discoveredBy}}\\\"\\n\\t\\t\\t\\t\\t\\t   target=\\\"_blank\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{$cell.row.item.discoveredBy}}\\n\\t\\t\\t\\t\\t\\t</a> in\\n\\t\\t\\t\\t\\t\\t<em>{{$cell.row.item.discoveredIn}}</em>. {{$cell.row.item.summary}}\\n\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</ng-template>\\n\\t</q-grid-row>\\n</q-grid>\"","module.exports = \"a {\\n  text-decoration: none;\\n  font-weight: bold; }\\n\\n.atom-details {\\n  display: flex;\\n  margin: 7px 0 7px -1px; }\\n\\n.atom-details .atom-box {\\n  width: 100px;\\n  height: 100px;\\n  border: 2px solid #C8C8C8;\\n  border-radius: 3px; }\\n\\n.atom-details .atom-info {\\n  display: flex;\\n  font-size: 15px;\\n  word-wrap: break-word;\\n  width: 45%;\\n  white-space: normal; }\\n\\n.atom-number {\\n  text-align: right;\\n  font-size: 15px;\\n  margin-top: 7px;\\n  margin-right: 7px; }\\n\\n.atom-symbol {\\n  top: 28px;\\n  font-size: 36px;\\n  text-align: center;\\n  margin-top: -4px; }\\n\\n.atom-name {\\n  text-align: center;\\n  margin-top: -6px; }\\n\\n.atom-mass {\\n  font-size: 10px;\\n  text-align: center;\\n  margin-top: 7px; }\\n\\n.atom-description {\\n  margin: auto;\\n  padding-left: 21px; }\\n\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-details-row-start',\n\ttemplateUrl: 'example-details-row-start.component.html',\n\tstyleUrls: ['example-details-row-start.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleDetailsRowStartComponent {\n\tstatic id = 'details-row-start';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Drag Column Basic\\\"\\n        [rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t\\t<q-grid-column type=\\\"number\\\"\\n\\t\\t               [canMove]=\\\"false\\\">\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-drag-column-basic',\n\ttemplateUrl: 'example-drag-column-basic.component.html',\n\tstyleUrls: ['example-drag-column-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleDragColumnBasicComponent {\n\tstatic id = 'drag-column-basic';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Drag Row Basic\\\"\\n\\t[rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n\\t<q-grid-row [canMove]=\\\"true\\\"></q-grid-row>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-drag-row-basic',\n\ttemplateUrl: 'example-drag-row-basic.component.html',\n\tstyleUrls: ['example-drag-row-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleDragRowBasicComponent {\n\tstatic id = 'drag-row-basic';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Drag Row Node\\\"\\n        [rows]=\\\"rows | async\\\"\\n\\t[groupBy]=\\\"['bondingType', 'groupBlock']\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n\\t<q-grid-row [canMove]=\\\"true\\\"></q-grid-row>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-drag-row-node',\n\ttemplateUrl: 'example-drag-row-node.component.html',\n\tstyleUrls: ['example-drag-row-node.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleDragRowNodeComponent {\n\tstatic id = 'drag-row-node';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Dynamic Column Model\\\"\\n\\t\\t[model]=\\\"gridModel\\\">\\n\\t<q-grid-columns generation=\\\"cohort\\\"></q-grid-columns>\\n\\t<q-grid-toolbar>\\n\\t\\t<ng-template for=\\\"top\\\">\\n\\t\\t\\t<button mat-button\\n\\t\\t\\t\\t\\t(click)=\\\"addGroup()\\\">\\n\\t\\t\\t\\tAdd Group\\n\\t\\t\\t</button>\\n\\t\\t\\t<button mat-button\\n\\t\\t\\t\\t\\t(click)=\\\"addColumn('left')\\\">\\n\\t\\t\\t\\tAdd Column To Left\\n\\t\\t\\t</button>\\n\\t\\t\\t<button mat-button\\n\\t\\t\\t\\t\\t(click)=\\\"addColumn('middle')\\\">\\n\\t\\t\\t\\tAdd Column To Middle\\n\\t\\t\\t</button>\\n\\t\\t\\t<button mat-button\\n\\t\\t\\t\\t\\t(click)=\\\"addColumn('right')\\\">\\n\\t\\t\\t\\tAdd Column To Right\\n\\t\\t\\t</button>\\n\\t\\t\\t<button mat-button\\n\\t\\t\\t\\t\\t(click)=\\\"reset()\\\">\\n\\t\\t\\t\\tReset\\n\\t\\t\\t</button>\\n\\t\\t</ng-template>\\n\\t</q-grid-toolbar>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { GridModel, Grid } from 'ng2-qgrid';\n\n@Component({\n\tselector: 'example-dynamic-column-model',\n\ttemplateUrl: 'example-dynamic-column-model.component.html',\n\tstyleUrls: ['example-dynamic-column-model.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleDynamicColumnModelComponent {\n\tstatic id = 'dynamic-column-model';\n\n\tgridModel: GridModel;\n\n\tconstructor(private qgrid: Grid) {\n\t\tthis.gridModel = qgrid.model();\n\t\tthis.reset();\n\t}\n\n\taddColumn(side) {\n\t\tconst id = this.getRandomId();\n\t\tconst column = {\n\t\t\ttype: 'text',\n\t\t\tkey: id,\n\t\t\ttitle: `${side} - ${id}`\n\t\t};\n\n\t\tconst data = this.gridModel.data();\n\t\tconst columns = data.columns.slice();\n\t\tconst rows = data.rows.slice();\n\n\t\tif (side === 'left') {\n\t\t\tcolumns.unshift(column);\n\t\t} else if (side === 'right') {\n\t\t\tcolumns.push(column);\n\t\t} else {\n\t\t\tconst middlePos = columns.length % 2 === 0\n\t\t\t\t? columns.length / 2\n\t\t\t\t: Math.floor(columns.length / 2);\n\t\t\tcolumns.splice(middlePos, 0, column);\n\t\t}\n\t\trows.forEach(r => r[id] = `value - ${id}`);\n\t\tthis.gridModel.data({ columns, rows });\n\t}\n\n\taddGroup() {\n\t\tconst groupId = this.getRandomId();\n\t\tconst childColumns = [];\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\tchildColumns.push({\n\t\t\t\ttype: 'text',\n\t\t\t\tkey: `${groupId}Child${i}`,\n\t\t\t\tpath: `${groupId}.child${i}`,\n\t\t\t\ttitle: `child - ${groupId} - ${i}`,\n\t\t\t\tvalue: () => `value - ${i}`\n\t\t\t});\n\t\t}\n\t\tconst groupColumn = {\n\t\t\ttype: 'cohort',\n\t\t\tkey: groupId,\n\t\t\tchildren: childColumns,\n\t\t\ttitle: `group - ${groupId}`\n\t\t};\n\n\t\tconst data = this.gridModel.data();\n\t\tconst columns = data.columns.slice();\n\t\tcolumns.push(groupColumn);\n\t\tthis.gridModel.data({ columns });\n\t}\n\n\treset() {\n\t\tthis.gridModel.data({\n\t\t\tcolumns: [],\n\t\t\trows: new Array(100).fill({})\n\t\t});\n\t}\n\n\tprivate getRandomId() {\n\t\tlet id = '';\n\t\tconst possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n\n\t\tfor (let i = 0; i < 5; i++) {\n\t\t\tid += possible.charAt(Math.floor(Math.random() * possible.length));\n\t\t}\n\n\t\treturn id;\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Edit Cell Basic\\\"\\n        [rows]=\\\"rows | async\\\"\\n        editMode=\\\"cell\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Human } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-edit-cell-basic',\n\ttemplateUrl: 'example-edit-cell-basic.component.html',\n\tstyleUrls: ['example-edit-cell-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleEditCellBasicComponent {\n\tstatic id = 'edit-cell-basic';\n\n\trows: Observable<Human[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getPeople();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Edit Cell Batch\\\"\\n        [rows]=\\\"rows | async\\\"\\n        editMode=\\\"cell\\\"\\n        editMethod=\\\"batch\\\"\\n        q-grid-autofocus>\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Human } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-edit-cell-batch',\n\ttemplateUrl: 'example-edit-cell-batch.component.html',\n\tstyleUrls: ['example-edit-cell-batch.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleEditCellBatchComponent {\n\tstatic id = 'edit-cell-batch';\n\n\trows: Observable<Human[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getPeople();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Edit Row Basic\\\"\\n        [rows]=\\\"rows | async\\\"\\n        [columns]=\\\"columns\\\">\\n\\t<q-grid-columns>\\n\\t\\t<q-grid-column key=\\\"editForm\\\"\\n\\t\\t               type=\\\"row-options\\\"\\n\\t\\t               [canEdit]=\\\"false\\\"\\n\\t\\t               pin=\\\"left\\\">\\n\\t\\t\\t<ng-template for=\\\"body\\\"\\n\\t\\t\\t             let-$cell>\\n\\t\\t\\t\\t<q-grid-edit-form-trigger caption=\\\"{{$cell.row.name.last}}, {{$cell.row.name.first}}\\\"\\n\\t\\t\\t\\t                          [cell]=\\\"$cell\\\">\\n\\t\\t\\t\\t</q-grid-edit-form-trigger>\\n\\t\\t\\t</ng-template>\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, OnInit, ViewChild, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Human } from '../data.service';\nimport { Observable } from 'rxjs';\nimport { Column, BoolColumn, Grid, PipeContext, GridComponent } from 'ng2-qgrid';\n\n@Component({\n\tselector: 'example-edit-row-basic',\n\ttemplateUrl: 'example-edit-row-basic.component.html',\n\tstyleUrls: ['example-edit-row-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleEditRowBasicComponent implements OnInit {\n\tstatic id = 'edit-row-basic';\n\n\trows: Observable<Human[]>;\n\tcolumns: Array<Column | BoolColumn>;\n\t@ViewChild(GridComponent) myGrid: GridComponent;\n\n\tconstructor(private dataService: DataService, private qgrid: Grid) {\n\t\tthis.rows = dataService.getPeople();\n\t}\n\n\tngOnInit() {\n\t\tconst isUndef = x => x === undefined;\n\n\t\tthis.columns = [\n\t\t\t{\n\t\t\t\tkey: 'avatar',\n\t\t\t\ttitle: 'Avatar',\n\t\t\t\ttype: 'image',\n\t\t\t\twidth: 80,\n\t\t\t\tvalue: (item, value) => isUndef(value) ? item.avatar : item.avatar = value,\n\t\t\t\tlabelPath: 'avatarFileName'\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'name.last',\n\t\t\t\ttitle: 'Last Name',\n\t\t\t\ttype: 'text',\n\t\t\t\tpath: 'name.last'\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'name.first',\n\t\t\t\ttitle: 'First Name',\n\t\t\t\ttype: 'text',\n\t\t\t\tpath: 'name.first'\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'gender',\n\t\t\t\ttitle: 'Is Female',\n\t\t\t\ttype: 'bool',\n\t\t\t\ttrueValue: 'female',\n\t\t\t\tfalseValue: 'male'\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'birthday',\n\t\t\t\ttitle: 'Birthday',\n\t\t\t\ttype: 'date'\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'teammates',\n\t\t\t\ttitle: 'Teammates',\n\t\t\t\ttype: 'reference',\n\t\t\t\tvalue: (item, value) => isUndef(value) ? item.teammates || [] : item.teammates = value,\n\t\t\t\tlabel: (item) => {\n\t\t\t\t\tconst { rows } = this.myGrid.model.data();\n\t\t\t\t\treturn (item.teammates || [])\n\t\t\t\t\t\t.map(x => `${x.name.last} ${x.name.first}`)\n\t\t\t\t\t\t.join(', ');\n\t\t\t\t},\n\t\t\t\teditorOptions: {\n\t\t\t\t\tmodelFactory: () => {\n\t\t\t\t\t\tconst { rows } = this.myGrid.model.data();\n\t\t\t\t\t\tconst model = this.qgrid.model();\n\t\t\t\t\t\tmodel\n\t\t\t\t\t\t\t.selection({\n\t\t\t\t\t\t\t\tmode: 'multiple',\n\t\t\t\t\t\t\t\tunit: 'row',\n\t\t\t\t\t\t\t\tkey: {\n\t\t\t\t\t\t\t\t\trow: x => rows.findIndex(r => r.name.last === x.name.last && r.name.first === x.name.first)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.columnList({\n\t\t\t\t\t\t\t\tgeneration: 'deep'\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.data({\n\t\t\t\t\t\t\t\tpipe: [\n\t\t\t\t\t\t\t\t\t(_: any[], context: PipeContext, next: (rows: any[]) => void) => {\n\t\t\t\t\t\t\t\t\t\tthis.dataService.getPeople(10).subscribe(people => next(people));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t].concat(this.qgrid.pipeUnit.default)\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn model;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'comment',\n\t\t\t\ttitle: 'Comment',\n\t\t\t\ttype: 'text',\n\t\t\t\tvalue: (item, value) => isUndef(value) ? item.comment || '' : item.comment = value,\n\t\t\t\teditor: 'text-area'\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'password',\n\t\t\t\ttitle: 'Password',\n\t\t\t\ttype: 'password',\n\t\t\t\tvalue: (item, value) => isUndef(value) ? item.password || '' : item.password = value\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'contact.address.zip',\n\t\t\t\ttitle: 'Zip',\n\t\t\t\ttype: 'id',\n\t\t\t\tpath: 'contact.address.zip'\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'contact.address.state',\n\t\t\t\ttitle: 'State',\n\t\t\t\ttype: 'text',\n\t\t\t\tpath: 'contact.address.state'\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'contact.address.city',\n\t\t\t\ttitle: 'City',\n\t\t\t\ttype: 'text',\n\t\t\t\tpath: 'contact.address.city'\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'contact.phone',\n\t\t\t\ttitle: 'Contact Phones',\n\t\t\t\ttype: 'array',\n\t\t\t\tpath: 'contact.phone'\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'contact.email.primary',\n\t\t\t\ttitle: 'Primary Email',\n\t\t\t\ttype: 'email',\n\t\t\t\tlabel: (item, label) => isUndef(label) ? item.emailLabel || item.contact.email[0] : item.emailLabel = label,\n\t\t\t\tvalue: (item, value) => isUndef(value) ? item.contact.email[0] : item.contact.email[0] = value\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'likes',\n\t\t\t\ttitle: 'Likes',\n\t\t\t\ttype: 'array'\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'memberSince',\n\t\t\t\ttitle: 'Member Since',\n\t\t\t\ttype: 'date'\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'modifiedTime',\n\t\t\t\ttitle: 'Modified Time',\n\t\t\t\ttype: 'time',\n\t\t\t\tvalue: (item, value) => isUndef(value) ? item.modified || '' : item.modified = value\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'webPage',\n\t\t\t\ttitle: 'Web Page',\n\t\t\t\ttype: 'url',\n\t\t\t\tvalue: (item, value) => isUndef(value)\n\t\t\t\t\t? item.webPage || `https://corp.portal.com/${item.name.last}.${item.name.first}`\n\t\t\t\t\t: item.webPage = value,\n\t\t\t\tlabel: (item, label) => isUndef(label)\n\t\t\t\t\t? item.webPageLabel || `${item.name.last} ${item.name.first}`\n\t\t\t\t\t: item.webPageLabel = label\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'attachment',\n\t\t\t\ttitle: 'Attachment',\n\t\t\t\ttype: 'file',\n\t\t\t\tvalue: (item, value) => isUndef(value) ? item.attachment : item.attachment = value,\n\t\t\t\tlabel: (item, label) => isUndef(label) ? item.attachmentLabel || null : item.attachmentLabel = label\n\t\t\t}\n\t\t];\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, Route } from '@angular/router';\nimport { MatButtonModule, MatSelectModule, MatChipsModule, MatIconModule } from '@angular/material';\n\nimport { GridModule, PipeModule } from 'ng2-qgrid';\nimport { ThemeModule } from 'ng2-qgrid/theme/material';\n\nimport { ExampleActionBarBasicComponent } from './action-bar-basic/example-action-bar-basic.component';\nimport { ExampleActionBarOnEnterComponent } from './action-bar-on-enter/example-action-bar-on-enter.component';\nimport { ExampleActionBarTemplateComponent } from './action-bar-template/example-action-bar-template.component';\nimport { ExampleAggregateColumnBasicComponent } from './aggregate-column-basic/example-aggregate-column-basic.component';\nimport { ExampleColumnArrayBasicComponent } from './column-array-basic/example-column-array-basic.component';\nimport { ExampleColumnAutocompleteBasicComponent } from './column-autocomplete-basic/example-column-autocomplete-basic.component';\nimport { ExampleColumnBoolBasicComponent } from './column-bool-basic/example-column-bool-basic.component';\nimport { ExampleColumnCurrencyBasicComponent } from './column-currency-basic/example-column-currency-basic.component';\nimport { ExampleColumnDataSafeComponent } from './column-data-safe/example-column-data-safe.component';\nimport { ExampleColumnDateBasicComponent } from './column-date-basic/example-column-date-basic.component';\nimport { ExampleColumnDropdownBasicComponent } from './column-dropdown-basic/example-column-dropdown-basic.component';\nimport { ExampleColumnEmailBasicComponent } from './column-email-basic/example-column-email-basic.component';\nimport { ExampleColumnFileBasicComponent } from './column-file-basic/example-column-file-basic.component';\nimport { ExampleColumnIdBasicComponent } from './column-id-basic/example-column-id-basic.component';\nimport { ExampleColumnImageBasicComponent } from './column-image-basic/example-column-image-basic.component';\nimport { ExampleColumnListBasicComponent } from './column-list-basic/example-column-list-basic.component';\nimport { ExampleColumnListLoopComponent } from './column-list-loop/example-column-list-loop.component';\nimport { ExampleColumnNumberBasicComponent } from './column-number-basic/example-column-number-basic.component';\nimport { ExampleColumnPasswordBasicComponent } from './column-password-basic/example-column-password-basic.component';\nimport { ExampleColumnReferenceBasicComponent } from './column-reference-basic/example-column-reference-basic.component';\nimport { ExampleColumnRowIndicatorBasicComponent } from './column-row-indicator-basic/example-column-row-indicator-basic.component';\nimport { ExampleColumnRowNumberBasicComponent } from './column-row-number-basic/example-column-row-number-basic.component';\nimport { ExampleColumnRowOptionsBasicComponent } from './column-row-options-basic/example-column-row-options-basic.component';\nimport { ExampleColumnTextBasicComponent } from './column-text-basic/example-column-text-basic.component';\nimport { ExampleColumnTimeBasicComponent } from './column-time-basic/example-column-time-basic.component';\nimport { ExampleColumnTypeSafeComponent } from './column-type-safe/example-column-type-safe.component';\nimport { ExampleColumnUrlBasicComponent } from './column-url-basic/example-column-url-basic.component';\nimport { ExampleDefineColumnAsyncComponent } from './define-column-async/example-define-column-async.component';\nimport { ExampleDefineColumnBasicComponent } from './define-column-basic/example-define-column-basic.component';\nimport { ExampleDefineColumnHybridComponent } from './define-column-hybrid/example-define-column-hybrid.component';\nimport { ExampleDestroyGridBasicComponent } from './destroy-grid-basic/example-destroy-grid-basic.component';\nimport { ExampleDestroyGridModelComponent } from './destroy-grid-model/example-destroy-grid-model.component';\nimport { ExampleDetailsRowAllComponent } from './details-row-all/example-details-row-all.component';\nimport { ExampleDetailsRowApiComponent } from './details-row-api/example-details-row-api.component';\nimport { ExampleDetailsRowBasicComponent } from './details-row-basic/example-details-row-basic.component';\nimport { ExampleDetailsRowGridComponent } from './details-row-grid/example-details-row-grid.component';\nimport { ExampleDetailsRowStartComponent } from './details-row-start/example-details-row-start.component';\nimport { ExampleDragColumnBasicComponent } from './drag-column-basic/example-drag-column-basic.component';\nimport { ExampleDragRowBasicComponent } from './drag-row-basic/example-drag-row-basic.component';\nimport { ExampleDragRowNodeComponent } from './drag-row-node/example-drag-row-node.component';\nimport { ExampleDynamicColumnModelComponent } from './dynamic-column-model/example-dynamic-column-model.component';\nimport { ExampleEditCellBasicComponent } from './edit-cell-basic/example-edit-cell-basic.component';\nimport { ExampleEditCellBatchComponent } from './edit-cell-batch/example-edit-cell-batch.component';\nimport { ExampleEditRowBasicComponent } from './edit-row-basic/example-edit-row-basic.component';\nimport { ExampleExportBasicComponent } from './export-basic/example-export-basic.component';\nimport { ExampleExportCsvComponent } from './export-csv/example-export-csv.component';\nimport { ExampleFilterColumnFetchComponent } from './filter-column-fetch/example-filter-column-fetch.component';\nimport { ExampleFilterConditionBasicComponent } from './filter-condition-basic/example-filter-condition-basic.component';\nimport { ExampleFilterRowBasicComponent } from './filter-row-basic/example-filter-row-basic.component';\nimport { ExampleFilterRowCustomComponent } from './filter-row-custom/example-filter-row-custom.component';\nimport { ExampleFloatingRowsBasicComponent } from './floating-rows-basic/example-floating-rows-basic.component';\nimport { ExampleFocusCellAutoComponent } from './focus-cell-auto/example-focus-cell-auto.component';\nimport { ExampleFocusCellBasicComponent } from './focus-cell-basic/example-focus-cell-basic.component';\nimport { ExampleGenerateColumnCheckComponent } from './generate-column-check/example-generate-column-check.component';\nimport { ExampleGenerateColumnCohortComponent } from './generate-column-cohort/example-generate-column-cohort.component';\nimport { ExampleGenerateColumnDeepComponent } from './generate-column-deep/example-generate-column-deep.component';\nimport { ExampleGenerateColumnShallowComponent } from './generate-column-shallow/example-generate-column-shallow.component';\nimport { ExampleGridListBasicComponent } from './grid-list-basic/example-grid-list-basic.component';\nimport { ExampleGroupColumnBasicComponent } from './group-column-basic/example-group-column-basic.component';\nimport { ExampleGroupRowAggregationComponent } from './group-row-aggregation/example-group-row-aggregation.component';\nimport { ExampleGroupRowBasicComponent } from './group-row-basic/example-group-row-basic.component';\nimport { ExampleGroupRowEditComponent } from './group-row-edit/example-group-row-edit.component';\nimport { ExampleGroupRowFlatComponent } from './group-row-flat/example-group-row-flat.component';\nimport { ExampleGroupRowRowspanComponent } from './group-row-rowspan/example-group-row-rowspan.component';\nimport { ExampleGroupRowSubheadComponent } from './group-row-subhead/example-group-row-subhead.component';\nimport { ExampleGroupRowSummaryComponent } from './group-row-summary/example-group-row-summary.component';\nimport { ExampleHierarchyBrowserBasicComponent } from './hierarchy-browser-basic/example-hierarchy-browser-basic.component';\nimport { ExampleImportBasicComponent } from './import-basic/example-import-basic.component';\nimport { ExampleIndexColumnBasicComponent } from './index-column-basic/example-index-column-basic.component';\nimport { ExampleIndexColumnHybridComponent } from './index-column-hybrid/example-index-column-hybrid.component';\nimport { ExampleIndexColumnModelComponent } from './index-column-model/example-index-column-model.component';\nimport { ExampleInteractionModeDetachedComponent } from './interaction-mode-detached/example-interaction-mode-detached.component';\nimport { ExampleInteractionModeReadonlyComponent } from './interaction-mode-readonly/example-interaction-mode-readonly.component';\nimport { ExampleKeyWithSymbolsComponent } from './key-with-symbols/example-key-with-symbols.component';\nimport { ExampleLayerGridBlankComponent } from './layer-grid-blank/example-layer-grid-blank.component';\nimport { ExampleLegendGridBasicComponent } from './legend-grid-basic/example-legend-grid-basic.component';\nimport { ExampleLiveDataBasicComponent } from './live-data-basic/example-live-data-basic.component';\nimport { ExampleLookAtomsBasicComponent } from './look-atoms-basic/example-look-atoms-basic.component';\nimport { ExampleLookAtomsCustomizedComponent } from './look-atoms-customized/example-look-atoms-customized.component';\nimport { ExampleLookAtomsIdComponent } from './look-atoms-id/example-look-atoms-id.component';\nimport { ExampleLookAtomsModelComponent } from './look-atoms-model/example-look-atoms-model.component';\nimport { ExampleLookPeopleBasicComponent } from './look-people-basic/example-look-people-basic.component';\nimport { ExampleLookPeopleModelComponent } from './look-people-model/example-look-people-model.component';\nimport { ExampleLookQuotesBasicComponent } from './look-quotes-basic/example-look-quotes-basic.component';\nimport { ExampleLookQuotesModelComponent } from './look-quotes-model/example-look-quotes-model.component';\nimport { ExampleManipulateDataBasicComponent } from './manipulate-data-basic/example-manipulate-data-basic.component';\nimport { ExampleMasterDetailsBasicComponent } from './master-details-basic/example-master-details-basic.component';\nimport { ExampleOnPushBasicComponent } from './on-push-basic/example-on-push-basic.component';\nimport { ExamplePaginationBasicComponent } from './pagination-basic/example-pagination-basic.component';\nimport { ExamplePersistenceBasicComponent } from './persistence-basic/example-persistence-basic.component';\nimport { ExamplePersistenceServerComponent } from './persistence-server/example-persistence-server.component';\nimport { ExamplePinColumnBasicComponent } from './pin-column-basic/example-pin-column-basic.component';\nimport { ExamplePipeGridBasicComponent } from './pipe-grid-basic/example-pipe-grid-basic.component';\nimport { ExamplePivotColumnBasicComponent } from './pivot-column-basic/example-pivot-column-basic.component';\nimport { ExamplePivotColumnCohortComponent } from './pivot-column-cohort/example-pivot-column-cohort.component';\nimport { ExamplePivotColumnGroupComponent } from './pivot-column-group/example-pivot-column-group.component';\nimport { ExamplePivotColumnTemplateComponent } from './pivot-column-template/example-pivot-column-template.component';\nimport { ExamplePluginGridBasicComponent } from './plugin-grid-basic/example-plugin-grid-basic.component';\nimport { ExamplePluginMyPagerComponent } from './plugin-grid-basic/example-plugin-my-pager.component';\nimport { ExampleRestApiBasicComponent } from './rest-api-basic/example-rest-api-basic.component';\nimport { ExampleScrollVirtualBasicComponent } from './scroll-virtual-basic/example-scroll-virtual-basic.component';\nimport { ExampleScrollVirtualDetailsComponent } from './scroll-virtual-details/example-scroll-virtual-details.component';\nimport { ExampleScrollVirtualDragComponent } from './scroll-virtual-drag/example-scroll-virtual-drag.component';\nimport { ExampleScrollVirtualEditComponent } from './scroll-virtual-edit/example-scroll-virtual-edit.component';\nimport { ExampleScrollVirtualGroupComponent } from './scroll-virtual-group/example-scroll-virtual-group.component';\nimport { ExampleScrollVirtualHeightComponent } from './scroll-virtual-height/example-scroll-virtual-height.component';\nimport { ExampleScrollVirtualInfiniteComponent } from './scroll-virtual-infinite/example-scroll-virtual-infinite.component';\nimport { ExampleScrollVirtualListComponent } from './scroll-virtual-list/example-scroll-virtual-list.component';\nimport { ExampleScrollVirtualListInfiniteComponent } from './scroll-virtual-list-infinite/example-scroll-virtual-list-infinite.component';\nimport { ExampleScrollVirtualSelectionComponent } from './scroll-virtual-selection/example-scroll-virtual-selection.component';\nimport { ExampleScrollVirtualStyleComponent } from './scroll-virtual-style/example-scroll-virtual-style.component';\nimport { ExampleSelectCellBasicComponent } from './select-cell-basic/example-select-cell-basic.component';\nimport { ExampleSelectColumnBasicComponent } from './select-column-basic/example-select-column-basic.component';\nimport { ExampleSelectMixBasicComponent } from './select-mix-basic/example-select-mix-basic.component';\nimport { ExampleSelectRowBasicComponent } from './select-row-basic/example-select-row-basic.component';\nimport { ExampleSelectRowCommandComponent } from './select-row-command/example-select-row-command.component';\nimport { ExampleSelectRowSingleComponent } from './select-row-single/example-select-row-single.component';\nimport { ExampleSizeColumnAbsoluteComponent } from './size-column-absolute/example-size-column-absolute.component';\nimport { ExampleSizeColumnBasicComponent } from './size-column-basic/example-size-column-basic.component';\nimport { ExampleSizeColumnFullComponent } from './size-column-full/example-size-column-full.component';\nimport { ExampleSizeRowBasicComponent } from './size-row-basic/example-size-row-basic.component';\nimport { ExampleSortRowBasicComponent } from './sort-row-basic/example-sort-row-basic.component';\nimport { ExampleStyleCellBasicComponent } from './style-cell-basic/example-style-cell-basic.component';\nimport { ExampleStyleRowBasicComponent } from './style-row-basic/example-style-row-basic.component';\nimport { ExampleSummaryColumnAggregationComponent } from './summary-column-aggregation/example-summary-column-aggregation.component';\nimport { ExampleSummaryColumnBasicComponent } from './summary-column-basic/example-summary-column-basic.component';\nimport { ExampleThemeGridDarkComponent } from './theme-grid-dark/example-theme-grid-dark.component';\nimport { ExampleThemeGridEmbedComponent } from './theme-grid-embed/example-theme-grid-embed.component';\nimport { ExampleValidationBasicComponent } from './validation-basic/example-validation-basic.component';\nimport { ExampleVisibilityBasicComponent } from './visibility-basic/example-visibility-basic.component';\nimport { ExampleVisibilityModelComponent } from './visibility-model/example-visibility-model.component';\nimport { ExampleImportCsvComponent } from './import-csv/example-import-csv.component';\nimport { ExampleFocusCellCustomComponent } from './focus-cell-custom/example-focus-cell-custom.component';\nimport { ExampleDataRowAddComponent } from './data-row-add/example-data-row-add.component';\nimport { ExampleColumnTooltipBasicComponent } from './column-tooltip-basic/example-column-tooltip-basic.component';\nimport { ExampleDataRowDeleteComponent } from './data-row-delete/example-data-row-delete.component';\nimport { ExampleDetailsRowPinComponent } from './details-row-pin/example-details-row-pin.component';\nimport { ExampleSelectRowDisableComponent } from './select-row-disable/example-select-row-disable.component';\nimport { ExampleSelectRowDisableUnselectComponent } from './select-row-disable-unselect/example-select-row-disable-unselect.component';\nimport { ExamplePaneBasicComponent } from './pane-basic/example-pane-basic.component';\nimport { ExamplePaneTriggerComponent } from './pane-trigger/example-pane-trigger.component';\n\nexport const EXAMPLES: any[] = [\n\tExampleActionBarBasicComponent,\n\tExampleActionBarOnEnterComponent,\n\tExampleActionBarTemplateComponent,\n\tExampleAggregateColumnBasicComponent,\n\tExampleColumnArrayBasicComponent,\n\tExampleColumnAutocompleteBasicComponent,\n\tExampleColumnBoolBasicComponent,\n\tExampleColumnCurrencyBasicComponent,\n\tExampleColumnDataSafeComponent,\n\tExampleColumnDateBasicComponent,\n\tExampleColumnDropdownBasicComponent,\n\tExampleColumnEmailBasicComponent,\n\tExampleColumnFileBasicComponent,\n\tExampleColumnIdBasicComponent,\n\tExampleColumnImageBasicComponent,\n\tExampleColumnListBasicComponent,\n\tExampleColumnListLoopComponent,\n\tExampleColumnNumberBasicComponent,\n\tExampleColumnPasswordBasicComponent,\n\tExampleColumnReferenceBasicComponent,\n\tExampleColumnRowIndicatorBasicComponent,\n\tExampleColumnRowNumberBasicComponent,\n\tExampleColumnRowOptionsBasicComponent,\n\tExampleColumnTextBasicComponent,\n\tExampleColumnTimeBasicComponent,\n\tExampleColumnTooltipBasicComponent,\n\tExampleColumnTypeSafeComponent,\n\tExampleColumnUrlBasicComponent,\n\tExampleDataRowAddComponent,\n\tExampleDataRowDeleteComponent,\n\tExampleDefineColumnAsyncComponent,\n\tExampleDefineColumnBasicComponent,\n\tExampleDefineColumnHybridComponent,\n\tExampleDestroyGridBasicComponent,\n\tExampleDestroyGridModelComponent,\n\tExampleDetailsRowAllComponent,\n\tExampleDetailsRowApiComponent,\n\tExampleDetailsRowBasicComponent,\n\tExampleDetailsRowGridComponent,\n\tExampleDetailsRowPinComponent,\n\tExampleDetailsRowStartComponent,\n\tExampleDragColumnBasicComponent,\n\tExampleDragRowBasicComponent,\n\tExampleDragRowNodeComponent,\n\tExampleDynamicColumnModelComponent,\n\tExampleEditCellBasicComponent,\n\tExampleEditCellBatchComponent,\n\tExampleEditRowBasicComponent,\n\tExampleExportBasicComponent,\n\tExampleExportCsvComponent,\n\tExampleFilterColumnFetchComponent,\n\tExampleFilterConditionBasicComponent,\n\tExampleFilterRowBasicComponent,\n\tExampleFilterRowCustomComponent,\n\tExampleFloatingRowsBasicComponent,\n\tExampleFocusCellAutoComponent,\n\tExampleFocusCellBasicComponent,\n\tExampleFocusCellCustomComponent,\n\tExampleGenerateColumnCheckComponent,\n\tExampleGenerateColumnCohortComponent,\n\tExampleGenerateColumnDeepComponent,\n\tExampleGenerateColumnShallowComponent,\n\tExampleGridListBasicComponent,\n\tExampleGroupColumnBasicComponent,\n\tExampleGroupRowAggregationComponent,\n\tExampleGroupRowBasicComponent,\n\tExampleGroupRowEditComponent,\n\tExampleGroupRowFlatComponent,\n\tExampleGroupRowRowspanComponent,\n\tExampleGroupRowSubheadComponent,\n\tExampleGroupRowSummaryComponent,\n\tExampleHierarchyBrowserBasicComponent,\n\tExampleImportBasicComponent,\n\tExampleImportCsvComponent,\n\tExampleIndexColumnBasicComponent,\n\tExampleIndexColumnHybridComponent,\n\tExampleIndexColumnModelComponent,\n\tExampleInteractionModeDetachedComponent,\n\tExampleInteractionModeReadonlyComponent,\n\tExampleKeyWithSymbolsComponent,\n\tExampleLayerGridBlankComponent,\n\tExampleLegendGridBasicComponent,\n\tExampleLiveDataBasicComponent,\n\tExampleLookAtomsBasicComponent,\n\tExampleLookAtomsCustomizedComponent,\n\tExampleLookAtomsIdComponent,\n\tExampleLookAtomsModelComponent,\n\tExampleLookPeopleBasicComponent,\n\tExampleLookPeopleModelComponent,\n\tExampleLookQuotesBasicComponent,\n\tExampleLookQuotesModelComponent,\n\tExampleManipulateDataBasicComponent,\n\tExampleMasterDetailsBasicComponent,\n\tExampleOnPushBasicComponent,\n\tExamplePaginationBasicComponent,\n\tExamplePaneBasicComponent,\n\tExamplePaneTriggerComponent,\n\tExamplePersistenceBasicComponent,\n\tExamplePersistenceServerComponent,\n\tExamplePinColumnBasicComponent,\n\tExamplePipeGridBasicComponent,\n\tExamplePivotColumnBasicComponent,\n\tExamplePivotColumnCohortComponent,\n\tExamplePivotColumnGroupComponent,\n\tExamplePivotColumnTemplateComponent,\n\tExamplePluginGridBasicComponent,\n\tExampleRestApiBasicComponent,\n\tExampleScrollVirtualBasicComponent,\n\tExampleScrollVirtualDetailsComponent,\n\tExampleScrollVirtualDragComponent,\n\tExampleScrollVirtualEditComponent,\n\tExampleScrollVirtualGroupComponent,\n\tExampleScrollVirtualHeightComponent,\n\tExampleScrollVirtualInfiniteComponent,\n\tExampleScrollVirtualListComponent,\n\tExampleScrollVirtualListInfiniteComponent,\n\tExampleScrollVirtualSelectionComponent,\n\tExampleScrollVirtualStyleComponent,\n\tExampleSelectCellBasicComponent,\n\tExampleSelectColumnBasicComponent,\n\tExampleSelectMixBasicComponent,\n\tExampleSelectRowBasicComponent,\n\tExampleSelectRowDisableComponent,\n\tExampleSelectRowDisableUnselectComponent,\n\tExampleSelectRowCommandComponent,\n\tExampleSelectRowSingleComponent,\n\tExampleSizeColumnAbsoluteComponent,\n\tExampleSizeColumnBasicComponent,\n\tExampleSizeColumnFullComponent,\n\tExampleSizeRowBasicComponent,\n\tExampleSortRowBasicComponent,\n\tExampleStyleCellBasicComponent,\n\tExampleStyleRowBasicComponent,\n\tExampleSummaryColumnAggregationComponent,\n\tExampleSummaryColumnBasicComponent,\n\tExampleThemeGridDarkComponent,\n\tExampleThemeGridEmbedComponent,\n\tExampleValidationBasicComponent,\n\tExampleVisibilityBasicComponent,\n\tExampleVisibilityModelComponent\n];\n\nexport const APP_ROUTES: Routes = EXAMPLES.map<Route>(example => ({\n\tpath: example.id,\n\tcomponent: example\n}));\n\n@NgModule({\n\tdeclarations: [...EXAMPLES, ExamplePluginMyPagerComponent],\n\texports: EXAMPLES,\n\timports: [\n\t\tGridModule,\n\t\tThemeModule,\n\t\tPipeModule,\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tMatButtonModule,\n\t\tMatSelectModule,\n\t\tMatChipsModule,\n\t\tMatIconModule\n\t]\n})\nexport class ExampleModule { }\n","module.exports = \"<q-grid caption=\\\"Export Basic\\\"\\n        [rows]=\\\"rows | async\\\"\\n        id=\\\"export-example\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n\\n\\t<q-grid-export type=\\\"json\\\">\\n\\t\\t<ng-template for=\\\"trigger\\\" let-$action>\\n\\t\\t\\t<button mat-button (click)=\\\"$action.execute()\\\">Export to JSON</button>\\n\\t\\t</ng-template>\\n\\t</q-grid-export>\\n\\t<q-grid-export type=\\\"csv\\\">\\n\\t\\t<ng-template for=\\\"trigger\\\" let-$action>\\n\\t\\t\\t<button mat-button (click)=\\\"$action.execute()\\\">Export to CSV</button>\\n\\t\\t</ng-template>\\n\\t</q-grid-export>\\n\\t<q-grid-export type=\\\"xml\\\">\\n\\t\\t<ng-template for=\\\"trigger\\\" let-$action>\\n\\t\\t\\t<button mat-button (click)=\\\"$action.execute()\\\">Export to XML</button>\\n\\t\\t</ng-template>\\n\\t</q-grid-export>\\n\\t<q-grid-export type=\\\"xlsx\\\">\\n\\t\\t<ng-template for=\\\"trigger\\\" let-$action>\\n\\t\\t\\t<button mat-button (click)=\\\"$action.execute()\\\">Export to XLSX</button>\\n\\t\\t</ng-template>\\n\\t</q-grid-export>\\n\\n</q-grid>\\n\"","module.exports = \"\"","import { AfterViewInit, Component, ViewChild, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { GridComponent } from 'ng2-qgrid';\nimport { Atom, DataService } from '../data.service';\nimport * as fileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\n\n@Component({\n\tselector: 'example-export-basic',\n\ttemplateUrl: 'example-export-basic.component.html',\n\tstyleUrls: ['example-export-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleExportBasicComponent implements AfterViewInit {\n\tstatic id = 'export-basic';\n\n\t@ViewChild(GridComponent) myGrid: GridComponent;\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.myGrid.model.plugin({\n\t\t\timports: {\n\t\t\t\t'fileSaver': fileSaver,\n\t\t\t\t'xlsx': XLSX\n\t\t\t}\n\t\t});\n\t}\n}\n","module.exports = \"<q-grid header=\\\"Export Basic\\\"\\n        [rows]=\\\"rows | async\\\"\\n        id=\\\"export-example\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n\\n\\t<q-grid-export type=\\\"csv\\\">\\n\\t</q-grid-export>\\t\\n</q-grid>\\n\"","module.exports = \"\"","import { AfterViewInit, Component, ViewChild, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { GridComponent } from 'ng2-qgrid';\nimport { Atom, DataService } from '../data.service';\nimport * as fileSaver from 'file-saver';\n\n@Component({\n\tselector: 'example-export-csv',\n\ttemplateUrl: 'example-export-csv.component.html',\n\tstyleUrls: ['example-export-csv.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleExportCsvComponent implements AfterViewInit {\n\tstatic id = 'export-csv';\n\n\t@ViewChild(GridComponent) myGrid: GridComponent;\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.myGrid.model.plugin({\n\t\t\timports: {\n\t\t\t\t'fileSaver': fileSaver\n\t\t\t}\n\t\t});\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Filter Column Fetch\\\"\\n\\t\\t[rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy, ViewChild, AfterViewInit } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { FetchContext, GridComponent } from 'ng2-qgrid';\n\n@Component({\n\tselector: 'example-filter-column-fetch',\n\ttemplateUrl: 'example-filter-column-fetch.component.html',\n\tstyleUrls: ['example-filter-column-fetch.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleFilterColumnFetchComponent implements AfterViewInit {\n\tstatic id = 'filter-column-fetch';\n\n\t@ViewChild(GridComponent) myGrid: GridComponent;\n\trows: Observable<Atom[]>;\n\n\tconstructor(private dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst { model } = this.myGrid;\n\t\tmodel.filter({\n\t\t\tfetch: (key: string, context: FetchContext) =>\n\t\t\t\tthis.dataService\n\t\t\t\t\t.getAtoms()\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\tmap(atoms => {\n\t\t\t\t\t\t\tconst { search, value, take, skip } = context;\n\t\t\t\t\t\t\tconst columnSearch = search.toLowerCase();\n\n\t\t\t\t\t\t\tconst columnData = atoms.map(value);\n\t\t\t\t\t\t\tconst filteredData = columnSearch\n\t\t\t\t\t\t\t\t? columnData.filter(x => ('' + x).toLowerCase().indexOf(columnSearch) >= 0)\n\t\t\t\t\t\t\t\t: columnData;\n\n\t\t\t\t\t\t\tfilteredData.sort();\n\t\t\t\t\t\t\treturn filteredData.slice(skip, skip + take);\n\t\t\t\t\t\t}))\n\t\t});\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Filter Condition Basic\\\"\\n        [rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n\\n\\t<q-grid-query-builder>\\n\\t</q-grid-query-builder>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-filter-condition-basic',\n\ttemplateUrl: 'example-filter-condition-basic.component.html',\n\tstyleUrls: ['example-filter-condition-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleFilterConditionBasicComponent {\n\tstatic id = 'filter-condition-basic';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Filter Row Basic\\\"\\n\\t\\t[rows]=\\\"rows | async\\\"\\n\\t\\tfilterUnit=\\\"row\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-filter-row-basic',\n\ttemplateUrl: 'example-filter-row-basic.component.html',\n\tstyleUrls: ['example-filter-row-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleFilterRowBasicComponent {\n\tstatic id = 'filter-row-basic';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"Name: <input type=\\\"search\\\"\\n       (input)=\\\"filter('name', $event.target.value)\\\"\\n       placeholder=\\\"Filter by name\\\" />\\n\\nPhase: <input type=\\\"search\\\"\\n       (input)=\\\"filter('phase', $event.target.value)\\\"\\n       placeholder=\\\"Filter by phase\\\" />\\n\\n\\n<q-grid caption=\\\"Filter Row Custom\\\"\\n        [rows]=\\\"rows | async\\\"\\n        [model]=\\\"gridModel\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t\\t<q-grid-column [canFilter]=\\\"false\\\"></q-grid-column>\\n\\t</q-grid-columns>\\n\\n</q-grid>\"","module.exports = \"\"","import { Component, ViewChild, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\nimport { GridComponent, GridService, Grid, GridModel } from 'ng2-qgrid';\n\n@Component({\n\tselector: 'example-filter-row-custom',\n\ttemplateUrl: 'example-filter-row-custom.component.html',\n\tstyleUrls: ['example-filter-row-custom.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleFilterRowCustomComponent {\n\tstatic id = 'filter-row-custom';\n\n\t@ViewChild(GridComponent) myGrid: GridComponent;\n\trows: Observable<Atom[]>;\n\tgridModel: GridModel;\n\tgridService: GridService;\n\n\tsearch = {\n\t\tname: '',\n\t\tphase: ''\n\t};\n\n\tconstructor(dataService: DataService, grid: Grid) {\n\t\tthis.rows = dataService.getAtoms();\n\t\tthis.gridModel = grid.model();\n\t\tthis.gridService = grid.service(this.gridModel);\n\n\t\tthis.gridModel.navigationChanged.watch(e => {\n\t\t\tif (e.hasChanges('cell') && e.state.cell) {\n\t\t\t\tthis.gridModel.selection({\n\t\t\t\t\titems: [e.state.row]\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tfilter(name: string, value: string) {\n\t\tthis.search[name] = value;\n\n\t\tconst predicate = Object\n\t\t\t.keys(this.search)\n\t\t\t.reduce((memo: (x: any) => boolean, key) => {\n\t\t\t\tconst searchText = this.search[key].toLowerCase();\n\t\t\t\tif (searchText) {\n\t\t\t\t\treturn row => memo(row) && ('' + row[key]).toLowerCase().indexOf(searchText) >= 0;\n\t\t\t\t}\n\n\t\t\t\treturn memo;\n\t\t\t}, x => true);\n\n\t\tthis.gridModel.filter({\n\t\t\tmatch: () => predicate\n\t\t});\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Floating Rows\\\"\\r\\n\\t\\t[model]=\\\"gridModel\\\"\\r\\n\\t\\teditMode=\\\"cell\\\">\\r\\n\\t<q-grid-columns generation=\\\"deep\\\">\\r\\n\\t</q-grid-columns>\\r\\n</q-grid>\\r\\n\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { GridModel, Grid } from 'ng2-qgrid';\n\n@Component({\n\tselector: 'example-floating-rows-basic',\n\ttemplateUrl: 'example-floating-rows-basic.component.html',\n\tstyleUrls: ['example-floating-rows-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleFloatingRowsBasicComponent {\n\tstatic id = 'floating-rows-basic';\n\n\tgridModel: GridModel;\n\n\tconstructor(dataService: DataService, qgrid: Grid) {\n\t\tthis.gridModel = qgrid.model();\n\n\t\tdataService\n\t\t\t.getAtoms()\n\t\t\t.subscribe(rows => {\n\t\t\t\tthis.gridModel.data({ rows });\n\t\t\t\tthis.gridModel.row({\n\t\t\t\t\tpinTop: [rows[0], rows[1]],\n\t\t\t\t\tpinBottom: [rows[rows.length - 1]]\n\t\t\t\t});\n\t\t\t});\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Focus Cell Auto\\\"\\n        [rows]=\\\"rows | async\\\"\\n        q-grid-autofocus>\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-focus-cell-auto',\n\ttemplateUrl: 'example-focus-cell-auto.component.html',\n\tstyleUrls: ['example-focus-cell-auto.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleFocusCellAutoComponent {\n\tstatic id = 'focus-cell-auto';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Focus Cell Basic\\\"\\r\\n        [model]=\\\"gridModel\\\">\\r\\n\\t<q-grid-columns generation=\\\"deep\\\">\\r\\n\\t</q-grid-columns>\\r\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { GridModel, Grid } from 'ng2-qgrid';\n\n@Component({\n\tselector: 'example-focus-cell-basic',\n\ttemplateUrl: 'example-focus-cell-basic.component.html',\n\tstyleUrls: ['example-focus-cell-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleFocusCellBasicComponent {\n\tstatic id = 'focus-cell-basic';\n\n\tgridModel: GridModel;\n\n\tconstructor(dataService: DataService, qgrid: Grid) {\n\t\tthis.gridModel = qgrid.model();\n\n\t\tdataService\n\t\t\t.getAtoms()\n\t\t\t.subscribe(rows => {\n\t\t\t\tthis.gridModel.data({ rows });\n\n\t\t\t\tconst gridService = qgrid.service(this.gridModel);\n\n\t\t\t\t// navigate to the 2nd page to the bottom\n\t\t\t\tgridService.focus(99, 2);\n\t\t\t});\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Focus Cell Custom\\\"\\n\\t\\t[rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n\\n\\t<q-grid-toolbar>\\n\\t\\t<ng-template for=\\\"top\\\">\\n\\t\\t\\t<input #input\\n\\t\\t\\t\\t   type=\\\"number\\\" />\\n\\t\\t\\t<button mat-button\\n\\t\\t\\t\\t\\t(click)=\\\"focus(input.value)\\\">\\n\\t\\t\\t\\tFocus\\n\\t\\t\\t</button>\\n\\t\\t</ng-template>\\n\\t</q-grid-toolbar>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy, ViewChild } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\nimport { GridComponent, Grid } from 'ng2-qgrid';\n\n@Component({\n\tselector: 'example-focus-cell-custom',\n\ttemplateUrl: 'example-focus-cell-custom.component.html',\n\tstyleUrls: ['example-focus-cell-custom.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleFocusCellCustomComponent {\n\tstatic id = 'focus-cell-custom';\n\n\t@ViewChild(GridComponent) grid: GridComponent;\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService, private qgrid: Grid) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n\n\tfocus(rowIndex) {\n\t\tconst { model } = this.grid;\n\t\tconst gridService = this.qgrid.service(model);\n\n\t\t// navigate to the 2nd page to the bottom\n\t\tgridService.focus(Number.parseInt(rowIndex, 10));\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Generate Column Check\\\"\\n\\t\\t[rows]=\\\"rows\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t\\t<q-grid-column [width]=\\\"150\\\">\\n\\t\\t\\t<ng-template for=\\\"head\\\"\\n\\t\\t\\t\\t\\t\\t let-$cell>\\n\\t\\t\\t\\t<q-grid-column-sort [column]=\\\"$cell.column\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"q-grid-sort\\\">\\n\\t\\t\\t\\t\\t<label>\\n\\t\\t\\t\\t\\t\\t{{$cell.column.title}}/{{$cell.column.type}}\\n\\t\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t</q-grid-column-sort>\\n\\t\\t\\t\\t<q-grid-column-filter-trigger class=\\\"q-grid-column-filter-trigger\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  [column]=\\\"$cell.column\\\">\\n\\t\\t\\t\\t</q-grid-column-filter-trigger>\\n\\t\\t\\t</ng-template>\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n\tselector: 'example-generate-column-check',\n\ttemplateUrl: 'example-generate-column-check.component.html',\n\tstyleUrls: ['example-generate-column-check.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleGenerateColumnCheckComponent {\n\tstatic id = 'generate-column-check';\n\n\trows = [\n\t\t{\n\t\t\tnumber: '1',\n\t\t\tnotNumber: '1',\n\t\t\tnotDate: '1983-09-18',\n\t\t\tnotBoolean: 'true',\n\t\t\tnotEmail: 'john@mail.com',\n\t\t\tnotTime: '12:00',\n\t\t\tnotImage: 'https://upload.wikimedia.org/wikipedia/commons/e/e4/Hydrogen_Spectra.jpg',\n\t\t\tnotArray: ['1', '2', '3']\n\t\t},\n\t\t{\n\t\t\tnumber: '',\n\t\t\tnotNumber: 'some text',\n\t\t\tnotDate: 'some text',\n\t\t\tnotBoolean: 'some text',\n\t\t\tnotEmail: 'some text',\n\t\t\tnotTime: 'some text',\n\t\t\tnotImage: 'some text',\n\t\t\tnotArray: 'some text'\n\t\t}\n\t];\n}\n","module.exports = \"<q-grid caption=\\\"Generate Column Cohort\\\"\\n        [rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns generation=\\\"cohort\\\">\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Human } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-generate-column-cohort',\n\ttemplateUrl: 'example-generate-column-cohort.component.html',\n\tstyleUrls: ['example-generate-column-cohort.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleGenerateColumnCohortComponent {\n\tstatic id = 'generate-column-cohort';\n\n\trows: Observable<Human[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getPeople();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Generate Column Deep\\\"\\n        [rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Human } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-generate-column-deep',\n\ttemplateUrl: 'example-generate-column-deep.component.html',\n\tstyleUrls: ['example-generate-column-deep.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleGenerateColumnDeepComponent {\n\tstatic id = 'generate-column-deep';\n\n\trows: Observable<Human[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getPeople();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Generate Column Shallow\\\"\\n        [rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns generation=\\\"shallow\\\">\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Human } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-generate-column-shallow',\n\ttemplateUrl: 'example-generate-column-shallow.component.html',\n\tstyleUrls: ['example-generate-column-shallow.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleGenerateColumnShallowComponent {\n\tstatic id = 'generate-column-shallow';\n\n\trows: Observable<Human[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getPeople();\n\t}\n}\n","module.exports = \"<q-grid *ngFor=\\\"let model of models | async\\\"\\n        caption=\\\"Grid List Basic\\\"\\n        [rows]=\\\"model.rows | async\\\">\\n\\t<q-grid-columns>\\n\\t\\t<q-grid-column *ngFor=\\\"let column of model.columns\\\"\\n\\t\\t               [key]=\\\"column.key\\\"\\n\\t\\t               [title]=\\\"column.title\\\"\\n\\t\\t               [type]=\\\"column.type\\\">\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n\\n\\t<q-grid-pager [size]=\\\"((model.rows | async) || []).length\\\"></q-grid-pager>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { Observable, of } from 'rxjs';\n\n@Component({\n\tselector: 'example-grid-list-basic',\n\ttemplateUrl: 'example-grid-list-basic.component.html',\n\tstyleUrls: ['example-grid-list-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleGridListBasicComponent {\n\tstatic id = 'grid-list-basic';\n\n\tmodels: Observable<any[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.models = of([{\n\t\t\tcolumns: [{\n\t\t\t\tkey: 'number',\n\t\t\t\ttitle: 'Number'\n\t\t\t}, {\n\t\t\t\tkey: 'name',\n\t\t\t\ttitle: 'Name'\n\t\t\t}\n\t\t\t],\n\t\t\trows: dataService.getAtoms()\n\t\t}\n\t\t]);\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Group Column Basic\\\"\\n        [rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns>\\n\\t\\t<q-grid-column title=\\\"Name\\\">\\n\\t\\t\\t<q-grid-column title=\\\"Given\\\"\\n\\t\\t\\t               key=\\\"firstName\\\"\\n\\t\\t\\t               path=\\\"name.first\\\">\\n\\t\\t\\t</q-grid-column>\\n\\t\\t\\t<q-grid-column title=\\\"Surname\\\"\\n\\t\\t\\t               key=\\\"lastName\\\"\\n\\t\\t\\t               path=\\\"name.last\\\">\\n\\t\\t\\t</q-grid-column>\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column title=\\\"Gender\\\"\\n\\t\\t               key=\\\"gender\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column title=\\\"Birthday\\\"\\n\\t\\t               key=\\\"birthday\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column title=\\\"Contact Info\\\">\\n\\t\\t\\t<q-grid-column title=\\\"Email\\\"\\n\\t\\t\\t               key=\\\"email\\\"\\n\\t\\t\\t               path=\\\"contact.email\\\">\\n\\t\\t\\t</q-grid-column>\\n\\t\\t\\t<q-grid-column title=\\\"Birthday\\\"\\n\\t\\t\\t               key=\\\"birthday\\\"\\n\\t\\t\\t               path=\\\"contact.birthday\\\">\\n\\t\\t\\t</q-grid-column>\\n\\t\\t\\t<q-grid-column title=\\\"Phone\\\"\\n\\t\\t\\t               key=\\\"phone\\\"\\n\\t\\t\\t               path=\\\"contact.phone\\\">\\n\\t\\t\\t</q-grid-column>\\n\\t\\t\\t<q-grid-column title=\\\"Address\\\">\\n\\t\\t\\t\\t<q-grid-column title=\\\"Street\\\"\\n\\t\\t\\t\\t               key=\\\"street\\\"\\n\\t\\t\\t\\t               path=\\\"contact.address.phone\\\">\\n\\t\\t\\t\\t</q-grid-column>\\n\\t\\t\\t\\t<q-grid-column title=\\\"Zip\\\"\\n\\t\\t\\t\\t               key=\\\"zip\\\"\\n\\t\\t\\t\\t               path=\\\"contact.address.phone\\\">\\n\\t\\t\\t\\t</q-grid-column>\\n\\t\\t\\t\\t<q-grid-column title=\\\"City\\\"\\n\\t\\t\\t\\t               key=\\\"phone\\\"\\n\\t\\t\\t\\t               path=\\\"contact.address.phone\\\">\\n\\t\\t\\t\\t</q-grid-column>\\n\\t\\t\\t\\t<q-grid-column title=\\\"State\\\"\\n\\t\\t\\t\\t               key=\\\"state\\\"\\n\\t\\t\\t\\t               path=\\\"contact.address.state\\\">\\n\\t\\t\\t\\t</q-grid-column>\\n\\t\\t\\t</q-grid-column>\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column title=\\\"Likes\\\"\\n\\t\\t               key=\\\"likes\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column title=\\\"Member Since\\\"\\n\\t\\t               key=\\\"memberSince\\\">\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Human } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-group-column-basic',\n\ttemplateUrl: 'example-group-column-basic.component.html',\n\tstyleUrls: ['example-group-column-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleGroupColumnBasicComponent {\n\tstatic id = 'group-column-basic';\n\n\trows: Observable<Human[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getPeople();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Group Row Aggregation\\\"\\n        [rows]=\\\"rows | async\\\"\\n        [groupBy]=\\\"['bondingType', 'groupBlock']\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t\\t<q-grid-column key=\\\"melt\\\"\\n\\t\\t               type=\\\"number\\\"\\n\\t\\t               aggregation=\\\"avg\\\">\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-group-row-aggregation',\n\ttemplateUrl: 'example-group-row-aggregation.component.html',\n\tstyleUrls: ['example-group-row-aggregation.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleGroupRowAggregationComponent {\n\tstatic id = 'group-row-aggregation';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Group Row Basic\\\"\\n        [rows]=\\\"rows | async\\\"\\n        [groupBy]=\\\"['bondingType', 'groupBlock']\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-group-row-basic',\n\ttemplateUrl: 'example-group-row-basic.component.html',\n\tstyleUrls: ['example-group-row-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleGroupRowBasicComponent {\n\tstatic id = 'group-row-basic';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Group Row Edit\\\"\\n        editMode=\\\"cell\\\"\\n        [rows]=\\\"rows | async\\\"\\n        [groupBy]=\\\"['bondingType', 'groupBlock']\\\">\\n        <q-grid-columns generation=\\\"deep\\\">\\n        </q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-group-row-edit',\n\ttemplateUrl: 'example-group-row-edit.component.html',\n\tstyleUrls: ['example-group-row-edit.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleGroupRowEditComponent {\n\tstatic id = 'group-row-edit';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Group Row Flat\\\"\\n        [rows]=\\\"rows | async\\\"\\n        [groupBy]=\\\"['bondingType', 'groupBlock']\\\"\\n        groupMode=\\\"flat\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-group-row-flat',\n\ttemplateUrl: 'example-group-row-flat.component.html',\n\tstyleUrls: ['example-group-row-flat.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleGroupRowFlatComponent {\n\tstatic id = 'group-row-flat';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Group Row Rowspan\\\"\\n        [rows]=\\\"rows | async\\\"\\n        [groupBy]=\\\"['bondingType', 'groupBlock']\\\"\\n        groupMode=\\\"rowspan\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-group-row-rowspan',\n\ttemplateUrl: 'example-group-row-rowspan.component.html',\n\tstyleUrls: ['example-group-row-rowspan.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleGroupRowRowspanComponent {\n\tstatic id = 'group-row-rowspan';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Group Row Subhead\\\"\\n        [rows]=\\\"rows | async\\\"\\n        [groupBy]=\\\"['bondingType', 'groupBlock']\\\"\\n        groupMode=\\\"subhead\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-group-row-subhead',\n\ttemplateUrl: 'example-group-row-subhead.component.html',\n\tstyleUrls: ['example-group-row-subhead.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleGroupRowSubheadComponent {\n\tstatic id = 'group-row-subhead';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Group Row Summary\\\"\\n        [rows]=\\\"rows | async\\\"\\n        [groupBy]=\\\"['bondingType', 'groupBlock']\\\"\\n        groupMode=\\\"subhead\\\"\\n        groupSummary=\\\"leaf\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t\\t<q-grid-column type=\\\"group-summary\\\"\\n\\t\\t               aggregation=\\\"count\\\">\\n\\t\\t\\t<ng-template for=\\\"body\\\"\\n\\t\\t\\t             let-$cell>\\n\\t\\t\\t\\tCount: {{$cell.value}}\\n\\t\\t\\t</ng-template>\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-group-row-summary',\n\ttemplateUrl: 'example-group-row-summary.component.html',\n\tstyleUrls: ['example-group-row-summary.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleGroupRowSummaryComponent {\n\tstatic id = 'group-row-summary';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Hierarchy Browser Basic\\\"\\n\\t\\t[model]=\\\"gridModel\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t\\t<q-grid-column title=\\\"Name\\\"\\n\\t\\t\\t\\t\\t   offset=\\\"40\\\"\\n\\t\\t\\t\\t\\t   type=\\\"group\\\"\\n\\t\\t\\t\\t\\t   width=\\\"100%\\\"\\n\\t\\t\\t\\t\\t   widthMode=\\\"relative\\\">\\n\\t\\t\\t<ng-template for=\\\"body\\\"\\n\\t\\t\\t\\t\\t\\t let-$cell\\n\\t\\t\\t\\t\\t\\t let-$view=\\\"$view\\\">\\n\\t\\t\\t\\t<div [ngStyle]=\\\"{'padding-left': $view.group.offset($cell.row, $cell.column) + 'px'}\\\"\\n\\t\\t\\t\\t\\t class=\\\"q-grid-group-box\\\"\\n\\t\\t\\t\\t\\t *ngIf=\\\"$view.group.isVisible($cell.row, $cell.column)\\\">\\n\\t\\t\\t\\t\\t<button (click)=\\\"$view.group.toggleStatus.execute($cell.row, $cell.column)\\\"\\n\\t\\t\\t\\t\\t\\t\\t*ngIf=\\\"$view.group.toggleStatus.canExecute($cell.row, $cell.column)\\\"\\n\\t\\t\\t\\t\\t\\t\\ttabindex=\\\"-1\\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"q-grid-group-button\\\"\\n\\t\\t\\t\\t\\t\\t\\tmat-icon-button>\\n\\t\\t\\t\\t\\t\\t<mat-icon class=\\\"q-grid-icon\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{$view.group.status($cell.row, $cell.column) === 'expand' ? 'folder_open' : 'folder'}}\\n\\t\\t\\t\\t\\t\\t</mat-icon>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t<mat-icon class=\\\"q-grid-icon\\\"\\n\\t\\t\\t\\t\\t\\t\\t  *ngIf=\\\"($view.group.value($cell.row, $cell.column)).startsWith('file')\\\">\\n\\t\\t\\t\\t\\t\\tinsert_drive_file\\n\\t\\t\\t\\t\\t</mat-icon>\\n\\t\\t\\t\\t\\t<div class=\\\"q-grid-group-description\\\">\\n\\t\\t\\t\\t\\t\\t<span>{{$view.group.value($cell.row, $cell.column)}}</span>\\n\\t\\t\\t\\t\\t\\t<span *ngIf=\\\" $view.group.toggleStatus.canExecute($cell.row,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t $cell.column)\\\">\\n\\t\\t\\t\\t\\t\\t\\t({{$view.group.count($cell.row, $cell.column)}})\\n\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</ng-template>\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \".q-grid-icon {\\n  color: #757575;\\n  opacity: 1 !important; }\\n\\n.q-grid-group-box {\\n  display: flex; }\\n\\n.q-grid-group-description {\\n  margin-top: 6px; }\\n\\nbutton {\\n  margin-left: 1px !important; }\\n\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { Grid, GridModel, Command, Node } from 'ng2-qgrid';\n\n@Component({\n\tselector: 'example-hierarchy-browser-basic',\n\ttemplateUrl: 'example-hierarchy-browser-basic.component.html',\n\tstyleUrls: ['example-hierarchy-browser-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleHierarchyBrowserBasicComponent {\n\tstatic id = 'hierarchy-browser-basic';\n\n\tgridModel: GridModel;\n\n\tconstructor(qgrid: Grid) {\n\t\tthis.gridModel = qgrid.model();\n\n\t\tconst root = new Node('$root', 0);\n\t\t(root as any).isVisited = false;\n\n\t\tconst tree = [root];\n\t\tconst service = qgrid.service(this.gridModel);\n\t\tconst treePipe = (memo, context, next) => {\n\t\t\tmemo.nodes = tree;\n\t\t\tnext(memo);\n\t\t};\n\n\t\tthis.gridModel\n\t\t\t.data({\n\t\t\t\tpipe: [\n\t\t\t\t\tqgrid.pipe.memo,\n\t\t\t\t\ttreePipe,\n\t\t\t\t\tqgrid.pipe.column,\n\t\t\t\t\tqgrid.pipe.view\n\t\t\t\t]\n\t\t\t})\n\t\t\t.group({\n\t\t\t\ttoggle: new Command({\n\t\t\t\t\texecute: function execute(node) {\n\t\t\t\t\t\tif (node.isVisited) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnode.isVisited = true;\n\t\t\t\t\t\tconst length = Math.floor(Math.random() * 9 + 1);\n\t\t\t\t\t\tconst level = node.level + 1;\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tnode.children = Array.from(new Array(length), function (x, i) {\n\t\t\t\t\t\t\t\tconst type = Math.floor(Math.random() * 5) < 3 ? 'group' : 'value';\n\t\t\t\t\t\t\t\tconst title = type === 'group' ? 'folder' : 'file';\n\t\t\t\t\t\t\t\tconst child = new Node(title + ' [' + level + ',' + i + '] ', level, type);\n\t\t\t\t\t\t\t\t(child as any).isVisited = false;\n\t\t\t\t\t\t\t\treturn child;\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tservice.invalidate();\n\t\t\t\t\t\t}, 500);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t\t\t.selection({\n\t\t\t\tmode: 'multiple',\n\t\t\t\tunit: 'row',\n\t\t\t\tarea: 'custom',\n\t\t\t\tkey: {\n\t\t\t\t\trow: function row(node) {\n\t\t\t\t\t\treturn node.key;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Import CSV Basic\\\"\\n        [rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n\\n\\t<q-grid-import options=\\\"{head:'numeric'}\\\">\\n\\t\\t<ng-template for=\\\"trigger\\\" let-$action>\\n\\t\\t\\t<button mat-button (click)=\\\"$action.execute()\\\">Import file</button>\\n\\t\\t</ng-template>\\n\\t</q-grid-import>\\n</q-grid>\\n\"","module.exports = \"\"","import { AfterViewInit, Component, ViewChild, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport * as XLSX from 'xlsx';\n\nimport { DataService, Atom } from '../data.service';\nimport { GridComponent } from 'ng2-qgrid';\n\n@Component({\n\tselector: 'example-import-basic',\n\ttemplateUrl: 'example-import-basic.component.html',\n\tstyleUrls: ['example-import-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleImportBasicComponent implements AfterViewInit {\n\tstatic id = 'import-basic';\n\n\t@ViewChild(GridComponent) myGrid: GridComponent;\n\trows: Observable<Atom[]> = of([]);\n\n\tngAfterViewInit() {\n\t\tthis.myGrid.model.plugin({\n\t\t\timports: {\n\t\t\t\t'xlsx': XLSX\n\t\t\t}\n\t\t});\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Import CSV Basic\\\"\\n\\t\\t[rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n\\n\\t<q-grid-import>\\n\\t</q-grid-import>\\n</q-grid>\\n\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { DataService, Atom } from '../data.service';\n\n@Component({\n\tselector: 'example-import-csv',\n\ttemplateUrl: 'example-import-csv.component.html',\n\tstyleUrls: ['example-import-csv.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleImportCsvComponent {\n\tstatic id = 'import-csv';\n\n\trows: Observable<Atom[]> = of([]);\n}\n","module.exports = \"<q-grid caption=\\\"Index Column Basic\\\"\\n\\t\\t[rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns>\\n\\t\\t<q-grid-column key=\\\"symbol\\\"\\n\\t\\t\\t\\t\\t   [index]=\\\"1\\\"\\n\\t\\t\\t\\t\\t   title=\\\"[1]Symbol\\\"\\n\\t\\t\\t\\t\\t   type=\\\"text\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"source\\\"\\n\\t\\t\\t\\t\\t   title=\\\"[3]Wiki\\\"\\n\\t\\t\\t\\t\\t   [width]=\\\"300\\\"\\n\\t\\t\\t\\t\\t   type=\\\"url\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"name\\\"\\n\\t\\t\\t\\t\\t   title=\\\"[2]Name\\\"\\n\\t\\t\\t\\t\\t   [index]=\\\"2\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"number\\\"\\n\\t\\t\\t\\t\\t   [index]=\\\"0\\\"\\n\\t\\t\\t\\t\\t   title=\\\"[0]#\\\"\\n\\t\\t\\t\\t\\t   [width]=\\\"90\\\"\\n\\t\\t\\t\\t\\t   type=\\\"id\\\">\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-index-column-basic',\n\ttemplateUrl: 'example-index-column-basic.component.html',\n\tstyleUrls: ['example-index-column-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleIndexColumnBasicComponent {\n\tstatic id = 'index-column-basic';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Index Column Hybrid\\\"\\n\\t\\t[model]=\\\"gridModel\\\">\\n\\t<q-grid-columns>\\n\\t\\t<q-grid-column key=\\\"symbol\\\"\\n\\t\\t\\t\\t\\t   [index]=\\\"1\\\"\\n\\t\\t\\t\\t\\t   title=\\\"[html 1]Symbol\\\"\\n\\t\\t\\t\\t\\t   type=\\\"text\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"source\\\"\\n\\t\\t\\t\\t\\t   title=\\\"[html no index]Wiki\\\"\\n\\t\\t\\t\\t\\t   [width]=\\\"300\\\"\\n\\t\\t\\t\\t\\t   type=\\\"url\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"name\\\"\\n\\t\\t\\t\\t\\t   title=\\\"[html 2]Name\\\"\\n\\t\\t\\t\\t\\t   [index]=\\\"2\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"number\\\"\\n\\t\\t\\t\\t\\t   [index]=\\\"0\\\"\\n\\t\\t\\t\\t\\t   title=\\\"[html 0]#\\\"\\n\\t\\t\\t\\t\\t   [width]=\\\"90\\\"\\n\\t\\t\\t\\t\\t   type=\\\"id\\\">\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { GridModel, Grid } from 'ng2-qgrid';\n\n@Component({\n\tselector: 'example-index-column-hybrid',\n\ttemplateUrl: 'example-index-column-hybrid.component.html',\n\tstyleUrls: ['example-index-column-hybrid.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleIndexColumnHybridComponent {\n\tstatic id = 'index-column-hybrid';\n\n\tgridModel: GridModel;\n\n\tconstructor(dataService: DataService, qgrid: Grid) {\n\t\tthis.gridModel = qgrid.model();\n\n\t\tdataService\n\t\t\t.getAtoms()\n\t\t\t.subscribe(rows => {\n\t\t\t\tthis.gridModel.data({\n\t\t\t\t\trows,\n\t\t\t\t\tcolumns: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: 'name',\n\t\t\t\t\t\t\ttitle: '[js 3]Name',\n\t\t\t\t\t\t\tindex: 3\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: 'source',\n\t\t\t\t\t\t\ttitle: '[js 2]Source',\n\t\t\t\t\t\t\tindex: 2\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\tkey: 'melt',\n\t\t\t\t\t\t\ttitle: '[js 8]Melt',\n\t\t\t\t\t\t\tindex: 8\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: 'mass',\n\t\t\t\t\t\t\ttitle: '[js no index]Mass'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: 'boil',\n\t\t\t\t\t\t\ttitle: '[js 0]Boil',\n\t\t\t\t\t\t\tindex: 0\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t});\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Index Column Model\\\"\\r\\n        [model]=\\\"gridModel\\\">\\r\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { GridModel, Grid } from 'ng2-qgrid';\n\n@Component({\n\tselector: 'example-index-column-model',\n\ttemplateUrl: 'example-index-column-model.component.html',\n\tstyleUrls: ['example-index-column-model.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleIndexColumnModelComponent {\n\tstatic id = 'index-column-model';\n\n\tgridModel: GridModel;\n\n\tconstructor(dataService: DataService, qgrid: Grid) {\n\t\tthis.gridModel = qgrid.model();\n\n\t\tdataService\n\t\t\t.getAtoms()\n\t\t\t.subscribe(rows => {\n\t\t\t\tthis.gridModel.data({\n\t\t\t\t\trows,\n\t\t\t\t\tcolumns: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: 'source',\n\t\t\t\t\t\t\ttitle: '[3]Wiki',\n\t\t\t\t\t\t\ttype: 'url'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: 'symbol',\n\t\t\t\t\t\t\ttitle: '[1]Symbol',\n\t\t\t\t\t\t\tindex: 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: 'name',\n\t\t\t\t\t\t\ttitle: '[2]Name',\n\t\t\t\t\t\t\tindex: 2\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: 'number',\n\t\t\t\t\t\t\ttitle: '[0]Number',\n\t\t\t\t\t\t\tindex: 0\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t});\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Interaction Mode Detached\\\"\\n        interactionMode=\\\"detached\\\"\\n        [rows]=\\\"rows | async\\\">\\n        <q-grid-columns generation=\\\"deep\\\">\\n                <q-grid-column key=\\\"test\\\"\\n                               title=\\\"Test Detached\\\"\\n                               [index]=\\\"0\\\"\\n                               [canFilter]=\\\"false\\\"\\n                               [canSort]=\\\"false\\\">\\n                        <ng-template for=\\\"body\\\">\\n                                <button mat-button\\n                                        (click)=\\\"testDetached()\\\">\\n                                        Alert\\n                                </button>\\n                        </ng-template>\\n                </q-grid-column>\\n        </q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-interaction-mode-detached',\n\ttemplateUrl: 'example-interaction-mode-detached.component.html',\n\tstyleUrls: ['example-interaction-mode-detached.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleInteractionModeDetachedComponent {\n\tstatic id = 'interaction-mode-detached';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n\n\ttestDetached() {\n\t\talert(':-)');\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Interaction Mode Readonly\\\"\\n        interactionMode=\\\"readonly\\\"\\n        [rows]=\\\"rows | async\\\">\\n        <q-grid-columns generation=\\\"deep\\\">\\n                <q-grid-column key=\\\"test\\\"\\n                               title=\\\"Test Detached\\\"\\n                               [index]=\\\"0\\\">\\n                        <ng-template for=\\\"body\\\">\\n                                <button mat-button\\n                                        (click)=\\\"testAttached()\\\">\\n                                        Alert\\n                                </button>\\n                        </ng-template>\\n                </q-grid-column>\\n        </q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-interaction-mode-readonly',\n\ttemplateUrl: 'example-interaction-mode-readonly.component.html',\n\tstyleUrls: ['example-interaction-mode-readonly.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleInteractionModeReadonlyComponent {\n\tstatic id = 'interaction-mode-readonly';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n\n\ttestAttached() {\n\t\talert(':-)');\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Key With Symbols\\\"\\n        [rows]=\\\"rows\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService } from '../data.service';\n\n@Component({\n\tselector: 'example-key-with-symbols',\n\ttemplateUrl: 'example-key-with-symbols.component.html',\n\tstyleUrls: ['example-key-with-symbols.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleKeyWithSymbolsComponent {\n\tstatic id = 'key-with-symbols';\n\n\trows = [{\n\t\t'key.With.Symbols': {\n\t\t\t'sub.Key.With.\".\"': 'sub-key with dot',\n\t\t\t'sub.Key.With.\"@\"': 'sub-key with \"@\"',\n\t\t\t'sub.Key.With.\",\"': 'sub-key with \",\"',\n\t\t\t'sub.Key.With.\"!\"': 'sub-key with \"!\"',\n\t\t\t'sub.Key.With.\"$\"': 'sub-key with \"$\"',\n\t\t\t'sub.Key.With.\"?\"': 'sub-key with \"?\"',\n\t\t\t'sub.Key.With.\"\\'\"': 'sub-key with \"\\'\"',\n\t\t\t'sub.Key.With.\"^\"': 'sub-key with \"^\"',\n\t\t\t'sub.Key.With.\";\"': 'sub-key with \";\"',\n\t\t\t'sub.Key.With.\"#\"': 'sub-key with \"#\"',\n\t\t\t'sub.Key.With.\"%\"': 'sub-key with \"%\"'\n\t\t}\n\t}];\n}\n","module.exports = \"<q-grid caption=\\\"Layer Grid Blank\\\"\\n        [rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n\\n\\t<q-grid-layer>\\n\\t\\t<ng-template for=\\\"blank\\\">\\n\\t\\t\\t<div style=\\\"margin: 0 auto; top: 50%; width: 100px; position: relative;\\\">\\n\\t\\t\\t\\t<button (click)=\\\"loadData()\\\"\\n\\t\\t\\t\\t        mat-button>\\n\\t\\t\\t\\t\\tLoad Data\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</div>\\n\\t\\t</ng-template>\\n\\t</q-grid-layer>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-layer-grid-blank',\n\ttemplateUrl: 'example-layer-grid-blank.component.html',\n\tstyleUrls: ['example-layer-grid-blank.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleLayerGridBlankComponent {\n\tstatic id = 'layer-grid-blank';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(private dataService: DataService) {\n\t}\n\n\tloadData() {\n\t\tthis.rows = this.dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Legend Grid Basic\\\"\\n        [rows]=\\\"rows | async\\\">\\n\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t\\t<q-grid-column key=\\\"legend\\\"\\n\\t\\t               type=\\\"row-indicator\\\"\\n\\t\\t               [width]=\\\"50\\\">\\n\\t\\t\\t<ng-template for=\\\"body\\\"\\n\\t\\t\\t             let-$cell>\\n\\t\\t\\t\\t<div class=\\\"q-grid-legend-item\\\"\\n\\t\\t\\t\\t     [ngClass]=$cell.row.phase></div>\\n\\t\\t\\t</ng-template>\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n\\n\\t<q-grid-legend>\\n\\t\\t<ng-template for=\\\"content\\\">\\n\\t\\t\\t<ul class=\\\"q-grid-legend-list\\\">\\n\\t\\t\\t\\t<li>\\n\\t\\t\\t\\t\\t<div class=\\\"q-grid-legend-item Gas\\\"></div>\\n\\t\\t\\t\\t\\tGas\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t<li>\\n\\t\\t\\t\\t\\t<div class=\\\"q-grid-legend-item Solid\\\"></div>\\n\\t\\t\\t\\t\\tSolid\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t<li>\\n\\t\\t\\t\\t\\t<div class=\\\"q-grid-legend-item Liquid\\\"></div>\\n\\t\\t\\t\\t\\tLiquid\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t</ul>\\n\\t\\t</ng-template>\\n\\t</q-grid-legend>\\n</q-grid>\"","module.exports = \"div.Gas {\\n  background: #03D1C5; }\\n\\ndiv.Solid {\\n  background: #C875B3; }\\n\\ndiv.Liquid {\\n  background: #2F92F7; }\\n\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-legend-grid-basic',\n\ttemplateUrl: 'example-legend-grid-basic.component.html',\n\tstyleUrls: ['example-legend-grid-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleLegendGridBasicComponent {\n\tstatic id = 'legend-grid-basic';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Live Data Basic\\\"\\t\\n\\t\\t[rows]=\\\"rows\\\"\\n\\t\\t[styleCell]=\\\"styleCell\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t\\t<q-grid-column key=\\\"metal\\\" [width]=\\\"190\\\"></q-grid-column>\\n\\t\\t<q-grid-column key=\\\"ldn1\\\" title=\\\"LDN\\\" [width]=\\\"70\\\"></q-grid-column>\\n\\t\\t<q-grid-column key=\\\"bid\\\" [width]=\\\"100\\\" type=\\\"currency\\\"></q-grid-column>\\n\\t\\t<q-grid-column key=\\\"ask\\\" [width]=\\\"100\\\" type=\\\"currency\\\"></q-grid-column>\\n\\t\\t<q-grid-column key=\\\"ldn2\\\" title=\\\"LDN\\\" [width]=\\\"70\\\"></q-grid-column>\\n\\t\\t<q-grid-column key=\\\"last\\\" [width]=\\\"100\\\" type=\\\"currency\\\" [canSort]=\\\"false\\\"></q-grid-column>\\n\\t\\t<q-grid-column key=\\\"ldn3\\\" title=\\\"LDN\\\" [width]=\\\"70\\\"></q-grid-column>\\n\\t\\t<!-- <q-grid-column title=\\\"+/-\\\" key=\\\"diff\\\" type=\\\"number\\\" [width]=\\\"70\\\" [value]=\\\"diff\\\" [canSort]=\\\"false\\\" [canFilter]=\\\"false\\\"></q-grid-column> -->\\n\\t\\t<q-grid-column key=\\\"high\\\" [width]=\\\"100\\\" type=\\\"currency\\\"></q-grid-column>\\n\\t\\t<q-grid-column key=\\\"low\\\" [width]=\\\"100\\\" type=\\\"currency\\\"></q-grid-column>\\n\\t\\t<q-grid-column key=\\\"volume\\\" [width]=\\\"100\\\" type=\\\"currency\\\"></q-grid-column>\\n\\t\\t<q-grid-column key=\\\"settle\\\" [width]=\\\"100\\\" type=\\\"currency\\\"></q-grid-column>\\n\\t\\t<q-grid-column key=\\\"ldn4\\\" title=\\\"LDN\\\" [width]=\\\"70\\\"></q-grid-column>\\n\\t\\t<q-grid-column key=\\\"previous\\\" [isVisible]=\\\"false\\\"></q-grid-column>\\t\\t\\t\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \".q-grid-last.negative {\\n  color: #E46859 !important; }\\n\\n.q-grid-last.positive {\\n  color: #228B0F !important; }\\n\"","import { Component, ChangeDetectionStrategy, ChangeDetectorRef, ViewEncapsulation, OnDestroy } from '@angular/core';\nimport { DataService, Quote } from '../data.service';\nimport { Column, StyleCellContext } from 'ng2-qgrid';\n\nfunction diff(cell) {\n\tconst row = cell.$row;\n\treturn row.last - row.previous;\n}\n\n@Component({\n\tselector: 'example-live-data-basic',\n\ttemplateUrl: 'example-live-data-basic.component.html',\n\tstyleUrls: ['example-live-data-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ExampleLiveDataBasicComponent implements OnDestroy {\n\tstatic id = 'live-data-basic';\n\n\tprivate isLive = true;\n\n\trows: Quote[];\n\n\tconstructor(dataService: DataService, private cd: ChangeDetectorRef) {\n\t\tdataService.getQuotes().subscribe(quotes => {\n\t\t\tthis.rows = quotes;\n\t\t\tthis.update();\n\t\t});\n\t}\n\n\tstyleCell(row: Quote, column: Column, context: StyleCellContext) {\n\t\tif (column.key === 'last') {\n\t\t\tconst d = diff({ $row: row });\n\t\t\tif (d !== 0) {\n\t\t\t\tcontext.class(d > 0 ? 'positive' : 'negative');\n\t\t\t}\n\t\t}\n\t}\n\n\tupdate() {\n\t\tif (!this.isLive) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst interval = this.random(200, 2000);\n\t\tsetTimeout(() => {\n\t\t\tthis.rows.forEach(quote => {\n\t\t\t\tconst hasChanges = this.random(0, 2);\n\t\t\t\tif (hasChanges) {\n\t\t\t\t\tconst rnd = this.random(-5, 5);\n\t\t\t\t\tquote.last = quote.last + rnd;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.cd.detectChanges();\n\t\t\tthis.update();\n\t\t}, interval);\n\t}\n\n\trandom(min, max) {\n\t\treturn Math.floor(Math.random() * (max - min)) + min;\n\t}\n\n\tngOnDestroy() {\n\t\tthis.isLive = false;\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Look Atoms\\\"\\n        [rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-look-atoms-basic',\n\ttemplateUrl: 'example-look-atoms-basic.component.html',\n\tstyleUrls: ['example-look-atoms-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleLookAtomsBasicComponent {\n\tstatic id = 'look-atoms-basic';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Look Atoms Customized\\\"\\n        [rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t\\t<q-grid-column key=\\\"color\\\"\\n\\t\\t               title=\\\"\\\"\\n\\t\\t               type=\\\"row-indicator\\\"\\n\\t\\t               [width]=\\\"50\\\">\\n\\t\\t\\t<ng-template for=\\\"body\\\"\\n\\t\\t\\t             let-$cell>\\n\\t\\t\\t\\t<div class=\\\"atom-color\\\"\\n\\t\\t\\t\\t     [style.background-color]=\\\"'#' + $cell.value\\\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</ng-template>\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"number\\\"\\n\\t\\t               type=\\\"id\\\"\\n\\t\\t               title=\\\"#\\\"\\n\\t\\t               [width]=\\\"60\\\"\\n\\t\\t               [canFilter]=\\\"false\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"symbol\\\"\\n\\t\\t               [width]=\\\"80\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"source\\\"\\n\\t\\t               type=\\\"url\\\"\\n\\t\\t               [width]=\\\"100\\\"\\n\\t\\t               label=\\\"wiki\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"summary\\\"\\n\\t\\t               [width]=\\\"250\\\"\\n\\t\\t               [viewWidth]=\\\"500\\\"\\n\\t\\t               editor=\\\"text-area\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"discoveredIn\\\"\\n\\t\\t               [width]=\\\"100\\\">\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \".atom-color {\\n  width: 10px;\\n  height: 10px;\\n  border-radius: 10px; }\\n\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-look-atoms-customized',\n\ttemplateUrl: 'example-look-atoms-customized.component.html',\n\tstyleUrls: ['example-look-atoms-customized.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleLookAtomsCustomizedComponent {\n\tstatic id = 'look-atoms-customized';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Look Atoms Id\\\"\\n        [rows]=\\\"rows | async\\\"\\n        #myGrid>\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ViewChild, AfterViewInit, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\nimport { GridComponent } from 'ng2-qgrid';\n\n@Component({\n\tselector: 'example-look-atoms-id',\n\ttemplateUrl: 'example-look-atoms-id.component.html',\n\tstyleUrls: ['example-look-atoms-id.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleLookAtomsIdComponent implements AfterViewInit {\n\tstatic id = 'look-atoms-id';\n\n\t@ViewChild(GridComponent) myGrid: GridComponent;\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.myGrid.model.dataChanged.watch((e, off) => {\n\t\t\tif (e.hasChanges('columns')) {\n\t\t\t\tthis.myGrid.model.sort({\n\t\t\t\t\tby: ['number']\n\t\t\t\t});\n\n\t\t\t\toff();\n\t\t\t}\n\t\t});\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Look Atoms Model\\\"\\r\\n        [model]=\\\"gridModel\\\">\\r\\n\\t<q-grid-columns generation=\\\"deep\\\">\\r\\n\\t</q-grid-columns>\\r\\n</q-grid>\\r\\n\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { GridModel, Grid } from 'ng2-qgrid';\n\n@Component({\n\tselector: 'example-look-atoms-model',\n\ttemplateUrl: 'example-look-atoms-model.component.html',\n\tstyleUrls: ['example-look-atoms-model.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleLookAtomsModelComponent {\n\tstatic id = 'look-atoms-model';\n\n\tgridModel: GridModel;\n\n\tconstructor(dataService: DataService, qgrid: Grid) {\n\t\tthis.gridModel = qgrid.model();\n\n\t\tdataService\n\t\t\t.getAtoms()\n\t\t\t.subscribe(rows => this.gridModel.data({ rows }));\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Look People Basic\\\"\\n        [rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Human } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-look-people-basic',\n\ttemplateUrl: 'example-look-people-basic.component.html',\n\tstyleUrls: ['example-look-people-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleLookPeopleBasicComponent {\n\tstatic id = 'look-people-basic';\n\n\trows: Observable<Human[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getPeople();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Look People Model\\\"\\r\\n        [model]=\\\"gridModel\\\">\\r\\n\\t<q-grid-columns generation=\\\"deep\\\">\\r\\n\\t</q-grid-columns>\\r\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { GridModel, Grid } from 'ng2-qgrid';\n\n@Component({\n\tselector: 'example-look-people-model',\n\ttemplateUrl: 'example-look-people-model.component.html',\n\tstyleUrls: ['example-look-people-model.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleLookPeopleModelComponent {\n\tstatic id = 'look-people-model';\n\n\tgridModel: GridModel;\n\n\tconstructor(dataService: DataService, qgrid: Grid) {\n\t\tthis.gridModel = qgrid.model();\n\n\t\tdataService\n\t\t\t.getPeople()\n\t\t\t.subscribe(rows => this.gridModel.data({ rows }));\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Look Quotes Basic\\\"\\n        [rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Quote } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-look-quotes-basic',\n\ttemplateUrl: 'example-look-quotes-basic.component.html',\n\tstyleUrls: ['example-look-quotes-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleLookQuotesBasicComponent {\n\tstatic id = 'look-quotes-basic';\n\n\trows: Observable<Quote[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getQuotes();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Look Quotes Model\\\"\\r\\n        [model]=\\\"gridModel\\\">\\r\\n\\t<q-grid-columns generation=\\\"deep\\\">\\r\\n\\t</q-grid-columns>\\r\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { GridModel, Grid } from 'ng2-qgrid';\n\n@Component({\n\tselector: 'example-look-quotes-model',\n\ttemplateUrl: 'example-look-quotes-model.component.html',\n\tstyleUrls: ['example-look-quotes-model.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleLookQuotesModelComponent {\n\tstatic id = 'look-quotes-model';\n\n\tgridModel: GridModel;\n\n\tconstructor(dataService: DataService, qgrid: Grid) {\n\t\tthis.gridModel = qgrid.model();\n\n\t\tdataService\n\t\t\t.getQuotes()\n\t\t\t.subscribe(rows => this.gridModel.data({ rows }));\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Manipulate Data Basic\\\"\\n        [rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t\\t<q-grid-column key=\\\"rowIndicator\\\"\\n\\t\\t               type=\\\"row-indicator\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"rowOptions\\\"\\n\\t\\t               type=\\\"row-options\\\">\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n\\n\\t<q-grid-data-manipulation>\\n\\t</q-grid-data-manipulation>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Human } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-manipulate-data-basic',\n\ttemplateUrl: 'example-manipulate-data-basic.component.html',\n\tstyleUrls: ['example-manipulate-data-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleManipulateDataBasicComponent {\n\tstatic id = 'manipulate-data-basic';\n\n\trows: Observable<Human[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getPeople();\n\t}\n}\n","module.exports = \"<div class=\\\"master-details\\\">\\n\\t<div class=\\\"grid\\\">\\n\\t\\t<q-grid caption=\\\"Master Details\\\"\\n\\t\\t\\t\\t[selectionMode]=\\\"'single'\\\"\\n\\t\\t\\t\\t[selectionUnit]=\\\"'row'\\\"\\n\\t\\t\\t\\t[model]=\\\"gridModel\\\"\\n\\t\\t\\t\\t[rows]=\\\"rows | async\\\">\\n\\t\\t\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t\\t\\t</q-grid-columns>\\n\\t\\t</q-grid>\\n\\t</div>\\n\\n\\t<div class=\\\"grid\\\">\\n\\t\\t<h3 class=\\\"mat-title\\\">People who likes:\\n\\t\\t\\t<mat-chip-list class=\\\"likes-list\\\">\\n\\t\\t\\t\\t<mat-chip *ngFor=\\\"let like of likes\\\" disabled=\\\"true\\\">\\n\\t\\t\\t\\t\\t{{like}}\\n\\t\\t\\t\\t</mat-chip>\\n\\t\\t\\t</mat-chip-list>\\n\\t\\t</h3>\\n\\t\\t<q-grid caption=\\\"People who likes:\\\"\\n\\t\\t\\t\\t[rows]=\\\"detailsRows | async\\\">\\n\\n\\t\\t\\t<q-grid-toolbar>\\n\\t\\t\\t\\t<ng-template for=\\\"top\\\">\\n\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t</q-grid-toolbar>\\n\\n\\t\\t\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t\\t\\t</q-grid-columns>\\n\\t\\t</q-grid>\\n\\t</div>\\n</div>\\n\"","module.exports = \".master-details {\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%; }\\n\\n.grid {\\n  height: 49%; }\\n\\n.likes-list {\\n  display: inline-flex;\\n  margin-left: 20px;\\n  outline: none; }\\n\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Human } from '../data.service';\nimport { Observable } from 'rxjs';\nimport { GridModel, Grid } from 'ng2-qgrid';\nimport { map } from 'rxjs/operators';\n\n@Component({\n\tselector: 'example-master-details-basic',\n\ttemplateUrl: 'example-master-details-basic.component.html',\n\tstyleUrls: ['example-master-details-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleMasterDetailsBasicComponent {\n\tstatic id = 'master-details-basic';\n\n\tgridModel: GridModel;\n\trows: Observable<Human[]>;\n\tdetailsRows: Observable<Human[]>;\n\tlikes: string[] = [];\n\n\tconstructor(dataService: DataService, qgrid: Grid) {\n\t\tthis.gridModel = qgrid.model();\n\t\tthis.rows = dataService.getPeople();\n\n\t\tthis.gridModel.selectionChanged.watch(e => {\n\t\t\tconst items = e.state.items;\n\t\t\tif (items.length) {\n\t\t\t\tthis.likes = items[0].likes;\n\n\t\t\t\tthis.detailsRows = dataService.getPeople().pipe(\n\t\t\t\t\tmap(humans =>\n\t\t\t\t\t\thumans.filter(human =>\n\t\t\t\t\t\t\tthis.likes.every(like => human.likes.indexOf(like) >= 0)))\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"On Push Basic\\\"\\n        [rows]=\\\"rows | async\\\"\\n        editMode=\\\"cell\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n\\n\\t<q-grid-row [canMove]=\\\"true\\\">\\n\\t</q-grid-row>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy, AfterViewInit, ViewChild } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\nimport { GridComponent } from 'ng2-qgrid';\n\n@Component({\n\tselector: 'example-on-push-basic',\n\ttemplateUrl: 'example-on-push-basic.component.html',\n\tstyleUrls: ['example-on-push-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleOnPushBasicComponent implements AfterViewInit {\n\tstatic id = 'on-push-basic';\n\n\t@ViewChild(GridComponent) myGrid: GridComponent;\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n\n\tngAfterViewInit() {\n\t\tsetTimeout(() => {\n\t\t\tconst { rows } = this.myGrid.model.data();\n\t\t\tif (rows.length) {\n\t\t\t\trows[0].number = rows[0].number + 1;\n\t\t\t}\n\t\t}, 1000);\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Pagination Basic\\\"\\n        [rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n\\n\\t<q-grid-pager [size]=\\\"10\\\" [sizeList]=\\\"[5, 10, 20]\\\">\\n\\t</q-grid-pager>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-pagination-basic',\n\ttemplateUrl: 'example-pagination-basic.component.html',\n\tstyleUrls: ['example-pagination-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExamplePaginationBasicComponent {\n\tstatic id = 'pagination-basic';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Pane Basic\\\"\\n\\t\\t[rows]=\\\"rows$ | async\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n\\n\\t<q-grid-pane trigger=\\\"selection.items\\\">\\n\\t\\t<ng-template for=\\\"right\\\"\\n\\t\\t\\t\\t\\t let-$pane\\n\\t\\t\\t\\t\\t let-$cell=\\\"cell\\\">\\n\\t\\t\\t<button mat-icon-button\\n\\t\\t\\t\\t\\tstyle=\\\"float: right;\\\"\\n\\t\\t\\t\\t\\t(click)=\\\"$pane.close('right')\\\">\\n\\t\\t\\t\\t<mat-icon>close</mat-icon>\\n\\t\\t\\t</button>\\n\\n\\t\\t\\t<h2>{{$cell.row.name.last}}, {{$cell.row.name.first}}</h2>\\n\\t\\t</ng-template>\\n\\t</q-grid-pane>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Human } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-pane-basic',\n\ttemplateUrl: 'example-pane-basic.component.html',\n\tstyleUrls: ['example-pane-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExamplePaneBasicComponent {\n\tstatic id = 'pane-basic';\n\n\trows$: Observable<Human[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows$ = dataService.getPeople();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Pane Trigger\\\"\\n\\t\\t[rows]=\\\"rows$ | async\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n\\n\\t<q-grid-actions>\\n\\t\\t<q-grid-action icon=\\\"details\\\"\\n\\t\\t\\t\\t\\t   title=\\\"Open Pane\\\"\\n\\t\\t\\t\\t\\t   [command]=\\\"openPane\\\">\\n\\t\\t</q-grid-action>\\n\\t</q-grid-actions>\\n\\n\\t<q-grid-pane>\\n\\t\\t<ng-template for=\\\"right\\\"\\n\\t\\t\\t\\t\\t let-$pane\\n\\t\\t\\t\\t\\t let-$cell=\\\"cell\\\">\\n\\t\\t\\t<button mat-icon-button\\n\\t\\t\\t\\t\\tstyle=\\\"float: right;\\\"\\n\\t\\t\\t\\t\\t(click)=\\\"$pane.close('right')\\\">\\n\\t\\t\\t\\t<mat-icon>close</mat-icon>\\n\\t\\t\\t</button>\\n\\n\\t\\t\\t<h2>{{$cell.row.name.last}}, {{$cell.row.name.first}}</h2>\\n\\t\\t</ng-template>\\n\\t</q-grid-pane>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy, ViewChild } from '@angular/core';\nimport { DataService, Human } from '../data.service';\nimport { Observable } from 'rxjs';\nimport { Command, GridComponent, PaneComponent } from 'ng2-qgrid';\n\n@Component({\n\tselector: 'example-pane-trigger',\n\ttemplateUrl: 'example-pane-trigger.component.html',\n\tstyleUrls: ['example-pane-trigger.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExamplePaneTriggerComponent {\n\tstatic id = 'pane-trigger';\n\n\t@ViewChild(GridComponent) grid: GridComponent;\n\t@ViewChild(PaneComponent) pane: PaneComponent;\n\n\trows$: Observable<Human[]>;\n\n\topenPane = new Command({\n\t\texecute: () => this.pane.open('right'),\n\t\tcanExecute: () => !!this.grid.model.navigation().cell,\n\t});\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows$ = dataService.getPeople();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Persistence Basic\\\"\\n        [rows]=\\\"rows | async\\\"\\n        id=\\\"persistence-basic\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n\\n\\t<q-grid-persistence>\\n\\t</q-grid-persistence>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-persistence-basic',\n\ttemplateUrl: 'example-persistence-basic.component.html',\n\tstyleUrls: ['example-persistence-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExamplePersistenceBasicComponent {\n\tstatic id = 'persistence-basic';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Persistence Server\\\"\\n        [rows]=\\\"rows | async\\\"\\n        [model]=\\\"gridModel\\\"\\n        id=\\\"persistence-server\\\">\\n\\t<q-grid-toolbar>\\n\\t\\t<ng-template for=\\\"top\\\">\\n\\t\\t\\t<div class=\\\"persistence-server-toolbar\\\">\\n\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t<mat-select [(value)]=\\\"currentUser\\\"\\n\\t\\t\\t\\t\\t            placeholder=\\\"Select user\\\">\\n\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let user of users | async\\\"\\n\\t\\t\\t\\t\\t\\t            [value]=\\\"user\\\">{{user}}</mat-option>\\n\\t\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t<q-grid-action-bar>\\n\\t\\t\\t\\t</q-grid-action-bar>\\n\\t\\t\\t</div>\\n\\t\\t</ng-template>\\n\\t</q-grid-toolbar>\\n\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n\\n\\t<q-grid-persistence>\\n\\t</q-grid-persistence>\\n</q-grid>\\n\"","module.exports = \".persistence-server-toolbar {\\n  display: flex; }\\n  .persistence-server-toolbar :last-child {\\n    flex: 1 1 auto; }\\n\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { GridModel, Grid } from 'ng2-qgrid';\n\nimport { DataService, Atom } from '../data.service';\n\n@Component({\n\tselector: 'example-persistence-server',\n\ttemplateUrl: 'example-persistence-server.component.html',\n\tstyleUrls: ['example-persistence-server.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExamplePersistenceServerComponent {\n\tstatic id = 'persistence-server';\n\n\tgridModel: GridModel;\n\trows: Observable<Atom[]>;\n\tcurrentUser = 'user1';\n\tusers: Observable<string[]>;\n\n\tconstructor(private dataService: DataService, private qgrid: Grid) {\n\t\tthis.rows = dataService.getAtoms();\n\t\tthis.users = dataService.getUsers();\n\t\tthis.gridModel = this.qgrid.model();\n\t\tthis.gridModel.persistence({\n\t\t\tstorage: this.storage\n\t\t});\n\t}\n\n\tget storage() {\n\t\treturn {\n\t\t\tgetItem: id => {\n\t\t\t\treturn new Promise(resolve => {\n\t\t\t\t\tthis.dataService\n\t\t\t\t\t\t.getAtomPresets(id, this.currentUser)\n\t\t\t\t\t\t.subscribe(resolve);\n\t\t\t\t});\n\t\t\t},\n\t\t\tsetItem: (id, items) => {\n\t\t\t\treturn new Promise(resolve => {\n\t\t\t\t\tthis.dataService\n\t\t\t\t\t\t.setAtomPresets(id, this.currentUser, items)\n\t\t\t\t\t\t.subscribe(resolve);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Pin Column Basic\\\"\\n        [rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t\\t<q-grid-column key=\\\"number\\\"\\n\\t\\t               pin=\\\"left\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"period\\\"\\n\\t\\t               pin=\\\"right\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"radius\\\"\\n\\t\\t               pin=\\\"right\\\">\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-pin-column-basic',\n\ttemplateUrl: 'example-pin-column-basic.component.html',\n\tstyleUrls: ['example-pin-column-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExamplePinColumnBasicComponent {\n\tstatic id = 'pin-column-basic';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Pipe Grid Basic\\\"\\r\\n        [model]=\\\"gridModel\\\">\\r\\n\\t<q-grid-columns generation=\\\"deep\\\">\\r\\n\\t</q-grid-columns>\\r\\n</q-grid>\"","module.exports = \"\"","import { Component, NgZone, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { GridModel, Grid, PipeContext } from 'ng2-qgrid';\n\n@Component({\n\tselector: 'example-pipe-grid-basic',\n\ttemplateUrl: 'example-pipe-grid-basic.component.html',\n\tstyleUrls: ['example-pipe-grid-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExamplePipeGridBasicComponent {\n\tstatic id = 'pipe-grid-basic';\n\n\tgridModel: GridModel;\n\n\tconstructor(dataService: DataService, qgrid: Grid, zone: NgZone) {\n\t\tthis.gridModel = qgrid.model();\n\n\t\tconst myDataPipe =\n\t\t\t(rows: any[], context: PipeContext, next: (data: any[]) => void) => {\n\t\t\t\tzone.runOutsideAngular(() =>\n\t\t\t\t\tsetTimeout(() =>\n\t\t\t\t\t\t\tdataService\n\t\t\t\t\t\t\t\t.getAtoms()\n\t\t\t\t\t\t\t\t.subscribe(next)\n\t\t\t\t\t\t, 1000)\n\t\t\t\t);\n\t\t\t};\n\n\t\tthis.gridModel.data({\n\t\t\tpipe: [myDataPipe].concat(qgrid.pipeUnit.view)\n\t\t});\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Pivot Column Basic\\\"\\n        [rows]=\\\"rows | async\\\"\\n        [pivotBy]=\\\"['bondingType', 'groupBlock']\\\">\\n\\t<q-grid-columns>\\n\\t\\t<q-grid-column key=\\\"name\\\"\\n\\t\\t               [width]=\\\"90\\\"\\n\\t\\t               title=\\\"Name\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"bondingType\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"groupBlock\\\">\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-pivot-column-basic',\n\ttemplateUrl: 'example-pivot-column-basic.component.html',\n\tstyleUrls: ['example-pivot-column-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExamplePivotColumnBasicComponent {\n\tstatic id = 'pivot-column-basic';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Pivot Column Cohort\\\"\\n        [rows]=\\\"rows | async\\\"\\n        [pivotBy]=\\\"['bondingType', 'groupBlock']\\\">\\n\\t<q-grid-columns>\\n\\t\\t<q-grid-column title=\\\"Name\\\">\\n\\t\\t\\t<q-grid-column key=\\\"number\\\"\\n\\t\\t\\t               title=\\\"Number\\\">\\n\\t\\t\\t</q-grid-column>\\n\\t\\t\\t<q-grid-column key=\\\"symbol\\\"\\n\\t\\t\\t               title=\\\"Symbol\\\">\\n\\t\\t\\t</q-grid-column>\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"bondingType\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"groupBlock\\\">\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-pivot-column-cohort',\n\ttemplateUrl: 'example-pivot-column-cohort.component.html',\n\tstyleUrls: ['example-pivot-column-cohort.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExamplePivotColumnCohortComponent {\n\tstatic id = 'pivot-column-cohort';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Pivot Column Group\\\"\\n        [rows]=\\\"rows | async\\\"\\n\\t[pivotBy]=\\\"['discoveredIn']\\\"\\n\\t[groupBy]=\\\"['bondingType', 'groupBlock']\\\">\\n\\t<q-grid-columns>\\n\\t\\t<q-grid-column key=\\\"name\\\"\\n\\t\\t               [width]=\\\"90\\\"\\n\\t\\t               title=\\\"Name\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"bondingType\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"groupBlock\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"discoveredIn\\\">\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-pivot-column-group',\n\ttemplateUrl: 'example-pivot-column-group.component.html',\n\tstyleUrls: ['example-pivot-column-group.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExamplePivotColumnGroupComponent {\n\tstatic id = 'pivot-column-group';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Pivot Column Template\\\"\\n        [rows]=\\\"rows | async\\\"\\n        [pivotBy]=\\\"['bondingType', 'groupBlock']\\\">\\n\\t<q-grid-columns>\\n\\t\\t<q-grid-column key=\\\"name\\\"\\n\\t\\t               [width]=\\\"90\\\"\\n\\t\\t               title=\\\"Name\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"bondingType\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"groupBlock\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column type=\\\"pivot\\\">\\n\\t\\t\\t<ng-template for=\\\"body\\\"\\n\\t\\t\\t             let-$cell\\n\\t\\t\\t             let-$view=\\\"$view\\\">\\n\\t\\t\\t\\t<div *ngIf=\\\"$cell.value\\\"\\n\\t\\t\\t\\t     [style.color]=\\\"'#' + $cell.row.color\\\"\\n\\t\\t\\t\\t     style=\\\"font-weight: bold;background: #ddd;\\\">\\n\\t\\t\\t\\t\\tX\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</ng-template>\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-pivot-column-template',\n\ttemplateUrl: 'example-pivot-column-template.component.html',\n\tstyleUrls: ['example-pivot-column-template.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExamplePivotColumnTemplateComponent {\n\tstatic id = 'pivot-column-template';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Plugin Grid Basic\\\"\\n        [rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n\\n\\t<q-grid-toolbar>\\n\\t\\t<ng-template for=\\\"bottom\\\">\\n\\t\\t\\t<example-plugin-my-pager>\\n\\t\\t\\t</example-plugin-my-pager>\\n\\t\\t</ng-template>\\n\\t</q-grid-toolbar>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-plugin-grid-basic',\n\ttemplateUrl: 'example-plugin-grid-basic.component.html',\n\tstyleUrls: ['example-plugin-grid-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExamplePluginGridBasicComponent {\n\tstatic id = 'plugin-grid-basic';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<ul>\\r\\n\\t<li *ngFor=\\\"let page of pages\\\">\\r\\n\\t\\t<button mat-raised-button\\r\\n\\t\\t        [color]=\\\"page === currentPage && 'primary'\\\"\\r\\n\\t\\t        (click)=\\\"goto.execute(page)\\\">\\r\\n\\t\\t\\t{{page + 1}}\\r\\n\\t\\t</button>\\r\\n\\t</li>\\r\\n</ul>\"","module.exports = \"ul {\\n  list-style-type: none; }\\n  ul li {\\n    display: inline; }\\n\"","import { Component, ChangeDetectionStrategy, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { GridPlugin, Command } from 'ng2-qgrid';\n\n@Component({\n\tselector: 'example-plugin-my-pager',\n\ttemplateUrl: 'example-plugin-my-pager.component.html',\n\tstyleUrls: ['example-plugin-my-pager.component.scss'],\n\tproviders: [GridPlugin],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExamplePluginMyPagerComponent implements OnInit {\n\tgoto = new Command({\n\t\texecute: page => this.currentPage = page,\n\t\tcanExecute: page => page >= 0 && page < this.numberOfPages\n\t});\n\n\tgotoNext = new Command({\n\t\texecute: () => this.currentPage = this.currentPage + 1,\n\t\tcanExecute: () => this.currentPage < this.numberOfPages - 1,\n\t\tshortcut: 'ctrl+right'\n\t});\n\n\tgotoPrev = new Command({\n\t\texecute: () => this.currentPage = this.currentPage - 1,\n\t\tcanExecute: () => this.currentPage > 0,\n\t\tshortcut: 'ctrl+left'\n\t});\n\n\tconstructor(private plugin: GridPlugin, private cd: ChangeDetectorRef) {\n\t}\n\n\tngOnInit() {\n\t\tconst { shortcut, manager } = this.model.action();\n\t\tshortcut.register(manager, [\n\t\t\tthis.gotoNext,\n\t\t\tthis.gotoPrev\n\t\t]);\n\n\t\t// If onPush is used, need to trigger change detection manually.\n\t\tthis.model.paginationChanged.on(() => this.cd.detectChanges());\n\t}\n\n\tget pages() {\n\t\treturn Array.from(Array(this.numberOfPages).keys());\n\t}\n\n\tget currentPage() {\n\t\treturn this.model.pagination().current;\n\t}\n\n\tset currentPage(value) {\n\t\tthis.model.pagination({ current: value });\n\t}\n\n\tprivate get numberOfPages() {\n\t\tconst { count, size } = this.model.pagination();\n\t\treturn Math.max(1, Math.ceil(count / size));\n\t}\n\n\tprivate get model() {\n\t\treturn this.plugin.model;\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Rest API Basic\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n\\n\\t<q-grid-rest url=\\\"http://localhost:4200/assets/atoms/118.json\\\"\\n\\t\\t\\t\\t method=\\\"get\\\">\\n\\t</q-grid-rest>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService } from '../data.service';\n\n@Component({\n\tselector: 'example-rest-api-basic',\n\ttemplateUrl: 'example-rest-api-basic.component.html',\n\tstyleUrls: ['example-rest-api-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleRestApiBasicComponent {\n\tstatic id = 'rest-api-basic';\n}\n","module.exports = \"<q-grid caption=\\\"Scroll Virtual Basic\\\"\\n        scrollMode=\\\"virtual\\\"\\n        [rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t\\t<q-grid-column type=\\\"row-number\\\"\\n\\t\\t               key=\\\"rowNumber\\\">\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n\\t<q-grid-pager [size]=\\\"20\\\">\\n\\t</q-grid-pager>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Human } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-scroll-virtual-basic',\n\ttemplateUrl: 'example-scroll-virtual-basic.component.html',\n\tstyleUrls: ['example-scroll-virtual-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleScrollVirtualBasicComponent {\n\tstatic id = 'scroll-virtual-basic';\n\n\trows: Observable<Human[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getPeople(100000);\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Scroll Virtual Details\\\"\\n        scrollMode=\\\"virtual\\\"\\n        [rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t\\t<q-grid-column key=\\\"number\\\"\\n\\t\\t               type=\\\"id\\\"\\n\\t\\t               title=\\\"#\\\"\\n\\t\\t               [width]=\\\"70\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"symbol\\\"\\n\\t\\t               title=\\\"Symbol\\\"\\n\\t\\t               [width]=\\\"90\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"name\\\"\\n\\t\\t               title=\\\"Name\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"source\\\"\\n\\t\\t               title=\\\"Source\\\"\\n\\t\\t               type=\\\"url\\\"\\n\\t\\t               [width]=\\\"300\\\">\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column *ngFor=\\\"let key of ['color', 'appearance', 'groupBlock', 'bondingType', 'period', 'radius', 'boil', 'shells', 'melt']\\\"\\n\\t\\t               [key]=key\\n\\t\\t               [isVisible]=\\\"false\\\">\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n\\n\\t<q-grid-pager [size]=\\\"20\\\">\\n\\t</q-grid-pager>\\n\\n\\t<q-grid-row unit=\\\"details\\\"\\n\\t            mode=\\\"single\\\">\\n\\n\\t\\t<ng-template for=\\\"details\\\"\\n\\t\\t             let-$cell>\\n\\n\\t\\t\\t<div class=\\\"atom-details\\\">\\n\\t\\t\\t\\t<div class=\\\"atom-box\\\"\\n\\t\\t\\t\\t     [style.background-color]=\\\"'#' + $cell.row.item.color\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"atom-number\\\">\\n\\t\\t\\t\\t\\t\\t{{$cell.row.item.number}}\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"atom-symbol\\\">\\n\\t\\t\\t\\t\\t\\t{{$cell.row.item.symbol}}\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"atom-name\\\">\\n\\t\\t\\t\\t\\t\\t{{$cell.row.item.name}}\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"atom-mass\\\">\\n\\t\\t\\t\\t\\t\\t{{$cell.row.item.mass}}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"atom-info\\\">\\n\\t\\t\\t\\t\\t<p class=\\\"atom-description\\\">\\n\\t\\t\\t\\t\\t\\t<a href={{$cell.row.item.source}}\\n\\t\\t\\t\\t\\t\\t   target=\\\"_blank\\\">{{$cell.row.item.name}}</a>\\n\\t\\t\\t\\t\\t\\twas discovered by\\n\\t\\t\\t\\t\\t\\t<a href=\\\"http://www.google.com/search?q={{$cell.row.item.discoveredBy}}\\\"\\n\\t\\t\\t\\t\\t\\t   target=\\\"_blank\\\">{{$cell.row.item.discoveredBy}}</a>\\n\\t\\t\\t\\t\\t\\tin\\n\\t\\t\\t\\t\\t\\t<em>{{$cell.row.item.discoveredIn}}</em>. {{$cell.row.item.summary}}\\n\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t</ng-template>\\n\\t</q-grid-row>\\n</q-grid>\"","module.exports = \"a {\\n  text-decoration: none;\\n  font-weight: bold; }\\n\\n.atom-details {\\n  display: flex;\\n  margin: 7px 0 7px -1px; }\\n\\n.atom-details .atom-box {\\n  width: 100px;\\n  height: 100px;\\n  border: 2px solid #C8C8C8;\\n  border-radius: 3px; }\\n\\n.atom-details .atom-info {\\n  display: flex;\\n  font-size: 15px;\\n  word-wrap: break-word;\\n  width: 45%;\\n  white-space: normal; }\\n\\n.atom-number {\\n  text-align: right;\\n  font-size: 15px;\\n  margin-top: 7px;\\n  margin-right: 7px; }\\n\\n.atom-symbol {\\n  top: 28px;\\n  font-size: 36px;\\n  text-align: center;\\n  margin-top: -4px; }\\n\\n.atom-name {\\n  text-align: center;\\n  margin-top: -6px; }\\n\\n.atom-mass {\\n  font-size: 10px;\\n  text-align: center;\\n  margin-top: 7px; }\\n\\n.atom-description {\\n  margin: auto;\\n  padding-left: 21px; }\\n\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-scroll-virtual-details',\n\ttemplateUrl: 'example-scroll-virtual-details.component.html',\n\tstyleUrls: ['example-scroll-virtual-details.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleScrollVirtualDetailsComponent {\n\tstatic id = 'scroll-virtual-details';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Scroll Virtual Drag\\\"\\n        scrollMode=\\\"virtual\\\"\\n        [rows]=\\\"rows | async\\\">\\n        <q-grid-columns generation=\\\"deep\\\">\\n        </q-grid-columns>\\n\\n        <q-grid-pager [size]=\\\"20\\\">\\n        </q-grid-pager>\\n\\n        <q-grid-row [canMove]=\\\"true\\\"></q-grid-row>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-scroll-virtual-drag',\n\ttemplateUrl: 'example-scroll-virtual-drag.component.html',\n\tstyleUrls: ['example-scroll-virtual-drag.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleScrollVirtualDragComponent {\n\tstatic id = 'scroll-virtual-drag';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Scroll Virtual Edit\\\"\\n        scrollMode=\\\"virtual\\\"\\n        [rows]=\\\"rows | async\\\"\\n        editMethod=\\\"batch\\\">\\n    <q-grid-columns generation=\\\"deep\\\">\\n        <q-grid-column key=\\\"rowIndicator\\\"\\n                       type=\\\"row-indicator\\\">\\n        </q-grid-column>\\n        <q-grid-column key=\\\"rowOptions\\\"\\n                       type=\\\"row-options\\\">\\n        </q-grid-column>\\n    </q-grid-columns>\\n\\n    <q-grid-data-manipulation>\\n    </q-grid-data-manipulation>\\n\\n    <q-grid-pager [size]=\\\"20\\\">\\n    </q-grid-pager>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-scroll-virtual-edit',\n\ttemplateUrl: 'example-scroll-virtual-edit.component.html',\n\tstyleUrls: ['example-scroll-virtual-edit.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleScrollVirtualEditComponent {\n\tstatic id = 'scroll-virtual-edit';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Scroll Virtual Group\\\"\\n        scrollMode=\\\"virtual\\\"\\n        [rows]=\\\"rows | async\\\"\\n        [groupBy]=\\\"['bondingType', 'groupBlock']\\\">\\n        <q-grid-columns generation=\\\"deep\\\">\\n        </q-grid-columns>\\n\\n        <q-grid-pager [size]=\\\"20\\\">\\n        </q-grid-pager>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-scroll-virtual-group',\n\ttemplateUrl: 'example-scroll-virtual-group.component.html',\n\tstyleUrls: ['example-scroll-virtual-group.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleScrollVirtualGroupComponent {\n\tstatic id = 'scroll-virtual-group';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Scroll Virtual Height\\\"\\n        scrollMode=\\\"virtual\\\"\\n        [rows]=\\\"rows | async\\\">\\n        <q-grid-columns generation=\\\"deep\\\">\\n                <q-grid-column type=\\\"row-number\\\"\\n                               key=\\\"rowNumber\\\">\\n                </q-grid-column>\\n        </q-grid-columns>\\n\\n        <q-grid-row [height]=\\\"48\\\"></q-grid-row>\\n\\n        <q-grid-pager [size]=\\\"20\\\">\\n        </q-grid-pager>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Human } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-scroll-virtual-height',\n\ttemplateUrl: 'example-scroll-virtual-height.component.html',\n\tstyleUrls: ['example-scroll-virtual-height.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleScrollVirtualHeightComponent {\n\tstatic id = 'scroll-virtual-height';\n\n\trows: Observable<Human[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getPeople(100000);\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Scroll Virtual Infinite\\\"\\n        scrollMode=\\\"virtual\\\"\\n        [rows]=\\\"rows | async\\\">\\n        <q-grid-columns generation=\\\"deep\\\">                \\n        </q-grid-columns>\\n\\n        <q-grid-pager [size]=\\\"20\\\">\\n        </q-grid-pager>\\n</q-grid>\"","module.exports = \"\"","import { Component, ViewChild, AfterViewInit, ChangeDetectionStrategy } from '@angular/core';\nimport { Atom, DataService } from '../data.service';\nimport { GridComponent, Grid } from 'ng2-qgrid';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-scroll-virtual-infinite',\n\ttemplateUrl: 'example-scroll-virtual-infinite.component.html',\n\tstyleUrls: ['example-scroll-virtual-infinite.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleScrollVirtualInfiniteComponent implements AfterViewInit {\n\tstatic id = 'scroll-virtual-infinite';\n\n\t@ViewChild(GridComponent) myGrid;\n\trows: Observable<Atom[]>;\n\n\tconstructor(private dataService: DataService, private qgrid: Grid) {\n\t}\n\n\tngAfterViewInit() {\n\t\tconst { model } = this.myGrid;\n\n\t\tmodel.data({\n\t\t\tpipe: [\n\t\t\t\t(rows, context, next) => {\n\t\t\t\t\tconst { skip } = model.fetch();\n\t\t\t\t\tconst { size } = model.pagination();\n\n\t\t\t\t\tthis.dataService\n\t\t\t\t\t\t.getAtoms()\n\t\t\t\t\t\t.subscribe(atoms => {\n\t\t\t\t\t\t\tconst newPage = atoms.slice(skip, skip + size);\n\t\t\t\t\t\t\tnext(rows.concat(newPage));\n\t\t\t\t\t\t});\n\n\t\t\t\t}].concat(this.qgrid.pipeUnit.view)\n\t\t});\n\t}\n}\n","module.exports = \"<div q-grid-vscroll\\n     style=\\\"height: 100%; width: 100%; overflow: auto;\\\">\\n    <ul [q-grid-vscroll-port-y]=\\\"context\\\">\\n        <li *ngFor=\\\"let item of items | qGridVscroll: context; let $index = index; trackBy: context.id\\\"\\n            [q-grid-vscroll-row]=\\\"$index\\\">\\n            {{item}}\\n        </li>\\n    </ul>\\n</div>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { VscrollContext, VscrollService } from 'ng2-qgrid';\n\n@Component({\n\tselector: 'example-scroll-virtual-list-infinite',\n\ttemplateUrl: 'example-scroll-virtual-list-infinite.component.html',\n\tstyleUrls: ['example-scroll-virtual-list-infinite.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleScrollVirtualListInfiniteComponent {\n\tstatic id = 'scroll-virtual-list-infinite';\n\n\tcontext: VscrollContext;\n\titems = [];\n\n\tconstructor(vscroll: VscrollService, cd: ChangeDetectorRef) {\n\t\tthis.context = vscroll.context({\n\t\t\tthreshold: 50,\n\t\t\temit: f => {\n\t\t\t\tf();\n\t\t\t\tcd.markForCheck();\n\t\t\t\tcd.detectChanges();\n\t\t\t},\n\t\t\tfetch: (skip, take, d) => {\n\t\t\t\tconst length = skip + take;\n\t\t\t\tconst data = Array.from(Array(length).keys());\n\t\t\t\tconst wnd = data.slice(skip, length);\n\n\t\t\t\tthis.items.push(...wnd);\n\t\t\t\td.resolve(length + take);\n\t\t\t}\n\t\t});\n\t}\n}\n","module.exports = \"<div q-grid-vscroll\\n     style=\\\"height: 100%; width: 100%; overflow: auto;\\\">\\n    <ul [q-grid-vscroll-port-y]=\\\"context\\\">\\n        <li *ngFor=\\\"let item of items | qGridVscroll: context; let $index = index; trackBy: context.id\\\"\\n            [q-grid-vscroll-row]=\\\"$index\\\">\\n            {{item}}\\n        </li>\\n    </ul>\\n</div>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { VscrollContext, VscrollService } from 'ng2-qgrid';\n\n@Component({\n\tselector: 'example-scroll-virtual-list',\n\ttemplateUrl: 'example-scroll-virtual-list.component.html',\n\tstyleUrls: ['example-scroll-virtual-list.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleScrollVirtualListComponent {\n\tstatic id = 'scroll-virtual-list';\n\n\tcontext: VscrollContext;\n\titems = Array.from(Array(200).keys());\n\n\tconstructor(vscroll: VscrollService, cd: ChangeDetectorRef) {\n\t\tthis.context = vscroll.context({\n\t\t\tthreshold: 50,\n\t\t\temit: f => {\n\t\t\t\tf();\n\t\t\t\tcd.markForCheck();\n\t\t\t\tcd.detectChanges();\n\t\t\t}\n\t\t});\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Scroll Virtual Selection\\\"\\n        scrollMode=\\\"virtual\\\"\\n        [rows]=\\\"rows | async\\\"\\n        selectionUnit=\\\"mix\\\"\\n        selectionMode=\\\"range\\\">\\n        <q-grid-columns generation=\\\"deep\\\">\\n                <q-grid-column type=\\\"select\\\" key=\\\"select\\\"></q-grid-column>\\n        </q-grid-columns>\\n\\n        <q-grid-pager [size]=\\\"20\\\">\\n        </q-grid-pager>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-scroll-virtual-selection',\n\ttemplateUrl: 'example-scroll-virtual-selection.component.html',\n\tstyleUrls: ['example-scroll-virtual-selection.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleScrollVirtualSelectionComponent {\n\tstatic id = 'scroll-virtual-selection';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Scroll Virtual Style\\\"\\n        scrollMode=\\\"virtual\\\"\\n        [styleCell]=\\\"styleCell\\\"\\n        [rows]=\\\"rows | async\\\">\\n        <q-grid-columns generation=\\\"deep\\\">\\n                <q-grid-column type=\\\"row-number\\\"\\n                               [width]=\\\"100\\\"\\n                               key=\\\"number\\\">\\n                </q-grid-column>\\n        </q-grid-columns>\\n\\n        <q-grid-row [height]=\\\"48\\\"></q-grid-row>\\n\\n        <q-grid-pager [size]=\\\"16\\\">\\n        </q-grid-pager>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Human } from '../data.service';\nimport { Observable } from 'rxjs';\nimport { Column, StyleCellContext } from 'ng2-qgrid';\n\n@Component({\n\tselector: 'example-scroll-virtual-style',\n\ttemplateUrl: 'example-scroll-virtual-style.component.html',\n\tstyleUrls: ['example-scroll-virtual-style.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleScrollVirtualStyleComponent {\n\tstatic id = 'scroll-virtual-style';\n\n\trows: Observable<Human[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getPeople();\n\t}\n\n\tstyleCell(row: Human, column: Column, ctx: StyleCellContext) {\n\t\tif (column.key === 'gender') {\n\t\t\tctx.class(row.gender, { color: row.gender === 'female' ? 'red' : 'blue' });\n\t\t}\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Select Cell Basic\\\"\\n        [rows]=\\\"rows | async\\\"\\n        selectionUnit=\\\"cell\\\"\\n        selectionMode=\\\"range\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Human } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-select-cell-basic',\n\ttemplateUrl: 'example-select-cell-basic.component.html',\n\tstyleUrls: ['example-select-cell-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleSelectCellBasicComponent {\n\tstatic id = 'select-cell-basic';\n\n\trows: Observable<Human[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getPeople();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Select Column Basic\\\"\\n        [rows]=\\\"rows | async\\\"\\n        selectionUnit=\\\"column\\\"\\n        selectionMode=\\\"multiple\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Human } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-select-column-basic',\n\ttemplateUrl: 'example-select-column-basic.component.html',\n\tstyleUrls: ['example-select-column-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleSelectColumnBasicComponent {\n\tstatic id = 'select-column-basic';\n\n\trows: Observable<Human[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getPeople();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Select Mix Basic\\\"\\n        [rows]=\\\"rows | async\\\"\\n        selectionUnit=\\\"mix\\\"\\n        selectionMode=\\\"multiple\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Human } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-select-mix-basic',\n\ttemplateUrl: 'example-select-mix-basic.component.html',\n\tstyleUrls: ['example-select-mix-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleSelectMixBasicComponent {\n\tstatic id = 'select-mix-basic';\n\n\trows: Observable<Human[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getPeople();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Select Row Basic\\\"\\n        [rows]=\\\"rows | async\\\"\\n        selectionUnit=\\\"row\\\"\\n        selectionMode=\\\"multiple\\\"\\n        selectionArea=\\\"body\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Human } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-select-row-basic',\n\ttemplateUrl: 'example-select-row-basic.component.html',\n\tstyleUrls: ['example-select-row-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleSelectRowBasicComponent {\n\tstatic id = 'select-row-basic';\n\n\trows: Observable<Human[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getPeople();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Select Row Command\\\"\\n        [rows]=\\\"rows | async\\\"\\n        selectionUnit=\\\"row\\\"\\n        selectionMode=\\\"single\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy, AfterViewInit, ViewChild } from '@angular/core';\nimport { DataService, Human } from '../data.service';\nimport { Observable } from 'rxjs';\nimport { GridComponent, Command } from 'ng2-qgrid';\n\n@Component({\n\tselector: 'example-select-row-command',\n\ttemplateUrl: 'example-select-row-command.component.html',\n\tstyleUrls: ['example-select-row-command.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleSelectRowCommandComponent implements AfterViewInit {\n\tstatic id = 'select-row-command';\n\n\t@ViewChild(GridComponent) grid: GridComponent;\n\trows: Observable<Human[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getPeople();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst { model } = this.grid;\n\n\t\tmodel.selection({\n\t\t\ttoggle: new Command({\n\t\t\t\tcanExecute: e => {\n\t\t\t\t\treturn e.items[0] !== model.selection().items[0];\n\t\t\t\t}\n\t\t\t})\n\t\t});\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Select Row Disable Unselect\\\"\\n        [rows]=\\\"rows | async\\\"\\n        class=\\\"q-grid-embed\\\"\\n        selectionUnit=\\\"row\\\"\\n        selectionMode=\\\"single\\\">\\n    <q-grid-columns generation=\\\"deep\\\">\\n        <q-grid-column type=\\\"select\\\"\\n                       isVisible=\\\"false\\\">\\n        </q-grid-column>\\n    </q-grid-columns>\\n</q-grid>\\n\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy, ViewChild, AfterViewInit } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\nimport { GridComponent } from 'ng2-qgrid';\n\n@Component({\n\tselector: 'example-action-bar-basic',\n\ttemplateUrl: 'example-select-row-disable-unselect.component.html',\n\tstyleUrls: ['example-select-row-disable-unselect.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleSelectRowDisableUnselectComponent implements AfterViewInit {\n\tstatic id = 'select-row-disable-unselect';\n\n\trows: Observable<Atom[]>;\n\t@ViewChild(GridComponent) grid: GridComponent;\n\tselection: any = [];\n\n\tconstructor(private dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n\n\tpublic ngAfterViewInit(): void {\n\t\tconst { model } = this.grid;\n\n\t\tmodel.selectionChanged.on(e => {\n\t\t\tconst change = e.changes['items'];\n\t\t\tif (change) {\n\t\t\t\tthis.selection = e.state.items;\n\t\t\t\tif (!change.newValue.length) {\n\t\t\t\t\tmodel.selection({\n\t\t\t\t\t\titems: change.oldValue\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Select Row Disable\\\"\\n        [rows]=\\\"rows | async\\\"\\n        selectionUnit=\\\"row\\\"\\n        selectionMode=\\\"multiple\\\"\\n        selectionArea=\\\"body\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy, ViewChild, AfterViewInit } from '@angular/core';\nimport { DataService, Human } from '../data.service';\nimport { Observable } from 'rxjs';\nimport { GridComponent, Command } from 'ng2-qgrid';\n\n@Component({\n\tselector: 'example-select-row-disable',\n\ttemplateUrl: 'example-select-row-disable.component.html',\n\tstyleUrls: ['example-select-row-disable.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleSelectRowDisableComponent implements AfterViewInit {\n\tstatic id = 'select-row-disable';\n\n\t@ViewChild(GridComponent) grid: GridComponent;\n\trows: Observable<Human[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getPeople();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst { model } = this.grid;\n\n\t\tmodel.selection({\n\t\t\ttoggle: new Command({\n\t\t\t\tcanExecute: ({ items }) => items.length === 1 && items[0].gender === 'male'\n\t\t\t})\n\t\t});\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Select Row Single\\\"\\n        [rows]=\\\"rows | async\\\"\\n        selectionUnit=\\\"row\\\"\\n        selectionMode=\\\"single\\\">\\n    <q-grid-columns generation=\\\"deep\\\">\\n        <q-grid-column type=\\\"select\\\"\\n                       [isVisible]=\\\"false\\\">\\n        </q-grid-column>\\n    </q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Human } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-select-row-single',\n\ttemplateUrl: 'example-select-row-single.component.html',\n\tstyleUrls: ['example-select-row-single.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleSelectRowSingleComponent {\n\tstatic id = 'select-row-single';\n\n\trows: Observable<Human[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getPeople();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Size Column Absolute\\\"\\n        [rows]=\\\"rows | async\\\">\\n        <q-grid-columns>\\n                <q-grid-column title=\\\"Width 120px\\\"\\n                               key=\\\"number\\\"\\n                               [width]=\\\"120\\\">\\n                </q-grid-column>\\n                <q-grid-column title=\\\"Width 15%\\\"\\n                               key=\\\"symbol\\\"\\n                               width=\\\"25%\\\"\\n                               widthMode=\\\"absolute\\\">\\n                </q-grid-column>\\n                <q-grid-column title=\\\"Width 35%\\\"\\n                               key=\\\"name\\\"\\n                               width=\\\"35%\\\"\\n                               widthMode=\\\"absolute\\\">\\n                </q-grid-column>\\n                <q-grid-column title=\\\"Width 50%\\\"\\n                               key=\\\"appearance\\\"\\n                               width=\\\"50%\\\"\\n                               widthMode=\\\"absolute\\\">\\n                </q-grid-column>\\n        </q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-size-column-absolute',\n\ttemplateUrl: 'example-size-column-absolute.component.html',\n\tstyleUrls: ['example-size-column-absolute.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleSizeColumnAbsoluteComponent {\n\tstatic id = 'size-column-absolute';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Size Column Basic\\\"\\n        [rows]=\\\"rows | async\\\">\\n        <q-grid-columns>\\n                <q-grid-column title=\\\"Width 120px\\\"\\n                               key=\\\"number\\\"\\n                               [width]=\\\"120\\\">\\n                </q-grid-column>\\n                <q-grid-column title=\\\"Width 15%\\\"\\n                               key=\\\"symbol\\\"\\n                               width=\\\"15%\\\">\\n                </q-grid-column>\\n                <q-grid-column title=\\\"Width 35%\\\"\\n                               key=\\\"name\\\"\\n                               width=\\\"35%\\\">\\n                </q-grid-column>\\n                <q-grid-column title=\\\"Width 50% and a lot of the text after the width definition in the title\\\"\\n                               key=\\\"appearance\\\"\\n                               width=\\\"50%\\\">\\n                </q-grid-column>\\n        </q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-size-column-basic',\n\ttemplateUrl: 'example-size-column-basic.component.html',\n\tstyleUrls: ['example-size-column-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleSizeColumnBasicComponent {\n\tstatic id = 'size-column-basic';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Size Column Full\\\"\\n        [rows]=\\\"rows | async\\\">\\n        <q-grid-columns>\\n                <q-grid-column title=\\\"Width 100%\\\"\\n                               key=\\\"appearance\\\"\\n                               width=\\\"100%\\\">\\n                </q-grid-column>\\n        </q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-size-column-full',\n\ttemplateUrl: 'example-size-column-full.component.html',\n\tstyleUrls: ['example-size-column-full.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleSizeColumnFullComponent {\n\tstatic id = 'size-column-full';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Size Row Basic\\\"\\n        [rows]=\\\"rows | async\\\">\\n        <q-grid-columns generation=\\\"deep\\\">\\n        </q-grid-columns>\\n\\n        <q-grid-row [canResize]=\\\"true\\\"></q-grid-row>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-size-row-basic',\n\ttemplateUrl: 'example-size-row-basic.component.html',\n\tstyleUrls: ['example-size-row-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleSizeRowBasicComponent {\n\tstatic id = 'size-row-basic';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Sort Row Basic\\\"\\n        [rows]=\\\"rows | async\\\"\\n        [sortBy]=\\\"['+gender', '-name.last']\\\"\\n        [sortTrigger]=\\\"[]\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Human } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-sort-row-basic',\n\ttemplateUrl: 'example-sort-row-basic.component.html',\n\tstyleUrls: ['example-sort-row-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleSortRowBasicComponent {\n\tstatic id = 'sort-row-basic';\n\n\trows: Observable<Human[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getPeople();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Style Cell Basic\\\"\\n\\t[rows]=\\\"rows | async\\\"\\n\\t[styleCell]=\\\"styleCell\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { DataService, Atom } from '../data.service';\nimport { StyleCellContext, Column } from 'ng2-qgrid';\n\n@Component({\n\tselector: 'example-style-cell-basic',\n\ttemplateUrl: 'example-style-cell-basic.component.html',\n\tstyleUrls: ['example-style-cell-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleStyleCellBasicComponent {\n\tstatic id = 'style-cell-basic';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n\n\tstyleCell(row: Atom, column: Column, context: StyleCellContext) {\n\t\tif (column.key === 'symbol') {\n\t\t\tcontext.class(row.symbol, {\n\t\t\t\t'color': `#${row.color}`,\n\t\t\t\t'background': '#3f51b5'\n\t\t\t});\n\t\t}\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Style Row Basic\\\"\\n\\t[rows]=\\\"rows | async\\\"\\n\\t[styleRow]=\\\"styleRow\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { DataService, Atom } from '../data.service';\nimport { StyleRowContext } from 'ng2-qgrid';\n\n@Component({\n\tselector: 'example-style-row-basic',\n\ttemplateUrl: 'example-style-row-basic.component.html',\n\tstyleUrls: ['example-style-row-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleStyleRowBasicComponent {\n\tstatic id = 'style-row-basic';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n\n\tstyleRow(row: Atom, context: StyleRowContext) {\n\t\tcontext.class(row.symbol, { 'background-color': `#${row.color}` });\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Summary Column Aggregation\\\"\\n        [rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t\\t<q-grid-column key=\\\"name\\\"\\n\\t\\t               aggregation=\\\"first\\\">\\n\\t\\t\\t<ng-template for=\\\"foot\\\"\\n\\t\\t\\t             let-$cell>\\n\\t\\t\\t\\tNAME FIRST: {{$cell.value}}\\n\\t\\t\\t</ng-template>\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"symbol\\\"\\n\\t\\t               aggregation=\\\"last\\\">\\n\\t\\t\\t<ng-template for=\\\"foot\\\"\\n\\t\\t\\t             let-$cell>\\n\\t\\t\\t\\tSYMBOL LAST: {{$cell.value}}\\n\\t\\t\\t</ng-template>\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"number\\\"\\n\\t\\t               aggregation=\\\"count\\\">\\n\\t\\t\\t<ng-template for=\\\"foot\\\"\\n\\t\\t\\t             let-$cell>\\n\\t\\t\\t\\tNUMBER COUNT: {{$cell.value}}\\n\\t\\t\\t</ng-template>\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"phase\\\"\\n\\t\\t               aggregation=\\\"join\\\"\\n\\t\\t               [aggregationOptions]=\\\"{separator: '+', distinct: true}\\\">\\n\\t\\t\\t<ng-template for=\\\"foot\\\"\\n\\t\\t\\t             let-$cell>\\n\\t\\t\\t\\tPHASE JOIN: {{$cell.value}}\\n\\t\\t\\t</ng-template>\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"boil\\\"\\n\\t\\t               aggregation=\\\"max\\\">\\n\\t\\t\\t<ng-template for=\\\"foot\\\"\\n\\t\\t\\t             let-$cell>\\n\\t\\t\\t\\tBOIL MAX: {{$cell.value}}\\n\\t\\t\\t</ng-template>\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"melt\\\"\\n\\t\\t               aggregation=\\\"min\\\">\\n\\t\\t\\t<ng-template for=\\\"foot\\\"\\n\\t\\t\\t             let-$cell>\\n\\t\\t\\t\\tMELT MIN: {{$cell.value}}\\n\\t\\t\\t</ng-template>\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"radius\\\"\\n\\t\\t               aggregation=\\\"minMax\\\">\\n\\t\\t\\t<ng-template for=\\\"foot\\\"\\n\\t\\t\\t             let-$cell>\\n\\t\\t\\t\\tRADIUS MINMAX: {{$cell.value}}\\n\\t\\t\\t</ng-template>\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"mass\\\"\\n\\t\\t               aggregation=\\\"sum\\\">\\n\\t\\t\\t<ng-template for=\\\"foot\\\"\\n\\t\\t\\t             let-$cell>\\n\\t\\t\\t\\tMASS SUM: {{$cell.value}}\\n\\t\\t\\t</ng-template>\\n\\t\\t</q-grid-column>\\n\\t\\t<q-grid-column key=\\\"density\\\"\\n\\t\\t               aggregation=\\\"avg\\\">\\n\\t\\t\\t<ng-template for=\\\"foot\\\"\\n\\t\\t\\t             let-$cell>\\n\\t\\t\\t\\tDENSITY AVG: {{$cell.value}}\\n\\t\\t\\t</ng-template>\\n\\n\\t\\t</q-grid-column>\\n\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-summary-column-aggregation',\n\ttemplateUrl: 'example-summary-column-aggregation.component.html',\n\tstyleUrls: ['example-summary-column-aggregation.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleSummaryColumnAggregationComponent {\n\tstatic id = 'summary-column-aggregation';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Summary Column Basic\\\"\\n        [rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t\\t<q-grid-column key=\\\"phase\\\"\\n\\t\\t\\t       title=\\\"Phase\\\">\\n\\t\\t\\t<ng-template for=\\\"foot\\\">\\n\\t\\t\\t\\tgas | liquid | solid\\n\\t\\t\\t</ng-template>\\n\\t\\t</q-grid-column>\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-summary-column-basic',\n\ttemplateUrl: 'example-summary-column-basic.component.html',\n\tstyleUrls: ['example-summary-column-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleSummaryColumnBasicComponent {\n\tstatic id = 'summary-column-basic';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Look People\\\" class=\\\"q-grid-dark\\\"\\n        [rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Human } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-theme-grid-dark',\n\ttemplateUrl: 'example-theme-grid-dark.component.html',\n\tstyleUrls: ['example-theme-grid-dark.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleThemeGridDarkComponent {\n\tstatic id = 'theme-grid-dark';\n\n\trows: Observable<Human[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getPeople();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Theme Grid Embed\\\"\\n        [rows]=\\\"rows | async\\\"\\n        class=\\\"q-grid-embed\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-theme-grid-embed',\n\ttemplateUrl: 'example-theme-grid-embed.component.html',\n\tstyleUrls: ['example-theme-grid-embed.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleThemeGridEmbedComponent {\n\tstatic id = 'theme-grid-embed';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Validation Basic\\\"\\n        [rows]=\\\"rows | async\\\"\\n        editMode=\\\"cell\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n\\t<q-grid-validation>\\n\\t\\t<q-grid-rule for=\\\"cell\\\"\\n\\t\\t             key=\\\"number\\\"\\n\\t\\t             required>\\n\\t\\t</q-grid-rule>\\n\\t\\t<q-grid-rule for=\\\"cell\\\"\\n\\t\\t             key=\\\"name\\\"\\n\\t\\t             required\\n\\t\\t             [lengthBetween]=\\\"[3, 40]\\\">\\n\\t\\t</q-grid-rule>\\n\\t\\t<q-grid-rule for=\\\"cell\\\"\\n\\t\\t             key=\\\"phase\\\"\\n\\t\\t             required\\n\\t\\t             [oneOf]=\\\"['Gas', 'Solid']\\\">\\n\\t\\t</q-grid-rule>\\n\\t\\t<q-grid-rule for=\\\"cell\\\"\\n\\t\\t             key=\\\"summary\\\"\\n\\t\\t             required\\n\\t\\t             minLength=\\\"5\\\">\\n\\t\\t</q-grid-rule>\\n\\t\\t<q-grid-rule for=\\\"cell\\\"\\n\\t\\t             key=\\\"period\\\"\\n\\t\\t             required\\n\\t\\t             positiveInteger\\n\\t\\t             lengthEqual=\\\"1\\\">\\n\\t\\t</q-grid-rule>\\n\\t\\t<q-grid-rule for=\\\"cell\\\"\\n\\t\\t             key=\\\"radius\\\"\\n\\t\\t             required\\n\\t\\t             positiveInteger>\\n\\t\\t</q-grid-rule>\\n\\t\\t<q-grid-rule for=\\\"cell\\\"\\n\\t\\t             key=\\\"mass\\\"\\n\\t\\t             positiveDecimal>\\n\\t\\t</q-grid-rule>\\n\\t\\t<q-grid-rule for=\\\"cell\\\"\\n\\t\\t             key=\\\"source\\\"\\n\\t\\t             [pattern]=\\\"['^http']\\\">\\n\\t\\t</q-grid-rule>\\n\\t</q-grid-validation>\\n\\n</q-grid>\\n\"","module.exports = \"\"","import { Component, ViewChild, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { GridComponent } from 'ng2-qgrid';\nimport { Atom, DataService } from '../data.service';\n\n@Component({\n\tselector: 'example-validation-basic',\n\ttemplateUrl: 'example-validation-basic.component.html',\n\tstyleUrls: ['example-validation-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleValidationBasicComponent {\n\tstatic id = 'validation-basic';\n\n\t@ViewChild(GridComponent) myGrid: GridComponent;\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Visibility Basic\\\"\\n\\t\\t[rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n\\n\\t<q-grid-visibility [foot]=\\\"false\\\"\\n\\t\\t\\t\\t\\t   [head]=\\\"false\\\"\\n\\t\\t\\t\\t\\t   [toolbarBottom]=\\\"false\\\"\\n\\t\\t\\t\\t\\t   [toolbarTop]=\\\"false\\\">\\n\\t</q-grid-visibility>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'example-visibility-basic',\n\ttemplateUrl: 'example-visibility-basic.component.html',\n\tstyleUrls: ['example-visibility-basic.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleVisibilityBasicComponent {\n\tstatic id = 'visibility-basic';\n\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n}\n","module.exports = \"<q-grid caption=\\\"Visibility Basic\\\"\\n        [rows]=\\\"rows | async\\\">\\n\\t<q-grid-columns generation=\\\"deep\\\">\\n\\t</q-grid-columns>\\n</q-grid>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy, AfterViewInit, ViewChild } from '@angular/core';\nimport { DataService, Atom } from '../data.service';\nimport { Observable } from 'rxjs';\nimport { GridComponent } from 'ng2-qgrid';\n\n@Component({\n\tselector: 'example-visibility-model',\n\ttemplateUrl: 'example-visibility-model.component.html',\n\tstyleUrls: ['example-visibility-model.component.scss'],\n\tproviders: [DataService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleVisibilityModelComponent implements AfterViewInit {\n\tstatic id = 'visibility-model';\n\n\t@ViewChild(GridComponent) grid: GridComponent;\n\trows: Observable<Atom[]>;\n\n\tconstructor(dataService: DataService) {\n\t\tthis.rows = dataService.getAtoms();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst { model } = this.grid;\n\n\t\tmodel.visibility({\n\t\t\ttoolbar: {\n\t\t\t\tbottom: false,\n\t\t\t\tleft: false,\n\t\t\t\tright: false,\n\t\t\t\ttop: false\n\t\t\t}\n\t\t});\n\t}\n}\n","module.exports = \"/*\\n*\\n*  Responsive attributes\\n*\\n*  References:\\n*  1) https://scotch.io/tutorials/a-visual-guide-to-css3-flexbox-properties#flex\\n*  2) https://css-tricks.com/almanac/properties/f/flex/\\n*  3) https://css-tricks.com/snippets/css/a-guide-to-flexbox/\\n*  4) https://github.com/philipwalton/flexbugs#3-min-height-on-a-flex-container-wont-apply-to-its-flex-items\\n*  5) http://godban.com.ua/projects/flexgrid\\n*\\n*\\n*/\\n/* IE10-IE11 column-flex bug fix (set proper default value) */\\n/* Apply Mixins to create Layout/Flexbox styles */\\n.flex-order {\\n  order: 0; }\\n.flex-order--20 {\\n  order: -20; }\\n.flex-order--19 {\\n  order: -19; }\\n.flex-order--18 {\\n  order: -18; }\\n.flex-order--17 {\\n  order: -17; }\\n.flex-order--16 {\\n  order: -16; }\\n.flex-order--15 {\\n  order: -15; }\\n.flex-order--14 {\\n  order: -14; }\\n.flex-order--13 {\\n  order: -13; }\\n.flex-order--12 {\\n  order: -12; }\\n.flex-order--11 {\\n  order: -11; }\\n.flex-order--10 {\\n  order: -10; }\\n.flex-order--9 {\\n  order: -9; }\\n.flex-order--8 {\\n  order: -8; }\\n.flex-order--7 {\\n  order: -7; }\\n.flex-order--6 {\\n  order: -6; }\\n.flex-order--5 {\\n  order: -5; }\\n.flex-order--4 {\\n  order: -4; }\\n.flex-order--3 {\\n  order: -3; }\\n.flex-order--2 {\\n  order: -2; }\\n.flex-order--1 {\\n  order: -1; }\\n.flex-order-0 {\\n  order: 0; }\\n.flex-order-1 {\\n  order: 1; }\\n.flex-order-2 {\\n  order: 2; }\\n.flex-order-3 {\\n  order: 3; }\\n.flex-order-4 {\\n  order: 4; }\\n.flex-order-5 {\\n  order: 5; }\\n.flex-order-6 {\\n  order: 6; }\\n.flex-order-7 {\\n  order: 7; }\\n.flex-order-8 {\\n  order: 8; }\\n.flex-order-9 {\\n  order: 9; }\\n.flex-order-10 {\\n  order: 10; }\\n.flex-order-11 {\\n  order: 11; }\\n.flex-order-12 {\\n  order: 12; }\\n.flex-order-13 {\\n  order: 13; }\\n.flex-order-14 {\\n  order: 14; }\\n.flex-order-15 {\\n  order: 15; }\\n.flex-order-16 {\\n  order: 16; }\\n.flex-order-17 {\\n  order: 17; }\\n.flex-order-18 {\\n  order: 18; }\\n.flex-order-19 {\\n  order: 19; }\\n.flex-order-20 {\\n  order: 20; }\\n.offset-0, .flex-offset-0 {\\n  margin-left: 0; }\\n[dir=rtl] .offset-0, [dir=rtl] .flex-offset-0 {\\n    margin-left: auto;\\n    margin-right: 0; }\\n.offset-5, .flex-offset-5 {\\n  margin-left: 5%; }\\n[dir=rtl] .offset-5, [dir=rtl] .flex-offset-5 {\\n    margin-left: auto;\\n    margin-right: 5%; }\\n.offset-10, .flex-offset-10 {\\n  margin-left: 10%; }\\n[dir=rtl] .offset-10, [dir=rtl] .flex-offset-10 {\\n    margin-left: auto;\\n    margin-right: 10%; }\\n.offset-15, .flex-offset-15 {\\n  margin-left: 15%; }\\n[dir=rtl] .offset-15, [dir=rtl] .flex-offset-15 {\\n    margin-left: auto;\\n    margin-right: 15%; }\\n.offset-20, .flex-offset-20 {\\n  margin-left: 20%; }\\n[dir=rtl] .offset-20, [dir=rtl] .flex-offset-20 {\\n    margin-left: auto;\\n    margin-right: 20%; }\\n.offset-25, .flex-offset-25 {\\n  margin-left: 25%; }\\n[dir=rtl] .offset-25, [dir=rtl] .flex-offset-25 {\\n    margin-left: auto;\\n    margin-right: 25%; }\\n.offset-30, .flex-offset-30 {\\n  margin-left: 30%; }\\n[dir=rtl] .offset-30, [dir=rtl] .flex-offset-30 {\\n    margin-left: auto;\\n    margin-right: 30%; }\\n.offset-35, .flex-offset-35 {\\n  margin-left: 35%; }\\n[dir=rtl] .offset-35, [dir=rtl] .flex-offset-35 {\\n    margin-left: auto;\\n    margin-right: 35%; }\\n.offset-40, .flex-offset-40 {\\n  margin-left: 40%; }\\n[dir=rtl] .offset-40, [dir=rtl] .flex-offset-40 {\\n    margin-left: auto;\\n    margin-right: 40%; }\\n.offset-45, .flex-offset-45 {\\n  margin-left: 45%; }\\n[dir=rtl] .offset-45, [dir=rtl] .flex-offset-45 {\\n    margin-left: auto;\\n    margin-right: 45%; }\\n.offset-50, .flex-offset-50 {\\n  margin-left: 50%; }\\n[dir=rtl] .offset-50, [dir=rtl] .flex-offset-50 {\\n    margin-left: auto;\\n    margin-right: 50%; }\\n.offset-55, .flex-offset-55 {\\n  margin-left: 55%; }\\n[dir=rtl] .offset-55, [dir=rtl] .flex-offset-55 {\\n    margin-left: auto;\\n    margin-right: 55%; }\\n.offset-60, .flex-offset-60 {\\n  margin-left: 60%; }\\n[dir=rtl] .offset-60, [dir=rtl] .flex-offset-60 {\\n    margin-left: auto;\\n    margin-right: 60%; }\\n.offset-65, .flex-offset-65 {\\n  margin-left: 65%; }\\n[dir=rtl] .offset-65, [dir=rtl] .flex-offset-65 {\\n    margin-left: auto;\\n    margin-right: 65%; }\\n.offset-70, .flex-offset-70 {\\n  margin-left: 70%; }\\n[dir=rtl] .offset-70, [dir=rtl] .flex-offset-70 {\\n    margin-left: auto;\\n    margin-right: 70%; }\\n.offset-75, .flex-offset-75 {\\n  margin-left: 75%; }\\n[dir=rtl] .offset-75, [dir=rtl] .flex-offset-75 {\\n    margin-left: auto;\\n    margin-right: 75%; }\\n.offset-80, .flex-offset-80 {\\n  margin-left: 80%; }\\n[dir=rtl] .offset-80, [dir=rtl] .flex-offset-80 {\\n    margin-left: auto;\\n    margin-right: 80%; }\\n.offset-85, .flex-offset-85 {\\n  margin-left: 85%; }\\n[dir=rtl] .offset-85, [dir=rtl] .flex-offset-85 {\\n    margin-left: auto;\\n    margin-right: 85%; }\\n.offset-90, .flex-offset-90 {\\n  margin-left: 90%; }\\n[dir=rtl] .offset-90, [dir=rtl] .flex-offset-90 {\\n    margin-left: auto;\\n    margin-right: 90%; }\\n.offset-95, .flex-offset-95 {\\n  margin-left: 95%; }\\n[dir=rtl] .offset-95, [dir=rtl] .flex-offset-95 {\\n    margin-left: auto;\\n    margin-right: 95%; }\\n.offset-33, .flex-offset-33 {\\n  margin-left: calc(100% / 3); }\\n.offset-66, .flex-offset-66 {\\n  margin-left: calc(200% / 3); }\\n[dir=rtl] .offset-66, [dir=rtl] .flex-offset-66 {\\n    margin-left: auto;\\n    margin-right: calc(200% / 3); }\\n.layout-align,\\n.layout-align-start-stretch {\\n  justify-content: flex-start;\\n  align-content: stretch;\\n  align-items: stretch; }\\n.layout-align-start,\\n.layout-align-start-start,\\n.layout-align-start-center,\\n.layout-align-start-end,\\n.layout-align-start-stretch {\\n  justify-content: flex-start; }\\n.layout-align-center,\\n.layout-align-center-start,\\n.layout-align-center-center,\\n.layout-align-center-end,\\n.layout-align-center-stretch {\\n  justify-content: center; }\\n.layout-align-end,\\n.layout-align-end-start,\\n.layout-align-end-center,\\n.layout-align-end-end,\\n.layout-align-end-stretch {\\n  justify-content: flex-end; }\\n.layout-align-space-around,\\n.layout-align-space-around-center,\\n.layout-align-space-around-start,\\n.layout-align-space-around-end,\\n.layout-align-space-around-stretch {\\n  justify-content: space-around; }\\n.layout-align-space-between,\\n.layout-align-space-between-center,\\n.layout-align-space-between-start,\\n.layout-align-space-between-end,\\n.layout-align-space-between-stretch {\\n  justify-content: space-between; }\\n.layout-align-start-start,\\n.layout-align-center-start,\\n.layout-align-end-start,\\n.layout-align-space-between-start,\\n.layout-align-space-around-start {\\n  align-items: flex-start;\\n  align-content: flex-start; }\\n.layout-align-start-center,\\n.layout-align-center-center,\\n.layout-align-end-center,\\n.layout-align-space-between-center,\\n.layout-align-space-around-center {\\n  align-items: center;\\n  align-content: center;\\n  max-width: 100%; }\\n.layout-align-start-center > *,\\n.layout-align-center-center > *,\\n.layout-align-end-center > *,\\n.layout-align-space-between-center > *,\\n.layout-align-space-around-center > * {\\n  max-width: 100%;\\n  box-sizing: border-box; }\\n.layout-align-start-end,\\n.layout-align-center-end,\\n.layout-align-end-end,\\n.layout-align-space-between-end,\\n.layout-align-space-around-end {\\n  align-items: flex-end;\\n  align-content: flex-end; }\\n.layout-align-start-stretch,\\n.layout-align-center-stretch,\\n.layout-align-end-stretch,\\n.layout-align-space-between-stretch,\\n.layout-align-space-around-stretch {\\n  align-items: stretch;\\n  align-content: stretch; }\\n.flex {\\n  flex: 1;\\n  box-sizing: border-box; }\\n.flex-grow {\\n  flex: 1 1 100%;\\n  box-sizing: border-box; }\\n.flex-initial {\\n  flex: 0 1 auto;\\n  box-sizing: border-box; }\\n.flex-auto {\\n  flex: 1 1 auto;\\n  box-sizing: border-box; }\\n.flex-none {\\n  flex: 0 0 auto;\\n  box-sizing: border-box; }\\n.flex-noshrink {\\n  flex: 1 0 auto;\\n  box-sizing: border-box; }\\n.flex-nogrow {\\n  flex: 0 1 auto;\\n  box-sizing: border-box; }\\n.flex-0 {\\n  flex: 1 1 0%;\\n  max-width: 0%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-0 {\\n  flex: 1 1 0%;\\n  max-width: 0%;\\n  max-height: 100%;\\n  box-sizing: border-box;\\n  min-width: 0; }\\n.layout-column > .flex-0 {\\n  flex: 1 1 0%;\\n  max-width: 100%;\\n  max-height: 0%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-0 {\\n  flex: 1 1 0%;\\n  max-width: 0%;\\n  max-height: 100%;\\n  box-sizing: border-box;\\n  min-width: 0; }\\n.layout-column > .flex-0 {\\n  flex: 1 1 0%;\\n  max-width: 100%;\\n  max-height: 0%;\\n  box-sizing: border-box;\\n  min-height: 0; }\\n.flex-5 {\\n  flex: 1 1 5%;\\n  max-width: 5%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-5 {\\n  flex: 1 1 5%;\\n  max-width: 5%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-5 {\\n  flex: 1 1 5%;\\n  max-width: 100%;\\n  max-height: 5%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-5 {\\n  flex: 1 1 5%;\\n  max-width: 5%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-5 {\\n  flex: 1 1 5%;\\n  max-width: 100%;\\n  max-height: 5%;\\n  box-sizing: border-box; }\\n.flex-10 {\\n  flex: 1 1 10%;\\n  max-width: 10%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-10 {\\n  flex: 1 1 10%;\\n  max-width: 10%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-10 {\\n  flex: 1 1 10%;\\n  max-width: 100%;\\n  max-height: 10%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-10 {\\n  flex: 1 1 10%;\\n  max-width: 10%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-10 {\\n  flex: 1 1 10%;\\n  max-width: 100%;\\n  max-height: 10%;\\n  box-sizing: border-box; }\\n.flex-15 {\\n  flex: 1 1 15%;\\n  max-width: 15%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-15 {\\n  flex: 1 1 15%;\\n  max-width: 15%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-15 {\\n  flex: 1 1 15%;\\n  max-width: 100%;\\n  max-height: 15%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-15 {\\n  flex: 1 1 15%;\\n  max-width: 15%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-15 {\\n  flex: 1 1 15%;\\n  max-width: 100%;\\n  max-height: 15%;\\n  box-sizing: border-box; }\\n.flex-20 {\\n  flex: 1 1 20%;\\n  max-width: 20%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-20 {\\n  flex: 1 1 20%;\\n  max-width: 20%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-20 {\\n  flex: 1 1 20%;\\n  max-width: 100%;\\n  max-height: 20%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-20 {\\n  flex: 1 1 20%;\\n  max-width: 20%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-20 {\\n  flex: 1 1 20%;\\n  max-width: 100%;\\n  max-height: 20%;\\n  box-sizing: border-box; }\\n.flex-25 {\\n  flex: 1 1 25%;\\n  max-width: 25%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-25 {\\n  flex: 1 1 25%;\\n  max-width: 25%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-25 {\\n  flex: 1 1 25%;\\n  max-width: 100%;\\n  max-height: 25%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-25 {\\n  flex: 1 1 25%;\\n  max-width: 25%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-25 {\\n  flex: 1 1 25%;\\n  max-width: 100%;\\n  max-height: 25%;\\n  box-sizing: border-box; }\\n.flex-30 {\\n  flex: 1 1 30%;\\n  max-width: 30%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-30 {\\n  flex: 1 1 30%;\\n  max-width: 30%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-30 {\\n  flex: 1 1 30%;\\n  max-width: 100%;\\n  max-height: 30%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-30 {\\n  flex: 1 1 30%;\\n  max-width: 30%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-30 {\\n  flex: 1 1 30%;\\n  max-width: 100%;\\n  max-height: 30%;\\n  box-sizing: border-box; }\\n.flex-35 {\\n  flex: 1 1 35%;\\n  max-width: 35%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-35 {\\n  flex: 1 1 35%;\\n  max-width: 35%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-35 {\\n  flex: 1 1 35%;\\n  max-width: 100%;\\n  max-height: 35%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-35 {\\n  flex: 1 1 35%;\\n  max-width: 35%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-35 {\\n  flex: 1 1 35%;\\n  max-width: 100%;\\n  max-height: 35%;\\n  box-sizing: border-box; }\\n.flex-40 {\\n  flex: 1 1 40%;\\n  max-width: 40%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-40 {\\n  flex: 1 1 40%;\\n  max-width: 40%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-40 {\\n  flex: 1 1 40%;\\n  max-width: 100%;\\n  max-height: 40%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-40 {\\n  flex: 1 1 40%;\\n  max-width: 40%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-40 {\\n  flex: 1 1 40%;\\n  max-width: 100%;\\n  max-height: 40%;\\n  box-sizing: border-box; }\\n.flex-45 {\\n  flex: 1 1 45%;\\n  max-width: 45%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-45 {\\n  flex: 1 1 45%;\\n  max-width: 45%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-45 {\\n  flex: 1 1 45%;\\n  max-width: 100%;\\n  max-height: 45%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-45 {\\n  flex: 1 1 45%;\\n  max-width: 45%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-45 {\\n  flex: 1 1 45%;\\n  max-width: 100%;\\n  max-height: 45%;\\n  box-sizing: border-box; }\\n.flex-50 {\\n  flex: 1 1 50%;\\n  max-width: 50%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-50 {\\n  flex: 1 1 50%;\\n  max-width: 50%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-50 {\\n  flex: 1 1 50%;\\n  max-width: 100%;\\n  max-height: 50%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-50 {\\n  flex: 1 1 50%;\\n  max-width: 50%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-50 {\\n  flex: 1 1 50%;\\n  max-width: 100%;\\n  max-height: 50%;\\n  box-sizing: border-box; }\\n.flex-55 {\\n  flex: 1 1 55%;\\n  max-width: 55%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-55 {\\n  flex: 1 1 55%;\\n  max-width: 55%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-55 {\\n  flex: 1 1 55%;\\n  max-width: 100%;\\n  max-height: 55%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-55 {\\n  flex: 1 1 55%;\\n  max-width: 55%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-55 {\\n  flex: 1 1 55%;\\n  max-width: 100%;\\n  max-height: 55%;\\n  box-sizing: border-box; }\\n.flex-60 {\\n  flex: 1 1 60%;\\n  max-width: 60%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-60 {\\n  flex: 1 1 60%;\\n  max-width: 60%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-60 {\\n  flex: 1 1 60%;\\n  max-width: 100%;\\n  max-height: 60%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-60 {\\n  flex: 1 1 60%;\\n  max-width: 60%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-60 {\\n  flex: 1 1 60%;\\n  max-width: 100%;\\n  max-height: 60%;\\n  box-sizing: border-box; }\\n.flex-65 {\\n  flex: 1 1 65%;\\n  max-width: 65%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-65 {\\n  flex: 1 1 65%;\\n  max-width: 65%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-65 {\\n  flex: 1 1 65%;\\n  max-width: 100%;\\n  max-height: 65%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-65 {\\n  flex: 1 1 65%;\\n  max-width: 65%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-65 {\\n  flex: 1 1 65%;\\n  max-width: 100%;\\n  max-height: 65%;\\n  box-sizing: border-box; }\\n.flex-70 {\\n  flex: 1 1 70%;\\n  max-width: 70%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-70 {\\n  flex: 1 1 70%;\\n  max-width: 70%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-70 {\\n  flex: 1 1 70%;\\n  max-width: 100%;\\n  max-height: 70%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-70 {\\n  flex: 1 1 70%;\\n  max-width: 70%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-70 {\\n  flex: 1 1 70%;\\n  max-width: 100%;\\n  max-height: 70%;\\n  box-sizing: border-box; }\\n.flex-75 {\\n  flex: 1 1 75%;\\n  max-width: 75%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-75 {\\n  flex: 1 1 75%;\\n  max-width: 75%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-75 {\\n  flex: 1 1 75%;\\n  max-width: 100%;\\n  max-height: 75%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-75 {\\n  flex: 1 1 75%;\\n  max-width: 75%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-75 {\\n  flex: 1 1 75%;\\n  max-width: 100%;\\n  max-height: 75%;\\n  box-sizing: border-box; }\\n.flex-80 {\\n  flex: 1 1 80%;\\n  max-width: 80%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-80 {\\n  flex: 1 1 80%;\\n  max-width: 80%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-80 {\\n  flex: 1 1 80%;\\n  max-width: 100%;\\n  max-height: 80%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-80 {\\n  flex: 1 1 80%;\\n  max-width: 80%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-80 {\\n  flex: 1 1 80%;\\n  max-width: 100%;\\n  max-height: 80%;\\n  box-sizing: border-box; }\\n.flex-85 {\\n  flex: 1 1 85%;\\n  max-width: 85%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-85 {\\n  flex: 1 1 85%;\\n  max-width: 85%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-85 {\\n  flex: 1 1 85%;\\n  max-width: 100%;\\n  max-height: 85%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-85 {\\n  flex: 1 1 85%;\\n  max-width: 85%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-85 {\\n  flex: 1 1 85%;\\n  max-width: 100%;\\n  max-height: 85%;\\n  box-sizing: border-box; }\\n.flex-90 {\\n  flex: 1 1 90%;\\n  max-width: 90%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-90 {\\n  flex: 1 1 90%;\\n  max-width: 90%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-90 {\\n  flex: 1 1 90%;\\n  max-width: 100%;\\n  max-height: 90%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-90 {\\n  flex: 1 1 90%;\\n  max-width: 90%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-90 {\\n  flex: 1 1 90%;\\n  max-width: 100%;\\n  max-height: 90%;\\n  box-sizing: border-box; }\\n.flex-95 {\\n  flex: 1 1 95%;\\n  max-width: 95%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-95 {\\n  flex: 1 1 95%;\\n  max-width: 95%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-95 {\\n  flex: 1 1 95%;\\n  max-width: 100%;\\n  max-height: 95%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-95 {\\n  flex: 1 1 95%;\\n  max-width: 95%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-95 {\\n  flex: 1 1 95%;\\n  max-width: 100%;\\n  max-height: 95%;\\n  box-sizing: border-box; }\\n.flex-100 {\\n  flex: 1 1 100%;\\n  max-width: 100%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-100 {\\n  flex: 1 1 100%;\\n  max-width: 100%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-100 {\\n  flex: 1 1 100%;\\n  max-width: 100%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-100 {\\n  flex: 1 1 100%;\\n  max-width: 100%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-100 {\\n  flex: 1 1 100%;\\n  max-width: 100%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex {\\n  min-width: 0; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-column > .flex {\\n  min-height: 0; }\\n.layout,\\n.layout-column,\\n.layout-row {\\n  box-sizing: border-box;\\n  display: flex; }\\n.layout-column {\\n  flex-direction: column; }\\n.layout-row {\\n  flex-direction: row;\\n  min-height: 0; }\\n.layout-padding-sm > *,\\n.layout-padding > .flex-sm {\\n  padding: 4px; }\\n.layout-padding,\\n.layout-padding-gt-sm,\\n.layout-padding-md,\\n.layout-padding > *,\\n.layout-padding-gt-sm > *,\\n.layout-padding-md > *,\\n.layout-padding > .flex,\\n.layout-padding > .flex-gt-sm,\\n.layout-padding > .flex-md {\\n  padding: 8px; }\\n.layout-padding-gt-md > *,\\n.layout-padding-lg > *,\\n.layout-padding-gt-lg > *,\\n.layout-padding > .flex-gt-md,\\n.layout-padding > .flex-lg,\\n.layout-padding > .flex-lg,\\n.layout-padding > .flex-gt-lg {\\n  padding: 16px; }\\n.layout-margin-sm > *,\\n.layout-margin > .flex-sm {\\n  margin: 4px; }\\n.layout-margin,\\n.layout-margin-gt-sm,\\n.layout-margin-md,\\n.layout-margin > *,\\n.layout-margin-gt-sm > *,\\n.layout-margin-md > *,\\n.layout-margin > .flex,\\n.layout-margin > .flex-gt-sm,\\n.layout-margin > .flex-md {\\n  margin: 8px; }\\n.layout-margin-gt-md > *,\\n.layout-margin-lg > *,\\n.layout-margin-gt-lg > *,\\n.layout-margin > .flex-gt-md,\\n.layout-margin > .flex-lg,\\n.layout-margin > .flex-gt-lg {\\n  margin: 16px; }\\n.layout-wrap {\\n  flex-wrap: wrap; }\\n.layout-nowrap {\\n  flex-wrap: nowrap; }\\n.layout-fill {\\n  margin: 0;\\n  width: 100%;\\n  min-height: 100%;\\n  height: 100%; }\\n/* Apply Mixins to create Layout/Flexbox styles */\\n.flex-order {\\n  order: 0; }\\n.flex-order--20 {\\n  order: -20; }\\n.flex-order--19 {\\n  order: -19; }\\n.flex-order--18 {\\n  order: -18; }\\n.flex-order--17 {\\n  order: -17; }\\n.flex-order--16 {\\n  order: -16; }\\n.flex-order--15 {\\n  order: -15; }\\n.flex-order--14 {\\n  order: -14; }\\n.flex-order--13 {\\n  order: -13; }\\n.flex-order--12 {\\n  order: -12; }\\n.flex-order--11 {\\n  order: -11; }\\n.flex-order--10 {\\n  order: -10; }\\n.flex-order--9 {\\n  order: -9; }\\n.flex-order--8 {\\n  order: -8; }\\n.flex-order--7 {\\n  order: -7; }\\n.flex-order--6 {\\n  order: -6; }\\n.flex-order--5 {\\n  order: -5; }\\n.flex-order--4 {\\n  order: -4; }\\n.flex-order--3 {\\n  order: -3; }\\n.flex-order--2 {\\n  order: -2; }\\n.flex-order--1 {\\n  order: -1; }\\n.flex-order-0 {\\n  order: 0; }\\n.flex-order-1 {\\n  order: 1; }\\n.flex-order-2 {\\n  order: 2; }\\n.flex-order-3 {\\n  order: 3; }\\n.flex-order-4 {\\n  order: 4; }\\n.flex-order-5 {\\n  order: 5; }\\n.flex-order-6 {\\n  order: 6; }\\n.flex-order-7 {\\n  order: 7; }\\n.flex-order-8 {\\n  order: 8; }\\n.flex-order-9 {\\n  order: 9; }\\n.flex-order-10 {\\n  order: 10; }\\n.flex-order-11 {\\n  order: 11; }\\n.flex-order-12 {\\n  order: 12; }\\n.flex-order-13 {\\n  order: 13; }\\n.flex-order-14 {\\n  order: 14; }\\n.flex-order-15 {\\n  order: 15; }\\n.flex-order-16 {\\n  order: 16; }\\n.flex-order-17 {\\n  order: 17; }\\n.flex-order-18 {\\n  order: 18; }\\n.flex-order-19 {\\n  order: 19; }\\n.flex-order-20 {\\n  order: 20; }\\n.offset-0, .flex-offset-0 {\\n  margin-left: 0; }\\n[dir=rtl] .offset-0, [dir=rtl] .flex-offset-0 {\\n    margin-left: auto;\\n    margin-right: 0; }\\n.offset-5, .flex-offset-5 {\\n  margin-left: 5%; }\\n[dir=rtl] .offset-5, [dir=rtl] .flex-offset-5 {\\n    margin-left: auto;\\n    margin-right: 5%; }\\n.offset-10, .flex-offset-10 {\\n  margin-left: 10%; }\\n[dir=rtl] .offset-10, [dir=rtl] .flex-offset-10 {\\n    margin-left: auto;\\n    margin-right: 10%; }\\n.offset-15, .flex-offset-15 {\\n  margin-left: 15%; }\\n[dir=rtl] .offset-15, [dir=rtl] .flex-offset-15 {\\n    margin-left: auto;\\n    margin-right: 15%; }\\n.offset-20, .flex-offset-20 {\\n  margin-left: 20%; }\\n[dir=rtl] .offset-20, [dir=rtl] .flex-offset-20 {\\n    margin-left: auto;\\n    margin-right: 20%; }\\n.offset-25, .flex-offset-25 {\\n  margin-left: 25%; }\\n[dir=rtl] .offset-25, [dir=rtl] .flex-offset-25 {\\n    margin-left: auto;\\n    margin-right: 25%; }\\n.offset-30, .flex-offset-30 {\\n  margin-left: 30%; }\\n[dir=rtl] .offset-30, [dir=rtl] .flex-offset-30 {\\n    margin-left: auto;\\n    margin-right: 30%; }\\n.offset-35, .flex-offset-35 {\\n  margin-left: 35%; }\\n[dir=rtl] .offset-35, [dir=rtl] .flex-offset-35 {\\n    margin-left: auto;\\n    margin-right: 35%; }\\n.offset-40, .flex-offset-40 {\\n  margin-left: 40%; }\\n[dir=rtl] .offset-40, [dir=rtl] .flex-offset-40 {\\n    margin-left: auto;\\n    margin-right: 40%; }\\n.offset-45, .flex-offset-45 {\\n  margin-left: 45%; }\\n[dir=rtl] .offset-45, [dir=rtl] .flex-offset-45 {\\n    margin-left: auto;\\n    margin-right: 45%; }\\n.offset-50, .flex-offset-50 {\\n  margin-left: 50%; }\\n[dir=rtl] .offset-50, [dir=rtl] .flex-offset-50 {\\n    margin-left: auto;\\n    margin-right: 50%; }\\n.offset-55, .flex-offset-55 {\\n  margin-left: 55%; }\\n[dir=rtl] .offset-55, [dir=rtl] .flex-offset-55 {\\n    margin-left: auto;\\n    margin-right: 55%; }\\n.offset-60, .flex-offset-60 {\\n  margin-left: 60%; }\\n[dir=rtl] .offset-60, [dir=rtl] .flex-offset-60 {\\n    margin-left: auto;\\n    margin-right: 60%; }\\n.offset-65, .flex-offset-65 {\\n  margin-left: 65%; }\\n[dir=rtl] .offset-65, [dir=rtl] .flex-offset-65 {\\n    margin-left: auto;\\n    margin-right: 65%; }\\n.offset-70, .flex-offset-70 {\\n  margin-left: 70%; }\\n[dir=rtl] .offset-70, [dir=rtl] .flex-offset-70 {\\n    margin-left: auto;\\n    margin-right: 70%; }\\n.offset-75, .flex-offset-75 {\\n  margin-left: 75%; }\\n[dir=rtl] .offset-75, [dir=rtl] .flex-offset-75 {\\n    margin-left: auto;\\n    margin-right: 75%; }\\n.offset-80, .flex-offset-80 {\\n  margin-left: 80%; }\\n[dir=rtl] .offset-80, [dir=rtl] .flex-offset-80 {\\n    margin-left: auto;\\n    margin-right: 80%; }\\n.offset-85, .flex-offset-85 {\\n  margin-left: 85%; }\\n[dir=rtl] .offset-85, [dir=rtl] .flex-offset-85 {\\n    margin-left: auto;\\n    margin-right: 85%; }\\n.offset-90, .flex-offset-90 {\\n  margin-left: 90%; }\\n[dir=rtl] .offset-90, [dir=rtl] .flex-offset-90 {\\n    margin-left: auto;\\n    margin-right: 90%; }\\n.offset-95, .flex-offset-95 {\\n  margin-left: 95%; }\\n[dir=rtl] .offset-95, [dir=rtl] .flex-offset-95 {\\n    margin-left: auto;\\n    margin-right: 95%; }\\n.offset-33, .flex-offset-33 {\\n  margin-left: calc(100% / 3); }\\n.offset-66, .flex-offset-66 {\\n  margin-left: calc(200% / 3); }\\n[dir=rtl] .offset-66, [dir=rtl] .flex-offset-66 {\\n    margin-left: auto;\\n    margin-right: calc(200% / 3); }\\n.layout-align,\\n.layout-align-start-stretch {\\n  justify-content: flex-start;\\n  align-content: stretch;\\n  align-items: stretch; }\\n.layout-align-start,\\n.layout-align-start-start,\\n.layout-align-start-center,\\n.layout-align-start-end,\\n.layout-align-start-stretch {\\n  justify-content: flex-start; }\\n.layout-align-center,\\n.layout-align-center-start,\\n.layout-align-center-center,\\n.layout-align-center-end,\\n.layout-align-center-stretch {\\n  justify-content: center; }\\n.layout-align-end,\\n.layout-align-end-start,\\n.layout-align-end-center,\\n.layout-align-end-end,\\n.layout-align-end-stretch {\\n  justify-content: flex-end; }\\n.layout-align-space-around,\\n.layout-align-space-around-center,\\n.layout-align-space-around-start,\\n.layout-align-space-around-end,\\n.layout-align-space-around-stretch {\\n  justify-content: space-around; }\\n.layout-align-space-between,\\n.layout-align-space-between-center,\\n.layout-align-space-between-start,\\n.layout-align-space-between-end,\\n.layout-align-space-between-stretch {\\n  justify-content: space-between; }\\n.layout-align-start-start,\\n.layout-align-center-start,\\n.layout-align-end-start,\\n.layout-align-space-between-start,\\n.layout-align-space-around-start {\\n  align-items: flex-start;\\n  align-content: flex-start; }\\n.layout-align-start-center,\\n.layout-align-center-center,\\n.layout-align-end-center,\\n.layout-align-space-between-center,\\n.layout-align-space-around-center {\\n  align-items: center;\\n  align-content: center;\\n  max-width: 100%; }\\n.layout-align-start-center > *,\\n.layout-align-center-center > *,\\n.layout-align-end-center > *,\\n.layout-align-space-between-center > *,\\n.layout-align-space-around-center > * {\\n  max-width: 100%;\\n  box-sizing: border-box; }\\n.layout-align-start-end,\\n.layout-align-center-end,\\n.layout-align-end-end,\\n.layout-align-space-between-end,\\n.layout-align-space-around-end {\\n  align-items: flex-end;\\n  align-content: flex-end; }\\n.layout-align-start-stretch,\\n.layout-align-center-stretch,\\n.layout-align-end-stretch,\\n.layout-align-space-between-stretch,\\n.layout-align-space-around-stretch {\\n  align-items: stretch;\\n  align-content: stretch; }\\n.flex {\\n  flex: 1;\\n  box-sizing: border-box; }\\n.flex-grow {\\n  flex: 1 1 100%;\\n  box-sizing: border-box; }\\n.flex-initial {\\n  flex: 0 1 auto;\\n  box-sizing: border-box; }\\n.flex-auto {\\n  flex: 1 1 auto;\\n  box-sizing: border-box; }\\n.flex-none {\\n  flex: 0 0 auto;\\n  box-sizing: border-box; }\\n.flex-noshrink {\\n  flex: 1 0 auto;\\n  box-sizing: border-box; }\\n.flex-nogrow {\\n  flex: 0 1 auto;\\n  box-sizing: border-box; }\\n.flex-0 {\\n  flex: 1 1 0%;\\n  max-width: 0%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-0 {\\n  flex: 1 1 0%;\\n  max-width: 0%;\\n  max-height: 100%;\\n  box-sizing: border-box;\\n  min-width: 0; }\\n.layout-column > .flex-0 {\\n  flex: 1 1 0%;\\n  max-width: 100%;\\n  max-height: 0%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-0 {\\n  flex: 1 1 0%;\\n  max-width: 0%;\\n  max-height: 100%;\\n  box-sizing: border-box;\\n  min-width: 0; }\\n.layout-column > .flex-0 {\\n  flex: 1 1 0%;\\n  max-width: 100%;\\n  max-height: 0%;\\n  box-sizing: border-box;\\n  min-height: 0; }\\n.flex-5 {\\n  flex: 1 1 5%;\\n  max-width: 5%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-5 {\\n  flex: 1 1 5%;\\n  max-width: 5%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-5 {\\n  flex: 1 1 5%;\\n  max-width: 100%;\\n  max-height: 5%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-5 {\\n  flex: 1 1 5%;\\n  max-width: 5%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-5 {\\n  flex: 1 1 5%;\\n  max-width: 100%;\\n  max-height: 5%;\\n  box-sizing: border-box; }\\n.flex-10 {\\n  flex: 1 1 10%;\\n  max-width: 10%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-10 {\\n  flex: 1 1 10%;\\n  max-width: 10%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-10 {\\n  flex: 1 1 10%;\\n  max-width: 100%;\\n  max-height: 10%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-10 {\\n  flex: 1 1 10%;\\n  max-width: 10%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-10 {\\n  flex: 1 1 10%;\\n  max-width: 100%;\\n  max-height: 10%;\\n  box-sizing: border-box; }\\n.flex-15 {\\n  flex: 1 1 15%;\\n  max-width: 15%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-15 {\\n  flex: 1 1 15%;\\n  max-width: 15%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-15 {\\n  flex: 1 1 15%;\\n  max-width: 100%;\\n  max-height: 15%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-15 {\\n  flex: 1 1 15%;\\n  max-width: 15%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-15 {\\n  flex: 1 1 15%;\\n  max-width: 100%;\\n  max-height: 15%;\\n  box-sizing: border-box; }\\n.flex-20 {\\n  flex: 1 1 20%;\\n  max-width: 20%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-20 {\\n  flex: 1 1 20%;\\n  max-width: 20%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-20 {\\n  flex: 1 1 20%;\\n  max-width: 100%;\\n  max-height: 20%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-20 {\\n  flex: 1 1 20%;\\n  max-width: 20%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-20 {\\n  flex: 1 1 20%;\\n  max-width: 100%;\\n  max-height: 20%;\\n  box-sizing: border-box; }\\n.flex-25 {\\n  flex: 1 1 25%;\\n  max-width: 25%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-25 {\\n  flex: 1 1 25%;\\n  max-width: 25%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-25 {\\n  flex: 1 1 25%;\\n  max-width: 100%;\\n  max-height: 25%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-25 {\\n  flex: 1 1 25%;\\n  max-width: 25%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-25 {\\n  flex: 1 1 25%;\\n  max-width: 100%;\\n  max-height: 25%;\\n  box-sizing: border-box; }\\n.flex-30 {\\n  flex: 1 1 30%;\\n  max-width: 30%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-30 {\\n  flex: 1 1 30%;\\n  max-width: 30%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-30 {\\n  flex: 1 1 30%;\\n  max-width: 100%;\\n  max-height: 30%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-30 {\\n  flex: 1 1 30%;\\n  max-width: 30%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-30 {\\n  flex: 1 1 30%;\\n  max-width: 100%;\\n  max-height: 30%;\\n  box-sizing: border-box; }\\n.flex-35 {\\n  flex: 1 1 35%;\\n  max-width: 35%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-35 {\\n  flex: 1 1 35%;\\n  max-width: 35%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-35 {\\n  flex: 1 1 35%;\\n  max-width: 100%;\\n  max-height: 35%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-35 {\\n  flex: 1 1 35%;\\n  max-width: 35%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-35 {\\n  flex: 1 1 35%;\\n  max-width: 100%;\\n  max-height: 35%;\\n  box-sizing: border-box; }\\n.flex-40 {\\n  flex: 1 1 40%;\\n  max-width: 40%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-40 {\\n  flex: 1 1 40%;\\n  max-width: 40%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-40 {\\n  flex: 1 1 40%;\\n  max-width: 100%;\\n  max-height: 40%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-40 {\\n  flex: 1 1 40%;\\n  max-width: 40%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-40 {\\n  flex: 1 1 40%;\\n  max-width: 100%;\\n  max-height: 40%;\\n  box-sizing: border-box; }\\n.flex-45 {\\n  flex: 1 1 45%;\\n  max-width: 45%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-45 {\\n  flex: 1 1 45%;\\n  max-width: 45%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-45 {\\n  flex: 1 1 45%;\\n  max-width: 100%;\\n  max-height: 45%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-45 {\\n  flex: 1 1 45%;\\n  max-width: 45%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-45 {\\n  flex: 1 1 45%;\\n  max-width: 100%;\\n  max-height: 45%;\\n  box-sizing: border-box; }\\n.flex-50 {\\n  flex: 1 1 50%;\\n  max-width: 50%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-50 {\\n  flex: 1 1 50%;\\n  max-width: 50%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-50 {\\n  flex: 1 1 50%;\\n  max-width: 100%;\\n  max-height: 50%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-50 {\\n  flex: 1 1 50%;\\n  max-width: 50%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-50 {\\n  flex: 1 1 50%;\\n  max-width: 100%;\\n  max-height: 50%;\\n  box-sizing: border-box; }\\n.flex-55 {\\n  flex: 1 1 55%;\\n  max-width: 55%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-55 {\\n  flex: 1 1 55%;\\n  max-width: 55%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-55 {\\n  flex: 1 1 55%;\\n  max-width: 100%;\\n  max-height: 55%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-55 {\\n  flex: 1 1 55%;\\n  max-width: 55%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-55 {\\n  flex: 1 1 55%;\\n  max-width: 100%;\\n  max-height: 55%;\\n  box-sizing: border-box; }\\n.flex-60 {\\n  flex: 1 1 60%;\\n  max-width: 60%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-60 {\\n  flex: 1 1 60%;\\n  max-width: 60%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-60 {\\n  flex: 1 1 60%;\\n  max-width: 100%;\\n  max-height: 60%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-60 {\\n  flex: 1 1 60%;\\n  max-width: 60%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-60 {\\n  flex: 1 1 60%;\\n  max-width: 100%;\\n  max-height: 60%;\\n  box-sizing: border-box; }\\n.flex-65 {\\n  flex: 1 1 65%;\\n  max-width: 65%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-65 {\\n  flex: 1 1 65%;\\n  max-width: 65%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-65 {\\n  flex: 1 1 65%;\\n  max-width: 100%;\\n  max-height: 65%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-65 {\\n  flex: 1 1 65%;\\n  max-width: 65%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-65 {\\n  flex: 1 1 65%;\\n  max-width: 100%;\\n  max-height: 65%;\\n  box-sizing: border-box; }\\n.flex-70 {\\n  flex: 1 1 70%;\\n  max-width: 70%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-70 {\\n  flex: 1 1 70%;\\n  max-width: 70%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-70 {\\n  flex: 1 1 70%;\\n  max-width: 100%;\\n  max-height: 70%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-70 {\\n  flex: 1 1 70%;\\n  max-width: 70%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-70 {\\n  flex: 1 1 70%;\\n  max-width: 100%;\\n  max-height: 70%;\\n  box-sizing: border-box; }\\n.flex-75 {\\n  flex: 1 1 75%;\\n  max-width: 75%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-75 {\\n  flex: 1 1 75%;\\n  max-width: 75%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-75 {\\n  flex: 1 1 75%;\\n  max-width: 100%;\\n  max-height: 75%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-75 {\\n  flex: 1 1 75%;\\n  max-width: 75%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-75 {\\n  flex: 1 1 75%;\\n  max-width: 100%;\\n  max-height: 75%;\\n  box-sizing: border-box; }\\n.flex-80 {\\n  flex: 1 1 80%;\\n  max-width: 80%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-80 {\\n  flex: 1 1 80%;\\n  max-width: 80%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-80 {\\n  flex: 1 1 80%;\\n  max-width: 100%;\\n  max-height: 80%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-80 {\\n  flex: 1 1 80%;\\n  max-width: 80%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-80 {\\n  flex: 1 1 80%;\\n  max-width: 100%;\\n  max-height: 80%;\\n  box-sizing: border-box; }\\n.flex-85 {\\n  flex: 1 1 85%;\\n  max-width: 85%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-85 {\\n  flex: 1 1 85%;\\n  max-width: 85%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-85 {\\n  flex: 1 1 85%;\\n  max-width: 100%;\\n  max-height: 85%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-85 {\\n  flex: 1 1 85%;\\n  max-width: 85%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-85 {\\n  flex: 1 1 85%;\\n  max-width: 100%;\\n  max-height: 85%;\\n  box-sizing: border-box; }\\n.flex-90 {\\n  flex: 1 1 90%;\\n  max-width: 90%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-90 {\\n  flex: 1 1 90%;\\n  max-width: 90%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-90 {\\n  flex: 1 1 90%;\\n  max-width: 100%;\\n  max-height: 90%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-90 {\\n  flex: 1 1 90%;\\n  max-width: 90%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-90 {\\n  flex: 1 1 90%;\\n  max-width: 100%;\\n  max-height: 90%;\\n  box-sizing: border-box; }\\n.flex-95 {\\n  flex: 1 1 95%;\\n  max-width: 95%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-95 {\\n  flex: 1 1 95%;\\n  max-width: 95%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-95 {\\n  flex: 1 1 95%;\\n  max-width: 100%;\\n  max-height: 95%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-95 {\\n  flex: 1 1 95%;\\n  max-width: 95%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-95 {\\n  flex: 1 1 95%;\\n  max-width: 100%;\\n  max-height: 95%;\\n  box-sizing: border-box; }\\n.flex-100 {\\n  flex: 1 1 100%;\\n  max-width: 100%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-100 {\\n  flex: 1 1 100%;\\n  max-width: 100%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-100 {\\n  flex: 1 1 100%;\\n  max-width: 100%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-100 {\\n  flex: 1 1 100%;\\n  max-width: 100%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-100 {\\n  flex: 1 1 100%;\\n  max-width: 100%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-33,\\n.layout-row > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 33.33%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex-66,\\n.layout-row > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 66.66%;\\n  max-height: 100%;\\n  box-sizing: border-box; }\\n.layout-row > .flex {\\n  min-width: 0; }\\n.layout-column > .flex-33,\\n.layout-column > .flex-33 {\\n  flex: 1 1 33.33%;\\n  max-width: 100%;\\n  max-height: 33.33%;\\n  box-sizing: border-box; }\\n.layout-column > .flex-66,\\n.layout-column > .flex-66 {\\n  flex: 1 1 66.66%;\\n  max-width: 100%;\\n  max-height: 66.66%;\\n  box-sizing: border-box; }\\n.layout-column > .flex {\\n  min-height: 0; }\\n.layout,\\n.layout-column,\\n.layout-row {\\n  box-sizing: border-box;\\n  display: flex; }\\n.layout-column {\\n  flex-direction: column; }\\n.layout-row {\\n  flex-direction: row;\\n  min-height: 0; }\\n.layout-padding-sm > *,\\n.layout-padding > .flex-sm {\\n  padding: 4px; }\\n.layout-padding,\\n.layout-padding-gt-sm,\\n.layout-padding-md,\\n.layout-padding > *,\\n.layout-padding-gt-sm > *,\\n.layout-padding-md > *,\\n.layout-padding > .flex,\\n.layout-padding > .flex-gt-sm,\\n.layout-padding > .flex-md {\\n  padding: 8px; }\\n.layout-padding-gt-md > *,\\n.layout-padding-lg > *,\\n.layout-padding-gt-lg > *,\\n.layout-padding > .flex-gt-md,\\n.layout-padding > .flex-lg,\\n.layout-padding > .flex-lg,\\n.layout-padding > .flex-gt-lg {\\n  padding: 16px; }\\n.layout-margin-sm > *,\\n.layout-margin > .flex-sm {\\n  margin: 4px; }\\n.layout-margin,\\n.layout-margin-gt-sm,\\n.layout-margin-md,\\n.layout-margin > *,\\n.layout-margin-gt-sm > *,\\n.layout-margin-md > *,\\n.layout-margin > .flex,\\n.layout-margin > .flex-gt-sm,\\n.layout-margin > .flex-md {\\n  margin: 8px; }\\n.layout-margin-gt-md > *,\\n.layout-margin-lg > *,\\n.layout-margin-gt-lg > *,\\n.layout-margin > .flex-gt-md,\\n.layout-margin > .flex-lg,\\n.layout-margin > .flex-gt-lg {\\n  margin: 16px; }\\n.layout-wrap {\\n  flex-wrap: wrap; }\\n.layout-nowrap {\\n  flex-wrap: nowrap; }\\n.layout-fill {\\n  margin: 0;\\n  width: 100%;\\n  min-height: 100%;\\n  height: 100%; }\\n.q-grid tbody tr.q-grid-scroll-mark {\\n  height: 0;\\n  border: none; }\\n.q-grid ::-webkit-scrollbar {\\n  width: 8px;\\n  height: 8px; }\\n.q-grid ::-webkit-scrollbar-thumb {\\n  height: 15px;\\n  background-color: #c8c8c8;\\n  -webkit-box-shadow: inset 1px 1px 0 rgba(0, 0, 0, 0.1), inset 0 -1px 0 rgba(0, 0, 0, 0.07); }\\n.q-grid ::-webkit-scrollbar-button {\\n  width: 0;\\n  height: 0;\\n  display: none; }\\n.q-grid ::-webkit-scrollbar-corner {\\n  background-color: transparent; }\\n.q-grid ::-webkit-scrollbar-track,\\n.q-grid ::-webkit-scrollbar-track-piece {\\n  background-color: #f8f8f8; }\\n.q-grid.q-grid-box {\\n  height: 100%;\\n  min-height: 100%;\\n  max-height: 100%;\\n  -webkit-transform: translate3d(0, 0, 0);\\n          transform: translate3d(0, 0, 0); }\\n.q-grid td,\\n.q-grid th {\\n  vertical-align: middle;\\n  text-align: left;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  position: relative;\\n  box-sizing: border-box;\\n  -moz-box-sizing: border-box;\\n  -webkit-box-sizing: border-box; }\\n.q-grid td > *,\\n  .q-grid th > * {\\n    vertical-align: middle; }\\n.q-grid td.q-grid-pivot,\\n  .q-grid th.q-grid-pivot {\\n    text-align: center; }\\n.q-grid.q-grid-box:not(.q-grid-drag) td,\\n.q-grid.q-grid-box:not(.q-grid-drag) th {\\n  transition: min-width 0.3s, width 0.3s, max-width 0.3s; }\\n.q-grid td .q-grid-box td,\\n.q-grid td .q-grid-box th {\\n  transition: none !important; }\\n.q-grid td .q-grid-box:not(.q-grid-drag) td,\\n.q-grid td .q-grid-box:not(.q-grid-drag) th {\\n  transition: min-width 0.3s, width 0.3s, max-width 0.3s !important; }\\n.q-grid thead th > div {\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  outline: none; }\\n.q-grid thead td,\\n.q-grid thead th,\\n.q-grid tfoot td,\\n.q-grid tfoot th,\\n.q-grid tbody td,\\n.q-grid tbody th {\\n  width: 150px;\\n  min-width: 150px;\\n  max-width: 150px; }\\n.q-grid thead td.q-grid-pad,\\n  .q-grid thead th.q-grid-pad,\\n  .q-grid tfoot td.q-grid-pad,\\n  .q-grid tfoot th.q-grid-pad,\\n  .q-grid tbody td.q-grid-pad,\\n  .q-grid tbody th.q-grid-pad {\\n    width: 100%;\\n    min-width: 100%;\\n    max-width: 100%;\\n    padding: 0 0 0 1px !important;\\n    margin: 0 !important; }\\n.q-grid thead td.q-grid-group,\\n  .q-grid thead th.q-grid-group,\\n  .q-grid tfoot td.q-grid-group,\\n  .q-grid tfoot th.q-grid-group,\\n  .q-grid tbody td.q-grid-group,\\n  .q-grid tbody th.q-grid-group {\\n    width: 200px;\\n    min-width: 200px;\\n    max-width: 200px; }\\n.q-grid thead td.q-grid-pivot,\\n  .q-grid thead th.q-grid-pivot,\\n  .q-grid tfoot td.q-grid-pivot,\\n  .q-grid tfoot th.q-grid-pivot,\\n  .q-grid tbody td.q-grid-pivot,\\n  .q-grid tbody th.q-grid-pivot {\\n    width: 80px;\\n    min-width: 80px;\\n    max-width: 80px; }\\n.q-grid thead td.q-grid-email,\\n  .q-grid thead th.q-grid-email,\\n  .q-grid tfoot td.q-grid-email,\\n  .q-grid tfoot th.q-grid-email,\\n  .q-grid tbody td.q-grid-email,\\n  .q-grid tbody th.q-grid-email {\\n    width: 200px;\\n    min-width: 200px;\\n    max-width: 200px; }\\n.q-grid thead td.q-grid-password,\\n  .q-grid thead th.q-grid-password,\\n  .q-grid tfoot td.q-grid-password,\\n  .q-grid tfoot th.q-grid-password,\\n  .q-grid tbody td.q-grid-password,\\n  .q-grid tbody th.q-grid-password {\\n    width: 100px;\\n    min-width: 100px;\\n    max-width: 100px; }\\n.q-grid thead td.q-grid-bool,\\n  .q-grid thead th.q-grid-bool,\\n  .q-grid tfoot td.q-grid-bool,\\n  .q-grid tfoot th.q-grid-bool,\\n  .q-grid tbody td.q-grid-bool,\\n  .q-grid tbody th.q-grid-bool {\\n    width: 80px;\\n    min-width: 80px;\\n    max-width: 80px; }\\n.q-grid thead td.q-grid-date,\\n  .q-grid thead th.q-grid-date,\\n  .q-grid tfoot td.q-grid-date,\\n  .q-grid tfoot th.q-grid-date,\\n  .q-grid tbody td.q-grid-date,\\n  .q-grid tbody th.q-grid-date {\\n    width: 120px;\\n    min-width: 110px;\\n    max-width: 110px; }\\n.q-grid thead td.q-grid-number, .q-grid thead td.q-grid-currency, .q-grid thead td.q-grid-id,\\n  .q-grid thead th.q-grid-number,\\n  .q-grid thead th.q-grid-currency,\\n  .q-grid thead th.q-grid-id,\\n  .q-grid tfoot td.q-grid-number,\\n  .q-grid tfoot td.q-grid-currency,\\n  .q-grid tfoot td.q-grid-id,\\n  .q-grid tfoot th.q-grid-number,\\n  .q-grid tfoot th.q-grid-currency,\\n  .q-grid tfoot th.q-grid-id,\\n  .q-grid tbody td.q-grid-number,\\n  .q-grid tbody td.q-grid-currency,\\n  .q-grid tbody td.q-grid-id,\\n  .q-grid tbody th.q-grid-number,\\n  .q-grid tbody th.q-grid-currency,\\n  .q-grid tbody th.q-grid-id {\\n    width: 100px;\\n    min-width: 100px;\\n    max-width: 100px; }\\n.q-grid thead td.q-grid-array,\\n  .q-grid thead th.q-grid-array,\\n  .q-grid tfoot td.q-grid-array,\\n  .q-grid tfoot th.q-grid-array,\\n  .q-grid tbody td.q-grid-array,\\n  .q-grid tbody th.q-grid-array {\\n    width: 250px;\\n    min-width: 250px;\\n    max-width: 250px; }\\n.q-grid thead td.q-grid-row-indicator,\\n  .q-grid thead th.q-grid-row-indicator,\\n  .q-grid tfoot td.q-grid-row-indicator,\\n  .q-grid tfoot th.q-grid-row-indicator,\\n  .q-grid tbody td.q-grid-row-indicator,\\n  .q-grid tbody th.q-grid-row-indicator {\\n    width: 24px;\\n    min-width: 24px;\\n    max-width: 24px;\\n    text-overflow: initial; }\\n.q-grid thead td.q-grid-row-options,\\n  .q-grid thead th.q-grid-row-options,\\n  .q-grid tfoot td.q-grid-row-options,\\n  .q-grid tfoot th.q-grid-row-options,\\n  .q-grid tbody td.q-grid-row-options,\\n  .q-grid tbody th.q-grid-row-options {\\n    width: 48px;\\n    min-width: 48px;\\n    max-width: 48px;\\n    text-overflow: initial; }\\n.q-grid thead td.q-grid-row-expand,\\n  .q-grid thead th.q-grid-row-expand,\\n  .q-grid tfoot td.q-grid-row-expand,\\n  .q-grid tfoot th.q-grid-row-expand,\\n  .q-grid tbody td.q-grid-row-expand,\\n  .q-grid tbody th.q-grid-row-expand {\\n    width: 48px;\\n    min-width: 48px;\\n    max-width: 48px; }\\n.q-grid thead td.q-grid-row-number,\\n  .q-grid thead th.q-grid-row-number,\\n  .q-grid tfoot td.q-grid-row-number,\\n  .q-grid tfoot th.q-grid-row-number,\\n  .q-grid tbody td.q-grid-row-number,\\n  .q-grid tbody th.q-grid-row-number {\\n    width: 56px;\\n    min-width: 56px;\\n    max-width: 56px; }\\n.q-grid thead td.q-grid-select,\\n  .q-grid thead th.q-grid-select,\\n  .q-grid tfoot td.q-grid-select,\\n  .q-grid tfoot th.q-grid-select,\\n  .q-grid tbody td.q-grid-select,\\n  .q-grid tbody th.q-grid-select {\\n    width: 56px;\\n    min-width: 56px;\\n    max-width: 56px;\\n    text-overflow: initial; }\\n.q-grid thead td.q-grid-image,\\n  .q-grid thead th.q-grid-image,\\n  .q-grid tfoot td.q-grid-image,\\n  .q-grid tfoot th.q-grid-image,\\n  .q-grid tbody td.q-grid-image,\\n  .q-grid tbody th.q-grid-image {\\n    width: 80px;\\n    min-width: 80px;\\n    max-width: 80px; }\\n.q-grid tbody td.q-grid-number, .q-grid tbody td.q-grid-currency,\\n.q-grid tfoot td.q-grid-number,\\n.q-grid tfoot td.q-grid-currency {\\n  text-align: right; }\\n.q-grid tbody td.q-grid-id,\\n.q-grid tfoot td.q-grid-id {\\n  text-align: left; }\\n.q-grid tbody td.q-grid-bool, .q-grid tbody td.q-grid-password, .q-grid tbody td.q-grid-select,\\n.q-grid tfoot td.q-grid-bool,\\n.q-grid tfoot td.q-grid-password,\\n.q-grid tfoot td.q-grid-select {\\n  text-align: center; }\\n.q-grid tbody td.q-grid-dropdown select,\\n.q-grid tfoot td.q-grid-dropdown select {\\n  width: 100%; }\\n.q-grid tbody td.q-grid-row-options,\\n.q-grid tfoot td.q-grid-row-options {\\n  cursor: pointer; }\\n.q-grid-can-drag {\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  -khtml-user-drag: element;\\n  -webkit-user-drag: element; }\\n.q-grid.q-grid-box .q-grid-row-indicator .q-grid-can-drag {\\n  cursor: move;\\n  opacity: 0.4; }\\n.q-grid.q-grid-box .q-grid-row-indicator .q-grid-can-drag .q-grid-icon {\\n    width: 16px;\\n    min-width: 16px;\\n    min-height: 16px;\\n    height: 16px;\\n    font-size: 16px;\\n    vertical-align: middle; }\\n.q-grid tr.q-grid-drag {\\n  opacity: 0.5; }\\n.q-grid td.q-grid-drag,\\n.q-grid th.q-grid-drag {\\n  opacity: 0.5; }\\n.q-grid.q-grid-box:not(.q-grid-drag) td.q-grid-focused {\\n  outline: 2px solid rgba(63, 81, 181, 0.25);\\n  outline-offset: -2px; }\\n.q-grid.q-grid-box:not(.q-grid-drag) td.q-grid-focused.q-grid-animate {\\n    outline: none; }\\n.q-grid .q-grid-view:not(.q-grid-active) td.q-grid-focused {\\n  outline-color: rgba(63, 81, 181, 0.05); }\\n.q-grid .q-grid-cell-handler {\\n  transition: all 0.15s;\\n  position: absolute;\\n  pointer-events: none;\\n  outline: 2px solid rgba(63, 81, 181, 0.25);\\n  outline-offset: -2px;\\n  display: none; }\\n.q-grid .q-grid-cell-handler.q-grid-active {\\n    display: block; }\\n.q-grid .q-grid-marker {\\n  display: block;\\n  position: absolute;\\n  width: 10px;\\n  height: 10px;\\n  bottom: 5px;\\n  right: 5px;\\n  font-size: 14px;\\n  color: #C8C8C8;\\n  cursor: move; }\\n.q-grid .q-grid-view .q-grid-layer {\\n  position: absolute;\\n  width: 100%;\\n  height: 100%; }\\n.q-grid .q-grid-view .q-grid-layer:empty {\\n    pointer-events: none; }\\n.q-grid th > .q-grid-resize-handler {\\n  top: 20%;\\n  bottom: 20%;\\n  right: 0;\\n  height: 60%;\\n  width: 4px;\\n  z-index: 2;\\n  background: transparent;\\n  position: absolute;\\n  border-right: 1px solid #e0e0e0;\\n  cursor: col-resize;\\n  opacity: 0; }\\n.q-grid th.q-grid-highlighted .q-grid-resize-handler, .q-grid th.q-grid-highlighted-prev .q-grid-resize-handler {\\n  opacity: 1; }\\n.q-grid td > .q-grid-can-drag > .q-grid-resize-handler {\\n  height: 2px;\\n  width: 100%;\\n  bottom: 0;\\n  left: 0;\\n  width: 100vh;\\n  position: absolute;\\n  cursor: row-resize;\\n  z-index: 2;\\n  pointer-events: all; }\\n.q-grid.q-grid-box.q-grid-drag th > .q-grid-resize-handler {\\n  opacity: 0; }\\n.q-grid .q-grid-table tbody,\\n.q-grid .q-grid-table thead,\\n.q-grid .q-grid-table tfoot {\\n  border-collapse: collapse;\\n  border-spacing: 0; }\\n.q-grid .q-grid-table table {\\n  border-spacing: 0;\\n  overflow: hidden;\\n  table-layout: fixed;\\n  display: flex;\\n  flex-flow: column;\\n  height: 100%;\\n  width: 100%;\\n  outline: none; }\\n.q-grid .q-grid-table table thead,\\n  .q-grid .q-grid-table table tfoot {\\n    /* head takes the height it requires,\\n           and it's not scaled when table is resized */\\n    flex: 0 0 auto;\\n    width: calc(100% - 8px);\\n    overflow: hidden; }\\n.q-grid .q-grid-table table tbody {\\n    /* body takes all the remaining available space */\\n    flex: 1 1 auto;\\n    display: block;\\n    overflow: scroll;\\n    scrollbar-color: #c8c8c8 #f8f8f8;\\n    scrollbar-width: thin;\\n    outline: none;\\n    overflow-anchor: none; }\\n.q-grid .q-grid-table table tbody.q-grid-body-top {\\n      flex: none;\\n      overflow-x: hidden; }\\n.q-grid .q-grid-table table tbody.q-grid-body-bottom {\\n      flex: none; }\\n.q-grid .q-grid-table table tbody tr {\\n    width: 100%;\\n    display: table-row;\\n    table-layout: fixed; }\\n.q-grid .q-grid-table table tbody tr.q-grid-align {\\n      height: 0 !important;\\n      border: 0; }\\n.q-grid .q-grid-table table tbody tr.q-grid-align:last-child {\\n        display: initial; }\\n.q-grid .q-grid-table.q-grid-table-left thead,\\n.q-grid .q-grid-table.q-grid-table-left tfoot {\\n  width: 100%; }\\n.q-grid .q-grid-with-right-pin > .q-grid-view > .q-grid-table.q-grid-table-center > table > thead,\\n.q-grid .q-grid-with-right-pin > .q-grid-view > .q-grid-table.q-grid-table-center > table > tfoot {\\n  width: 100%; }\\n.q-grid .q-grid-toolbar-left, .q-grid .q-grid-toolbar-right {\\n  max-width: 250px;\\n  overflow: auto; }\\n.q-grid .q-grid-toolbar-top, .q-grid .q-grid-toolbar-bottom {\\n  overflow: hidden; }\\n.q-grid .q-grid-view {\\n  position: relative;\\n  overflow: visible; }\\n.q-grid .q-grid-view.q-grid-select-range thead td,\\n  .q-grid .q-grid-view.q-grid-select-range thead th,\\n  .q-grid .q-grid-view.q-grid-select-range tfoot td,\\n  .q-grid .q-grid-view.q-grid-select-range tfoot th,\\n  .q-grid .q-grid-view.q-grid-select-range tbody td,\\n  .q-grid .q-grid-view.q-grid-select-range tbody th {\\n    -webkit-user-select: none;\\n    -moz-user-select: none;\\n    -ms-user-select: none;\\n    user-select: none;\\n    cursor: default; }\\n.q-grid .q-grid-view > .q-grid-table-left > table > tbody {\\n    overflow-y: hidden; }\\n.q-grid .q-grid-with-right-pin > .q-grid-view > .q-grid-table-center > table > tbody {\\n  overflow-y: hidden; }\\n.q-grid .q-grid-with-bottom-pin > .q-grid-view > .q-grid-table-center > table > tbody:not(.q-grid-body-bottom) {\\n  overflow-x: hidden; }\\n\"","import { Directive, Input, OnDestroy, OnInit, Output, EventEmitter, HostListener } from '@angular/core';\nimport { Command } from 'ng2-qgrid/core/command/command';\nimport { CommandManager } from 'ng2-qgrid/core/command/command.manager';\nimport { Shortcut } from 'ng2-qgrid/core/shortcut/shortcut';\nimport { ShortcutDispatcher } from 'ng2-qgrid/core/shortcut/shortcut.dispatcher';\n\n\n@Directive({\n\tselector: '[q-grid-command]'\n})\nexport class CommandDirective implements OnInit, OnDestroy {\n\tprivate shortcut = new Shortcut(new ShortcutDispatcher());\n\tprivate shortcutOff: () => void;\n\n\t@Input('q-grid-command') command: Command;\n\t@Input('q-grid-command-context') commandContext: any;\n\t@Output('q-grid-command-execute') execute = new EventEmitter();\n\n\tconstructor() {\n\t}\n\n\tngOnInit() {\n\t\tconst command = this.command;\n\t\tif (command && command.shortcut) {\n\t\t\tconst manager = new CommandManager(f => {\n\t\t\t\tf();\n\t\t\t\tthis.execute.emit();\n\t\t\t}, this.commandContext);\n\n\t\t\tthis.shortcutOff = this.shortcut.register(manager, [command]);\n\t\t}\n\t}\n\n\t@HostListener('document:keydown', ['$event'])\n\tonKeyDown(e: KeyboardEvent) {\n\t\tif (this.shortcutOff) {\n\t\t\tthis.shortcut.keyDown(e, 'command');\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tif (this.shortcutOff) {\n\t\t\tthis.shortcutOff();\n\t\t\tthis.shortcutOff = null;\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommandDirective } from './command.directive';\n\n@NgModule({\n\tdeclarations: [\n\t\tCommandDirective\n\t],\n\texports: [\n\t\tCommandDirective\n\t]\n})\nexport class CommandModule {\n}\n","import { NgModule } from '@angular/core';\nimport { RaiseModule } from './raise/raise.module';\nimport { DndModule } from './dnd/dnd.module';\nimport { FocusModule } from './focus/focus.module';\nimport { ResizeModule } from './resize/resize.module';\nimport { LayoutModule } from './layout/layout.module';\nimport { FileModule } from './file/file.module';\nimport { VscrollModule } from './vscroll/vscroll.module';\nimport { InputModule } from './input/input.module';\nimport { TimeModule } from './time/time.module';\nimport { DateModule } from './date/date.module';\nimport { CommandModule } from './command/command.module';\n\n@NgModule({\n\tdeclarations: [],\n\texports: [\n\t\tDndModule,\n\t\tFocusModule,\n\t\tResizeModule,\n\t\tLayoutModule,\n\t\tInputModule,\n\t\tRaiseModule,\n\t\tFileModule,\n\t\tVscrollModule,\n\t\tTimeModule,\n\t\tDateModule,\n\t\tCommandModule\n\t]\n})\nexport class CommonModule {}\n","import { Directive, TemplateRef, ViewContainerRef, ElementRef } from '@angular/core';\n\nconst DATEPATTERN_1 = /^\\d{1,2}[\\/|\\-|\\.|_]\\d{1,2}[\\/|\\-|\\.|_]\\d{4}$/g; // Month/Day/Year Day/Month/Year\nconst DATEPATTERN_2 = /^\\d{4}[\\/|\\-|\\.|_]\\d{1,2}[\\/|\\-|\\.|_]\\d{1,2}$/g; // Year/Day/Date Year/Day/Month\n\n@Directive({\n\tselector: '[q-grid-date]'\n})\nexport class DateDirective {\n\tconstructor(templateRef: TemplateRef<DateDirective>, viewContainerRef: ViewContainerRef) {\n\t\tviewContainerRef.createEmbeddedView(templateRef, this);\n\t}\n\n\tisValid(text) {\n\t\tif ((text.search(DATEPATTERN_1) === 0) || (text.search(DATEPATTERN_2) === 0)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { DateDirective } from './date.directive';\n\n@NgModule({\n\tdeclarations: [\n\t\tDateDirective\n\t],\n\texports: [\n\t\tDateDirective\n\t]\n})\nexport class DateModule {\n}\n","import { NgModule } from '@angular/core';\r\nimport { DragDirective } from './drag.directive';\r\nimport { DropDirective } from './drop.directive';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tDragDirective,\r\n\t\tDropDirective\r\n\t],\r\n\texports: [\r\n\t\tDragDirective,\r\n\t\tDropDirective\r\n\t]\r\n})\r\nexport class DndModule {\r\n}\r\n","import { Directive, ElementRef, Input, Optional } from '@angular/core';\nimport { EventManager } from 'ng2-qgrid/core/infrastructure/event.manager';\nimport { EventListener } from 'ng2-qgrid/core/infrastructure/event.listener';\nimport { DragService } from 'ng2-qgrid/core/drag/drag.service';\nimport { GRID_PREFIX } from 'ng2-qgrid/core/definition';\nimport { Command } from 'ng2-qgrid/core/command/command';\nimport { RootService } from '../../infrastructure/component/root.service';\nimport { isFunction } from 'ng2-qgrid/core/utility/kit';\n\n@Directive({\n\tselector: '[q-grid-drag]'\n})\nexport class DragDirective {\n\t@Input('q-grid-drag-data') data: any;\n\t@Input('q-grid-drag-effect') effect: string;\n\t@Input('q-grid-drag') drag: Command;\n\t@Input('q-grid-drop-area') area: string;\n\n\tconstructor(\n\t\t@Optional() private root: RootService,\n\t\tprivate elementRef: ElementRef\n\t) {\n\t\tconst element = elementRef.nativeElement;\n\t\tconst listener = new EventListener(element, new EventManager(this));\n\t\telement.classList.add(`${GRID_PREFIX}-can-drag`);\n\t\telement.setAttribute('draggable', true);\n\n\t\tlistener.on('dragstart', this.onStart);\n\t\tlistener.on('dragend', this.onEnd);\n\t}\n\n\tonStart(e: DragEvent) {\n\t\tconst transfer = e.dataTransfer;\n\t\tconst data = this.data;\n\t\tconst eventArg = { data };\n\n\t\tif (this.drag.canExecute(eventArg) === false) {\n\t\t\te.preventDefault();\n\t\t\ttransfer.effectAllowed = 'none';\n\t\t\treturn false;\n\t\t}\n\n\t\tconst result = this.drag.execute(eventArg);\n\t\tDragService.element =\n\t\t\tresult && isFunction(result.getBoundingClientRect)\n\t\t\t\t? result : (e.srcElement || e.target);\n\n\t\tthis.elementRef.nativeElement.classList.add(`${GRID_PREFIX}-drag`);\n\n\t\ttransfer.setData(DragService.mimeType, DragService.encode(data));\n\t\ttransfer.effectAllowed = this.effect || 'move';\n\n\t\tDragService.data = data;\n\t\tDragService.area = this.area;\n\n\t\tconst rect = DragService.element.getBoundingClientRect();\n\t\tDragService.startPosition = {\n\t\t\tx: e.clientX,\n\t\t\ty: e.clientY,\n\t\t\trect\n\t\t};\n\n\t\tif (this.root) {\n\t\t\tconst { model } = this.root;\n\t\t\tmodel.drag({ isActive: true }, { source: 'drag.directive' });\n\t\t}\n\t}\n\n\tonEnd() {\n\t\tif (this.root) {\n\t\t\tconst { model } = this.root;\n\t\t\tmodel.drag({ isActive: false }, { source: 'drag.directive' });\n\t\t}\n\n\t\tthis.elementRef.nativeElement.classList.remove(`${GRID_PREFIX}-drag`);\n\n\t\tDragService.data = null;\n\t\tDragService.area = null;\n\t\tDragService.element = null;\n\t\tDragService.startPosition = null;\n\t}\n}\n","import { Directive, ElementRef, Input, OnInit, Optional, NgZone } from '@angular/core';\nimport { EventManager } from 'ng2-qgrid/core/infrastructure/event.manager';\nimport { EventListener } from 'ng2-qgrid/core/infrastructure/event.listener';\nimport { DragService } from 'ng2-qgrid/core/drag/drag.service';\nimport { GRID_PREFIX } from 'ng2-qgrid/core/definition';\nimport { Command } from 'ng2-qgrid/core/command/command';\nimport { no } from 'ng2-qgrid/core/utility/kit';\nimport { elementFromPoint, parents } from 'ng2-qgrid/core/services/dom';\nimport { RootService } from '../../infrastructure/component/root.service';\nimport { NgComponent } from '../../infrastructure/component/ng.component';\n\nexport interface DropEventArg {\n\tpath: HTMLElement[];\n\tdragData: any;\n\tdropData: any;\n\taction: string; // 'over' | 'drop' | 'end';\n\n\tinAreaY(element: HTMLElement): boolean;\n\tinAreaX(element: HTMLElement): boolean;\n}\n\n@Directive({\n\tselector: '[q-grid-drop]'\n})\nexport class DropDirective extends NgComponent implements OnInit {\n\t@Input('q-grid-drop-area') area: string;\n\t@Input('q-grid-drop-data') dropData: any;\n\t@Input('q-grid-drop') drop: Command<DropEventArg>;\n\t@Input('q-grid-drag-over') dragOver: Command<DropEventArg>;\n\t@Input('q-grid-drag-direction') dragDirection: 'x' | 'y' = 'y';\n\n\tconstructor(\n\t\t@Optional() private root: RootService,\n\t\tprivate elementRef: ElementRef,\n\t\tzone: NgZone\n\t) {\n\t\tsuper();\n\n\t\tconst element = elementRef.nativeElement;\n\t\tconst listener = new EventListener(element, new EventManager(this));\n\n\t\telement.classList.add(`${GRID_PREFIX}-can-drop`);\n\t\tzone.runOutsideAngular(() => {\n\t\t\tlistener.on('dragenter', this.onEnter);\n\t\t\tlistener.on('dragover', this.onOver);\n\t\t\tlistener.on('dragleave', this.onLeave);\n\t\t});\n\n\t\tlistener.on('drop', this.onDrop);\n\t}\n\n\tngOnInit() {\n\t\tif (this.root) {\n\t\t\tthis.using(this.root.model.dragChanged.on(e => {\n\t\t\t\tif (e.hasChanges('isActive')) {\n\t\t\t\t\tif (!e.state.isActive) {\n\t\t\t\t\t\tconst eventArg = {\n\t\t\t\t\t\t\tpath: [],\n\t\t\t\t\t\t\tdragData: DragService.data,\n\t\t\t\t\t\t\tdropData: this.dropData,\n\t\t\t\t\t\t\taction: 'end',\n\t\t\t\t\t\t\tinAreaX: no,\n\t\t\t\t\t\t\tinAreaY: no\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (this.drop.canExecute(eventArg)) {\n\t\t\t\t\t\t\tthis.drop.execute(eventArg);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n\n\tonDrop(e: DragEvent) {\n\t\te.stopPropagation();\n\n\t\tthis.elementRef.nativeElement.classList.remove(`${GRID_PREFIX}-dragover`);\n\t\tconst eventArg = {\n\t\t\tpath: (e as any).path,\n\t\t\tdragData: DragService.data,\n\t\t\tdropData: this.dropData,\n\t\t\taction: 'drop',\n\t\t\tinAreaX: this.inAreaFactory(e, 'x'),\n\t\t\tinAreaY: this.inAreaFactory(e, 'y')\n\t\t};\n\n\t\tif (this.drop.canExecute(eventArg)) {\n\t\t\tthis.drop.execute(eventArg);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tonEnter(e: DragEvent) {\n\t\te.preventDefault();\n\n\t\tthis.elementRef.nativeElement.classList.add(`${GRID_PREFIX}-dragover`);\n\t\te.dataTransfer.dropEffect = 'move';\n\t\treturn false;\n\t}\n\n\tonOver(e: DragEvent) {\n\t\te.preventDefault();\n\n\t\tif (this.root && this.root.model.scene().status !== 'stop') {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.area !== DragService.area) {\n\t\t\te.dataTransfer.dropEffect = 'none';\n\t\t\treturn false;\n\t\t}\n\n\t\tconst pos = this.getPosition(e);\n\t\tconst path = this.getPath(pos);\n\t\tif (path.indexOf(DragService.element) >= 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst eventArg = {\n\t\t\tpath,\n\t\t\tdragData: DragService.data,\n\t\t\tdropData: this.dropData,\n\t\t\taction: 'over',\n\t\t\tinAreaX: this.inAreaFactory(e, 'x'),\n\t\t\tinAreaY: this.inAreaFactory(e, 'y')\n\t\t};\n\n\t\tif (this.dragOver.canExecute(eventArg)) {\n\t\t\tthis.dragOver.execute(eventArg);\n\t\t\tif (DragService.data !== eventArg.dragData) {\n\t\t\t\tDragService.data = eventArg.dragData;\n\t\t\t}\n\n\t\t\te.dataTransfer.dropEffect = 'move';\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tonLeave() {\n\t\tthis.elementRef.nativeElement.classList.remove(`${GRID_PREFIX}-dragover`);\n\t}\n\n\tprivate getPosition(e: DragEvent) {\n\t\tconst start = DragService.startPosition;\n\t\tconst src = start.rect;\n\n\t\tconst offsetX = start.x - (src.left + src.width / 2);\n\t\tconst offsetY = start.y - (src.top + src.height / 2);\n\n\t\tconst { clientX, clientY } = e;\n\n\t\tconst x = clientX - offsetX;\n\t\tconst y = clientY - offsetY;\n\n\t\treturn { x, y };\n\t}\n\n\tprivate getPath({ x, y }: { x: number, y: number }) {\n\t\t// Document.elementsFromPoint is not working with tr?\n\t\t// so we need to go through all parent.\n\n\t\tconst element = elementFromPoint(x, y);\n\t\tconst path = parents(element);\n\t\treturn path;\n\t}\n\n\tprivate inAreaFactory(e: DragEvent, direction: 'x' | 'y') {\n\t\tconst src = DragService.startPosition.rect;\n\t\tconst { x, y } = this.getPosition(e);\n\t\tif (direction === 'y') {\n\t\t\treturn (element: HTMLElement) => {\n\t\t\t\tconst trg = element.getBoundingClientRect();\n\t\t\t\t// we are on the top of target\n\t\t\t\tif (src.top < trg.top) {\n\t\t\t\t\treturn trg.bottom > y && y > trg.bottom - src.height;\n\t\t\t\t}\n\n\t\t\t\t// we are on the bottom of target\n\t\t\t\treturn trg.top < y && y < trg.top + src.height;\n\t\t\t};\n\t\t}\n\n\t\treturn (element: HTMLElement) => {\n\t\t\tconst trg = element.getBoundingClientRect();\n\n\t\t\t// we are on the left of target\n\t\t\tif (src.left < trg.left) {\n\t\t\t\treturn trg.right > x && x > trg.right - src.width;\n\t\t\t}\n\n\t\t\t// we are on the right of target\n\t\t\treturn trg.left < x && x < trg.left + src.width;\n\t\t};\n\t}\n}\n","import { BackdropService } from '../../plugins/backdrop/backdrop.service';\nimport { Directive, ElementRef, Input, Output, EventEmitter, Optional } from '@angular/core';\nimport { EventManager } from 'ng2-qgrid/core/infrastructure/event.manager';\nimport { EventListener } from 'ng2-qgrid/core/infrastructure/event.listener';\nimport { yes } from 'ng2-qgrid/core/utility/kit';\nimport { NgComponent } from '../../infrastructure/component/ng.component';\n\n@Directive({\n\tselector: '[q-grid-file]'\n})\nexport class FileDirective extends NgComponent {\n\tprivate reader = new FileReader();\n\tprivate _value: any;\n\tprivate _label: string;\n\n\t@Output('q-grid-fileChange') valueChange = new EventEmitter<any>();\n\t@Output('q-grid-file-labelChange') labelChange = new EventEmitter<string>();\n\n\t@Input('q-grid-file-is-valid') isValid: (name: string) => boolean = yes;\n\n\t@Input('q-grid-file') get value() {\n\t\treturn this._value;\n\t}\n\n\tset value(value: any) {\n\t\tif (value !== this._value) {\n\t\t\tthis._value = value;\n\t\t\tthis.valueChange.emit(value);\n\t\t}\n\t}\n\n\t@Input('q-grid-file-label') get label() {\n\t\treturn this._label;\n\t}\n\n\tset label(value: string) {\n\t\tif (value !== this._label) {\n\t\t\tthis._label = value;\n\t\t\tthis.labelChange.emit(value);\n\t\t}\n\t}\n\n\tconstructor(@Optional() private backdropService: BackdropService, elementRef: ElementRef) {\n\t\tsuper();\n\n\t\tconst listener = new EventListener(elementRef.nativeElement, new EventManager(this));\n\n\t\tthis.using(listener.on('change', this.onUpload));\n\t\tthis.using(listener.on('drop', this.onUpload));\n\t\tthis.using(listener.on('click', this.hideBackdrop));\n\t\tthis.using(listener.on('focus', this.revealBackdrop));\n\n\t\tthis.reader.onloadend = e => this.onLoadEnd(e);\n\t}\n\n\tonUpload(e) {\n\t\tconst { files } = e.target;\n\t\tconst file = files[0];\n\t\tif (file && this.isValid(file.name)) {\n\t\t\tthis.reader.readAsDataURL(file);\n\t\t\tthis.label = file.name;\n\t\t}\n\t}\n\n\tonLoadEnd(e) {\n\t\tif (e.target.readyState === this.reader.DONE) {\n\t\t\tthis.value = e.target.result;\n\t\t}\n\t}\n\n\thideBackdrop() {\n\t\tif (this.backdropService) {\n\t\t\tthis.backdropService.hide();\n\t\t}\n\t}\n\n\trevealBackdrop() {\n\t\tif (this.backdropService) {\n\t\t\tif (!this.backdropService.isActive) {\n\t\t\t\tsetTimeout(() => this.backdropService.reveal(), 300);\n\t\t\t}\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { FileDirective } from './file.directive';\n\n@NgModule({\n\tdeclarations: [FileDirective],\n\texports: [FileDirective]\n})\nexport class FileModule {}\n","import { Directive, AfterViewInit, Input, OnDestroy } from '@angular/core';\nimport { RootService } from '../../infrastructure/component/root.service';\nimport { AutofocusView } from 'ng2-qgrid/plugin/autofocus/autofocus.view';\n\n@Directive({\n\tselector: '[q-grid-autofocus]'\n})\nexport class AutoFocusDirective implements AfterViewInit, OnDestroy {\n\tprivate view: AutofocusView;\n\n\t@Input('q-grid-autofocus') enabled: boolean;\n\n\tconstructor(private root: RootService) { }\n\n\tngAfterViewInit() {\n\t\tif (this.enabled !== false) {\n\t\t\tconst { markup, model, table } = this.root;\n\t\t\tthis.view = new AutofocusView(model, table, markup);\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tif (this.view) {\n\t\t\tthis.view.dispose();\n\t\t}\n\t}\n}\n","import { Directive, OnInit, Input, Renderer2, ElementRef } from '@angular/core';\r\nimport { noop } from 'ng2-qgrid/core/utility/kit';\r\n\r\n@Directive({\r\n\tselector: '[q-grid-on-blur]'\r\n})\r\nexport class BlurDirective implements OnInit {\r\n\t@Input('q-grid-on-blur') onBlur = noop;\r\n\t@Input('q-grid-on-blur-selector') selector = 'input';\r\n\r\n\tconstructor(private renderer: Renderer2, private elementRef: ElementRef) {\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tconst element = this.renderer.selectRootElement(this.selector);\r\n\t\tthis.renderer.listen(element, 'blur', this.onBlur);\r\n\t}\r\n}\r\n","import {\n\tDirective,\n\tElementRef,\n\tInput,\n\tAfterViewInit,\n\tNgZone,\n} from '@angular/core';\nimport { AppError } from 'ng2-qgrid/core/infrastructure/error';\nimport { isString, isFunction } from 'ng2-qgrid/core/utility/kit';\n\n@Directive({\n\tselector: '[q-grid-focus]'\n})\nexport class FocusDirective implements AfterViewInit {\n\t@Input('q-grid-focus') selector;\n\t@Input('q-grid-focus-disabled') disabled = false;\n\n\tconstructor(\n\t\tprivate elementRef: ElementRef,\n\t\tprivate zone: NgZone\n\t) { }\n\n\tngAfterViewInit() {\n\t\tif (this.disabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst selector = this.selector;\n\t\tconst element = selector\n\t\t\t? isString(selector) ? this.elementRef.nativeElement.querySelector(selector) : selector\n\t\t\t: this.elementRef.nativeElement;\n\n\t\tif (!element) {\n\t\t\tthrow new AppError(\n\t\t\t\t'focus.directive',\n\t\t\t\t`Element ${this.selector} is not found`\n\t\t\t);\n\t\t}\n\n\t\tif (!isFunction(element.focus)) {\n\t\t\tthrow new AppError(\n\t\t\t\t'focus.directive',\n\t\t\t\t`Can't find focus method in ${element}`\n\t\t\t);\n\t\t}\n\n\t\t// we need a small timeout to wait, for example, position directive\n\t\t// in other case it will scroll to element before layout\n\t\tthis.zone.runOutsideAngular(() =>\n\t\t\tsetTimeout(() => {\n\t\t\t\telement.focus();\n\t\t\t}, 10));\n\t}\n}\n","import { NgModule } from '@angular/core';\r\nimport { FocusDirective } from './focus.directive';\r\nimport { AutoFocusDirective } from './autofocus.directive';\r\nimport { BlurDirective } from './blur.directive';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tFocusDirective,\r\n\t\tAutoFocusDirective,\r\n\t\tBlurDirective\r\n\t],\r\n\texports: [\r\n\t\tFocusDirective,\r\n\t\tAutoFocusDirective,\r\n\t\tBlurDirective\r\n\t]\r\n})\r\nexport class FocusModule {\r\n}\r\n","import { Injectable, OnDestroy, Optional } from '@angular/core';\r\nimport { RootService } from '../../infrastructure/component/root.service';\r\nimport { FocusAfterRender as FocusAfterRenderCore } from 'ng2-qgrid/core/focus/focus.service';\r\nimport { PluginService } from '../../plugins/plugin.service';\r\n\r\n@Injectable()\r\nexport class FocusAfterRender implements OnDestroy {\r\n\tprivate focus: FocusAfterRenderCore;\r\n\r\n\tconstructor(\r\n\t\t@Optional() plugin: PluginService,\r\n\t\t@Optional() root: RootService\r\n\t) {\r\n\t\tconst gridModel = (plugin && plugin.model) || (root && root.model);\r\n\t\tconst domTable = (plugin && plugin.table)  || (root && root.table);\r\n\t\tif (gridModel && domTable) {\r\n\t\t\tthis.focus = new FocusAfterRenderCore(gridModel, domTable);\r\n\t\t}\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tif (this.focus) {\r\n\t\t\tthis.focus.dispose();\r\n\t\t\tthis.focus = null;\r\n\t\t}\r\n\t}\r\n}\r\n","import { NgModule } from '@angular/core';\r\n// import { InputDirective } from './input.directive';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n// InputDirective\r\n\t],\r\n\texports: [\r\n// InputDirective\r\n\t]\r\n})\r\nexport class InputModule {\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { PositionDirective } from './position.directive';\r\nimport { StopPropagateDirective } from './stop-propagate.directive';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tPositionDirective,\r\n\t\tStopPropagateDirective\r\n\t],\r\n\texports: [\r\n\t\tPositionDirective,\r\n\t\tStopPropagateDirective\r\n\t]\r\n})\r\nexport class LayoutModule {\r\n}\r\n","import { Directive, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\nimport { PositionView } from 'ng2-qgrid/plugin/position/position.view';\n\n@Directive({\n\tselector: '[q-grid-position]'\n})\nexport class PositionDirective implements OnDestroy, OnInit {\n\tprivate position: PositionView;\n\n\t@Input('q-grid-position') target = '';\n\n\tconstructor(private elementRef: ElementRef) {\n\t}\n\n\tngOnInit() {\n\t\tthis.position = new PositionView({\n\t\t\telement: this.elementRef.nativeElement,\n\t\t\ttargetName: this.target\n\t\t});\n\n\t\tthis.position.invalidate();\n\t}\n\n\tngOnDestroy() {\n\t\tif (this.position) {\n\t\t\tthis.position.dispose();\n\t\t\tthis.position = null;\n\t\t}\n\t}\n}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\nimport { isArray } from 'ng2-qgrid/core/utility/kit';\n\n@Directive({\n\tselector: '[q-grid-stop-propagate]'\n})\nexport class StopPropagateDirective implements OnInit {\n\t@Input('q-grid-stop-propagate') events;\n\n\tconstructor(private elementRef: ElementRef) {\n\t}\n\n\tngOnInit() {\n\t\tlet { events } = this;\n\t\tif (!isArray(events)) {\n\t\t\tevents = [events];\n\t\t}\n\n\t\tevents.forEach(eventName =>\n\t\t\tthis.elementRef.nativeElement.addEventListener(eventName, e =>\n\t\t\t\te.stopPropagation()\n\t\t\t));\n\t}\n}\n","import { AfterViewInit, Directive, ElementRef, Input } from '@angular/core';\nimport { AppError } from 'ng2-qgrid/core/infrastructure/error';\n\n@Directive({\n\tselector: '[q-grid-raise]'\n})\nexport class RaiseDirective implements AfterViewInit {\n\t@Input('q-grid-raise') type = 'click';\n\t@Input('q-grid-raise-target') target: string;\n\n\tconstructor(private element: ElementRef) {}\n\n\tngAfterViewInit() {\n\t\tconst event = new Event(this.type);\n\t\tconst element = this.element.nativeElement;\n\n\t\tconst target = this.target\n\t\t\t? element.querySelector(this.target)\n\t\t\t: element;\n\n\t\tif (!target) {\n\t\t\tthrow new AppError('raise.directive', 'raise target is not found');\n\t\t}\n\n\t\ttarget.dispatchEvent(event);\n\t}\n}\n","import { NgModule } from '@angular/core';\r\nimport { RaiseDirective } from './raise.directive';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tRaiseDirective\r\n\t],\r\n\texports: [\r\n\t\tRaiseDirective\r\n\t]\r\n})\r\nexport class RaiseModule {\r\n}\r\n","import { Directive, ElementRef, OnInit, Input, } from '@angular/core';\r\nimport { Fastdom } from 'ng2-qgrid/core/services/fastdom';\r\n\r\n@Directive({\r\n\tselector: '[q-grid-autosize]'\r\n})\r\nexport class AutosizeDirective implements OnInit {\r\n\t@Input('q-grid-autosize') selector;\r\n\t@Input('q-grid-autosize-empty-width') emptyWidth = 75;\r\n\tprivate actualText: string;\r\n\tprivate host: HTMLElement;\r\n\tprivate element: HTMLInputElement;\r\n\r\n\tconstructor(element: ElementRef) {\r\n\t\tthis.host = element.nativeElement as HTMLInputElement;\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.element = this.selector ? this.host.querySelector(this.selector) as HTMLInputElement : this.host as HTMLInputElement;\r\n\t}\r\n\r\n\tautoWidth(text) {\r\n\t\tif (!text) {\r\n\t\t\tthis.actualText = text;\r\n\t\t\tFastdom.measure(() => {\r\n\t\t\t\tFastdom.mutate(() => {\r\n\t\t\t\t\tthis.host.style.width = `${this.emptyWidth}px`;\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!this.element) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.actualText === text) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.actualText = text;\r\n\t\tFastdom.measure(() => {\r\n\t\t\tconst width = `${this.calculateWidth(this.element, text)}px`;\r\n\t\t\tFastdom.mutate(() => this.host.style.width = width);\r\n\t\t});\r\n\t}\r\n\r\n\t@Input('q-grid-autisize-value')\r\n\tset value(value: string) {\r\n\t\tthis.autoWidth(value);\r\n\t}\r\n\r\n\tprivate calculateWidth(element: HTMLElement, text: string) {\r\n\t\tlet width = 0;\r\n\t\tif (text) {\r\n\t\t\tconst document = element.ownerDocument;\r\n\t\t\tconst body = document.body;\r\n\t\t\tconst test = document.createElement('span');\r\n\r\n\t\t\ttest.innerText = text;\r\n\t\t\ttest.style.whiteSpace = 'pre';\r\n\t\t\ttest.style.visibility = 'hidden';\r\n\t\t\ttest.style.font = element.style.font;\r\n\t\t\ttest.style.fontFamily = element.style.fontFamily;\r\n\t\t\ttest.style.lineHeight = element.style.lineHeight;\r\n\t\t\ttest.style.border = element.style.border;\r\n\t\t\t// borderBox ?\r\n\r\n\t\t\tbody.appendChild(test);\r\n\t\t\twidth = test.offsetWidth;\r\n\t\t\ttest.remove();\r\n\t\t}\r\n\r\n\t\treturn width;\r\n\t}\r\n}\r\n","import {\n\tDirective,\n\tElementRef,\n\tInject,\n\tInput,\n\tOnDestroy,\n\tOnInit,\n\tOptional,\n\tNgZone\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { EventListener } from 'ng2-qgrid/core/infrastructure/event.listener';\nimport { EventManager } from 'ng2-qgrid/core/infrastructure/event.manager';\nimport { GRID_PREFIX } from 'ng2-qgrid/core/definition';\nimport { clone } from 'ng2-qgrid/core/utility/kit';\nimport { Model } from 'ng2-qgrid/core/infrastructure/model';\nimport { NgComponent } from '../../infrastructure/component/ng.component';\nimport { RootService } from '../../infrastructure/component/root.service';\n\n@Directive({\n\tselector: '[q-grid-resize]'\n})\nexport class ResizeDirective extends NgComponent implements OnInit, OnDestroy {\n\tprivate element: HTMLElement;\n\tprivate divider: HTMLElement;\n\tprivate listener: {\n\t\tdivider: EventListener,\n\t\tdocument: EventListener\n\t};\n\tprivate context = {\n\t\tx: 0,\n\t\ty: 0,\n\t\theight: 0,\n\t\twidth: 0\n\t};\n\n\t@Input('q-grid-resize') key;\n\t@Input('q-grid-resize-path') path;\n\t@Input('q-grid-can-resize') canResize;\n\n\tconstructor(\n\t\t@Optional() private root: RootService,\n\t\telementRef: ElementRef,\n\t\t@Inject(DOCUMENT) document: any,\n\t\tprivate zone: NgZone\n\t) {\n\t\tsuper();\n\n\t\tthis.element = elementRef.nativeElement;\n\t\tthis.divider = document.createElement('div');\n\n\t\tthis.listener = {\n\t\t\tdivider: new EventListener(\n\t\t\t\tthis.divider,\n\t\t\t\tnew EventManager(this)\n\t\t\t),\n\n\t\t\tdocument: new EventListener(\n\t\t\t\tdocument,\n\t\t\t\tnew EventManager(this)\n\t\t\t)\n\t\t};\n\t}\n\n\tngOnInit() {\n\t\tconst e = { data: this.key };\n\t\tif (this.canResize(e)) {\n\t\t\tthis.zone.runOutsideAngular(() => {\n\t\t\t\tthis.listener.divider.on('mousedown', this.dragStart);\n\t\t\t});\n\n\t\t\tthis.divider.classList.add(`${GRID_PREFIX}-resize-handler`);\n\t\t\tthis.element.appendChild(this.divider);\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\n\t\tthis.listener.divider.off();\n\t\tthis.listener.document.off();\n\t}\n\n\tdragStart(e: DragEvent) {\n\t\te.preventDefault();\n\n\t\tconst context = this.context;\n\t\tcontext.width = this.element.clientWidth;\n\t\tcontext.height = this.element.clientHeight;\n\t\tcontext.x = e.screenX;\n\t\tcontext.y = e.screenY;\n\n\t\tthis.zone.runOutsideAngular(() => {\n\t\t\tthis.listener.document.on('mousemove', this.drag);\n\t\t\tthis.listener.document.on('mouseup', this.dragEnd);\n\t\t});\n\n\t\tconst model = this.model;\n\t\tmodel.drag({ isActive: true });\n\t}\n\n\tdrag(e: MouseEvent) {\n\t\tconst { layout } = this.model;\n\t\tconst context = this.context;\n\t\tconst state = clone(layout()[this.path]);\n\n\t\tstate.set(this.key, {\n\t\t\twidth: context.width + e.screenX - context.x,\n\t\t\theight: context.height + e.screenY - context.y\n\t\t});\n\n\t\tlayout({ [this.path]: state });\n\t}\n\n\tdragEnd() {\n\t\tthis.listener.document.off();\n\n\t\tconst model = this.model;\n\t\tmodel.drag({ isActive: false });\n\t}\n\n\tprivate get model(): Model {\n\t\treturn this.root.model;\n\t}\n}\n","import { NgModule } from '@angular/core';\r\nimport { ResizeDirective } from './resize.directive';\r\nimport { AutosizeDirective } from './autosize.directive';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tResizeDirective,\r\n\t\tAutosizeDirective\r\n\t],\r\n\texports: [\r\n\t\tResizeDirective,\r\n\t\tAutosizeDirective\r\n\t]\r\n})\r\nexport class ResizeModule {\r\n}\r\n","import { Directive, TemplateRef, ViewContainerRef } from '@angular/core';\r\n\r\n@Directive({\r\n\tselector: '[q-grid-time]'\r\n})\r\nexport class TimeDirective {\r\n\tconstructor(templateRef: TemplateRef<TimeDirective>, viewContainerRef: ViewContainerRef) {\r\n\t\tviewContainerRef.createEmbeddedView(templateRef, this);\r\n\t}\r\n\r\n\ttime(previous, current) {\r\n\t\tconst date = new Date(typeof current === 'string' ? Date.now() : previous);\r\n\t\tconst [hours, minutes, seconds] = current.split(':');\r\n\r\n\t\tif (hours && minutes) {\r\n\t\t\tdate.setHours(+hours);\r\n\t\t\tdate.setMinutes(+minutes);\r\n\r\n\t\t\tif (seconds) {\r\n\t\t\t\tdate.setSeconds(+seconds);\r\n\t\t\t}\r\n\r\n\t\t\treturn date;\r\n\t\t}\r\n\t}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { TimeDirective } from './time.directive';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tTimeDirective\r\n\t],\r\n\texports: [\r\n\t\tTimeDirective\r\n\t]\r\n})\r\nexport class TimeModule {\r\n}\r\n","import { Directive, Input, ElementRef, OnDestroy, OnChanges, SimpleChanges } from '@angular/core';\nimport { sizeFactory } from './vscroll.container';\nimport { VscrollPortYDirective } from './vscroll-port-y.directive';\n\n@Directive({\n\tselector: '[q-grid-vscroll-column]'\n})\nexport class VscrollColumnDirective implements OnDestroy, OnChanges {\n\t@Input('q-grid-vscroll-column') index: number;\n\tprivate column: HTMLElement;\n\n\tconstructor(elementRef: ElementRef, private port: VscrollPortYDirective) {\n\t\tthis.column = elementRef.nativeElement;\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes['index']) {\n\t\t\tif (this.port.getItemSize()) {\n\t\t\t\tthis.ngOnChanges = null;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { layout, settings, container, column } = this;\n\t\t\tconst { rowHeight } = settings;\n\t\t\tthis.ngOnChanges = (e: SimpleChanges) => {\n\t\t\t\tif (e['index']) {\n\t\t\t\t\tconst change = e['index'];\n\t\t\t\t\tconst newIndex = change.currentValue;\n\t\t\t\t\tconst oldIndex = change.previousValue;\n\t\t\t\t\tlayout.removeItem(oldIndex);\n\n\t\t\t\t\tconst size = sizeFactory(rowHeight, container, column, newIndex);\n\t\t\t\t\tlayout.setItem(newIndex, size);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst firstChange = changes['index'];\n\t\t\tconst firstIndex = firstChange.currentValue;\n\t\t\tconst firstSize = sizeFactory(rowHeight, container, column, firstIndex);\n\t\t\tlayout.setItem(firstIndex, firstSize);\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tthis.port.layout.removeItem(this.index);\n\t}\n\n\tprivate get layout() {\n\t\treturn this.port.layout;\n\t}\n\n\tprivate get settings() {\n\t\treturn this.port.context.settings;\n\t}\n\n\tprivate get container() {\n\t\treturn this.port.context.container;\n\t}\n}\n","import { Directive, OnInit, OnDestroy, ElementRef, Input, Optional } from '@angular/core';\nimport { VscrollPortXDirective } from './vscroll-port-x.directive';\nimport { VscrollPortYDirective } from './vscroll-port-y.directive';\nimport { VscrollPort } from './vscroll.port';\n\n@Directive({\n\tselector: '[q-grid-vscroll-mark]'\n})\nexport class VscrollMarkDirective implements OnInit, OnDestroy {\n\t@Input('q-grid-vscroll-mark') key: string;\n\tprivate ports: Array<VscrollPort> = [];\n\n\tconstructor(\n\t\tprivate elementRef: ElementRef,\n\t\t@Optional() portX: VscrollPortXDirective,\n\t\t@Optional() portY: VscrollPortYDirective) {\n\t\tif (portX) {\n\t\t\tthis.ports.push(portX);\n\t\t}\n\n\t\tif (portY) {\n\t\t\tthis.ports.push(portY);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tconst element = this.elementRef.nativeElement;\n\t\tconst key = this.key;\n\n\t\tthis.ports.forEach(port => port.markup[key] = element);\n\t}\n\n\tngOnDestroy() {\n\t\tconst key = this.key;\n\n\t\tthis.ports.forEach(port => delete port.markup[key]);\n\t}\n}\n","import { Directive, ElementRef, Input, ChangeDetectorRef, ApplicationRef, OnChanges, SimpleChanges } from '@angular/core';\nimport { VscrollPort } from './vscroll.port';\nimport { VscrollContext } from './vscroll.context';\nimport { capitalize } from './vscroll.utility';\nimport { VscrollBox } from './vscroll.box';\nimport { VscrollLayout } from './vscroll.layout';\nimport { findPositionUsingItemSize, findPositionUsingOffsets, recycleFactory, IVscrollPosition } from './vscroll.position';\nimport { VscrollDirective } from './vscroll.directive';\nimport { isNumber } from 'ng2-qgrid/core/utility/kit';\nimport { VscrollLink } from './vscroll.link';\nimport { Guard } from 'ng2-qgrid/core/infrastructure/guard';\n\n@Directive({\n\tselector: '[q-grid-vscroll-port-x]'\n})\nexport class VscrollPortXDirective extends VscrollPort implements OnChanges {\n\t@Input('q-grid-vscroll-port-x') context: VscrollContext;\n\tmarkup = {};\n\tlayout: VscrollLayout;\n\tlink: VscrollLink;\n\n\tconstructor(\n\t\tprivate elementRef: ElementRef,\n\t\tprivate cd: ChangeDetectorRef,\n\t\tprivate app: ApplicationRef,\n\n\t\tview: VscrollDirective\n\t) {\n\t\tsuper(view, elementRef.nativeElement);\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tconst contextChange = changes['context'];\n\t\tif (contextChange && this.context) {\n\t\t\tthis.layout = new VscrollLayout(this);\n\t\t\tthis.link = new VscrollLink(this);\n\t\t\tthis.context.container.fetchPage(0);\n\t\t}\n\t}\n\n\treset() {\n\t\tthis.view.resetX();\n\t}\n\n\temit(f: () => void) {\n\t\tconst { settings } = this.context;\n\n\t\tif (settings.emit) {\n\t\t\tsettings.emit(f);\n\t\t} else {\n\t\t\tf();\n\n\t\t\tthis.cd.markForCheck();\n\t\t\tthis.app.tick();\n\t\t}\n\t}\n\n\tgetPositionUsingItemSize(itemSize: number, box: VscrollBox, arm: number): IVscrollPosition {\n\t\tconst limitTop = box.scrollLeft - arm;\n\t\tconst limitBottom = box.scrollWidth - (box.portWidth + arm);\n\t\tconst value = Math.min(limitBottom, Math.max(0, limitTop));\n\n\t\treturn findPositionUsingItemSize(value, itemSize);\n\t}\n\n\tgetPositionUsingOffsets(offsets: Array<number>, box: VscrollBox, arm: number): IVscrollPosition {\n\t\tconst limitTop = box.scrollLeft - arm;\n\t\tconst limitBottom = box.scrollHeight - (box.portWidth + arm);\n\t\tconst value = Math.min(limitBottom, Math.max(0, limitTop));\n\n\t\treturn findPositionUsingOffsets(value, offsets);\n\t}\n\n\tmove(left: number, right: number) {\n\t\tthis.pad('left', left);\n\t\tthis.pad('right', right);\n\t}\n\n\tgetItemSize(): number {\n\t\tconst columnWidth = this.context.settings.columnWidth as number;\n\t\treturn isNumber(columnWidth) ? columnWidth : 0;\n\t}\n\n\tgetScrollSize(box: VscrollBox) {\n\t\treturn box.scrollWidth;\n\t}\n\n\tgetSize(box: VscrollBox) {\n\t\treturn box.portWidth;\n\t}\n\n\trecycleFactory(items: Array<any>) {\n\t\tconst recycle = recycleFactory(items);\n\t\treturn (index: number, count: number) => {\n\t\t\tconst size = this.getItemSize();\n\t\t\tif (size) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\treturn recycle(index, count);\n\t\t};\n\t}\n\n\thasChanges(newBox: VscrollBox, oldBox: VscrollBox) {\n\t\treturn !oldBox.portWidth || newBox.scrollWidth !== oldBox.scrollWidth;\n\t}\n\n\tprivate pad(pos: string, value: number) {\n\t\tif (this.markup.hasOwnProperty(pos)) {\n\t\t\tconst mark = this.markup[pos];\n\t\t\tmark.style.width = value + 'px';\n\t\t} else {\n\t\t\tthis.elementRef.nativeElement.style['padding' + capitalize(pos)] = value + 'px';\n\t\t}\n\t}\n}\n","import { Directive, ElementRef, Input, ChangeDetectorRef, ApplicationRef, SimpleChanges, OnChanges } from '@angular/core';\nimport { VscrollPort } from './vscroll.port';\nimport { VscrollContext } from './vscroll.context';\nimport { capitalize } from './vscroll.utility';\nimport { VscrollBox } from './vscroll.box';\nimport { VscrollLayout } from './vscroll.layout';\nimport { findPositionUsingItemSize, findPositionUsingOffsets, recycleFactory, IVscrollPosition } from './vscroll.position';\nimport { VscrollDirective } from './vscroll.directive';\nimport { VscrollLink } from './vscroll.link';\nimport { isNumber } from 'ng2-qgrid/core/utility/kit';\nimport { Guard } from 'ng2-qgrid/core/infrastructure/guard';\n\n@Directive({\n\tselector: '[q-grid-vscroll-port-y]'\n})\nexport class VscrollPortYDirective extends VscrollPort implements OnChanges {\n\t@Input('q-grid-vscroll-port-y') context: VscrollContext;\n\tmarkup = {};\n\tlayout: VscrollLayout;\n\tlink: VscrollLink;\n\n\tconstructor(\n\t\tprivate elementRef: ElementRef,\n\t\tprivate cd: ChangeDetectorRef,\n\t\tprivate app: ApplicationRef,\n\t\tview: VscrollDirective\n\t) {\n\t\tsuper(view, elementRef.nativeElement);\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tconst contextChange = changes['context'];\n\t\tif (contextChange && this.context) {\n\t\t\tthis.layout = new VscrollLayout(this);\n\t\t\tthis.link = new VscrollLink(this);\n\t\t\tthis.context.container.fetchPage(0);\n\t\t}\n\t}\n\n\tpublic reset() {\n\t\tthis.view.resetY();\n\t}\n\n\temit(f: () => void) {\n\t\tconst { settings } = this.context;\n\t\tif (settings.emit) {\n\t\t\tsettings.emit(f);\n\t\t} else {\n\t\t\tf();\n\n\t\t\tthis.cd.markForCheck();\n\t\t\tthis.app.tick();\n\t\t}\n\t}\n\n\tgetPositionUsingItemSize(itemSize: number, box: VscrollBox, arm: number): IVscrollPosition {\n\t\tconst limitTop = box.scrollTop - arm;\n\t\tconst limitBottom = box.scrollHeight - (box.portHeight + arm);\n\t\tconst value = Math.min(limitBottom, Math.max(0, limitTop));\n\t\treturn findPositionUsingItemSize(value, itemSize);\n\t}\n\n\tgetPositionUsingOffsets(offsets: Array<number>, box: VscrollBox, arm: number): IVscrollPosition {\n\t\tconst limitTop = box.scrollTop - arm;\n\t\tconst limitBottom = box.scrollHeight - (box.portHeight + arm);\n\t\tconst value = Math.min(limitBottom, Math.max(0, limitTop));\n\t\treturn findPositionUsingOffsets(value, offsets);\n\t}\n\n\tmove(top: number, bottom: number) {\n\t\tthis.pad('top', top);\n\t\tthis.pad('bottom', bottom);\n\t}\n\n\tgetItemSize(): number {\n\t\tconst rowHeight = this.context.settings.rowHeight as number;\n\t\treturn isNumber(rowHeight) ? rowHeight : 0;\n\t}\n\n\tgetScrollSize(box: VscrollBox) {\n\t\treturn box.scrollHeight;\n\t}\n\n\tgetSize(box: VscrollBox) {\n\t\treturn box.portHeight;\n\t}\n\n\trecycleFactory(items: Array<any>) {\n\t\tconst recycle = recycleFactory(items);\n\t\treturn (index: number, count: number) => {\n\t\t\tconst size = this.getItemSize();\n\t\t\tif (size) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\treturn recycle(index, count);\n\t\t};\n\t}\n\n\thasChanges(newBox: VscrollBox, oldBox: VscrollBox) {\n\t\treturn !oldBox.portHeight || newBox.scrollTop !== oldBox.scrollTop;\n\t}\n\n\tprivate pad(pos: string, value: number) {\n\t\tif (this.markup.hasOwnProperty(pos)) {\n\t\t\tconst mark = this.markup[pos];\n\t\t\tmark.style.height = value + 'px';\n\t\t} else {\n\t\t\tthis.elementRef.nativeElement.style['padding' + capitalize(pos)] = value + 'px';\n\t\t}\n\t}\n}\n","import { Directive, Input, ElementRef, OnInit, OnDestroy, OnChanges, SimpleChanges } from '@angular/core';\nimport { sizeFactory } from './vscroll.container';\nimport { VscrollPortYDirective } from './vscroll-port-y.directive';\n\n@Directive({\n\tselector: '[q-grid-vscroll-row]'\n})\nexport class VscrollRowDirective implements OnDestroy, OnChanges {\n\t@Input('q-grid-vscroll-row') index: number;\n\tprivate row: HTMLElement;\n\n\tconstructor(elementRef: ElementRef, private port: VscrollPortYDirective) {\n\t\tthis.row = elementRef.nativeElement;\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes['index']) {\n\t\t\tif (this.port.getItemSize()) {\n\t\t\t\tthis.ngOnChanges = null;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { layout, settings, container, row } = this;\n\t\t\tconst { rowHeight } = settings;\n\t\t\tthis.ngOnChanges = (e: SimpleChanges) => {\n\t\t\t\tif (e['index']) {\n\t\t\t\t\tconst change = e['index'];\n\t\t\t\t\tconst newIndex = change.currentValue;\n\t\t\t\t\tconst oldIndex = change.previousValue;\n\t\t\t\t\tlayout.removeItem(oldIndex);\n\n\t\t\t\t\tconst size = sizeFactory(rowHeight, container, row, newIndex);\n\t\t\t\t\tlayout.setItem(newIndex, size);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst firstChange = changes['index'];\n\t\t\tconst firstNewIndex = firstChange.currentValue;\n\t\t\tconst firstSize = sizeFactory(rowHeight, container, row, firstNewIndex);\n\t\t\tlayout.setItem(firstNewIndex, firstSize);\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tthis.port.layout.removeItem(this.index);\n\t}\n\n\tprivate get layout() {\n\t\treturn this.port.layout;\n\t}\n\n\tprivate get settings() {\n\t\treturn this.port.context.settings;\n\t}\n\n\tprivate get container() {\n\t\treturn this.port.context.container;\n\t}\n}\n","export class VscrollBox {\r\n\tscrollWidth = 0;\r\n\tscrollHeight = 0;\r\n\tscrollTop = 0;\r\n\tscrollLeft = 0;\r\n\tportWidth = 0;\r\n\tportHeight = 0;\r\n}\r\n","import { EventEmitter } from '@angular/core';\nimport { isNumber, isFunction } from 'ng2-qgrid/core/utility/kit';\nimport { IVscrollSettings } from './vscroll.settings';\nimport { AppError } from 'ng2-qgrid/core/infrastructure/error';\n\nexport const rAF = window.requestAnimationFrame || window.webkitRequestAnimationFrame;\n\nexport interface IVscrollContainer {\n\tcount: number;\n\ttotal: number;\n\tposition: number;\n\tcursor: number;\n\titems: any[];\n\tforce: boolean;\n\n\treset(): void;\n\tupdate(count: number): void;\n}\n\nexport class VscrollContainer implements IVscrollContainer {\n\tconstructor(private settings: IVscrollSettings) {\n\t}\n\n\tforce = false;\n\tcount = 0;\n\ttotal = 0;\n\tposition = 0;\n\tcursor = 0;\n\tlastPage = 0;\n\titems = [];\n\n\tresetEvent = new EventEmitter<{ handled: boolean, source: string }>();\n\tupdateEvent = new EventEmitter<{}>();\n\tdrawEvent = new EventEmitter<{ position: number }>();\n\n\ttick(f: () => void) {\n\t\trAF(f);\n\t}\n\n\tread(f: () => void) {\n\t\tf();\n\t}\n\n\twrite(f: () => void) {\n\t\tf();\n\t}\n\n\tapply(f: () => void, emit: (f: () => void) => void) {\n\t\temit(f);\n\t}\n\n\tget currentPage() {\n\t\tconst threshold = this.settings.threshold;\n\t\tconst cursor = this.cursor;\n\t\treturn Math.ceil((cursor + threshold) / threshold) - 1;\n\t}\n\n\tupdate(count: number) {\n\t\tif (this.count !== count) {\n\t\t\tthis.count = count;\n\t\t\tthis.total = Math.max(this.total, count);\n\t\t\tthis.updateEvent.emit({});\n\t\t}\n\n\t\tconst { lastPage, currentPage } = this;\n\t\tif (currentPage > lastPage) {\n\t\t\tthis.fetchPage(currentPage);\n\t\t}\n\t}\n\n\tfetchPage(page: number) {\n\t\tconst { settings, lastPage } = this;\n\t\tconst { threshold } = settings;\n\n\t\tthis.lastPage = page;\n\n\t\tnew Promise<number>((resolve, reject) => {\n\t\t\tconst deferred = { resolve, reject };\n\t\t\tif (page === 0) {\n\t\t\t\tsettings.fetch(0, threshold, deferred);\n\t\t\t} else {\n\t\t\t\tconst skip = (lastPage + 1) * threshold;\n\t\t\t\tif (this.total < skip) {\n\t\t\t\t\tdeferred.resolve(this.total);\n\t\t\t\t} else {\n\t\t\t\t\tconst take = (page - lastPage) * threshold;\n\t\t\t\t\tsettings.fetch(skip, take, deferred);\n\t\t\t\t}\n\t\t\t}\n\t\t}).then(count => {\n\t\t\tthis.force = true;\n\n\t\t\tif (count > this.total) {\n\t\t\t\tthis.update(count);\n\t\t\t}\n\t\t});\n\t}\n\n\treset() {\n\t\tthis.items = [];\n\t\tthis.force = false;\n\n\t\tthis.count = 0;\n\t\tthis.total = 0;\n\t\tthis.position = 0;\n\t\tthis.cursor = 0;\n\t\tthis.lastPage = 0;\n\n\t\tthis.resetEvent.emit({\n\t\t\thandled: false,\n\t\t\tsource: 'container'\n\t\t});\n\n\t\tthis.fetchPage(0);\n\t}\n}\n\nexport type VscrollSize = (element: HTMLElement, index: number) => number;\n\nexport function sizeFactory(\n\tsize: number | VscrollSize,\n\tcontainer: VscrollContainer,\n\telement: HTMLElement,\n\tindex: number\n): () => number {\n\tif (isFunction(size)) {\n\t\treturn () => (size as VscrollSize)(element, container.position + index);\n\t}\n\n\tif (isNumber(size)) {\n\t\treturn () => size as number;\n\t}\n\n\tthrow new AppError('vscroll.utility', `Invalid size ${size}`);\n}\n","import { VscrollContainer } from './vscroll.container';\nimport { VscrollSettings, IVscrollSettings } from './vscroll.settings';\n\nexport class VscrollContext {\n\tsettings: IVscrollSettings;\n\tcontainer: VscrollContainer;\n\n\tconstructor(settings?: IVscrollSettings) {\n\t\tthis.settings = new VscrollSettings(() => this.container.total);\n\t\tif (settings) {\n\t\t\tObject.assign(this.settings, settings);\n\t\t}\n\n\t\tthis.container = new VscrollContainer(this.settings);\n\t}\n\n\tid(index: number) {\n\t\treturn index;\n\t}\n}\n","import { Directive, ElementRef, EventEmitter, NgZone, Renderer2 } from '@angular/core';\nimport { placeholderBitmap } from './vscroll.utility';\n\n@Directive({\n\tselector: '[q-grid-vscroll]'\n})\nexport class VscrollDirective {\n\tscrollEvent = new EventEmitter<{}>();\n\tresetEvent = new EventEmitter<{ handled: boolean, source: string }>();\n\n\tconstructor(private elementRef: ElementRef, zone: NgZone, renderer: Renderer2) {\n\t\tzone.runOutsideAngular(() => {\n\t\t\telementRef.nativeElement.addEventListener('scroll', () => this.onScroll(), { passive: true });\n\t\t\trenderer.listen(window, 'resize', () => this.onResize());\n\t\t});\n\t}\n\n\tdrawPlaceholder(width: number, height: number) {\n\t\tconst box = this.elementRef.nativeElement;\n\t\tconst style = box.style;\n\t\tconst placeholder = placeholderBitmap(width || box.clientWidth, height || box.clientHeight);\n\n\t\tstyle.backgroundImage = 'url(' + placeholder + ')';\n\t\tstyle.backgroundRepeat = 'repeat';\n\t}\n\n\tresetX() {\n\t\tthis.elementRef.nativeElement.scrollLeft = 0;\n\t}\n\n\tresetY() {\n\t\tthis.elementRef.nativeElement.scrollTop = 0;\n\t}\n\n\tget element() {\n\t\treturn this.elementRef.nativeElement;\n\t}\n\n\tprivate onScroll() {\n\t\tthis.scrollEvent.emit();\n\t}\n\n\tprivate onResize() {\n\t\tconst e = { handled: false, source: 'resize' };\n\t\tthis.resetEvent.emit(e);\n\t}\n}\n","import { findPositionUsingOffsets, IVscrollPosition, recycleFactory } from './vscroll.position';\nimport { VscrollBox } from './vscroll.box';\nimport { VscrollPort } from './vscroll.port';\n\nconst UNSET_ARM = Number.MAX_SAFE_INTEGER;\n\nfunction empty() {\n\treturn 0;\n}\n\nexport class VscrollLayout {\n\tprivate items = [];\n\tprivate minArm = UNSET_ARM;\n\tprivate position = findPositionUsingOffsets(0, []);\n\tprivate getOffsets = recycleFactory(this.items);\n\n\tconstructor(private port: VscrollPort) {\n\t}\n\n\trecycle(count: number, box: VscrollBox, force: boolean): IVscrollPosition | null {\n\t\tconst { port } = this;\n\t\tconst itemSize = port.getItemSize();\n\t\tif (itemSize) {\n\t\t\treturn this.recycleItemSize(count, box, force, itemSize);\n\t\t}\n\n\t\treturn this.recycleOffsets(count, box, force);\n\t}\n\n\tinvalidate(position: IVscrollPosition): number {\n\t\tconst { offset } = position;\n\t\tconst pad1 = Math.max(0, offset);\n\t\tconst pad2 = Math.max(0, position.pad - pad1);\n\n\t\tthis.port.move(pad1, pad2);\n\t\treturn position.index;\n\t}\n\n\treset() {\n\t\tthis.minArm = UNSET_ARM;\n\t\tthis.getOffsets = this.port.recycleFactory(this.items);\n\t\tthis.position = findPositionUsingOffsets(0, []);\n\t\treturn this.invalidate(this.position);\n\t}\n\n\tsetItem(index: number, item: () => number) {\n\t\tconst { items } = this;\n\t\titems[index] = item;\n\t\twhile (--index >= 0) {\n\t\t\tif (items[index]) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\titems[index] = empty;\n\t\t}\n\t}\n\n\tremoveItem(index: number) {\n\t\tconst { items } = this;\n\t\tconst last = items.length - 1;\n\t\tif (index === last) {\n\t\t\titems.pop();\n\t\t\twhile (--index >= 0) {\n\t\t\t\tconst item = items[index];\n\t\t\t\tif (item !== empty) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\titems.pop();\n\t\t\t}\n\t\t} else {\n\t\t\titems[index] = empty;\n\t\t}\n\t}\n\n\tprivate recycleOffsets(count: number, box: VscrollBox, force: boolean) {\n\t\tconst { position, port } = this;\n\t\tconst { threshold } = this.settings;\n\t\tconst offsets = this.getOffsets(position.index, count);\n\t\tconst arm = this.getArmUsingOffsets(offsets, box, position.index);\n\n\t\tthis.minArm = Math.min(this.minArm, arm);\n\n\t\tconst newPosition = port.getPositionUsingOffsets(offsets, box, this.minArm);\n\t\tif (force || position.index !== newPosition.index) {\n\t\t\tconst last = Math.min(offsets.length - 1, newPosition.index + threshold - 1);\n\t\t\tconst first = newPosition.index - 1;\n\t\t\tconst viewSize = (offsets[last] || 0) - (offsets[first] || 0);\n\t\t\tconst scrollSize = offsets[offsets.length - 1] || 0;\n\t\t\tconst padSize = scrollSize - viewSize;\n\t\t\tnewPosition.pad = padSize;\n\t\t\treturn this.position = newPosition;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate recycleItemSize(count: number, box: VscrollBox, force: boolean, itemSize: number) {\n\t\tconst { position, port } = this;\n\t\tconst arm = this.getArmUsingItemSize(itemSize, box);\n\t\tconst newPosition = port.getPositionUsingItemSize(itemSize, box, arm);\n\n\t\tif (force || position.index !== newPosition.index) {\n\t\t\tconst { threshold } = this.settings;\n\t\t\tconst remain = Math.max(0, newPosition.index + threshold - this.container.count);\n\t\t\tnewPosition.pad = Math.max(0, itemSize * (count + remain - threshold));\n\t\t\treturn this.position = newPosition;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate getArmUsingItemSize(itemSize: number, box: VscrollBox) {\n\t\tconst { threshold } = this.settings;\n\t\tconst portSize = this.port.getSize(box);\n\t\tconst viewSize = threshold * itemSize;\n\t\treturn Math.max(0, (viewSize - portSize) / 2);\n\t}\n\n\tprivate getArmUsingOffsets(offsets: Array<number>, box: VscrollBox, index: number) {\n\t\tif (offsets.length) {\n\t\t\tconst { threshold } = this.settings;\n\t\t\tconst portSize = this.port.getSize(box);\n\t\t\tconst last = Math.min(offsets.length, index + threshold) - 1;\n\t\t\tconst first = (last + 1) - threshold;\n\t\t\tconst viewSize = offsets[last] - offsets[first];\n\t\t\treturn Math.max(0, (viewSize - portSize) / 2);\n\t\t}\n\n\t\treturn UNSET_ARM;\n\t}\n\n\tprivate get container() {\n\t\treturn this.port.context.container;\n\t}\n\n\tprivate get settings() {\n\t\treturn this.port.context.settings;\n\t}\n}\n","import { VscrollPort } from './vscroll.port';\nimport { VscrollBox } from './vscroll.box';\nimport { isNumber } from 'ng2-qgrid/core/utility/kit';\n\nexport class VscrollLink {\n\tprivate box = new VscrollBox();\n\tprivate ticking = false;\n\n\tconstructor(private port: VscrollPort) {\n\t\tconst { view, layout } = port;\n\t\tconst { settings, container } = this;\n\n\t\tif (settings.placeholderHeight > 0 || settings.placeholderWidth > 0) {\n\t\t\tconst width = settings.placeholderWidth || (isNumber(settings.columnWidth) && settings.columnWidth as number);\n\t\t\tconst height = settings.placeholderHeight || (isNumber(settings.rowHeight) && settings.rowHeight as number);\n\t\t\tview.drawPlaceholder(width, height);\n\t\t}\n\n\t\tview.scrollEvent.subscribe(() => this.update(false));\n\n\t\tview.resetEvent.subscribe(e => {\n\t\t\tif (e.handled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\te.handled = settings.resetTriggers.indexOf(e.source) < 0;\n\t\t\tcontainer.resetEvent.emit(e);\n\t\t});\n\n\t\tcontainer.resetEvent.subscribe(e => {\n\t\t\tif (e.handled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcontainer.cursor = layout.reset();\n\t\t\tport.reset();\n\t\t});\n\n\t\tcontainer.updateEvent.subscribe(() => this.update(true));\n\t}\n\n\ttick(force: boolean) {\n\t\tthis.ticking = false;\n\n\t\tconst { port, container, box } = this;\n\t\tconst count = container.count;\n\t\tconst position = port.layout.recycle(count, box, force);\n\t\tif (position) {\n\t\t\tconst draw = () => {\n\t\t\t\tcontainer.cursor = port.layout.invalidate(position);\n\t\t\t\tcontainer.drawEvent.emit({\n\t\t\t\t\tposition: container.cursor\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tconst emit = f => port.emit(f);\n\t\t\tcontainer.apply(draw, emit);\n\t\t}\n\t}\n\n\tupdate(force: boolean) {\n\t\tconst { container, port, box } = this;\n\t\tconst { view } = port;\n\t\tthis.container.read(() => {\n\t\t\tconst element = view.element;\n\t\t\tconst newBox = {\n\t\t\t\tscrollWidth: element.scrollWidth,\n\t\t\t\tscrollHeight: element.scrollHeight,\n\t\t\t\tscrollTop: element.scrollTop,\n\t\t\t\tscrollLeft: element.scrollLeft,\n\t\t\t\tportWidth: element.clientWidth,\n\t\t\t\tportHeight: element.clientHeight\n\t\t\t};\n\n\t\t\tif (force || port.hasChanges(newBox, box)) {\n\t\t\t\tthis.box = newBox;\n\t\t\t\tif (container.count && !this.ticking) {\n\t\t\t\t\tthis.ticking = true;\n\t\t\t\t\tcontainer.tick(() => this.tick(force));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate get settings() {\n\t\treturn this.port.context.settings;\n\t}\n\n\tprivate get container() {\n\t\treturn this.port.context.container;\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { VscrollService } from './vscroll.service';\nimport { VscrollColumnDirective } from './vscroll-column.directive';\nimport { VscrollRowDirective } from './vscroll-row.directive';\nimport { VscrollPipe } from './vscroll.pipe';\nimport { VscrollMarkDirective } from './vscroll-mark.directive';\nimport { VscrollPortXDirective } from './vscroll-port-x.directive';\nimport { VscrollPortYDirective } from './vscroll-port-y.directive';\nimport { VscrollDirective } from './vscroll.directive';\n\n@NgModule({\n\tdeclarations: [\n\t\tVscrollDirective,\n\t\tVscrollColumnDirective,\n\t\tVscrollRowDirective,\n\t\tVscrollMarkDirective,\n\t\tVscrollPortXDirective,\n\t\tVscrollPortYDirective,\n\t\tVscrollPipe\n\t],\n\texports: [\n\t\tVscrollDirective,\n\t\tVscrollColumnDirective,\n\t\tVscrollRowDirective,\n\t\tVscrollMarkDirective,\n\t\tVscrollPortXDirective,\n\t\tVscrollPortYDirective,\n\t\tVscrollPipe\n\t],\n\tproviders: [\n\t\tVscrollService\n\t]\n})\nexport class VscrollModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Log } from 'ng2-qgrid/core/infrastructure/log';\nimport { IVscrollContainer } from './vscroll.container';\nimport { IVscrollSettings } from './vscroll.settings';\n\nconst EMPTY_ITEMS = [];\n@Pipe({\n\tname: 'qGridVscroll',\n\tpure: false\n})\nexport class VscrollPipe implements PipeTransform {\n\ttransform(data: any[], context: { settings: IVscrollSettings, container: IVscrollContainer }): any[] {\n\t\tif (!context) {\n\t\t\tLog.warn('VscrollPipe', 'Context is not defined');\n\t\t\treturn EMPTY_ITEMS;\n\t\t}\n\n\t\tdata = data || [];\n\n\t\tconst { length } = data;\n\t\tconst { container, settings } = context;\n\n\t\tcontainer.update(length);\n\n\t\tlet wnd = container.items;\n\t\tif (length) {\n\t\t\tconst { cursor } = container;\n\t\t\tconst { threshold } = settings;\n\n\t\t\t// We need to have a less number of virtual items on\n\t\t\t// the bottom, as deferred loading is happen there should\n\t\t\t// be a threshold place to draw several items below.\n\t\t\tconst first = cursor;\n\t\t\tif (container.force || first !== container.position) {\n\t\t\t\tconst last = Math.min(cursor + threshold, length);\n\t\t\t\tcontainer.position = first;\n\t\t\t\twnd = new Array(last - first);\n\t\t\t\tfor (let i = first, j = 0; i < last; i++ , j++) {\n\t\t\t\t\twnd[j] = data[i];\n\t\t\t\t}\n\n\t\t\t\tcontainer.force = false;\n\t\t\t}\n\t\t} else if (wnd.length) {\n\t\t\twnd = EMPTY_ITEMS;\n\t\t}\n\n\t\tcontainer.items = wnd;\n\t\treturn wnd;\n\t}\n}\n","import { VscrollBox } from './vscroll.box';\nimport { VscrollDirective } from './vscroll.directive';\nimport { IVscrollPosition } from './vscroll.position';\nimport { VscrollLayout } from './vscroll.layout';\nimport { VscrollContext } from './vscroll.context';\n\nexport abstract class VscrollPort {\n\tmarkup = {};\n\tlayout: VscrollLayout;\n\tcontext: VscrollContext;\n\n\tconstructor(public view: VscrollDirective, element: HTMLElement) {\n\t\telement.tabIndex = 0;\n\t\telement.style.outline = 'none';\n\t\t(element.style as any).overflowAnchor = 'none';\n\t}\n\n\tabstract reset();\n\tabstract hasChanges(newBox: VscrollBox, oldBox: VscrollBox);\n\tabstract emit(f: () => void);\n\tabstract move(pad1: number, pad2: number);\n\tabstract recycleFactory(items: Array<(() => number)>): (index: number, count: number) => Array<number>;\n\tabstract getPositionUsingOffsets(offsets: Array<number>, box: VscrollBox, arm: number): IVscrollPosition;\n\tabstract getPositionUsingItemSize(itemsSize: number, box: VscrollBox, arm: number): IVscrollPosition;\n\tabstract getItemSize();\n\tabstract getScrollSize(box: VscrollBox);\n\tabstract getSize(box: VscrollBox);\n}\n","function findIndexAt(items: Array<number>, value: number) {\n\tconst length = items.length;\n\tlet min = 0;\n\tlet max = length - 1;\n\twhile (min <= max) {\n\t\tconst mid = (min + max) >> 1;\n\t\tconst k = items[mid];\n\t\tif (k === value) {\n\t\t\treturn mid;\n\t\t} else if (k < value) {\n\t\t\tmin = mid + 1;\n\t\t} else {\n\t\t\tmax = mid - 1;\n\t\t}\n\t}\n\n\treturn min;\n}\n\nexport interface IVscrollPosition {\n\tindex: number;\n\toffset: number;\n\tlastOffset: number;\n\tvalue: number;\n\tpad: number;\n}\n\nexport function findPositionUsingItemSize(value: number, itemSize: number) {\n\tconst index = Math.max(0, Math.round(value / itemSize));\n\treturn {\n\t\tindex,\n\t\toffset: itemSize * index,\n\t\tlastOffset: 0,\n\t\tvalue,\n\t\tpad: 0\n\t};\n}\n\nexport function findPositionUsingOffsets(value: number, offsets: Array<number>): IVscrollPosition {\n\tconst index = findIndexAt(offsets, value);\n\tconst { length } = offsets;\n\tif (index > 0) {\n\t\treturn {\n\t\t\tindex,\n\t\t\toffset: offsets[index - 1],\n\t\t\tlastOffset: offsets[length - 1],\n\t\t\tvalue,\n\t\t\tpad: 0\n\t\t};\n\t}\n\n\treturn {\n\t\tindex: 0,\n\t\toffset: 0,\n\t\tlastOffset: 0,\n\t\tvalue,\n\t\tpad: 0\n\t};\n}\n\nexport function recycleFactory(items: Array<() => number>) {\n\tconst offsets = new Array<number>();\n\treturn (index: number, count: number) => {\n\t\tlet cursor = offsets.length;\n\t\tconst threshold = items.length;\n\t\tconst diff = Math.min(count, threshold + index) - cursor;\n\n\t\tfor (let i = threshold - diff; i < threshold; i++) {\n\t\t\tconst getSize = items[i];\n\t\t\tconst size = getSize();\n\t\t\tif (cursor === 0) {\n\t\t\t\toffsets[cursor] = size;\n\t\t\t} else {\n\t\t\t\toffsets[cursor] = offsets[cursor - 1] + size;\n\t\t\t}\n\n\t\t\tcursor++;\n\t\t}\n\n\t\treturn offsets;\n\t};\n}\n","import { Injectable } from '@angular/core';\nimport { IVscrollSettings } from './vscroll.settings';\nimport { VscrollContext } from './vscroll.context';\n\n@Injectable()\nexport class VscrollService {\n\tcontext(settings: IVscrollSettings = {}) {\n\t\tconst context = new VscrollContext();\n\t\tObject.assign(context.settings, settings);\n\t\treturn context;\n\t}\n}\n","export interface IVscrollSettings {\n\tthreshold?: number;\n\tplaceholderHeight?: number;\n\tplaceholderWidth?: number;\n\tresetTriggers?: Array<string>;\n\trowHeight?: number | ((element: HTMLElement) => number);\n\tcolumnWidth?: number | ((element: HTMLElement) => number);\n\tfetch?: (skip: number, take: number, d: { resolve: (count: number) => void, reject: () => void }) => void;\n\temit?: (f: () => void) => void;\n}\n\nexport class VscrollSettings implements IVscrollSettings {\n\tthreshold = 64;\n\tplaceholderHeight = 0;\n\tplaceholderWidth = 0;\n\tresetTriggers = ['resize'];\n\temit: (f: () => void) => void;\n\n\tconstructor(private getCount: () => number) {\n\t}\n\n\tfetch(skip: number, take: number, d: { resolve: (count: number) => void, reject: () => void }) {\n\t\td.resolve(this.getCount());\n\t}\n\n\trowHeight(element: HTMLElement) {\n\t\tlet height = element.offsetHeight;\n\t\tconst style = getComputedStyle(element);\n\n\t\theight += Number.parseInt(style.marginTop, 10) + Number.parseInt(style.marginBottom, 10);\n\t\treturn height;\n\t}\n\n\tcolumnWidth(element: HTMLElement) {\n\t\tlet width = element.offsetWidth;\n\t\tconst style = getComputedStyle(element);\n\n\t\twidth += Number.parseInt(style.marginLeft, 10) + Number.parseInt(style.marginRight, 10);\n\t\treturn width;\n\t}\n}\n","export function capitalize(text: string) {\r\n\treturn text[0].toUpperCase() + text.slice(1);\r\n}\r\n\r\nexport function placeholderBitmap(width: number, height: number) {\r\n\tconst minWidth = Math.max(width, 1);\r\n\tconst minHeight = Math.max(height, 1);\r\n\tconst canvas = document.createElement('canvas');\r\n\tcanvas.width = Math.max(width * 2, 1);\r\n\tcanvas.height = Math.max(height * 2, 1);\r\n\r\n\tconst ctx = canvas.getContext('2d');\r\n\tctx.fillStyle = 'rgba(0, 0, 0, 0.04)';\r\n\tctx.fillRect(0, 0, minWidth, minHeight);\r\n\tctx.fillStyle = 'rgba(0, 0, 0, 0.08)';\r\n\tctx.fillRect(width, height, minWidth, minHeight);\r\n\r\n\treturn canvas.toDataURL();\r\n}\r\n","import { NgModule, NgZone } from '@angular/core';\nimport { DatePipe, DecimalPipe, CurrencyPipe } from '@angular/common';\nimport { Fastdom } from 'ng2-qgrid/core/services/fastdom';\nimport { FormatService } from 'ng2-qgrid/core/format/format.service';\nimport { MainModule } from './main/main.module';\nimport { TemplateModule } from './template/template.module';\nimport { TemplateCacheDirective } from './template/template-cache.directive';\nimport { GridComponent } from './main/grid/grid.component';\nimport { ColumnListComponent } from './main/column/column-list.component';\nimport { ColumnComponent } from './main/column/column.component';\nimport { PluginModule } from './plugins/plugin.module';\nimport { FocusModule } from './common/focus/focus.module';\nimport { RowComponent } from './main/core/row/row.component';\nimport { ThemeService } from './template/theme.service';\nimport { BackdropService } from './plugins/backdrop/backdrop.service';\nimport { ModelBuilderService } from './main/model/model-builder.service';\n\n@NgModule({\n\tdeclarations: [],\n\texports: [\n\t\tGridComponent,\n\t\tColumnListComponent,\n\t\tColumnComponent,\n\t\tTemplateCacheDirective,\n\t\tPluginModule,\n\t\tMainModule,\n\t\tTemplateModule,\n\t\tFocusModule,\n\t\tRowComponent\n\t],\n\timports: [\n\t\tMainModule,\n\t\tTemplateModule\n\t],\n\tproviders: [\n\t\tDatePipe,\n\t\tDecimalPipe,\n\t\tCurrencyPipe,\n\t\tThemeService,\n\t\tBackdropService,\n\t\tModelBuilderService\n\t]\n})\nexport class GridModule {\n\tconstructor(\n\t\tzone: NgZone,\n\t\tdatePipe: DatePipe,\n\t\tnumberPipe: DecimalPipe,\n\t\tcurrencyPipe: CurrencyPipe\n\t) {\n\t\tFormatService.date = (x, format) => datePipe.transform(x, format);\n\t\tFormatService.number = (x, format) => numberPipe.transform(x, format);\n\t\tFormatService.currency = (x, format) => currencyPipe.transform(x, format);\n\n\t\tFastdom.invoke = task => zone.runOutsideAngular<any>(task);\n\t}\n}\n","import { ModelBinder } from 'ng2-qgrid/core/infrastructure/model.bind';\nimport { noop } from 'ng2-qgrid/core/utility/kit';\nimport { OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { NgComponent } from './ng.component';\nimport { RootService } from './root.service';\nimport { Model } from 'ng2-qgrid/core/infrastructure/model';\n\nexport class ModelComponent extends NgComponent implements OnChanges, OnInit, OnDestroy {\n\tprotected models: string[] = [];\n\n\tbinder = new ModelBinder(this);\n\tcommit = noop;\n\n\tconstructor(public root: RootService) {\n\t\tsuper();\n\t}\n\n\tsetup() {\n\t\treturn this.binder.bound(this.model, this.models, false);\n\t}\n\n\tngOnInit() {\n\t\tthis.commit = this.setup();\n\t\tthis.commit();\n\t}\n\n\tngOnChanges(changes: SimpleChanges): void {\n\t\tthis.commit();\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\n\t\tthis.binder.dispose();\n\t}\n\n\tget model(): Model {\n\t\treturn this.root.model;\n\t}\n}\n","import { OnInit, OnDestroy } from '@angular/core';\r\nimport { Guard } from 'ng2-qgrid/core/infrastructure/guard';\r\nimport { Disposable } from 'ng2-qgrid/core/infrastructure/disposable';\r\n\r\nexport abstract class NgComponent implements OnDestroy {\r\n\tprivate basket = new Disposable();\r\n\r\n\tconstructor() {\r\n\t}\r\n\r\n\tusing<T extends Disposable>(instance: T | (() => void)): T {\r\n\t\treturn this.basket.using(instance) as T;\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tthis.basket.dispose();\r\n\t}\r\n}\r\n","import { Model } from 'ng2-qgrid/core/infrastructure/model';\nimport { ModelBinder } from 'ng2-qgrid/core/infrastructure/model.bind';\nimport { Event } from 'ng2-qgrid/core/infrastructure/event';\nimport { OnChanges, OnDestroy, SimpleChanges, OnInit } from '@angular/core';\nimport { NgComponent } from './ng.component';\nimport { ModelBuilderService } from '../../main/model/model-builder.service';\n\nexport class RootComponent extends NgComponent implements OnChanges, OnInit, OnDestroy {\n\tmodel: Model = null;\n\tmodelChanged = new Event();\n\n\tprotected models: string[] = [];\n\n\tprivate binder = new ModelBinder(this);\n\tprivate commit: () => void;\n\n\tconstructor(private modelBuilder: ModelBuilderService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tif (!this.commit) {\n\t\t\tthis.commit = this.setup();\n\t\t}\n\t}\n\n\tngOnChanges(changes: SimpleChanges): void {\n\t\tif (changes.hasOwnProperty('model')) {\n\t\t\tthis.modelChanged.emit(this.model);\n\t\t\tthis.commit = this.setup();\n\t\t\tthis.commit();\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.commit) {\n\t\t\tthis.commit = this.setup();\n\t\t}\n\n\t\tthis.commit();\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\n\t\tthis.binder.dispose();\n\t}\n\n\tprivate setup() {\n\t\tlet run = true;\n\t\tif (!this.model) {\n\t\t\tthis.model = this.modelBuilder.build();\n\t\t\tthis.modelChanged.emit(this.model);\n\t\t\trun = false;\n\t\t}\n\n\t\treturn this.binder.bound(this.model, this.models, run);\n\t}\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Guard } from 'ng2-qgrid/core/infrastructure/guard';\nimport { CommandManager } from 'ng2-qgrid/core/command/command.manager';\nimport { Table } from 'ng2-qgrid/core/dom/table';\nimport { Bag } from 'ng2-qgrid/core/dom/bag';\nimport { ModelProxy } from 'ng2-qgrid/core/infrastructure/model.proxy';\nimport { Model } from 'ng2-qgrid/core/infrastructure/model';\n\n@Injectable()\nexport class RootService implements OnDestroy {\n\tprivate modelProxy: ModelProxy = null;\n\n\tmarkup: { [key: string]: HTMLElement } = {};\n\tbag = {\n\t\thead: new Bag(),\n\t\tbody: new Bag(),\n\t\tfoot: new Bag()\n\t};\n\n\ttable: Table = null;\n\tcommandManager: CommandManager = null;\n\n\tconstructor() {\n\t}\n\n\tget isReady() {\n\t\treturn !!this.modelProxy;\n\t}\n\n\tget model() {\n\t\tGuard.notNull(this.modelProxy, 'model');\n\n\t\treturn this.modelProxy.subject;\n\t}\n\n\tset model(value: Model) {\n\t\tif (this.modelProxy) {\n\t\t\tif (this.modelProxy.target !== value) {\n\t\t\t\tthis.modelProxy.dispose();\n\t\t\t\tthis.modelProxy = new ModelProxy(value);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (value) {\n\t\t\tthis.modelProxy = new ModelProxy(value);\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tif (this.modelProxy) {\n\t\t\tthis.modelProxy.dispose();\n\t\t\tthis.modelProxy = null;\n\t\t}\n\t}\n}\n","import { Component, ElementRef, Optional, Input, OnInit, OnDestroy } from '@angular/core';\nimport { NgComponent } from '../../infrastructure/component/ng.component';\nimport { GRID_PREFIX } from 'ng2-qgrid/core/definition';\nimport { Guard } from 'ng2-qgrid/core/infrastructure/guard';\nimport { RootService } from '../../infrastructure/component/root.service';\nimport { BoxCtrl } from 'ng2-qgrid/core/box/box.ctrl';\nimport { Model } from 'ng2-qgrid/core/infrastructure/model';\nimport { ThemeService } from '../../template/theme.service';\n\n@Component({\n\tselector: 'q-grid-box',\n\ttemplate: '<ng-content></ng-content>'\n})\nexport class BoxComponent extends NgComponent implements OnInit, OnDestroy {\n\t@Input('model') private boxModel: Model = null;\n\n\tconstructor(\n\t\t@Optional() private root: RootService,\n\t\tprivate elementRef: ElementRef,\n\t\tprivate theme: ThemeService\n\t) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tconst ctrl = new BoxCtrl(this.model, this.elementRef.nativeElement);\n\t\tthis.initTheme();\n\t}\n\n\tinitTheme() {\n\t\tconst element = this.elementRef.nativeElement;\n\n\t\tthis.using(this.theme.changed.watch(e => {\n\t\t\tif (e) {\n\t\t\t\telement.classList.remove(`${GRID_PREFIX}-theme-${e.oldValue}`);\n\t\t\t}\n\n\t\t\telement.classList.add(`${GRID_PREFIX}-theme-${this.theme.name}`);\n\t\t}));\n\t}\n\n\tget model() {\n\t\tconst model = this.boxModel || (this.root && this.root.model);\n\t\tGuard.notNull(model, 'model');\n\n\t\treturn model;\n\t}\n}\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { ModelComponent } from '../../infrastructure/component/model.component';\nimport { RootService } from '../../infrastructure/component/root.service';\nimport { ColumnListService } from './column-list.service';\n\n@Component({\n\tselector: 'q-grid-columns',\n\ttemplate: '<ng-content></ng-content>',\n\tproviders: [ColumnListService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ColumnListComponent extends ModelComponent {\n\t@Input('generation') public columnListGeneration: string = null;\n\n\tconstructor(root: RootService) {\n\t\tsuper(root);\n\n\t\tthis.models = ['columnList'];\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { RootService } from '../../infrastructure/component/root.service';\nimport { isUndefined } from 'ng2-qgrid/core/utility/kit';\nimport { parseFactory } from 'ng2-qgrid/core/services/convert';\nimport { ColumnListCtrl } from 'ng2-qgrid/core/column-list/column.list.ctrl';\nimport { ColumnModel } from 'ng2-qgrid/core/column-type/column.model';\n\n@Injectable()\nexport class ColumnListService {\n\tprivate _ctrl: ColumnListCtrl;\n\n\tconstructor(private root: RootService) {\n\t}\n\n\tadd(column: ColumnModel) {\n\t\tthis.ctrl.add(column);\n\t}\n\n\tcopy(target, source) {\n\t\tthis.ctrl.copy(target, source);\n\t}\n\n\tgenerateKey(source) {\n\t\treturn this.ctrl.generateKey(source);\n\t}\n\n\textract(key, type): ColumnModel {\n\t\treturn this.ctrl.extract(key, type);\n\t}\n\n\tregister(column: ColumnModel) {\n\t\tthis.ctrl.register(column);\n\t}\n\n\tdelete(key: string) {\n\t\tthis.ctrl.delete(key);\n\t}\n\n\tget ctrl() {\n\t\tif (this._ctrl) {\n\t\t\treturn this._ctrl;\n\t\t}\n\n\t\tconst canCopy = (key: string, source, target) =>\n\t\t\ttarget.hasOwnProperty(key) && !isUndefined(source[key]);\n\n\t\tthis._ctrl = new ColumnListCtrl(this.root.model, canCopy, parseFactory);\n\n\t\treturn this._ctrl;\n\t}\n}\n","import { Component, Input, ChangeDetectionStrategy, OnDestroy, SkipSelf, Optional, OnInit, ElementRef } from '@angular/core';\nimport { isUndefined } from 'ng2-qgrid/core/utility/kit';\nimport { guid } from 'ng2-qgrid/core/services/guid';\nimport { TemplateHostService } from '../../template/template-host.service';\nimport { ColumnListService } from '../../main/column/column-list.service';\nimport { ColumnService } from './column.service';\n\n@Component({\n\tselector: 'q-grid-column',\n\ttemplate: '<ng-content></ng-content>',\n\tproviders: [TemplateHostService, ColumnService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ColumnComponent implements OnInit, OnDestroy {\n\t@Input() type: string;\n\t@Input() key: string;\n\t@Input() class: 'data' | 'control' | 'markup' | 'pivot' | 'cohort';\n\t@Input() title: string;\n\t@Input() description: string;\n\t@Input() pin: null | 'left' | 'right';\n\t@Input() aggregation: string;\n\t@Input() aggregationOptions: any;\n\t@Input() editor: string;\n\t@Input() editorOptions: any;\n\t@Input() format: string;\n\t@Input() symbol: string;\n\t@Input() code: string;\n\n\t@Input() width: number | string;\n\t@Input() widthMode: number | string;\n\t@Input() minWidth: number | string;\n\t@Input() maxWidth: number | string;\n\t@Input() viewWidth: number | string;\n\t@Input() offset: number | string;\n\n\t@Input() canEdit: boolean;\n\t@Input() canResize: boolean;\n\t@Input() canSort: boolean;\n\t@Input() canMove: boolean;\n\t@Input() canFilter: boolean;\n\t@Input() canHighlight: boolean;\n\t@Input() canFocus: boolean;\n\n\t@Input() isVisible: boolean;\n\t@Input() index: number;\n\n\t@Input() label: (row: any, value?: any) => any | any;\n\t@Input() labelPath: string;\n\n\t@Input() itemLabel: (row: any, value?: any) => any;\n\t@Input() itemFormat: string;\n\t@Input() itemType: string;\n\n\t@Input() value: (row: any, value?: any) => any;\n\t@Input() path: string;\n\n\t@Input() compare: (x: any, y: any) => number;\n\n\t@Input() trueValue: any;\n\t@Input() falseValue: any;\n\n\t@Input() maxLength: number;\n\n\tconstructor(\n\t\tprivate columnList: ColumnListService,\n\t\tprivate templateHost: TemplateHostService,\n\t\t@SkipSelf() @Optional() private parent: ColumnService,\n\t\tprivate service: ColumnService,\n\t\tprivate elementRef: ElementRef\n\t) {\n\t}\n\n\tngOnInit() {\n\t\tlet withKey = !isUndefined(this.key);\n\t\tlet withType = !isUndefined(this.type);\n\n\t\t// We want to update model when ngOntInit is triggered and not in afterViewInit\n\t\t// so we apply dirty hack to understand if column is cohort or not.\n\t\tconst element = this.elementRef.nativeElement as HTMLElement;\n\t\tif (element.children.length && element.children.item(0).tagName === 'Q-GRID-COLUMN') {\n\t\t\tthis.type = 'cohort';\n\t\t\tif (!withKey) {\n\t\t\t\tthis.key = `$cohort-${this.title || guid()}`;\n\t\t\t}\n\n\t\t\twithKey = true;\n\t\t\twithType = true;\n\t\t}\n\n\t\tif (!withKey) {\n\t\t\tthis.key = this.columnList.generateKey(this);\n\t\t}\n\n\t\tconst column = this.columnList.extract(this.key, this.type);\n\t\tthis.columnList.copy(column, this);\n\n\t\tthis.templateHost.key = source => {\n\t\t\tconst parts = [source, 'cell'];\n\n\t\t\tif (withType) {\n\t\t\t\tparts.push(this.type);\n\t\t\t}\n\n\t\t\tif (withKey) {\n\t\t\t\tparts.push(`the-${this.key}`);\n\t\t\t}\n\n\t\t\treturn parts.join('-') + '.tpl.html';\n\t\t};\n\n\t\tif (withKey) {\n\t\t\tif (this.parent) {\n\t\t\t\tthis.parent.column.children.push(column);\n\t\t\t} else {\n\t\t\t\tthis.columnList.add(column);\n\t\t\t}\n\t\t\tthis.service.column = column;\n\t\t} else {\n\t\t\tconst settings =\n\t\t\t\tObject\n\t\t\t\t\t.keys(this)\n\t\t\t\t\t.filter(key => !isUndefined(this[key]) && column.hasOwnProperty(key))\n\t\t\t\t\t.reduce((memo, key) => {\n\t\t\t\t\t\tmemo[key] = column[key];\n\t\t\t\t\t\treturn memo;\n\t\t\t\t\t}, {});\n\n\t\t\tthis.columnList.register(settings);\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tconst { column } = this.service;\n\t\tif (column && column.source === 'template') {\n\t\t\tthis.columnList.delete(column.key);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { ColumnModel } from 'ng2-qgrid/core/column-type/column.model';\n\n@Injectable()\nexport class ColumnService {\n\tcolumn: ColumnModel;\n}\n","module.exports = \"<ng-container [ngSwitch]=\\\"$view.scroll.mode === 'virtual' && pin === 'body'\\\">\\n\\n\\t<ng-container *ngSwitchCase=\\\"true\\\">\\n\\t\\t<tr q-grid-vscroll-mark=\\\"top\\\"\\n\\t\\t\\tclass=\\\"q-grid-scroll-mark\\\">\\n\\t\\t</tr>\\n\\t\\t<tr class=\\\"q-grid-align\\\">\\n\\t\\t\\t<td *ngFor=\\\"let $column of $view.body.columns($table.pin); trackBy: columnId\\\"\\n\\t\\t\\t\\t[q-grid-core-td-align]=\\\"$column\\\">\\n\\t\\t\\t</td>\\n\\t\\t</tr>\\n\\t\\t<tr *ngFor=\\\"let $row of $view.body.render.rows[pin] | qGridVscroll: $view.scroll.y; index as $vscrollIndex; viewIndex as $rowIndex; trackBy: $view.scroll.y.id\\\"\\n\\t\\t\\t[q-grid-core-tr]=\\\"$row\\\"\\n\\t\\t\\t[q-grid-core-index]=\\\"$vscrollIndex\\\"\\n\\t\\t\\t[q-grid-vscroll-row]=\\\"$vscrollIndex\\\"\\n\\t\\t\\tq-grid-core-source=\\\"body\\\">\\n\\t\\t\\t<td *ngFor=\\\"let $column of $view.body.render.columns($row, $table.pin, $rowIndex); index as $columnIndex; trackBy: columnId\\\"\\n\\t\\t\\t\\t[attr.rowspan]=\\\"$view.body.render.rowspan($row, $column, $rowIndex, $columnIndex)\\\"\\n\\t\\t\\t\\t[attr.colspan]=\\\"$view.body.render.colspan($row, $column, $rowIndex, $columnIndex)\\\">\\n\\t\\t\\t\\t<ng-container [q-grid-core-td]=\\\"$column\\\">\\n\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t</td>\\n\\t\\t</tr>\\n\\t\\t<tr q-grid-vscroll-mark=\\\"bottom\\\"\\n\\t\\t\\tclass=\\\"q-grid-scroll-mark\\\">\\n\\t\\t</tr>\\n\\t</ng-container>\\n\\n\\t<ng-container *ngSwitchDefault>\\n\\t\\t<tr class=\\\"q-grid-align\\\">\\n\\t\\t\\t<td *ngFor=\\\"let $column of $view.body.columns($table.pin); trackBy: columnId\\\"\\n\\t\\t\\t\\t[q-grid-core-td-align]=\\\"$column\\\">\\n\\t\\t\\t</td>\\n\\t\\t</tr>\\n\\t\\t<tr *ngFor=\\\"let $row of $view.body.render.rows[pin]; index as $rowIndex; trackBy: rowId\\\"\\n\\t\\t\\t[q-grid-core-tr]=\\\"$row\\\"\\n\\t\\t\\t[q-grid-core-index]=\\\"$rowIndex\\\"\\n\\t\\t\\tq-grid-core-source=\\\"body\\\">\\n\\t\\t\\t<td *ngFor=\\\"let $column of $view.body.render.columns($row, $table.pin, $rowIndex); index as $columnIndex; trackBy: columnId\\\"\\n\\t\\t\\t\\t[attr.rowspan]=\\\"$view.body.render.rowspan($row, $column, $rowIndex, $columnIndex)\\\"\\n\\t\\t\\t\\t[attr.colspan]=\\\"$view.body.render.colspan($row, $column, $rowIndex, $columnIndex)\\\">\\n\\t\\t\\t\\t<ng-container [q-grid-core-td]=\\\"$column\\\">\\n\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t</td>\\n\\t\\t</tr>\\n\\t</ng-container>\\n\\n</ng-container>\"","import { Component, ElementRef, OnInit, NgZone, Input, ChangeDetectorRef } from '@angular/core';\nimport { EventListener } from 'ng2-qgrid/core/infrastructure/event.listener';\nimport { EventManager } from 'ng2-qgrid/core/infrastructure/event.manager';\nimport { ColumnView } from 'ng2-qgrid/core/scene/view/column.view';\nimport { SelectionModel } from 'ng2-qgrid/core/selection/selection.model';\nimport { Model } from 'ng2-qgrid/core/infrastructure/model';\nimport { BodyCtrl } from 'ng2-qgrid/core/body/body.ctrl';\nimport { NgComponent } from '../../../infrastructure/component/ng.component';\nimport { RootService } from '../../../infrastructure/component/root.service';\nimport { ViewCoreService } from '../view/view-core.service';\nimport { TableCoreService } from '../table/table-core.service';\n\n@Component({\n\t// tslint:disable-next-line\n\tselector: 'tbody[q-grid-core-body]',\n\ttemplateUrl: './body-core.component.html'\n})\nexport class BodyCoreComponent extends NgComponent implements OnInit {\n\t@Input() pin = 'body';\n\n\tcolumnId: (index: number, item: ColumnView) => any;\n\trowId: (index: number, row: any) => any;\n\n\tconstructor(\n\t\tpublic $view: ViewCoreService,\n\t\tpublic $table: TableCoreService,\n\t\tprivate elementRef: ElementRef,\n\t\tprivate root: RootService,\n\t\tprivate zone: NgZone,\n\t\tprivate cd: ChangeDetectorRef\n\t) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tconst { model } = this.root;\n\t\tconst { id } = model.data();\n\n\t\tthis.rowId = id.row;\n\t\tthis.columnId = (index, columnView) => id.column(index, columnView.model);\n\n\t\tconst table = this.$table;\n\t\tconst view = this.$view;\n\t\tconst nativeElement = this.elementRef.nativeElement as HTMLElement;\n\n\t\tconst ctrl = new BodyCtrl(model, view, this.root.table, this.root.bag);\n\t\tconst listener = new EventListener(nativeElement, new EventManager(this));\n\n\t\tthis.zone.runOutsideAngular(() => {\n\t\t\tthis.using(listener.on('wheel', e => ctrl.onWheel(e)));\n\n\t\t\tthis.using(listener.on('scroll', () =>\n\t\t\t\tctrl.onScroll({\n\t\t\t\t\tscrollLeft: table.pin ? model.scroll().left : nativeElement.scrollLeft,\n\t\t\t\t\tscrollTop: nativeElement.scrollTop\n\t\t\t\t}),\n\t\t\t\t{ passive: true }\n\t\t\t));\n\n\t\t\tthis.using(listener.on('mousemove', ctrl.onMouseMove.bind(ctrl)));\n\t\t\tthis.using(listener.on('mouseleave', ctrl.onMouseLeave.bind(ctrl)));\n\t\t\tthis.using(listener.on('mousedown', ctrl.onMouseDown.bind(ctrl)));\n\t\t\tthis.using(listener.on('mouseup', e => {\n\t\t\t\tthis.cd.markForCheck();\n\t\t\t\tthis.zone.run(() => ctrl.onMouseUp(e));\n\t\t\t}));\n\t\t});\n\n\t\tthis.using(model.dataChanged.watch(e => {\n\t\t\tif (e.hasChanges('id')) {\n\t\t\t\tthis.rowId = e.state.id.row;\n\t\t\t\tconst columnId = e.state.id.column;\n\t\t\t\tthis.columnId = (index, columnView) => columnId(index, columnView.model);\n\t\t\t}\n\t\t}));\n\n\t\tthis.using(model.sceneChanged.watch(e => {\n\t\t\tif (model.grid().interactionMode === 'detached') {\n\t\t\t\tif (e.hasChanges('status')) {\n\t\t\t\t\tswitch (e.state.status) {\n\t\t\t\t\t\tcase 'stop':\n\t\t\t\t\t\t\tthis.cd.detach();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'start':\n\t\t\t\t\t\t\tthis.cd.reattach();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\tget selection(): SelectionModel {\n\t\treturn this.model.selection();\n\t}\n\n\tget model(): Model {\n\t\treturn this.root.model;\n\t}\n}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\nimport { TdCtrl } from 'ng2-qgrid/core/cell/td.ctrl';\nimport { ColumnView } from 'ng2-qgrid/core/scene/view/column.view';\n\nconst classify = TdCtrl.classify;\n\n@Directive({\n\tselector: '[q-grid-core-td-align]',\n})\nexport class TdCoreAlignDirective implements OnInit {\n\t@Input('q-grid-core-td-align') columnView: ColumnView;\n\n\tconstructor(private elementRef: ElementRef) {\n\t}\n\n\tngOnInit() {\n\t\tclassify(this.elementRef.nativeElement, this.columnView.model);\n\t}\n}\n","import { Directive, ElementRef, Input, OnDestroy, OnInit, ViewContainerRef, ChangeDetectorRef } from '@angular/core';\nimport { GRID_PREFIX } from 'ng2-qgrid/core/definition';\nimport { AppError } from 'ng2-qgrid/core/infrastructure/error';\nimport { ColumnModel } from 'ng2-qgrid/core/column-type/column.model';\nimport { ColumnView } from 'ng2-qgrid/core/scene/view/column.view';\nimport { TdCtrl } from 'ng2-qgrid/core/cell/td.ctrl';\nimport { Td } from 'ng2-qgrid/core/dom/td';\nimport { ViewCoreService } from '../view/view-core.service';\nimport { RootService } from '../../../infrastructure/component/root.service';\nimport { TrCoreDirective } from '../row/tr-core.directive';\nimport { CellService } from '../../../main/core/cell/cell.service';\n\nconst classify = TdCtrl.classify;\n\n@Directive({\n\tselector: '[q-grid-core-td]',\n})\nexport class TdCoreDirective implements Td, OnInit, OnDestroy {\n\tprivate $implicit = this;\n\n\t@Input('q-grid-core-td') columnView: ColumnView;\n\telement: HTMLElement = null;\n\n\tconstructor(\n\t\tpublic $view: ViewCoreService,\n\t\tprivate root: RootService,\n\t\tprivate viewContainerRef: ViewContainerRef,\n\t\tprivate cellService: CellService,\n\t\tprivate tr: TrCoreDirective,\n\t\tprivate cd: ChangeDetectorRef,\n\t\telementRef: ElementRef\n\t) {\n\t\tthis.element = elementRef.nativeElement.parentNode;\n\t}\n\n\tngOnInit() {\n\t\tthis.root.bag.body.addCell(this);\n\t\tclassify(this.element, this.column);\n\n\t\tconst link = this.cellService.build('body', this.column, 'view');\n\t\tlink(this.viewContainerRef, this);\n\t}\n\n\tmode(value: 'view' | 'edit') {\n\t\tswitch (value) {\n\t\t\tcase 'view': {\n\t\t\t\tthis.element.classList.remove(`${GRID_PREFIX}-edit`);\n\n\t\t\t\tconst link = this.cellService.build('body', this.column, 'view');\n\t\t\t\tlink(this.viewContainerRef, this);\n\t\t\t\tthis.cd.markForCheck();\n\t\t\t\tthis.cd.detectChanges();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'edit': {\n\t\t\t\tthis.element.classList.add(`${GRID_PREFIX}-edit`);\n\n\t\t\t\tconst link = this.cellService.build('body', this.column, 'edit');\n\t\t\t\tlink(this.viewContainerRef, this);\n\t\t\t\tthis.cd.markForCheck();\n\t\t\t\tthis.cd.detectChanges();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tthrow new AppError('td.core', `Invalid mode ${value}`);\n\t\t}\n\t}\n\n\tget value() {\n\t\tconst { column, row, rowIndex, columnIndex } = this;\n\t\treturn this.$view.body.render.getValue(row, column, rowIndex, columnIndex);\n\t}\n\n\tset value(value) {\n\t\tconst { column, row, rowIndex, columnIndex } = this;\n\t\tthis.$view.body.render.setValue(row, column, value, rowIndex, columnIndex);\n\t}\n\n\tget label() {\n\t\tconst { column, row, rowIndex, columnIndex } = this;\n\t\treturn this.$view.body.render.getLabel(row, column, rowIndex, columnIndex);\n\t}\n\n\tset label(label) {\n\t\tconst { column, row, rowIndex, columnIndex } = this;\n\t\tthis.$view.body.render.setLabel(row, column, label, rowIndex, columnIndex);\n\t}\n\n\tget column(): ColumnModel {\n\t\treturn this.columnView.model;\n\t}\n\n\tget columnIndex() {\n\t\treturn this.columnView.columnIndex;\n\t}\n\n\tget row() {\n\t\treturn this.tr.model;\n\t}\n\n\tget rowIndex() {\n\t\treturn this.tr.index;\n\t}\n\n\tngOnDestroy() {\n\t\tthis.root.bag.body.deleteCell(this);\n\t}\n}\n","module.exports = \"<ng-container *ngIf=\\\"isMarkerVisible\\\">\\n    <i #marker\\n       class=\\\"material-icons q-grid-marker\\\"\\n       (mousedown)=\\\"startBatchEdit()\\\">\\n        signal_cellular_4_bar\\n    </i>\\n    <i class=\\\"material-icons q-grid-marker\\\">\\n        signal_cellular_4_bar\\n    </i>\\n</ng-container>\"","import { AfterViewInit, Component, ElementRef, OnInit, ViewChild, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { jobLine } from 'ng2-qgrid/core/services/job.line';\nimport { Fastdom } from 'ng2-qgrid/core/services/fastdom';\nimport { EditService } from 'ng2-qgrid/core/edit/edit.service';\nimport { CellView } from 'ng2-qgrid/core/scene/view/cell.view';\nimport { ModelEventArg } from 'ng2-qgrid/core/infrastructure/model';\nimport { NavigationModel } from 'ng2-qgrid/core/navigation/navigation.model';\nimport { Td } from 'ng2-qgrid/core/dom/td';\nimport { RootService } from '../../../infrastructure/component/root.service';\n\n@Component({\n\tselector: 'q-grid-cell-handler',\n\ttemplateUrl: './cell-handler.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CellHandlerComponent implements OnInit, AfterViewInit {\n\tprivate startCell: CellView = null;\n\tprivate initialSelectionMode: 'single' | 'multiple' | 'range' = null;\n\tprivate initialEditState: 'view' | 'edit' | 'startBatch' | 'endBatch' = null;\n\n\t@ViewChild('marker') marker: ElementRef;\n\tisMarkerVisible = false;\n\n\tconstructor(\n\t\tprivate elementRef: ElementRef,\n\t\tprivate root: RootService,\n\t\tprivate cd: ChangeDetectorRef\n\t) {\n\t\tthis.elementRef.nativeElement.style.display = 'none';\n\t}\n\n\tngOnInit() {\n\t\tconst updateHandler = this.updateHandlerFactory();\n\t\tconst updateMarker = this.updateMarkerFactory();\n\n\t\tthis.root.model.navigationChanged.watch(e => {\n\t\t\tupdateHandler(e);\n\t\t\tupdateMarker(e);\n\t\t});\n\n\t\tthis.root.model.editChanged.watch(e => {\n\t\t\tif (e.hasChanges('method')) {\n\t\t\t\tthis.isMarkerVisible = e.state.method === 'batch';\n\t\t\t\tthis.cd.detectChanges();\n\t\t\t}\n\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.elementRef.nativeElement.style.display = '';\n\t}\n\n\tupdateHandlerFactory() {\n\t\tconst { model, table } = this.root;\n\t\tconst element = this.elementRef.nativeElement;\n\t\tconst job = jobLine(150);\n\n\t\t// When navigate first or when animation wasn't applied we need to omit\n\t\t// next navigation event to make handler to correct position.\n\t\tlet isValid = false;\n\t\treturn (e: ModelEventArg<NavigationModel>) => {\n\t\t\tif (e.hasChanges('cell')) {\n\t\t\t\tconst { cell, rowIndex, columnIndex } = e.state;\n\n\t\t\t\tif (cell) {\n\t\t\t\t\tconst oldCell = e.changes.cell.oldValue || {};\n\t\t\t\t\tconst newCell = e.changes.cell.newValue || {};\n\t\t\t\t\tconst oldColumn = oldCell.column || {};\n\t\t\t\t\tconst newColumn = newCell.column || {};\n\n\t\t\t\t\t// Do not apply animation for columns that have viewWidth assigned\n\t\t\t\t\t// because it can be animated too.\n\t\t\t\t\tconst shouldAnimate =\n\t\t\t\t\t\t!model.drag().isActive\n\t\t\t\t\t\t&& (oldColumn.key === newColumn.key || !(oldColumn.viewWidth || newColumn.viewWidth));\n\n\t\t\t\t\tif (!shouldAnimate) {\n\t\t\t\t\t\tisValid = false;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// It can be that the cell object was changed but indices are not.\n\t\t\t\t\tisValid =\n\t\t\t\t\t\toldCell.rowIndex >= 0\n\t\t\t\t\t\t&& oldCell.columnIndex >= 0\n\t\t\t\t\t\t&& (newCell.rowIndex !== oldCell.rowIndex || newCell.columnIndex !== oldCell.columnIndex);\n\n\t\t\t\t\tconst domCell = table.body.cell(rowIndex, columnIndex);\n\t\t\t\t\tif (isValid) {\n\t\t\t\t\t\tdomCell.addClass('q-grid-animate');\n\t\t\t\t\t\telement.classList.add('q-grid-active');\n\n\t\t\t\t\t\tjob(() => {\n\t\t\t\t\t\t\telement.classList.remove('q-grid-active');\n\t\t\t\t\t\t\tdomCell.removeClass('q-grid-animate');\n\t\t\t\t\t\t}).catch(() => {\n\t\t\t\t\t\t\tFastdom.mutate(() => {\n\t\t\t\t\t\t\t\tdomCell.removeClass('q-grid-animate');\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tFastdom.measure(() => {\n\t\t\t\t\t\tconst target = domCell.element;\n\t\t\t\t\t\tconst scrollState = model.scroll();\n\t\t\t\t\t\tconst top = (target.offsetTop - scrollState.top) + 'px';\n\t\t\t\t\t\tconst left = (target.offsetLeft - (cell.column.pin ? 0 : scrollState.left)) + 'px';\n\t\t\t\t\t\tconst width = target.offsetWidth + 'px';\n\t\t\t\t\t\tconst height = target.offsetHeight + 'px';\n\n\t\t\t\t\t\tFastdom.mutate(() => {\n\t\t\t\t\t\t\telement.style.top = top;\n\t\t\t\t\t\t\telement.style.left = left;\n\t\t\t\t\t\t\telement.style.width = width;\n\t\t\t\t\t\t\telement.style.height = height;\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\tisValid = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\t}\n\n\tupdateMarkerFactory() {\n\t\tconst { model, table } = this.root;\n\t\tconst editService = new EditService(model, table);\n\t\tconst job = jobLine(150);\n\n\t\tlet oldCell: Td = null;\n\t\tmodel.editChanged.on(e => {\n\t\t\tif (e.hasChanges('state')) {\n\t\t\t\tif (e.state.state === 'endBatch') {\n\t\t\t\t\tmodel.edit({ state: this.initialEditState });\n\t\t\t\t\teditService.doBatch(this.startCell);\n\t\t\t\t\tmodel.selection({ mode: this.initialSelectionMode });\n\n\t\t\t\t\tthis.startCell = null;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn (e: ModelEventArg<NavigationModel>) => {\n\t\t\tif (!this.marker) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (e.hasChanges('cell')) {\n\t\t\t\tconst { rowIndex, columnIndex } = e.state;\n\t\t\t\tconst { method, state } = model.edit();\n\n\t\t\t\tconst cell = table.body.cell(rowIndex, columnIndex).model();\n\n\t\t\t\tif (method === 'batch') {\n\t\t\t\t\tif (oldCell) {\n\t\t\t\t\t\tFastdom.mutate(() => this.marker.nativeElement.remove());\n\t\t\t\t\t}\n\n\t\t\t\t\tif (cell) {\n\t\t\t\t\t\tjob(() => Fastdom.mutate(() => cell.element.appendChild(this.marker.nativeElement)));\n\t\t\t\t\t}\n\n\t\t\t\t\toldCell = cell;\n\t\t\t\t}\n\n\t\t\t\tif (state === 'startBatch' && !this.startCell) {\n\t\t\t\t\tthis.startCell = cell;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tstartBatchEdit() {\n\t\tconst model = this.root.model;\n\n\t\tthis.startCell = model.navigation().cell;\n\t\tif (this.startCell) {\n\t\t\tthis.initialEditState = model.edit().state;\n\t\t\tthis.initialSelectionMode = model.selection().mode;\n\t\t\tmodel.selection({ mode: 'range' });\n\t\t\tmodel.edit({ state: 'startBatch' });\n\t\t}\n\t}\n}\n","import { Injectable, ViewContainerRef, TemplateRef } from '@angular/core';\nimport { AppError } from 'ng2-qgrid/core/infrastructure/error';\nimport { noop } from 'ng2-qgrid/core/utility/kit';\nimport { ColumnModel } from 'ng2-qgrid/core/column-type/column.model';\nimport { TemplateService } from '../../../template/template.service';\n\nfunction canBuild(column) {\n\treturn column.type !== 'pad';\n}\n\nfunction buildId(source: string, column: ColumnModel, mode = 'view') {\n\tconst { key, type, itemType } = column as any;\n\treturn `${source}-${mode}-cell-${type}-of-${itemType}-the-${key}.tpl.html`;\n}\n\nfunction buildKeys(source: string, column: ColumnModel, mode = 'view') {\n\t// tslint:disable-next-line\n\tlet { key, type, itemType } = column as any;\n\n\tswitch (mode) {\n\t\tcase 'view': {\n\t\t\tconst result = [\n\t\t\t\t`${source}-cell-${type}-the-${key}.tpl.html`,\n\t\t\t\t`${source}-cell-the-${key}.tpl.html`,\n\t\t\t\t`${source}-cell-${type}.tpl.html`,\n\t\t\t\t`${source}-cell.tpl.html`,\n\t\t\t\t`${source}-cell-text.tpl.html`\n\t\t\t];\n\n\t\t\tif (itemType) {\n\t\t\t\tresult.splice(0, 0, ...[\n\t\t\t\t\t`${source}-cell-${type}-of-${itemType}-the-${key}.tpl.html`,\n\t\t\t\t\t`${source}-cell-${type}-of-${itemType}.tpl.html`\n\t\t\t\t]);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t\tcase 'edit': {\n\t\t\ttype = column.editor || type;\n\t\t\tconst result = [\n\t\t\t\t`${mode}-cell-${type}-the-${key}.tpl.html`,\n\t\t\t\t`${mode}-cell-the-${key}.tpl.html`,\n\t\t\t\t`${mode}-cell-${type}.tpl.html`,\n\t\t\t\t`${mode}-cell.tpl.html`,\n\t\t\t\t`${mode}-cell-text.tpl.html`\n\t\t\t];\n\n\t\t\tif (itemType) {\n\t\t\t\tresult.splice(0, 0, ...[\n\t\t\t\t\t`${mode}-cell-${type}-of-${itemType}-the-${key}.tpl.html`,\n\t\t\t\t\t`${mode}-cell-${type}-of-${itemType}.tpl.html`,\n\t\t\t\t]);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t\tdefault:\n\t\t\tthrow new AppError('cell.service', `Invalid mode '${mode}'`);\n\t}\n}\n\n@Injectable()\nexport class CellService {\n\tprivate commits = new Map<string, (container: ViewContainerRef, context: any) => void>();\n\n\tconstructor(private templateService: TemplateService) { }\n\n\tbuild(source: string, column: ColumnModel, mode: 'view' | 'edit' = 'view') {\n\t\tif (!canBuild(column)) {\n\t\t\treturn noop;\n\t\t}\n\n\t\tconst id = buildId(source, column, mode);\n\t\tconst commits = this.commits;\n\t\tlet commit = commits.get(column.key);\n\t\tif (commit) {\n\t\t\treturn commit;\n\t\t}\n\n\t\tconst templateService = this.templateService;\n\t\tconst keys = buildKeys(source, column, mode);\n\t\tconst link = templateService.find(keys);\n\n\t\tif (!link) {\n\t\t\tthrow new AppError(\n\t\t\t\t'cell.service',\n\t\t\t\t`Can't find template for ${keys[0]}`\n\t\t\t);\n\t\t}\n\n\t\tcommit = (container: ViewContainerRef, context: any) => {\n\t\t\tcontainer.clear();\n\n\t\t\tconst createView = templateService.viewFactory(context);\n\t\t\tcreateView(link, container);\n\t\t};\n\n\t\tcommits.set(id, commit);\n\t\treturn commit;\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BodyCoreComponent } from './body/body-core.component';\nimport { CellHandlerComponent } from './cell/cell-handler.component';\nimport { CommonModule as GridCommonModule } from '../../common/common.module';\nimport { FootCoreComponent } from './foot/foot-core.component';\nimport { HeadCoreComponent } from './head/head-core.component';\nimport { LayerCoreComponent } from './layer/layer-core.component';\nimport { LayerCoreDirective } from './layer/layer-core.directive';\nimport { MarkupDirective } from './markup/markup.directive';\nimport { TableCoreComponent } from '../../main/core/table/table-core.component';\nimport { TdCoreAlignDirective } from '../../main/core/body/td-core-align.directive';\nimport { TdCoreDirective } from './body/td-core.directive';\nimport { TemplateCacheService } from '../../template/template-cache.service';\nimport { TemplateModule } from '../../template/template.module';\nimport { TemplateService } from '../../template/template.service';\nimport { TfCoreDirective } from './foot/tf-core.directive';\nimport { ThCoreDirective } from './head/th-core.directive';\nimport { ToolbarCoreComponent } from './toolbar/toolbar-core.component';\nimport { TrCoreDirective } from './row/tr-core.directive';\nimport { TrhCoreDirective } from './row/trh-core.directive';\nimport { ViewCoreComponent } from './view/view-core.component';\nimport { VScrollService } from './scroll/vscroll.service';\n\n@NgModule({\n\tdeclarations: [\n\t\tBodyCoreComponent,\n\t\tCellHandlerComponent,\n\t\tFootCoreComponent,\n\t\tHeadCoreComponent,\n\t\tLayerCoreComponent,\n\t\tLayerCoreDirective,\n\t\tMarkupDirective,\n\t\tTableCoreComponent,\n\t\tTdCoreAlignDirective,\n\t\tTdCoreDirective,\n\t\tTfCoreDirective,\n\t\tThCoreDirective,\n\t\tToolbarCoreComponent,\n\t\tTrCoreDirective,\n\t\tTrhCoreDirective,\n\t\tViewCoreComponent,\n\t],\n\texports: [\n\t\tViewCoreComponent,\n\t\tToolbarCoreComponent\n\t],\n\timports: [\n\t\tTemplateModule,\n\t\tCommonModule,\n\t\tGridCommonModule\n\t],\n\tproviders: [\n\t\tVScrollService,\n\t\tTemplateCacheService,\n\t\tTemplateService\n\t]\n})\nexport class CoreModule {\n}\n","module.exports = \"<tr *ngFor=\\\"let $row of $view.foot.rows; trackBy: rowId; index as $rowIndex\\\"\\r\\n    [q-grid-core-trh]=\\\"$row\\\"\\r\\n    [q-grid-core-index]=\\\"$rowIndex\\\"\\r\\n    q-grid-core-source=\\\"foot\\\">\\r\\n\\t<td *ngFor=\\\"let $column of $view.foot.columns($row, $table.pin); trackBy: columnId; index as $columnIndex\\\"\\r\\n\\t    [attr.rowspan]=\\\"$column.rowspan\\\"\\r\\n\\t    [attr.colspan]=\\\"$column.colspan\\\">\\r\\n\\t\\t<ng-container [q-grid-core-tf]=\\\"$column\\\">\\r\\n\\t\\t</ng-container>\\r\\n\\t</td>\\r\\n</tr>\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { ViewCoreService } from '../view/view-core.service';\nimport { ColumnView } from 'ng2-qgrid/core/scene/view/column.view';\nimport { TableCoreService } from '../table/table-core.service';\nimport { NgComponent } from '../../../infrastructure/component/ng.component';\nimport { RootService } from '../../../infrastructure/component/root.service';\n\n@Component({\n\t// tslint:disable-next-line\n\tselector: 'tfoot[q-grid-core-foot]',\n\ttemplateUrl: './foot-core.component.html'\n})\nexport class FootCoreComponent extends NgComponent {\n\tconstructor(\n\t\tpublic $view: ViewCoreService,\n\t\tpublic $table: TableCoreService,\n\t\tprivate root: RootService,\n\t\tprivate cd: ChangeDetectorRef\n\t) {\n\t\tsuper();\n\t}\n\n\tcolumnId(index: number, item: ColumnView) {\n\t\treturn item.model.key;\n\t}\n\n\trowId(index: number) {\n\t\treturn index;\n\t}\n}\n","import {\n\tDirective,\n\tElementRef,\n\tInput,\n\tOnDestroy,\n\tOnInit,\n\tViewContainerRef\n} from '@angular/core';\nimport { GRID_PREFIX } from 'ng2-qgrid/core/definition';\nimport { ColumnView } from 'ng2-qgrid/core/scene/view/column.view';\nimport { ColumnModel } from 'ng2-qgrid/core/column-type/column.model';\nimport { TdCtrl } from 'ng2-qgrid/core/cell/td.ctrl';\nimport { Td } from 'ng2-qgrid/core/dom/td';\nimport { AppError } from 'ng2-qgrid/core/infrastructure/error';\nimport { ViewCoreService } from '../view/view-core.service';\nimport { RootService } from '../../../infrastructure/component/root.service';\nimport { CellService } from '../cell/cell.service';\nimport { TrhCoreDirective } from '../row/trh-core.directive';\n\nconst classify = TdCtrl.classify;\n\n@Directive({\n\tselector: '[q-grid-core-tf]'\n})\nexport class TfCoreDirective implements Td, OnInit, OnDestroy {\n\t$implicit = this;\n\n\t@Input('q-grid-core-tf') columnView: ColumnView;\n\telement: HTMLElement = null;\n\n\tconstructor(\n\t\tpublic $view: ViewCoreService,\n\t\tprivate root: RootService,\n\t\tprivate cellService: CellService,\n\t\tprivate viewContainerRef: ViewContainerRef,\n\t\tprivate tr: TrhCoreDirective,\n\t\telementRef: ElementRef\n\t) {\n\t\tthis.element = elementRef.nativeElement.parentNode;\n\t}\n\n\tngOnInit() {\n\t\tconst column = this.column;\n\t\tconst element = this.element;\n\n\t\tthis.root.bag.foot.addCell(this);\n\t\tclassify(element, column);\n\n\t\tconst link = this.cellService.build('foot', this.column);\n\t\tlink(this.viewContainerRef, this);\n\t}\n\n\tget value() {\n\t\tconst column = this.column;\n\t\treturn this.$view.foot.value(column);\n\t}\n\n\tget label() {\n\t\treturn this.label;\n\t}\n\n\tget column(): ColumnModel {\n\t\treturn this.columnView.model;\n\t}\n\n\tget columnIndex() {\n\t\treturn this.columnView.columnIndex;\n\t}\n\n\tget row() {\n\t\treturn this.tr.model;\n\t}\n\n\tget rowIndex() {\n\t\treturn this.tr.index;\n\t}\n\n\tmode(value: string): void {\n\t\tthrow new AppError('tf-core.directive', `${value} mode is not supported`);\n\t}\n\n\tngOnDestroy() {\n\t\tthis.root.bag.foot.deleteCell(this);\n\t}\n}\n","module.exports = \"<tr *ngFor=\\\"let $row of $view.head.rows; trackBy: rowId; index as $rowIndex\\\"\\n    [q-grid-core-trh]=\\\"$row\\\"\\n    [q-grid-core-index]=\\\"$rowIndex\\\"\\n    q-grid-core-source=\\\"head\\\">\\n    <th *ngFor=\\\"let $column of $view.head.columns($row, $table.pin); trackBy: columnId; index as $columnIndex\\\"\\n        [attr.rowspan]=\\\"$column.rowspan\\\"\\n        [attr.colspan]=\\\"$column.colspan\\\"\\n        [q-grid-drag]=\\\"$view.head.drag\\\"\\n        [q-grid-drag-data]=\\\"$column.model.key\\\"\\n        q-grid-drop-area=\\\"head\\\"\\n        q-grid-resize-path=\\\"columns\\\"\\n        [q-grid-resize]=\\\"$column.model.key\\\"\\n        [q-grid-can-resize]=\\\"$view.head.resize.canExecute\\\">\\n        <ng-container [q-grid-core-th]=\\\"$column\\\">\\n        </ng-container>\\n    </th>\\n</tr>\"","import { Component, OnInit, ElementRef, NgZone, ChangeDetectorRef } from '@angular/core';\nimport { ViewCoreService } from '../view/view-core.service';\nimport { ColumnView } from 'ng2-qgrid/core/scene/view/column.view';\nimport { EventListener } from 'ng2-qgrid/core/infrastructure/event.listener';\nimport { EventManager } from 'ng2-qgrid/core/infrastructure/event.manager';\nimport { HeadCtrl } from 'ng2-qgrid/core/head/head.ctrl';\nimport { TableCoreService } from '../table/table-core.service';\nimport { RootService } from '../../../infrastructure/component/root.service';\nimport { NgComponent } from '../../../infrastructure/component/ng.component';\n\n@Component({\n\t// tslint:disable-next-line\n\tselector: 'thead[q-grid-core-head]',\n\ttemplateUrl: './head-core.component.html'\n})\nexport class HeadCoreComponent extends NgComponent implements OnInit {\n\tconstructor(\n\t\tpublic $view: ViewCoreService,\n\t\tpublic $table: TableCoreService,\n\t\tprivate root: RootService,\n\t\tprivate elementRef: ElementRef,\n\t\tprivate zone: NgZone,\n\t\tprivate cd: ChangeDetectorRef\n\t) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tconst { model } = this.root;\n\n\t\tconst element = this.elementRef.nativeElement;\n\t\tconst ctrl = new HeadCtrl(model, this.$view, this.root.bag);\n\t\tconst listener = new EventListener(element, new EventManager(this));\n\n\t\tthis.zone.runOutsideAngular(() => {\n\t\t\tthis.using(listener.on('mousemove', e => ctrl.onMouseMove(e)));\n\t\t\tthis.using(listener.on('mouseleave', e => ctrl.onMouseLeave(e)));\n\t\t});\n\t}\n\n\tcolumnId(index: number, item: ColumnView) {\n\t\treturn item.model.key;\n\t}\n\n\trowId(index: number) {\n\t\treturn index;\n\t}\n}\n","import {\n\tDirective,\n\tElementRef,\n\tInput,\n\tOnDestroy,\n\tOnInit,\n\tViewContainerRef\n} from '@angular/core';\nimport { ColumnModel } from 'ng2-qgrid/core/column-type/column.model';\nimport { ColumnView } from 'ng2-qgrid/core/scene/view/column.view';\nimport { TdCtrl } from 'ng2-qgrid/core/cell/td.ctrl';\nimport { ThCtrl } from 'ng2-qgrid/core/cell/th.ctrl';\nimport { Td } from 'ng2-qgrid/core/dom/td';\nimport { AppError } from 'ng2-qgrid/core/infrastructure/error';\nimport { FilterRowColumnModel } from 'ng2-qgrid/core/column-type/filter.row.column';\nimport { CellService } from '../cell/cell.service';\nimport { RootService } from '../../../infrastructure/component/root.service';\nimport { ViewCoreService } from '../view/view-core.service';\nimport { TrhCoreDirective } from '../row/trh-core.directive';\n\nconst classifyTd = TdCtrl.classify;\nconst classifyTh = ThCtrl.classify;\n\n@Directive({\n\tselector: '[q-grid-core-th]'\n})\nexport class ThCoreDirective implements Td, OnInit, OnDestroy {\n\t@Input('q-grid-core-th') columnView: ColumnView;\n\telement: HTMLElement = null;\n\tvalue: any;\n\tlabel: any;\n\n\tprivate $implicit = this;\n\n\tconstructor(\n\t\tpublic $view: ViewCoreService,\n\t\tprivate root: RootService,\n\t\tprivate viewContainerRef: ViewContainerRef,\n\t\tprivate cellService: CellService,\n\t\tprivate tr: TrhCoreDirective,\n\t\telementRef: ElementRef\n\t) {\n\t\tthis.element = elementRef.nativeElement.parentNode;\n\t}\n\n\tngOnInit() {\n\t\tconst column = this.column;\n\t\tconst element = this.element;\n\n\t\tthis.root.bag.head.addCell(this);\n\t\tclassifyTd(element, column);\n\t\tclassifyTh(element, column);\n\n\t\tlet target: any = column;\n\t\tlet source = 'head';\n\t\tif (column.type === 'filter-row') {\n\t\t\tconst columnModel = (column as FilterRowColumnModel).model;\n\t\t\tclassifyTd(element, columnModel);\n\n\t\t\tsource = 'filter';\n\t\t\ttarget = columnModel;\n\t\t}\n\n\t\tconst link = this.cellService.build(source, target, 'view');\n\t\tlink(this.viewContainerRef, this);\n\t}\n\n\tget column(): ColumnModel {\n\t\treturn this.columnView.model;\n\t}\n\n\tget columnIndex() {\n\t\treturn this.columnView.columnIndex;\n\t}\n\n\tget row() {\n\t\treturn this.tr.model;\n\t}\n\n\tget rowIndex() {\n\t\treturn this.tr.index;\n\t}\n\n\tmode(value: string): void {\n\t\tthrow new AppError('th-core.directive', `${value} mode is not supported`);\n\t}\n\n\tngOnDestroy() {\n\t\tthis.root.bag.head.deleteCell(this);\n\t}\n}\n","module.exports = \"<div *ngIf=\\\"isActive\\\"\\r\\n     class=\\\"q-grid-layer\\\">\\r\\n\\t<ng-container q-grid-core-layer></ng-container>\\r\\n</div>\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { LayerService } from './layer.service';\n\n@Component({\n\tselector: 'q-grid-core-layer',\n\ttemplateUrl: './layer-core.component.html'\n})\nexport class LayerCoreComponent {\n\tconstructor(private layerService: LayerService) {\n\t}\n\n\tget isActive() {\n\t\treturn this.layerService.count > 0;\n\t}\n}\n","import { Directive, ViewContainerRef } from '@angular/core';\r\nimport { LayerService } from './layer.service';\r\n\r\n@Directive({\r\n\tselector: '[q-grid-core-layer]'\r\n})\r\nexport class LayerCoreDirective {\r\n\tconstructor(\r\n\t\tlayerService: LayerService,\r\n\t\tviewContainerRef: ViewContainerRef\r\n\t) {\r\n\t\tlayerService.init(viewContainerRef);\r\n\t}\r\n}\r\n","import { Injectable, ViewContainerRef } from '@angular/core';\nimport { Layer } from './layer';\nimport { TemplateService } from '../../../template/template.service';\n\n@Injectable()\nexport class LayerService {\n\tprivate container: ViewContainerRef;\n\tprivate layers = new Map<string, Layer>();\n\n\tconstructor(private templateService: TemplateService) {\n\t}\n\n\tinit(container: ViewContainerRef) {\n\t\tthis.container = container;\n\n\t\tconst layers = this.layers;\n\t\tthis.layers = new Map();\n\t\tfor (const key of Array.from(layers.keys())) {\n\t\t\tthis.create(key);\n\t\t}\n\t}\n\n\tcreate(name) {\n\t\tif (this.layers.has(name)) {\n\t\t\treturn this.layers.get(name);\n\t\t}\n\n\t\tconst { container } = this;\n\n\t\tconst link = this.templateService.find(`layer-${name}.tpl.html`);\n\t\tif (link && container) {\n\t\t\tconst { nativeElement } = container.element;\n\t\t\tnativeElement.parentElement.classList.add(`q-grid-layer-${name}`);\n\n\t\t\tconst createView = this.templateService.viewFactory({});\n\t\t\tcreateView(link, container);\n\t\t}\n\n\t\tconst layer = new Layer(() => {\n\t\t\tthis.layers.delete(name);\n\t\t\tif (container) {\n\t\t\t\tconst { nativeElement } = container.element;\n\t\t\t\tnativeElement.parentElement.classList.add(`q-grid-layer-${name}`);\n\t\t\t\tcontainer.clear();\n\t\t\t}\n\t\t});\n\n\t\tthis.layers.set(name, layer);\n\t\treturn layer;\n\t}\n\n\tget count() {\n\t\treturn this.layers.size;\n\t}\n}\n","export class Layer {\r\n\tconstructor(private onDestroy: () => void) {\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tthis.onDestroy();\r\n\t}\r\n}\r\n","import { Directive, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\nimport { RootService } from '../../../infrastructure/component/root.service';\nimport { TableCoreService } from '../table/table-core.service';\n\n@Directive({\n\tselector: '[q-grid-markup]'\n})\nexport class MarkupDirective implements OnInit, OnDestroy {\n\t@Input('q-grid-markup') name = '';\n\n\tconstructor(\n\t\tprivate root: RootService,\n\t\tprivate elementRef: ElementRef,\n\t\tprivate table: TableCoreService\n\t) {}\n\n\tngOnInit() {\n\t\tthis.root.markup[this.getName()] = this.elementRef.nativeElement;\n\t}\n\n\tngOnDestroy() {\n\t\tdelete this.root.markup[this.getName()];\n\t}\n\n\tprivate getName() {\n\t\tif (this.table && this.table.pin) {\n\t\t\treturn `${this.name}-${this.table.pin}`;\n\t\t}\n\n\t\treturn this.name;\n\t}\n}\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\r\nimport { ModelComponent } from '../../../infrastructure/component/model.component';\r\nimport { RootService } from '../../../infrastructure/component/root.service';\r\nimport { TemplateHostService } from '../../../template/template-host.service';\r\n\r\n// @deprecated\r\n@Component({\r\n\tselector: 'q-grid-row',\r\n\ttemplate: '<ng-content></ng-content>',\r\n\tproviders: [TemplateHostService],\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class RowComponent extends ModelComponent {\r\n\t@Input('mode') rowMode: 'single' | 'multiple';\r\n\t@Input('unit') rowUnit: 'data' | 'details';\r\n\t@Input('canMove') rowCanMove: boolean;\r\n\t@Input('canResize') rowCanResize: boolean;\r\n\t@Input('height') rowHeight: number;\r\n\r\n\tconstructor(root: RootService, templateHost: TemplateHostService) {\r\n\t\tsuper(root);\r\n\r\n\t\tthis.models = ['row'];\r\n\t\ttemplateHost.key = source => `body-cell-row-${source}.tpl.html`;\r\n\t}\r\n}\r\n","import { Directive, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Tr } from 'ng2-qgrid/core/dom/tr';\nimport { ViewCoreService } from '../view/view-core.service';\nimport { RootService } from '../../../infrastructure/component/root.service';\n\n@Directive({\n\tselector: '[q-grid-core-tr]'\n})\nexport class TrCoreDirective implements Tr, OnInit, OnDestroy {\n\t@Input('q-grid-core-index') viewIndex: number;\n\t@Input('q-grid-core-tr') model: any;\n\t@Input('q-grid-core-source') source;\n\n\telement: HTMLElement;\n\n\tconstructor(\n\t\tpublic $view: ViewCoreService,\n\t\tprivate root: RootService,\n\t\telementRef: ElementRef\n\t) {\n\t\tthis.element = elementRef.nativeElement;\n\t}\n\n\tget index() {\n\t\treturn this.$view.scroll.y.container.position + this.viewIndex;\n\t}\n\n\tngOnInit() {\n\t\tthis.root.bag[this.source].addRow(this);\n\t}\n\n\tngOnDestroy() {\n\t\tthis.root.bag[this.source].deleteRow(this);\n\t}\n}\n","import { Directive, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { Tr } from 'ng2-qgrid/core/dom/tr';\r\nimport { ViewCoreService } from '../view/view-core.service';\r\nimport { RootService } from '../../../infrastructure/component/root.service';\r\n\r\n@Directive({\r\n\tselector: '[q-grid-core-trh]'\r\n})\r\nexport class TrhCoreDirective implements Tr, OnInit, OnDestroy {\r\n\t@Input('q-grid-core-index') index: number;\r\n\t@Input('q-grid-core-trh') model: any;\r\n\t@Input('q-grid-core-source') source;\r\n\r\n\telement: HTMLElement;\r\n\r\n\tconstructor(\r\n\t\tpublic $view: ViewCoreService,\r\n\t\tprivate root: RootService,\r\n\t\telementRef: ElementRef\r\n\t) {\r\n\t\tthis.element = elementRef.nativeElement;\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.root.bag[this.source].addRow(this);\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tthis.root.bag[this.source].deleteRow(this);\r\n\t}\r\n}\r\n","import { VscrollContext } from '../../../common/vscroll/vscroll.context';\nimport { IVscrollSettings } from '../../../common/vscroll/vscroll.settings';\nimport { IVscrollContainer } from '../../../common/vscroll/vscroll.container';\n\nexport class VScrollService {\n\tfactory(settings: IVscrollSettings): {\n\t\tcontainer: IVscrollContainer,\n\t\tsettings: IVscrollSettings,\n\t\tid: (index: number) => number\n\t} {\n\t\treturn new VscrollContext(settings);\n\t}\n}\n","module.exports = \"<table q-grid-markup=\\\"table\\\">\\n\\t<thead *ngIf=\\\"visibility.head\\\"\\n\\t\\t   q-grid-core-head\\n\\t\\t   q-grid-markup=\\\"head\\\"\\n\\t\\t   q-grid-animate=\\\"false\\\"\\n\\t\\t   q-grid-drop-area=\\\"head\\\"\\n\\t\\t   [q-grid-drop]=\\\"$view.head.drop\\\"\\n\\t\\t   q-grid-drag-direction=\\\"x\\\"\\n\\t\\t   [q-grid-drag-over]=\\\"$view.head.drop\\\">\\n\\t</thead>\\n\\t<tbody *ngIf=\\\"visibility.pin.top\\\"\\n\\t\\t   class=\\\"q-grid-body-top\\\"\\n\\t\\t   pin=\\\"top\\\"\\n\\t\\t   q-grid-core-body\\n\\t\\t   q-grid-markup=\\\"body-top\\\"\\n\\t\\t   q-grid-animate=\\\"false\\\"\\n\\t\\t   tabindex=\\\"0\\\"\\n\\t\\t   q-grid-drop-area=\\\"body\\\"\\n\\t\\t   [q-grid-drop]=\\\"$view.row.drop\\\"\\n\\t\\t   q-grid-drag-direction=\\\"y\\\"\\n\\t\\t   [q-grid-drag-over]=\\\"$view.row.drop\\\">\\n\\t</tbody>\\n\\t<tbody *ngIf=\\\"visibility.body\\\"\\n\\t\\t   q-grid-core-body\\n\\t\\t   q-grid-markup=\\\"body\\\"\\n\\t\\t   q-grid-animate=\\\"false\\\"\\n\\t\\t   tabindex=\\\"0\\\"\\n\\t\\t   q-grid-drop-area=\\\"body\\\"\\n\\t\\t   [q-grid-drop]=\\\"$view.row.drop\\\"\\n\\t\\t   q-grid-drag-direction=\\\"y\\\"\\n\\t\\t   q-grid-vscroll\\n\\t\\t   [q-grid-vscroll-port-y]=\\\"$view.scroll.y\\\"\\n\\t\\t   [q-grid-drag-over]=\\\"$view.row.drop\\\">\\n\\t</tbody>\\n\\t<tbody *ngIf=\\\"visibility.pin.bottom\\\"\\n\\t\\t   class=\\\"q-grid-body-bottom\\\"\\n\\t\\t   pin=\\\"bottom\\\"\\n\\t\\t   q-grid-core-body\\n\\t\\t   q-grid-markup=\\\"body-bottom\\\"\\n\\t\\t   q-grid-animate=\\\"false\\\"\\n\\t\\t   tabindex=\\\"0\\\"\\n\\t\\t   q-grid-drop-area=\\\"body\\\"\\n\\t\\t   [q-grid-drop]=\\\"$view.row.drop\\\"\\n\\t\\t   q-grid-drag-direction=\\\"y\\\"\\n\\t\\t   [q-grid-drag-over]=\\\"$view.row.drop\\\">\\n\\t</tbody>\\n\\t<tfoot *ngIf=\\\"visibility.foot\\\"\\n\\t\\t   q-grid-core-foot\\n\\t\\t   q-grid-markup=\\\"foot\\\"\\n\\t\\t   q-grid-animate=\\\"false\\\">\\n\\t</tfoot>\\n</table>\"","import { OnInit, Component, Input } from '@angular/core';\nimport { VisibilityModel } from 'ng2-qgrid/core/visibility/visibility.model';\nimport { RootService } from '../../../infrastructure/component/root.service';\nimport { TableCoreService } from './table-core.service';\nimport { ViewCoreService } from '../view/view-core.service';\nimport { NgComponent } from '../../../infrastructure/component/ng.component';\n\n@Component({\n\tselector: 'q-grid-core-table',\n\ttemplateUrl: './table-core.component.html',\n\tproviders: [TableCoreService]\n})\nexport class TableCoreComponent extends NgComponent implements OnInit {\n\t@Input() pin = null;\n\n\tconstructor(\n\t\tpublic $view: ViewCoreService,\n\t\tprivate root: RootService,\n\t\tprivate table: TableCoreService,\n\t) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tif (!this.pin) {\n\t\t\tthis.pin = null;\n\t\t}\n\n\t\tthis.table.pin = this.pin;\n\t}\n\n\tget visibility(): VisibilityModel {\n\t\treturn this.root.model.visibility();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class TableCoreService {\n\tconstructor() {\n\t}\n\n\tpin: string;\n}\n","module.exports = \"<ng-container key=\\\"toolbar-{{position}}.tpl.html\\\"></ng-container>\"","import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: 'q-grid-core-toolbar',\n\ttemplateUrl: './toolbar-core.component.html'\n})\nexport class ToolbarCoreComponent {\n\t@Input() position: 'top' | 'right' | 'bottom' | 'left';\n}\n","module.exports = \"<q-grid-core-layer></q-grid-core-layer>\\n\\n<q-grid-core-table *ngIf=\\\"visibility.pin.left\\\"\\n                   pin=\\\"left\\\"\\n                   class=\\\"q-grid-table q-grid-table-left layout-column\\\">\\n</q-grid-core-table>\\n\\n<q-grid-core-table class=\\\"q-grid-table q-grid-table-center layout-column flex\\\">\\n</q-grid-core-table>\\n\\n<q-grid-core-table *ngIf=\\\"visibility.pin.right\\\"\\n                   pin=\\\"right\\\"\\n                   class=\\\"q-grid-table q-grid-table-right layout-column\\\">\\n</q-grid-core-table>\\n\\n<q-grid-cell-handler class=\\\"q-grid-cell-handler\\\">\\n</q-grid-cell-handler>\"","import { Component, OnInit, ElementRef, NgZone, DoCheck, ChangeDetectorRef } from '@angular/core';\nimport { VisibilityModel } from 'ng2-qgrid/core/visibility/visibility.model';\nimport { ViewCtrl } from 'ng2-qgrid/core/view/view.ctrl';\nimport { CellService } from '../cell/cell.service';\nimport { ViewCoreService } from './view-core.service';\nimport { NgComponent } from '../../../infrastructure/component/ng.component';\nimport { RootService } from '../../../infrastructure/component/root.service';\nimport { Grid } from '../../../main/grid/grid.service';\n\n@Component({\n\tselector: 'q-grid-core-view',\n\ttemplateUrl: './view-core.component.html',\n\tproviders: [CellService]\n})\nexport class ViewCoreComponent extends NgComponent implements OnInit, DoCheck {\n\tprivate ctrl: ViewCtrl;\n\n\tconstructor(\n\t\tprivate root: RootService,\n\t\tprivate view: ViewCoreService,\n\t\tprivate grid: Grid,\n\t\tprivate zone: NgZone,\n\t\tprivate elementRef: ElementRef,\n\t\tprivate cd: ChangeDetectorRef\n\t) {\n\t\tsuper();\n\n\t\tzone.onStable.subscribe(() => {\n\t\t\tif (this.root.isReady) {\n\t\t\t\tconst { scene } = this.model;\n\t\t\t\tconst { status } = scene();\n\t\t\t\tif (status === 'push') {\n\t\t\t\t\tscene({\n\t\t\t\t\t\tstatus: 'stop'\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\tsource: 'grid.component',\n\t\t\t\t\t\t\tbehavior: 'core'\n\t\t\t\t\t\t});\n\n\t\t\t\t\tif (this.ctrl) {\n\t\t\t\t\t\tthis.ctrl.invalidate();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tngDoCheck() {\n\t\tconst { status } = this.model.scene();\n\t\tif (status === 'stop' && this.ctrl) {\n\t\t\tthis.ctrl.invalidate();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tconst { model, root, view } = this;\n\n\t\troot.markup['view'] = this.elementRef.nativeElement;\n\n\t\t// Views need to be init after `sceneChanged.watch` declaration\n\t\t// to persist the right order of event sourcing.\n\t\tview.init(\n\t\t\tmodel,\n\t\t\troot.table,\n\t\t\troot.commandManager\n\t\t);\n\n\t\tview.scroll.y.settings.emit = f => {\n\t\t\tf();\n\n\t\t\tthis.cd.markForCheck();\n\t\t\tthis.cd.detectChanges();\n\t\t};\n\n\t\tconst gridService = this.grid.service(model);\n\t\tthis.ctrl = new ViewCtrl(model, view, gridService);\n\n\t\tthis.using(model.sceneChanged.watch(e => {\n\t\t\tif (e.hasChanges('status') && e.state.status === 'pull') {\n\t\t\t\tthis.cd.markForCheck();\n\n\t\t\t\t// Run digest on the start of invalidate(e.g. for busy indicator)\n\t\t\t\t// and on the ned of invalidate(e.g. to build the DOM)\n\t\t\t\tthis.zone.run(() =>\n\t\t\t\t\tmodel.scene({\n\t\t\t\t\t\tstatus: 'push'\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\tsource: 'view-core.component',\n\t\t\t\t\t\t\tbehavior: 'core'\n\t\t\t\t\t\t}));\n\t\t\t}\n\t\t}));\n\n\t\tthis.using(model.visibilityChanged.on(() => this.cd.detectChanges()));\n\n\t\tconst virtualBody = this.root.table.body as any;\n\t\tif (virtualBody.requestInvalidate) {\n\t\t\tvirtualBody.requestInvalidate.on(() => this.ctrl.invalidate());\n\t\t}\n\t}\n\n\tprivate get model() {\n\t\treturn this.root.model;\n\t}\n\n\tget visibility(): VisibilityModel {\n\t\treturn this.model.visibility();\n\t}\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { GroupView } from 'ng2-qgrid/core/group/group.view';\nimport { FilterView } from 'ng2-qgrid/core/filter/filter.view';\nimport { SortView } from 'ng2-qgrid/core/sort/sort.view';\nimport { PaginationView } from 'ng2-qgrid/core/pagination/pagination.view';\nimport { HeadView } from 'ng2-qgrid/core/head/head.view';\nimport { BodyView } from 'ng2-qgrid/core/body/body.view';\nimport { FootView } from 'ng2-qgrid/core/foot/foot.view';\nimport { LayoutView } from 'ng2-qgrid/core/layout/layout.view';\nimport { SelectionView } from 'ng2-qgrid/core/selection/selection.view';\nimport { HighlightView } from 'ng2-qgrid/core/highlight/highlight.view';\nimport { EditView } from 'ng2-qgrid/core/edit/edit.view';\nimport { NavigationView } from 'ng2-qgrid/core/navigation/navigation.view';\nimport { ScrollView } from 'ng2-qgrid/core/scroll/scroll.view';\nimport { StyleView } from 'ng2-qgrid/core/style/style.view';\nimport { RowDetailsView } from 'ng2-qgrid/core/row-details/row.details.view';\nimport { viewFactory } from 'ng2-qgrid/core/view/view.factory';\nimport { Model } from 'ng2-qgrid/core/infrastructure/model';\nimport { Table } from 'ng2-qgrid/core/dom/table';\nimport { CommandManager } from 'ng2-qgrid/core/command/command.manager';\nimport { VScrollService } from '../../../main/core/scroll/vscroll.service';\nimport { Grid } from '../../../main/grid/grid.service';\nimport { RowView } from 'ng2-qgrid/core/row/row.view';\n\n@Injectable()\nexport class ViewCoreService implements OnDestroy {\n\tprivate dispose: () => void = null;\n\n\tbody: BodyView = null;\n\tedit: EditView = null;\n\tfilter: FilterView = null;\n\tfoot: FootView = null;\n\tgroup: GroupView = null;\n\thead: HeadView = null;\n\thighlight: HighlightView = null;\n\tlayout: LayoutView = null;\n\tnav: NavigationView = null;\n\tpagination: PaginationView = null;\n\trowDetails: RowDetailsView = null;\n\tscroll: ScrollView = null;\n\tselection: SelectionView = null;\n\tsort: SortView = null;\n\tstyle: StyleView = null;\n\trow: RowView = null;\n\n\tconstructor(\n\t\tprivate gridServiceFactory: Grid,\n\t\tprivate vscroll: VScrollService\n\t) { }\n\n\tinit(model: Model, table: Table, commandManager: CommandManager) {\n\t\tconst gridService = this.gridServiceFactory.service(model);\n\t\tconst selectors = {\n\t\t\tth: 'q-grid-core-th',\n\t\t\ttr: 'q-grid-core-tr'\n\t\t};\n\n\t\tconst injectViewServicesTo = viewFactory(\n\t\t\tmodel,\n\t\t\ttable,\n\t\t\tcommandManager,\n\t\t\tgridService,\n\t\t\tthis.vscroll,\n\t\t\tselectors\n\t\t);\n\n\t\tthis.dispose = injectViewServicesTo(this);\n\t}\n\n\tngOnDestroy() {\n\t\tif (this.dispose) {\n\t\t\tthis.dispose();\n\t\t\tthis.dispose = null;\n\t\t}\n\t}\n}\n","module.exports = \"<ng-container *ngComponentOutlet=\\\"themeComponent\\\"></ng-container>\\r\\n<q-grid-box class=\\\"q-grid-box layout-column\\\"\\r\\n            q-grid-markup=\\\"box\\\">\\r\\n    <q-grid-core-toolbar position=\\\"top\\\"\\r\\n                         class=\\\"q-grid-toolbar q-grid-toolbar-top flex-auto\\\"\\r\\n                         *ngIf=\\\"visibility.toolbar.top\\\">\\r\\n    </q-grid-core-toolbar>\\r\\n    <div class=\\\"flex-100 layout-row\\\"\\r\\n         [ngClass]=\\\"{\\r\\n\\t\\t  \\t'q-grid-with-left-pin': visibility.pin.left,\\r\\n            'q-grid-with-right-pin': visibility.pin.right,\\r\\n            'q-grid-with-top-pin': visibility.pin.top,\\r\\n            'q-grid-with-bottom-pin': visibility.pin.bottom\\r\\n\\t\\t  }\\\">\\r\\n        <q-grid-core-toolbar position=\\\"left\\\"\\r\\n                             class=\\\"q-grid-toolbar q-grid-toolbar-left flex-auto\\\"\\r\\n                             *ngIf=\\\"visibility.toolbar.left\\\">\\r\\n        </q-grid-core-toolbar>\\r\\n        <q-grid-core-view class=\\\"q-grid-view layout-row flex\\\"\\r\\n                          q-grid-markup=\\\"view\\\">\\r\\n        </q-grid-core-view>\\r\\n        <q-grid-core-toolbar position=\\\"right\\\"\\r\\n                             class=\\\"q-grid-toolbar q-grid-toolbar-right flex-auto\\\"\\r\\n                             *ngIf=\\\"visibility.toolbar.right\\\">\\r\\n        </q-grid-core-toolbar>\\r\\n    </div>\\r\\n    <q-grid-core-toolbar position=\\\"bottom\\\"\\r\\n                         class=\\\"q-grid-toolbar q-grid-toolbar-bottom flex-auto\\\"\\r\\n                         *ngIf=\\\"visibility.toolbar.bottom\\\">\\r\\n    </q-grid-core-toolbar>\\r\\n</q-grid-box>\"","import {\n\tComponent,\n\tInput,\n\tViewEncapsulation,\n\tOnInit,\n\tElementRef,\n\tNgZone,\n\tInject,\n\tChangeDetectorRef\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { RootComponent } from '../../infrastructure/component/root.component';\nimport { RootService } from '../../infrastructure/component/root.service';\nimport { LayerService } from '../core/layer/layer.service';\nimport { Grid } from './grid.service';\nimport { TemplateCacheService } from '../../template/template-cache.service';\nimport { TemplateLinkService } from '../../template/template-link.service';\nimport { TemplateService } from '../../template/template.service';\nimport { ThemeService } from '../../template/theme.service';\nimport { ViewCoreService } from '../../main/core/view/view-core.service';\nimport { Action } from 'ng2-qgrid/core/action/action';\nimport { AppError } from 'ng2-qgrid/core/infrastructure/error';\nimport { ColumnModel } from 'ng2-qgrid/core/column-type/column.model';\nimport { EventListener } from 'ng2-qgrid/core/infrastructure/event.listener';\nimport { EventManager } from 'ng2-qgrid/core/infrastructure/event.manager';\nimport { FetchContext } from 'ng2-qgrid/core/fetch/fetch.context';\nimport { GridCtrl } from 'ng2-qgrid/core/grid/grid.ctrl';\nimport { noop } from 'ng2-qgrid/core/utility/kit';\nimport { jobLine } from 'ng2-qgrid/core/services/job.line';\nimport { PipeContext } from 'ng2-qgrid/core/pipe/pipe.item';\nimport { StyleRowContext, StyleCellContext } from 'ng2-qgrid/core/style/style.context';\nimport { TableCommandManager } from 'ng2-qgrid/core/command/table.command.manager';\nimport { VisibilityModel } from 'ng2-qgrid/core/visibility/visibility.model';\nimport { Command } from 'ng2-qgrid/core/command/command';\nimport { GridModel } from '../../plugins/plugin.service';\nimport { ModelBuilderService } from '../model/model-builder.service';\n\n@Component({\n\tselector: 'q-grid',\n\tproviders: [\n\t\tRootService,\n\t\tTemplateCacheService,\n\t\tTemplateService,\n\t\tViewCoreService,\n\t\tGrid,\n\t\tTemplateLinkService,\n\t\tLayerService\n\t],\n\tstyleUrls: ['../../assets/index.scss'],\n\ttemplateUrl: './grid.component.html',\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GridComponent extends RootComponent implements OnInit {\n\t@Input() model: GridModel;\n\n\t@Input('actions') actionItems: Array<Action>;\n\n\t@Input('header') gridTitle: string;\n\t@Input('caption') gridCaption: string;\n\t@Input('interactionMode') gridInteractionMode: 'full' | 'readonly' | 'detached';\n\n\t@Input('id') gridId: string;\n\n\t@Input('columns') dataColumns: Array<ColumnModel>;\n\t@Input('pipe') dataPipe: Array<(memo: any, context: PipeContext, next: (memo: any) => void) => any>;\n\t@Input('rows') dataRows: Array<any>;\n\n\t@Input() editCancel: Command;\n\t@Input() editCommit: Command;\n\t@Input() editEnter: Command;\n\t@Input() editMethod: null | 'batch';\n\t@Input() editMode: null | 'cell' | 'row';\n\t@Input() editReset: Command;\n\n\t@Input() filterFetch: (key: string, context: FetchContext) => any | Promise<any>;\n\t@Input() filterUnit: 'default' | 'row';\n\n\t@Input() groupBy: Array<string>;\n\t@Input() groupMode: 'nest' | 'column' | 'subhead' | 'rowspan';\n\t@Input() groupSummary: null | 'leaf';\n\n\t@Input() pivotBy: Array<string>;\n\n\t@Input('selection') selectionItems: Array<any>;\n\t@Input() selectionArea: 'custom' | 'body';\n\t@Input() selectionKey: {\n\t\trow: () => void,\n\t\tcolumn: () => void\n\t};\n\t@Input() selectionMode: 'single' | 'multiple' | 'range';\n\t@Input() selectionUnit: 'row' | 'cell' | 'column' | 'mix';\n\n\t@Input() scrollMode: 'default' | 'virtual';\n\n\t@Input() sortBy: Array<string>;\n\t@Input() sortMode: 'single' | 'multiple';\n\t@Input() sortTrigger: Array<string>;\n\n\t@Input() styleCell:\n\t\t(row: any, column: ColumnModel, context: StyleCellContext) => void\n\t\t\t| { [key: string]: (row: any, column: ColumnModel, context: any) => void };\n\n\t@Input() styleRow:\n\t\t(row: any, context: StyleRowContext) => void;\n\n\tthemeComponent: any;\n\n\tconstructor(\n\t\tprivate root: RootService,\n\t\tprivate elementRef: ElementRef,\n\t\tprivate zone: NgZone,\n\t\tprivate layerService: LayerService,\n\t\tprivate cd: ChangeDetectorRef,\n\t\tmodelBuilder: ModelBuilderService,\n\t\t@Inject(DOCUMENT) private document: any,\n\t\ttheme: ThemeService,\n\t) {\n\t\tsuper(modelBuilder);\n\n\t\tthis.models = [\n\t\t\t'action',\n\t\t\t'data',\n\t\t\t'edit',\n\t\t\t'filter',\n\t\t\t'grid',\n\t\t\t'group',\n\t\t\t'pivot',\n\t\t\t'row',\n\t\t\t'selection',\n\t\t\t'scroll',\n\t\t\t'sort',\n\t\t\t'style'\n\t\t];\n\n\t\tthis.modelChanged.watch(model => this.root.model = model);\n\n\t\tif (!theme.component) {\n\t\t\tthrow new AppError(\n\t\t\t\t'grid.component',\n\t\t\t\t'Ensure that grid theme module was included'\n\t\t\t);\n\t\t}\n\n\t\tthis.themeComponent = theme.component;\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tconst { model } = this.root;\n\t\tconst { nativeElement } = this.elementRef;\n\n\t\tmodel.style({\n\t\t\tclassList: Array.from(nativeElement.classList)\n\t\t});\n\n\t\tconst ctrl = this.using(new GridCtrl(model, {\n\t\t\tlayerFactory: () => this.layerService,\n\t\t\telement: nativeElement\n\t\t}));\n\n\t\tthis.root.table = ctrl.table;\n\t\tthis.root.bag = ctrl.bag;\n\t\tthis.root.markup = ctrl.markup;\n\n\t\tthis.root.commandManager = new TableCommandManager(\n\t\t\tf => f(),\n\t\t\tctrl.table\n\t\t);\n\n\t\tconst listener = new EventListener(nativeElement, new EventManager(this));\n\t\tconst docListener = new EventListener(this.document, new EventManager(this));\n\n\t\tthis.zone.runOutsideAngular(() => this.using(docListener.on('focusin', () => ctrl.invalidateActive())));\n\n\t\tconst { debounce } = model.navigation();\n\t\tif (debounce) {\n\t\t\tconst navJob = jobLine(debounce);\n\t\t\tthis.zone.runOutsideAngular(() => {\n\t\t\t\tthis.using(listener.on('keydown', e => {\n\t\t\t\t\tconst result = ctrl.keyDown(e);\n\t\t\t\t\tif (result.indexOf('navigation') >= 0) {\n\t\t\t\t\t\tnavJob((() => {\n\t\t\t\t\t\t\tthis.cd.markForCheck();\n\t\t\t\t\t\t\tthis.zone.run(noop);\n\t\t\t\t\t\t}));\n\t\t\t\t\t} else if (result.length) {\n\t\t\t\t\t\t// app.tick is not working correctly, why?\n\t\t\t\t\t\tthis.cd.markForCheck();\n\t\t\t\t\t\tthis.zone.run(noop);\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t});\n\t\t} else {\n\t\t\tthis.using(listener.on('keydown', e => {\n\t\t\t\tconst result = ctrl.keyDown(e);\n\t\t\t\tif (result.indexOf('selection.view') >= 0) {\n\t\t\t\t\tthis.cd.markForCheck();\n\t\t\t\t\tthis.zone.run(noop);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\tthis.using(model.visibilityChanged.on(() => this.cd.detectChanges()));\n\n\t}\n\n\t// @deprecated\n\tget visibility(): VisibilityModel {\n\t\t// TODO: get rid of that\n\t\treturn this.root.model.visibility();\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Action } from 'ng2-qgrid/core/action/action';\nimport { Command } from 'ng2-qgrid/core/command/command';\nimport { Pipe } from 'ng2-qgrid/core/pipe/pipe';\nimport { PipeUnit } from 'ng2-qgrid/core/pipe/pipe.unit';\nimport { getFactory as valueFactory } from 'ng2-qgrid/core/services/value';\nimport { getFactory as labelFactory } from 'ng2-qgrid/core/services/label';\nimport { RowDetailsStatus } from 'ng2-qgrid/core/row-details/row.details.status';\nimport { identity, noop } from 'ng2-qgrid/core/utility/kit';\nimport { GridModel } from '../../plugins/plugin.service';\nimport { ModelBuilderService } from '../model/model-builder.service';\nimport { GridService } from 'ng2-qgrid/core/services/grid';\nexport { GridService } from 'ng2-qgrid/core/services/grid';\n\n@Injectable()\nexport class Grid {\n\tconstructor(private modelBuilder: ModelBuilderService) {\n\t}\n\n\tmodel() {\n\t\treturn this.modelBuilder.build();\n\t}\n\n\tservice(model: GridModel): GridService {\n\t\treturn new GridService(model);\n\t}\n\n\tget noop() {\n\t\treturn noop;\n\t}\n\n\tget identity() {\n\t\treturn identity;\n\t}\n\n\tget pipe() {\n\t\treturn Pipe;\n\t}\n\n\tget pipeUnit() {\n\t\treturn PipeUnit;\n\t}\n\n\tget Command() {\n\t\treturn Command;\n\t}\n\n\tget Action() {\n\t\treturn Action;\n\t}\n\n\tget Node() {\n\t\treturn Node;\n\t}\n\n\tget RowDetailsStatus() {\n\t\treturn RowDetailsStatus;\n\t}\n\n\tget valueFactory() {\n\t\treturn valueFactory;\n\t}\n\n\tget labelFactory() {\n\t\treturn labelFactory;\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GridComponent } from './grid/grid.component';\nimport { Grid } from './grid/grid.service';\nimport { ColumnComponent } from './column/column.component';\nimport { ColumnListComponent } from './column/column-list.component';\nimport { BoxComponent } from './box/box.component';\nimport { CoreModule } from './core/core.module';\nimport { ToolbarComponent } from './toolbar/toolbar.component';\nimport { RowComponent } from './core/row/row.component';\nimport { MarkupDirective } from './markup/markup.directive';\nimport { CommonModule as GridCommonModule } from '../common/common.module';\nimport { VisibilityComponent } from './visibility/visibility.component';\n\n@NgModule({\n\tdeclarations: [\n\t\tBoxComponent,\n\t\tColumnComponent,\n\t\tColumnListComponent,\n\t\tGridComponent,\n\t\tMarkupDirective,\n\t\tRowComponent,\n\t\tToolbarComponent,\n\t\tVisibilityComponent,\n\t],\n\texports: [\n\t\tBoxComponent,\n\t\tColumnComponent,\n\t\tColumnListComponent,\n\t\tGridCommonModule,\n\t\tGridComponent,\n\t\tRowComponent,\n\t\tToolbarComponent,\n\t\tVisibilityComponent,\n\t],\n\timports: [\n\t\tCoreModule,\n\t\tCommonModule,\n\t\tGridCommonModule\n\t],\n\tproviders: [\n\t\tGrid\n\t]\n})\nexport class MainModule {\n}\n","import { Directive, ElementRef, Input, OnDestroy, OnInit, Optional } from '@angular/core';\nimport { RootService } from '../../infrastructure/component/root.service';\nimport { TableCoreService } from '../core//table/table-core.service';\n\n@Directive({\n\tselector: '[q-grid-markup]'\n})\nexport class MarkupDirective implements OnInit, OnDestroy {\n\t@Input('q-grid-markup') name = '';\n\n\tconstructor(\n\t\tprivate root: RootService,\n\t\tprivate elementRef: ElementRef\n\t) { }\n\n\tngOnInit() {\n\t\tthis.root.markup[this.name] = this.elementRef.nativeElement;\n\t}\n\n\tngOnDestroy() {\n\t\tdelete this.root.markup[this.name];\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { ModelBuilder } from 'ng2-qgrid/core/infrastructure/model.builder';\n\n@Injectable()\nexport class ModelBuilderService {\n\tprivate builder = new ModelBuilder();\n\n\tregister<T>(key: string, ctor: T) {\n\t\treturn this.builder.register(key, ctor);\n\t}\n\n\tbuild() {\n\t\treturn this.builder.build();\n\t}\n}\n","import { Component } from '@angular/core';\nimport { TemplateHostService } from '../../template/template-host.service';\n\n@Component({\n\tselector: 'q-grid-toolbar',\n\ttemplate: '<ng-content></ng-content>',\n\tproviders: [TemplateHostService]\n})\nexport class ToolbarComponent {\n\tconstructor(templateHost: TemplateHostService) {\n\t\ttemplateHost.key = source => `toolbar-${source}.tpl.html`;\n\t}\n}\n","import { Component, Input, OnChanges } from '@angular/core';\nimport { RootService } from '../../infrastructure/component/root.service';\n\n@Component({\n\tselector: 'q-grid-visibility',\n\ttemplate: ''\n})\nexport class VisibilityComponent implements OnChanges {\n\t@Input() head = true;\n\t@Input() foot = true;\n\t@Input() body = true;\n\t@Input() toolbarTop = true;\n\t@Input() toolbarBottom = true;\n\t@Input() toolbarRight = false;\n\t@Input() toolbarLeft = false;\n\n\t@Input() pinLeft = false;\n\t@Input() pinTop = false;\n\t@Input() pinRight = false;\n\t@Input() pinBottom = false;\n\n\tconstructor(private root: RootService) {\n\t}\n\n\tngOnChanges() {\n\t\tconst { model } = this.root;\n\t\tmodel.visibility({\n\t\t\tbody: this.body,\n\t\t\tfoot: this.foot,\n\t\t\thead: this.head,\n\t\t\ttoolbar: {\n\t\t\t\tbottom: this.toolbarBottom,\n\t\t\t\tleft: this.toolbarLeft,\n\t\t\t\tright: this.toolbarRight,\n\t\t\t\ttop: this.toolbarTop,\n\t\t\t},\n\t\t\tpin: {\n\t\t\t\tbottom: this.pinBottom,\n\t\t\t\tleft: this.pinLeft,\n\t\t\t\tright: this.pinRight,\n\t\t\t\ttop: this.pinTop,\n\t\t\t},\n\t\t});\n\t}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isArray, isUndefined } from 'ng2-qgrid/core/utility/kit';\nimport { Log } from 'ng2-qgrid/core/infrastructure/log';\n\n@Pipe({\n\tname: 'qGridArray'\n})\nexport class ArrayPipe implements PipeTransform {\n\ttransform(value: any) {\n\t\tif (isArray(value)) {\n\t\t\treturn value;\n\t\t}\n\n\t\tLog.warn('ArrayPipe', `${value} is not of array type`);\n\t\treturn isUndefined(value) || value === null ? [] : [value];\n\t}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { CurrencyPipe as NgCurrencyPipe } from '@angular/common';\nimport { Log } from 'ng2-qgrid/core/infrastructure/log';\n\n@Pipe({\n\tname: 'qGridCurrency'\n})\nexport class CurrencyPipe implements PipeTransform {\n\tconstructor(private pipe: NgCurrencyPipe) { }\n\n\ttransform(value: any, currencyCode?: string, display?: boolean, digitsInfo?: any, locale?: any) {\n\t\ttry {\n\t\t\treturn this.pipe.transform(value, currencyCode, display, digitsInfo, locale);\n\t\t} catch (ex) {\n\t\t\tLog.warn('DatePipe', ex.message);\n\t\t\treturn value;\n\t\t}\n\t}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DatePipe as NgDatePipe } from '@angular/common';\nimport { Log } from 'ng2-qgrid/core/infrastructure/log';\n\n@Pipe({\n\tname: 'qGridDate'\n})\nexport class DatePipe implements PipeTransform {\n\tconstructor(private pipe: NgDatePipe) { }\n\n\ttransform(value: any, format?: any, timezone?: any, locale?: any) {\n\t\ttry {\n\t\t\treturn this.pipe.transform(value, format, timezone, locale);\n\t\t} catch (ex) {\n\t\t\tLog.warn('DatePipe', ex.message);\n\t\t\treturn value;\n\t\t}\n\t}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { predicateFactory } from 'ng2-qgrid/core/services/predicate';\nimport { filter } from 'ng2-qgrid/core/node/node.service';\nimport { Node } from 'ng2-qgrid/core/node/node';\n\n@Pipe({\n\tname: 'qGridFilter'\n})\nexport class FilterPipe implements PipeTransform {\n\ttransform(items: any[] | Node, { search = null, type = 'plain' }) {\n\t\tif (search || search === 0 || search === false) {\n\t\t\tconst predicate = predicateFactory(search);\n\t\t\tswitch (type) {\n\t\t\t\tcase 'node': {\n\t\t\t\t\tconst root = items as Node;\n\t\t\t\t\treturn filter(root, predicate);\n\t\t\t\t}\n\t\t\t\tdefault: {\n\t\t\t\t\treturn (items as any[]).filter(predicate);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn items;\n\t}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { GRID_PREFIX } from 'ng2-qgrid/core/definition';\nimport { htmlEncode, escapeRegexp } from 'ng2-qgrid/core/utility/kit';\n\n@Pipe({\n\tname: 'qGridHighlight'\n})\nexport class HighlightPipe implements PipeTransform {\n\ttransform(text: string | number, search: string | number): string {\n\t\tif ((text || text === 0) && (search || search === 0)) {\n\t\t\ttext = text.toString();\n\t\t\tsearch = search.toString();\n\n\t\t\tconst contains = new RegExp(escapeRegexp(search), 'gi');\n\t\t\tif (contains.test(text)) {\n\t\t\t\treturn text.replace(contains,\n\t\t\t\t\ts => `<span class=\"${GRID_PREFIX}-highlight-part\">${htmlEncode(s)}</span>`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst contained = new RegExp(escapeRegexp(text), 'gi');\n\t\t\tif (contained.test(search)) {\n\t\t\t\treturn `<span class=\"${GRID_PREFIX}-highlight-part\">${htmlEncode(text)}</span>`;\n\t\t\t}\n\t\t}\n\n\t\treturn htmlEncode(text as string);\n\t}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DecimalPipe } from '@angular/common';\nimport { Log } from 'ng2-qgrid/core/infrastructure/log';\n\n@Pipe({\n\tname: 'qGridNumber'\n})\nexport class NumberPipe implements PipeTransform {\n\tconstructor(private pipe: DecimalPipe) { }\n\n\ttransform(value: any, digitsInfo?: any, locale?: any) {\n\t\ttry {\n\t\t\treturn this.pipe.transform(value, digitsInfo, locale);\n\t\t} catch (ex) {\n\t\t\tLog.warn('NumberPipe', ex.message);\n\t\t\treturn value;\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { HighlightPipe } from './highlight.pipe';\nimport { FilterPipe } from './filter.pipe';\nimport { TimePipe } from './time.pipe';\nimport { NumberPipe } from './number.pipe';\nimport { DatePipe } from './date.pipe';\nimport { TextPipe } from './text.pipe';\nimport { CurrencyPipe } from './currency.pipe';\nimport { ArrayPipe } from './array.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tTextPipe,\n\t\tHighlightPipe,\n\t\tFilterPipe,\n\t\tTimePipe,\n\t\tNumberPipe,\n\t\tDatePipe,\n\t\tCurrencyPipe,\n\t\tArrayPipe,\n\t],\n\texports: [\n\t\tTextPipe,\n\t\tHighlightPipe,\n\t\tFilterPipe,\n\t\tTimePipe,\n\t\tNumberPipe,\n\t\tDatePipe,\n\t\tCurrencyPipe,\n\t\tArrayPipe,\n\t]\n})\nexport class PipeModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { AppError } from 'ng2-qgrid/core/infrastructure/error';\n\n@Pipe({\n\tname: 'qGridText'\n})\nexport class TextPipe implements PipeTransform {\n\ttransform(item: string, format: 'fromCamelCase'): string {\n\t\tswitch (format) {\n\t\t\tcase 'fromCamelCase': {\n\t\t\t\treturn item.replace(/([a-z])([A-Z])/g, '$1 $2').toLowerCase();\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tthrow new AppError('text.pipe', `Unknown input format type '${format}'`);\n\t\t\t}\n\t\t}\n\t}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { Log } from 'ng2-qgrid/core/infrastructure/log';\n\n@Pipe({\n\tname: 'qGridTime'\n})\nexport class TimePipe implements PipeTransform {\n\tconstructor(private pipe: DatePipe) { }\n\n\ttransform(value: any, format?: any, timezone?: any, locale?: any) {\n\t\ttry {\n\t\t\treturn this.pipe.transform(value, format, timezone, locale);\n\t\t} catch (ex) {\n\t\t\tLog.warn('TimePipe', ex.message);\n\t\t\treturn value;\n\t\t}\n\t}\n}\n","module.exports = \"<ng-container key=\\\"plugin-action-bar.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\r\\n\"","import { OnDestroy, OnInit, Component, ChangeDetectorRef } from '@angular/core';\nimport { Action } from 'ng2-qgrid/core/action/action';\nimport { PluginService } from '../plugin.service';\n\n@Component({\n\tselector: 'q-grid-action-bar',\n\ttemplateUrl: './action-bar.component.html',\n\tproviders: [PluginService]\n})\nexport class ActionBarComponent implements OnInit, OnDestroy {\n\tprivate shortcutOff: () => void = null;\n\n\tcontext: { $implicit: ActionBarComponent } = {\n\t\t$implicit: this\n\t};\n\n\tconstructor(private plugin: PluginService, private cd: ChangeDetectorRef) {\n\t}\n\n\tngOnInit() {\n\t\tconst { model } = this.plugin;\n\n\t\tmodel.actionChanged.watch(e => {\n\t\t\tif (e.hasChanges('items')) {\n\t\t\t\tif (this.shortcutOff) {\n\t\t\t\t\tthis.shortcutOff();\n\t\t\t\t\tthis.shortcutOff = null;\n\t\t\t\t}\n\n\t\t\t\tconst { shortcut, manager } = model.action();\n\t\t\t\tthis.shortcutOff = shortcut.register(manager, e.state.items.map(act => act.command));\n\n\t\t\t\tthis.cd.markForCheck();\n\t\t\t\tthis.cd.detectChanges();\n\t\t\t}\n\t\t});\n\t}\n\n\tget actions(): Action[] {\n\t\treturn this.plugin.model.action().items;\n\t}\n\n\tngOnDestroy() {\n\t\tif (this.shortcutOff) {\n\t\t\tthis.shortcutOff();\n\t\t\tthis.shortcutOff = null;\n\t\t}\n\t}\n}\n","import { TemplateModule } from '../../template/template.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { ActionBarComponent } from './action-bar.component';\r\nimport { ActionListComponent } from './action-list.component';\r\nimport { ActionCoreComponent } from './action-core.component';\r\nimport { ActionComponent } from './action.component';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tActionBarComponent,\r\n\t\tActionListComponent,\r\n\t\tActionComponent,\r\n\t\tActionCoreComponent\r\n\t],\r\n\texports: [\r\n\t\tActionBarComponent,\r\n\t\tActionListComponent,\r\n\t\tActionComponent,\r\n\t\tActionCoreComponent\r\n\t],\r\n\timports: [TemplateModule]\r\n})\r\nexport class ActionBarModule { }\r\n","module.exports = \"<ng-container key=\\\"plugin-action-core.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\r\\n\"","import { Component, Input } from '@angular/core';\nimport { AppError } from 'ng2-qgrid/core/infrastructure/error';\nimport { Action } from 'ng2-qgrid/core/action/action';\nimport { PluginService, GridModel } from '../plugin.service';\n\n@Component({\n\tselector: 'q-grid-action-core',\n\ttemplateUrl: './action-core.component.html',\n\tproviders: [PluginService]\n})\nexport class ActionCoreComponent {\n\t@Input() action: Action;\n\n\tcontext: { $implicit: ActionCoreComponent } = {\n\t\t$implicit: this\n\t};\n\n\tconstructor(private plugin: PluginService) {\n\t}\n\n\tget model(): GridModel {\n\t\treturn this.plugin.model;\n\t}\n\n\texecute() {\n\t\tconst action = this.action;\n\t\tif (!action) {\n\t\t\tthrow new AppError('action-core.component', 'Action shoud be setup');\n\t\t}\n\n\t\treturn action.command.execute();\n\t}\n\n\tcanExecute() {\n\t\tconst action = this.action;\n\t\tif (!action) {\n\t\t\tthrow new AppError('action-core.component', 'Action should be setup');\n\t\t}\n\n\t\treturn action.command.canExecute();\n\t}\n\n\tget shortcut() {\n\t\tconst action = this.action;\n\t\tif (!action) {\n\t\t\tthrow new AppError('action-core.component', 'Action should be setup');\n\t\t}\n\n\t\treturn action.command.shortcut;\n\t}\n\n\tget title() {\n\t\tconst action = this.action;\n\t\tif (!action) {\n\t\t\tthrow new AppError('action-core.component', 'Action should be setup');\n\t\t}\n\n\t\treturn action.title;\n\t}\n\n\tget icon() {\n\t\tconst action = this.action;\n\t\tif (!action) {\n\t\t\tthrow new AppError('action-core.component', 'Action shoud be setup');\n\t\t}\n\n\t\treturn action.icon;\n\t}\n\n\tget templateUrl() {\n\t\tconst action = this.action;\n\t\tif (!action) {\n\t\t\tthrow new AppError('action-core.component', 'Action should be setup');\n\t\t}\n\n\t\treturn action.templateUrl;\n\t}\n\n\tget id() {\n\t\tconst action = this.action;\n\t\tif (!action) {\n\t\t\tthrow new AppError('action-core.component', 'Action should be setup');\n\t\t}\n\n\t\treturn action.id;\n\t}\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { PluginService } from '../plugin.service';\n\n@Component({\n\tselector: 'q-grid-actions',\n\ttemplate: '',\n\tproviders: [PluginService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ActionListComponent {\n\tconstructor(private plugin: PluginService) { }\n}\n","import { Component, ChangeDetectionStrategy, OnInit, Input } from '@angular/core';\r\nimport { Action as ActionItem } from 'ng2-qgrid/core/action/action';\r\nimport { Command } from 'ng2-qgrid/core/command/command';\r\nimport { AppError } from 'ng2-qgrid/core/infrastructure/error';\r\nimport { TemplateHostService } from '../../template/template-host.service';\r\nimport { PluginService } from '../plugin.service';\r\n\r\n@Component({\r\n\tselector: 'q-grid-action',\r\n\ttemplate: '',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\r\n\tproviders: [TemplateHostService]\r\n})\r\nexport class ActionComponent implements OnInit {\r\n\t@Input() id: string = null;\r\n\t@Input() title: string = null;\r\n\t@Input() icon: string = null;\r\n\t@Input() command: Command = null;\r\n\r\n\tconstructor(private plugin: PluginService, templateHost: TemplateHostService) {\r\n\t\ttemplateHost.key = source => `action-${source}-${this.id}.tpl.html`;\r\n\t}\r\n\r\n\texecute() {\r\n\t\treturn this.command && this.command.execute();\r\n\t}\r\n\r\n\tcanExecute() {\r\n\t\treturn this.command && this.command.canExecute();\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tconst model = this.model;\r\n\r\n\t\tconst hasCommand = !!this.command;\r\n\t\tconst command = hasCommand ? this.command : new Command();\r\n\t\tconst action = new ActionItem(command, this.title, this.icon);\r\n\t\taction.id = this.id;\r\n\r\n\t\tconst actions = Array.from(model.action().items);\r\n\t\tactions.push(action);\r\n\r\n\t\tmodel.action({ items: actions }, { source: 'action.component' });\r\n\r\n\t\tif (!hasCommand) {\r\n\t\t\tif (!this.id) {\r\n\t\t\t\tthrow new AppError('action.component', 'Command or id property is missed');\r\n\t\t\t}\r\n\r\n\t\t\taction.templateUrl = `action-trigger-${this.id}.tpl.html`;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate get model() {\r\n\t\treturn this.plugin.model;\r\n\t}\r\n}\r\n","module.exports = \"<ng-container key=\\\"plugin-autocomplete-editor.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\"","import { Component } from '@angular/core';\nimport { ViewCoreService } from '../../main/core/view/view-core.service';\nimport { PluginService } from '../plugin.service';\nimport { predicateFactory } from 'ng2-qgrid/core/services/predicate';\n\n@Component({\n\tselector: 'q-grid-autocomplete-editor',\n\ttemplateUrl: './autocomplete-editor.component.html',\n\tproviders: [PluginService]\n})\nexport class AutocompleteEditorComponent {\n\toptions: any[] = [];\n\n\tcontext: { $implicit: AutocompleteEditorComponent } = {\n\t\t$implicit: this\n\t};\n\n\tconstructor(\n\t\tprivate plugin: PluginService,\n\t\tprivate view: ViewCoreService\n\t) {\n\t}\n\n\tfilter(search: string) {\n\t\tconst test = predicateFactory(search);\n\t\tthis.options = this.items.filter(item => test(item));\n\t}\n\n\treset() {\n\t\tthis.options = [];\n\t}\n\n\tget items() {\n\t\treturn (this.cell.fetch as any).result;\n\t}\n\n\tget title() {\n\t\treturn this.cell.column.title;\n\t}\n\n\tget value() {\n\t\treturn this.cell.value;\n\t}\n\n\tset value(value) {\n\t\tthis.cell.value = value;\n\t}\n\n\tprivate get cell() {\n\t\treturn this.view.edit.cell;\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { TemplateModule } from '../../template/template.module';\nimport { AutocompleteEditorComponent } from './autocomplete-editor.component';\n\n@NgModule({\n\tdeclarations: [\n\t\tAutocompleteEditorComponent\n\t],\n\texports: [\n\t\tAutocompleteEditorComponent\n\t],\n\timports: [\n\t\tTemplateModule\n\t]\n})\nexport class AutocompleteEditorModule {\n}\n","module.exports = \"<ng-container key=\\\"plugin-backdrop.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\r\\n\"","import {\n\tComponent,\n\tTemplateRef,\n\tOutput,\n\tEventEmitter,\n\tOnDestroy,\n\tElementRef,\n\tChangeDetectionStrategy,\n\tViewChild\n} from '@angular/core';\nimport { BackdropView } from 'ng2-qgrid/plugin/backdrop/backdrop.view';\nimport { BackdropService } from './backdrop.service';\n\n@Component({\n\tselector: 'q-grid-backdrop',\n\ttemplateUrl: './backdrop.component.html'\n})\nexport class BackdropComponent implements OnDestroy {\n\t@ViewChild(TemplateRef) public template: TemplateRef<any>;\n\t@Output('close') closeEvent = new EventEmitter<any>();\n\n\tcontext: { $implicit: BackdropComponent } = {\n\t\t$implicit: this\n\t};\n\n\tconstructor(private backdropService: BackdropService, elementRef: ElementRef) {\n\t\tbackdropService.element = elementRef;\n\n\t\tconst context = {\n\t\t\telement: elementRef.nativeElement,\n\t\t\tonKeyDown: () => { },\n\t\t\tpropagate: false\n\t\t};\n\n\t\tconst backdrop = new BackdropView(context);\n\t\tbackdrop.closeEvent.on(() => this.closeEvent.emit());\n\t}\n\n\tngOnDestroy() {\n\t\tthis.backdropService.element = null;\n\t}\n}\n","import { Output, EventEmitter, Directive, Input, NgZone, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n@Directive({\n\tselector: '[q-grid-backdrop]'\n})\nexport class BackdropDirective {\n\t@Input('q-grid-backdrop-selector') selector = '';\n\t@Output('q-grid-backdrop') close = new EventEmitter<any>();\n\tprivate backdrop: HTMLElement;\n\n\tconstructor(private zone: NgZone, @Inject(DOCUMENT) private document: any) {\n\t}\n\n\t@Input('q-grid-backdrop-active')\n\tset backdropHost(value: any) {\n\t\tif (!value) {\n\t\t\tif (this.backdrop) {\n\t\t\t\tthis.backdrop.remove();\n\t\t\t\tthis.backdrop = null;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\t\tthis.backdrop = this.document.createElement('div');\n\t\tthis.backdrop.classList.add('q-grid-backdrop');\n\t\tthis.backdrop.style.zIndex = '1000';\n\n\t\tthis.backdrop.addEventListener('click', () => {\n\t\t\tthis.zone.runOutsideAngular(() => {\n\t\t\t\tthis.close.emit();\n\t\t\t\tthis.backdrop.remove();\n\t\t\t\tthis.backdrop = null;\n\t\t\t});\n\t\t});\n\n\t\tthis.zone.runOutsideAngular(() => {\n\t\t\tconst element = <HTMLElement>document.querySelector(this.selector);\n\n\t\t\telement.style.zIndex = '1001';\n\t\t\telement.parentElement.appendChild(this.backdrop);\n\t\t});\n\t}\n}\n","import { NgModule } from '@angular/core';\r\nimport { BackdropComponent } from './backdrop.component';\r\nimport { BackdropDirective } from './backdrop.directive';\r\nimport { TemplateModule } from '../../template/template.module';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tBackdropComponent,\r\n\t\tBackdropDirective\r\n\t],\r\n\texports: [\r\n\t\tBackdropComponent,\r\n\t\tBackdropDirective\r\n\t],\r\n\timports: [\r\n\t\tTemplateModule\r\n\t]\r\n})\r\nexport class BackdropModule {\r\n}\r\n","import { Injectable, ElementRef } from '@angular/core';\nimport { Guard } from 'ng2-qgrid/core/infrastructure/guard';\n\n@Injectable()\nexport class BackdropService {\n\tisActive = true;\n\telement: ElementRef;\n\n\thide() {\n\t\tGuard.notNull(this.element, 'element');\n\t\tif (this.isActive) {\n\t\t\tthis.element.nativeElement.classList.add('q-grid-backdrop-inactive');\n\t\t\tthis.isActive = false;\n\t\t}\n\t}\n\n\treveal() {\n\t\tGuard.notNull(this.element, 'element');\n\t\tif (!this.isActive) {\n\t\t\tthis.element.nativeElement.classList.remove('q-grid-backdrop-inactive');\n\t\t\tthis.isActive = true;\n\t\t}\n\t}\n}\n","module.exports = \"<ng-container key=\\\"plugin-bool-editor.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\r\\n\"","import { Component, OnInit, Input, EventEmitter, Output, ChangeDetectionStrategy } from '@angular/core';\nimport { BoolColumnModel } from 'ng2-qgrid/core/column-type/bool.column';\n\n@Component({\n\tselector: 'q-grid-bool-editor',\n\ttemplateUrl: './bool-editor.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BoolEditorComponent implements OnInit {\n\tprivate state: any;\n\n\t@Input() autofocus = false;\n\t@Input() column: BoolColumnModel;\n\t@Input() label: string;\n\t@Output() valueChange = new EventEmitter<any>();\n\n\tcontext: { $implicit: BoolEditorComponent } = {\n\t\t$implicit: this\n\t};\n\n\t@Input() get value() {\n\t\treturn this.state;\n\t}\n\n\tset value(value) {\n\t\tif (value !== this.value) {\n\t\t\tthis.state = value;\n\t\t\tthis.valueChange.emit(value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\t// entering edit mode means toggling boolean value\n\t\tif (this.autofocus && this.column.editorOptions.trigger === 'click') {\n\t\t\tPromise.resolve(null).then(() =>\n\t\t\t\tthis.value =\n\t\t\t\tthis.value === this.trueValue\n\t\t\t\t\t? this.falseValue\n\t\t\t\t\t: this.trueValue\n\t\t\t);\n\t\t}\n\t}\n\n\tget isChecked() {\n\t\treturn this.column.isChecked(this.value);\n\t}\n\n\tset isChecked(value: boolean) {\n\t\tthis.value = value ? this.trueValue : this.falseValue;\n\t}\n\n\tisIndeterminate() {\n\t\treturn this.column.isIndeterminate(this.value);\n\t}\n\n\tget trueValue() {\n\t\treturn this.column.trueValue;\n\t}\n\n\tget falseValue() {\n\t\treturn this.column.falseValue;\n\t}\n}\n","import { NgModule } from '@angular/core';\r\nimport { BoolEditorComponent } from './bool-editor.component';\r\nimport { TemplateModule } from '../../template/template.module';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tBoolEditorComponent\r\n\t],\r\n\texports: [\r\n\t\tBoolEditorComponent\r\n\t],\r\n\timports: [\r\n\t\tTemplateModule\r\n\t]\r\n})\r\nexport class BoolEditorModule {\r\n}\r\n","module.exports = \"<ng-container key=\\\"plugin-caption.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\r\\n\"","import { Component, ChangeDetectionStrategy, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { PluginService } from '../plugin.service';\n\n@Component({\n\tselector: 'q-grid-caption',\n\ttemplateUrl: './caption.component.html',\n\tproviders: [PluginService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CaptionComponent implements OnInit {\n\tcontext: { $implicit: CaptionComponent } = {\n\t\t$implicit: this\n\t};\n\n\tconstructor(private plugin: PluginService, private cd: ChangeDetectorRef) {\n\t}\n\n\tngOnInit() {\n\t\tthis.plugin.model.gridChanged.on(() => this.cd.detectChanges());\n\t}\n\n\tget value() {\n\t\tconst { caption, title } = this.plugin.model.grid();\n\t\treturn caption || title;\n\t}\n}\n","import { NgModule } from '@angular/core';\r\nimport { CaptionComponent } from './caption.component';\r\nimport { TemplateModule } from '../../template/template.module';\r\n\r\n@NgModule({\r\n\tdeclarations: [CaptionComponent],\r\n\texports: [CaptionComponent],\r\n\timports: [TemplateModule]\r\n})\r\nexport class CaptionModule {}\r\n","module.exports = \"<ng-template>\\n    <ng-content>\\n    </ng-content>\\n</ng-template>\\n\\n<ng-container key=\\\"plugin-cell-editor.tpl.html\\\"\\n              [context]=\\\"context\\\">\\n</ng-container>\"","import {\n\tComponent,\n\tTemplateRef,\n\tEventEmitter,\n\tOutput,\n\tViewChild\n} from '@angular/core';\n\n@Component({\n\tselector: 'q-grid-cell-editor',\n\ttemplateUrl: './cell-editor.component.html'\n})\nexport class CellEditorComponent {\n\t@ViewChild(TemplateRef) template: TemplateRef<any>;\n\t@Output('close') closeEvent = new EventEmitter<any>();\n\n\tcontext: { $implicit: CellEditorComponent } = {\n\t\t$implicit: this\n\t};\n\n\tclose() {\n\t\tthis.closeEvent.emit();\n\t}\n}\n","import { NgModule } from '@angular/core';\r\nimport { CellEditorComponent } from './cell-editor.component';\r\nimport { TemplateModule } from '../../template/template.module';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tCellEditorComponent\r\n\t],\r\n\texports: [\r\n\t\tCellEditorComponent\r\n\t],\r\n\timports: [\r\n\t\tTemplateModule\r\n\t]\r\n})\r\nexport class CellEditorModule {\r\n}\r\n","module.exports = \"<ng-container key=\\\"column-chooser.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\n\"","import {\n\tComponent,\n\tInput,\n\tOutput,\n\tEventEmitter,\n\tOnInit,\n\tSimpleChanges,\n\tOnChanges,\n\tNgZone,\n\tChangeDetectorRef,\n\tChangeDetectionStrategy\n} from '@angular/core';\nimport { ColumnChooserView } from 'ng2-qgrid/plugin/column-chooser/column.chooser.view';\nimport { FocusAfterRender } from '../../common/focus/focus.service';\nimport { PluginService } from '../plugin.service';\nimport { noop } from 'ng2-qgrid/core/utility/kit';\nimport { Node } from 'ng2-qgrid/core/node/node';\n\nconst ColumnChooserName = 'qGridColumnChooser';\n\nexport class RootContext {\n\tconstructor(public ctrl: ColumnChooserView) {\n\t}\n\n\tget node(): Node {\n\t\treturn this.ctrl.treeView;\n\t}\n}\n\n@Component({\n\tselector: 'q-grid-column-chooser',\n\ttemplateUrl: './column-chooser.component.html',\n\tproviders: [FocusAfterRender, PluginService]\n})\nexport class ColumnChooserComponent implements OnInit, OnChanges {\n\t@Input('canAggregate') columnChooserCanAggregate: boolean;\n\t@Output('submit') submitEvent = new EventEmitter<any>();\n\t@Output('cancel') cancelEvent = new EventEmitter<any>();\n\n\tcontext: {\n\t\t$implicit: ColumnChooserView,\n\t\tplugin: ColumnChooserComponent\n\t};\n\n\tconstructor(\n\t\tprivate plugin: PluginService,\n\t\tprivate zone: NgZone,\n\t\tprivate cd: ChangeDetectorRef,\n\t\tfocusAfterRender: FocusAfterRender\n\t) {\n\t}\n\n\troot() {\n\t\treturn { $implicit: new RootContext(this.context.$implicit) };\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.plugin.keep(changes, ['columnChooser']);\n\t}\n\n\tngOnInit() {\n\t\tconst context = {\n\t\t\tname: ColumnChooserName\n\t\t};\n\n\t\tconst columnChooser = new ColumnChooserView(this.plugin.model, context);\n\t\tcolumnChooser.submitEvent.on(() => this.submitEvent.emit());\n\t\tcolumnChooser.cancelEvent.on(() => this.cancelEvent.emit());\n\t\tcolumnChooser.dropEvent.on(() => {\n\t\t\tthis.cd.markForCheck();\n\t\t\tthis.zone.run(noop);\n\t\t});\n\n\t\tthis.context = { $implicit: columnChooser, plugin: this };\n\t}\n}\n","import { NgModule } from '@angular/core';\r\nimport { TemplateModule } from '../../template/template.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ColumnChooserComponent } from './column-chooser.component';\r\n\r\n@NgModule({\r\n\timports: [FormsModule, TemplateModule],\r\n\texports: [ColumnChooserComponent],\r\n\tdeclarations: [ColumnChooserComponent]\r\n})\r\nexport class ColumnChooserModule {\r\n}\r\n","module.exports = \"<ng-container key=\\\"plugin-column-filter-by.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\r\\n\"","import { Component, EventEmitter, Input, Output, ChangeDetectionStrategy } from '@angular/core';\nimport { ColumnModel } from 'ng2-qgrid/core/column-type/column.model';\n\n@Component({\n\tselector: 'q-grid-column-filter-by',\n\ttemplateUrl: './column-filter-by.component.html'\n})\nexport class ColumnFilterByComponent {\n\t@Input() by: Set<string>;\n\t@Input() column: ColumnModel;\n\t@Input() byBlanks: boolean;\n\n\t@Output() byBlanksChange = new EventEmitter();\n\n\tcontext: { $implicit: ColumnFilterByComponent } = {\n\t\t$implicit: this\n\t};\n\n\tget isBlanks() {\n\t\treturn this.byBlanks;\n\t}\n\n\tremove(item: string): void {\n\t\tthis.by.delete(item);\n\t}\n\n\tremoveByBlanks() {\n\t\tthis.byBlanksChange.emit(false);\n\t}\n}\n","import { Directive, Input } from '@angular/core';\r\nimport { ColumnModel } from 'ng2-qgrid/core/column-type/column.model';\r\nimport { CellService } from '../../main/core/cell/cell.service';\r\n\r\n@Directive({\r\n\tselector: '[q-grid-column-filter-item-list]',\r\n\tproviders: [CellService]\r\n})\r\nexport class ColumnFilterItemListDirective {\r\n\t@Input('q-grid-column-filter-item-list') column: ColumnModel;\r\n\t@Input('q-grid-column-filter-search') search: string;\r\n\r\n\tconstructor(\r\n\t\tpublic cellService: CellService\r\n\t) {\r\n\t}\r\n}\r\n","import { Directive, Input, OnInit, ViewContainerRef } from '@angular/core';\r\nimport { ColumnFilterItemListDirective } from './column-filter-item-list.directive';\r\n\r\n@Directive({\r\n\tselector: '[q-grid-column-filter-item]'\r\n})\r\nexport class ColumnFilterItemDirective implements OnInit {\r\n\t@Input('q-grid-column-filter-item') value: any;\r\n\r\n\t$implicit = this;\r\n\r\n\tconstructor(\r\n\t\tprivate viewContainerRef: ViewContainerRef,\r\n\t\tprivate itemList: ColumnFilterItemListDirective\r\n\t) {\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tconst itemList = this.itemList;\r\n\t\tconst link = itemList.cellService.build('column-filter', itemList.column);\r\n\t\tlink(this.viewContainerRef, this);\r\n\t}\r\n}\r\n","module.exports = \"<ng-container key=\\\"plugin-column-filter-trigger.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\"","import { Component, Input, OnInit, ElementRef, ChangeDetectionStrategy } from '@angular/core';\nimport { GRID_PREFIX } from 'ng2-qgrid/core/definition';\nimport { ColumnModel } from 'ng2-qgrid/core/column-type/column.model';\nimport { ViewCoreService } from '../../main/core/view/view-core.service';\nimport { PluginService } from '../plugin.service';\n\n@Component({\n\tselector: 'q-grid-column-filter-trigger',\n\ttemplateUrl: './column-filter-trigger.component.html',\n\tproviders: [PluginService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ColumnFilterTriggerComponent implements OnInit {\n\t@Input() column: ColumnModel;\n\n\tcontext: { $implicit: ColumnFilterTriggerComponent } = {\n\t\t$implicit: this\n\t};\n\n\tconstructor(\n\t\tprivate plugin: PluginService,\n\t\tprivate view: ViewCoreService,\n\t\tprivate element: ElementRef\n\t) {\n\t}\n\n\tngOnInit() {\n\t\tthis.plugin.model.filterChanged.watch(e => {\n\t\t\tif (e.hasChanges('by')) {\n\t\t\t\tif (this.view.filter.has(this.column)) {\n\t\t\t\t\tthis.element.nativeElement.classList.add(`${GRID_PREFIX}-active`);\n\t\t\t\t} else {\n\t\t\t\t\tthis.element.nativeElement.classList.remove(`${GRID_PREFIX}-active`);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n","module.exports = \"<ng-container key=\\\"plugin-column-filter.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\n\"","import {\n\tInput,\n\tComponent,\n\tOnInit,\n\tEventEmitter,\n\tOutput,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef\n} from '@angular/core';\nimport { ColumnFilterView } from 'ng2-qgrid/plugin/column-filter/column.filter.view';\nimport { uniq, flatten } from 'ng2-qgrid/core/utility/kit';\nimport { ColumnModel } from 'ng2-qgrid/core/column-type/column.model';\nimport { Fetch } from 'ng2-qgrid/core/infrastructure/fetch';\nimport { VscrollService } from '../../common/vscroll/vscroll.service';\nimport { VscrollContext } from '../../common/vscroll/vscroll.context';\nimport { FocusAfterRender } from '../../common/focus/focus.service';\nimport { Grid } from '../../main/grid/grid.service';\nimport { PluginService } from '../plugin.service';\n\n@Component({\n\tselector: 'q-grid-column-filter',\n\ttemplateUrl: './column-filter.component.html',\n\tproviders: [FocusAfterRender, PluginService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ColumnFilterComponent implements OnInit {\n\t@Input() column: ColumnModel;\n\t@Input() search = '';\n\n\t@Output('submit') submitEvent = new EventEmitter<any>();\n\t@Output('cancel') cancelEvent = new EventEmitter<any>();\n\n\tcontext: {\n\t\t$implicit: ColumnFilterView,\n\t\tplugin: ColumnFilterComponent,\n\t\tvscroll: VscrollContext\n\t};\n\n\tprivate vscrollContext: VscrollContext;\n\n\tconstructor(\n\t\tprivate plugin: PluginService,\n\t\tprivate vscroll: VscrollService,\n\t\tprivate qgrid: Grid,\n\t\tprivate cd: ChangeDetectorRef,\n\t\tfocusAfterRender: FocusAfterRender) {\n\t}\n\n\tget operators() {\n\t\treturn this.plugin.model.filter().operatorFactory(this.column);\n\t}\n\n\tngOnInit() {\n\t\tconst { model } = this.plugin;\n\t\tconst { key } = this.column;\n\t\tconst context = { key };\n\n\t\tconst columnFilter = new ColumnFilterView(model, context);\n\n\t\tcolumnFilter.submitEvent.on(() => this.submitEvent.emit());\n\t\tcolumnFilter.cancelEvent.on(() => this.cancelEvent.emit());\n\n\t\tconst vscrollContext = this.vscroll.context({\n\t\t\temit: f => {\n\t\t\t\tf();\n\n\t\t\t\tthis.cd.markForCheck();\n\t\t\t\tthis.cd.detectChanges();\n\t\t\t},\n\t\t\tthreshold: model.columnFilter().threshold,\n\t\t\tfetch: (skip, take, d) => {\n\t\t\t\tconst filterState = model.filter();\n\t\t\t\tconst service = this.qgrid.service(model);\n\t\t\t\t// We need to close items property for correct reset behavior\n\t\t\t\tconst items = columnFilter.items;\n\t\t\t\tif (filterState.fetch !== this.qgrid.noop) {\n\t\t\t\t\tconst cancelBusy = service.busy();\n\t\t\t\t\tconst select = filterState\n\t\t\t\t\t\t.fetch(key, {\n\t\t\t\t\t\t\tskip,\n\t\t\t\t\t\t\ttake,\n\t\t\t\t\t\t\tvalue: columnFilter.getValue,\n\t\t\t\t\t\t\tsearch: '' + this.search,\n\n\t\t\t\t\t\t\t// @deprecated\n\t\t\t\t\t\t\tfilter: '' + this.search,\n\t\t\t\t\t\t});\n\n\t\t\t\t\tconst fetch = new Fetch(select);\n\t\t\t\t\tfetch.run();\n\t\t\t\t\tfetch.busy\n\t\t\t\t\t\t.then(page => {\n\t\t\t\t\t\t\titems.push(...page);\n\t\t\t\t\t\t\td.resolve(items.length + (page.length === take ? take : 0));\n\t\t\t\t\t\t\tcancelBusy();\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(cancelBusy);\n\t\t\t\t} else {\n\t\t\t\t\tconst cancelBusy = service.busy();\n\t\t\t\t\tconst isBlank = model.filter().assertFactory().isNull;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!items.length) {\n\t\t\t\t\t\t\tconst source = model[model.columnFilter().source];\n\t\t\t\t\t\t\tlet values = source().rows.map(columnFilter.getValue);\n\t\t\t\t\t\t\tif (columnFilter.column.type === 'array') {\n\t\t\t\t\t\t\t\tvalues = flatten(values);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst uniqValues = uniq(values);\n\t\t\t\t\t\t\tconst notBlankValues = uniqValues.filter(x => !isBlank(x));\n\n\t\t\t\t\t\t\t// TODO: improve search also\n\t\t\t\t\t\t\tconst search = ('' + this.search).toLowerCase();\n\t\t\t\t\t\t\tconst filteredItems = search\n\t\t\t\t\t\t\t\t? notBlankValues.filter(x => ('' + x).toLowerCase().indexOf(search) >= 0)\n\t\t\t\t\t\t\t\t: notBlankValues;\n\n\t\t\t\t\t\t\tfilteredItems.sort(columnFilter.column.compare);\n\t\t\t\t\t\t\tcolumnFilter.items = filteredItems;\n\t\t\t\t\t\t\tcolumnFilter.hasBlanks =\n\t\t\t\t\t\t\t\tnotBlankValues.length !== uniqValues.length &&\n\t\t\t\t\t\t\t\t(!search || 'blanks'.indexOf(search.toLowerCase()) >= 0);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\td.resolve(columnFilter.items.length);\n\t\t\t\t\t}\n\t\t\t\t\tfinally {\n\t\t\t\t\t\tcancelBusy();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\n\t\tthis.vscrollContext = vscrollContext;\n\n\t\tthis.context = {\n\t\t\t$implicit: columnFilter,\n\t\t\tplugin: this,\n\t\t\tvscroll: vscrollContext\n\t\t};\n\t}\n\n\treset() {\n\t\tthis.context.$implicit.items = [];\n\t\tthis.vscrollContext.container.reset();\n\t}\n\n\tclear() {\n\t\tthis.search = '';\n\t\tthis.context.$implicit.reset.execute();\n\t}\n\n\toperatorTemplateKey(op) {\n\t\tlet key;\n\t\tswitch (op) {\n\t\t\tcase 'isEmpty':\n\t\t\tcase 'isNotEmpty':\n\t\t\tcase 'isNull':\n\t\t\tcase 'isNotNull': {\n\t\t\t\tkey = 'default-disabled';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'contains': {\n\t\t\t\tkey = 'default-contains';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'between': {\n\t\t\t\tkey = this.column.type === 'date' ? 'date-between' : 'default-between';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tkey = this.column.type === 'date' ? 'date' : 'default';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn `plugin-column-filter-${key}.tpl.html`;\n\t}\n\n\tget hasOperators() {\n\t\treturn this.operators && this.operators.length > 1;\n\t}\n}\n","import { NgModule } from '@angular/core';\r\nimport { TemplateModule } from '../../template/template.module';\r\nimport { ColumnFilterComponent } from './column-filter.component';\r\nimport { ColumnFilterTriggerComponent } from './column-filter-trigger.component';\r\nimport { ColumnFilterByComponent } from './column-filter-by.component';\r\nimport { ColumnFilterItemListDirective } from './column-filter-item-list.directive';\r\nimport { ColumnFilterItemDirective } from './column-filter-item.directive';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tColumnFilterComponent,\r\n\t\tColumnFilterTriggerComponent,\r\n\t\tColumnFilterByComponent,\r\n\t\tColumnFilterItemListDirective,\r\n\t\tColumnFilterItemDirective\r\n\t],\r\n\texports: [\r\n\t\tColumnFilterComponent,\r\n\t\tColumnFilterTriggerComponent,\r\n\t\tColumnFilterByComponent,\r\n\t\tColumnFilterItemListDirective,\r\n\t\tColumnFilterItemDirective\r\n\t],\r\n\timports: [\r\n\t\tTemplateModule\r\n\t]\r\n})\r\nexport class ColumnFilterModule { }\r\n","module.exports = \"<ng-template>\\n    <ng-content></ng-content>\\n</ng-template>\\n\\n<ng-container key=\\\"plugin-column-sort.tpl.html\\\"\\n              [context]=\\\"context\\\">\\n</ng-container>\"","import {\n\tComponent,\n\tInput,\n\tElementRef,\n\tAfterViewInit,\n\tNgZone,\n\tTemplateRef,\n\tContentChild,\n\tChangeDetectionStrategy,\n\tViewChild\n} from '@angular/core';\nimport { ColumnSortView } from 'ng2-qgrid/plugin/column-sort/column.sort.view';\nimport { EventListener } from 'ng2-qgrid/core/infrastructure/event.listener';\nimport { EventManager } from 'ng2-qgrid/core/infrastructure/event.manager';\nimport { ColumnModel } from 'ng2-qgrid/core/column-type/column.model';\nimport { FocusAfterRender } from '../../common/focus/focus.service';\nimport { ViewCoreService } from '../../main/core/view/view-core.service';\nimport { PluginService } from '../plugin.service';\n\n@Component({\n\tselector: 'q-grid-column-sort',\n\ttemplateUrl: './column-sort.component.html',\n\tproviders: [PluginService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ColumnSortComponent implements AfterViewInit {\n\t@ViewChild(TemplateRef) template: TemplateRef<any>;\n\t@Input() column: ColumnModel;\n\n\tcontext: { $implicit: ColumnSortComponent } = {\n\t\t$implicit: this\n\t};\n\n\tconstructor(\n\t\tprivate plugin: PluginService,\n\t\tprivate view: ViewCoreService,\n\t\tprivate elementRef: ElementRef,\n\t\tprivate zone: NgZone\n\t) {\n\t}\n\n\tngAfterViewInit() {\n\t\tconst { nativeElement } = this.elementRef;\n\t\tconst iconAsc = nativeElement.querySelector('.q-grid-asc');\n\t\tconst iconDesc = nativeElement.querySelector('.q-grid-desc');\n\n\t\tconst ctrl = new ColumnSortView(this.plugin.model, {\n\t\t\telement: nativeElement,\n\t\t\tview: this.view,\n\t\t\tcolumn: this.column,\n\t\t\ticonAsc,\n\t\t\ticonDesc\n\t\t});\n\n\t\tconst listener = new EventListener(nativeElement, new EventManager(this));\n\t\tlistener.on('click', () => {\n\t\t\tif (ctrl.onClick()) {\n\t\t\t\tconst focus = new FocusAfterRender(this.plugin, null);\n\t\t\t}\n\t\t});\n\n\t\tthis.zone.runOutsideAngular(() =>\n\t\t\tlistener.on('mouseleave', () => ctrl.onMouseLeave())\n\t\t);\n\t}\n}\n","import { NgModule } from '@angular/core';\r\nimport { ColumnSortComponent } from './column-sort.component';\r\nimport { TemplateModule } from '../../template/template.module';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tColumnSortComponent\r\n\t],\r\n\texports: [\r\n\t\tColumnSortComponent\r\n\t],\r\n\timports: [\r\n\t\tTemplateModule\r\n\t]\r\n})\r\nexport class ColumnSortModule {\r\n}\r\n","import { Component, Input, OnInit, SimpleChanges, OnChanges, ChangeDetectionStrategy } from '@angular/core';\nimport { DataManipulationView } from 'ng2-qgrid/plugin/data-manipulation/data.manipulation.view';\nimport { PluginService } from '../plugin.service';\nimport { ColumnModel } from 'ng2-qgrid/core/column-type/column.model';\nimport { StyleCellContext, StyleRowContext } from 'ng2-qgrid/core/style/style.context';\n\n@Component({\n\tselector: 'q-grid-data-manipulation',\n\ttemplate: '',\n\tproviders: [PluginService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DataManipulationComponent implements OnInit, OnChanges {\n\t@Input('rowFactory') dataManipulationRowFactory: (x: any) => any;\n\t@Input('styleRow') dataManipulationStyleRow: (row: any, context: StyleRowContext) => void;\n\t@Input('styleCell') dataManipulationStyleCell: (row: any, column: ColumnModel, context: StyleCellContext) => void;\n\n\tcontext: {\n\t\t$implicit: DataManipulationView\n\t};\n\n\tconstructor(private plugin: PluginService) {\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.plugin.keep(changes, ['dataManipulation']);\n\t}\n\n\tngOnInit() {\n\t\tconst dataManipulation = new DataManipulationView(this.plugin.model);\n\t\tthis.context = { $implicit: dataManipulation };\n\t}\n}\n","import { NgModule } from '@angular/core';\r\nimport { DataManipulationComponent } from './data-manipulation.component';\r\n\r\n@NgModule({\r\n\tdeclarations: [DataManipulationComponent],\r\n\texports: [DataManipulationComponent]\r\n})\r\nexport class DataManipulationModule {}\r\n","module.exports = \"<ng-container key=\\\"{{key}}\\\"\\n              [context]=\\\"{$implicit: editor}\\\">\\n</ng-container>\"","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { CellEditor } from 'ng2-qgrid/core/edit/edit.cell.editor';\n\n@Component({\n\tselector: 'q-grid-edit-form-control',\n\ttemplateUrl: './edit-form-control.component.html'\n})\nexport class EditFormControlComponent {\n\t@Input() editor: CellEditor;\n\n\tget key() {\n\t\tif (this.editor) {\n\t\t\tconst { column } = this.editor.cell;\n\t\t\tconst type = column.editor || column.type;\n\t\t\treturn `edit-form-${type}.tpl.html`;\n\t\t}\n\n\t\treturn 'edit-form-text.tpl.html';\n\t}\n}\n","module.exports = \"<ng-container key=\\\"plugin-edit-form-trigger.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\n\"","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { Td } from 'ng2-qgrid/core/dom/td';\n\n@Component({\n\tselector: 'q-grid-edit-form-trigger',\n\ttemplateUrl: './edit-form-trigger.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EditFormTriggerComponent {\n\t@Input() caption: string;\n\t@Input() cell: Td;\n\n\tcontext: any = {\n\t\t$implicit: this\n\t};\n}\n","module.exports = \"<ng-container key=\\\"plugin-edit-form.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\n\"","import { Component, Input, OnInit, OnDestroy, EventEmitter, Output, ChangeDetectionStrategy } from '@angular/core';\nimport { EditFormPanelView } from 'ng2-qgrid/plugin/edit-form/edit.form.panel.view';\nimport { PluginService } from '../plugin.service';\nimport { Td } from 'ng2-qgrid/core/dom/td';\n\n@Component({\n\tselector: 'q-grid-edit-form',\n\ttemplateUrl: './edit-form.component.html',\n\tproviders: [PluginService]\n})\nexport class EditFormComponent implements OnInit, OnDestroy {\n\t@Input() caption: string;\n\t@Input() cell: Td;\n\n\t@Output() cancel = new EventEmitter();\n\t@Output() reset = new EventEmitter();\n\t@Output() submit = new EventEmitter();\n\n\tcontext: { $implicit: EditFormPanelView };\n\n\tconstructor(private plugin: PluginService) {\n\t}\n\n\tngOnInit() {\n\t\tconst view = new EditFormPanelView(this.plugin.model, { row: this.cell.row, caption: this.caption });\n\t\tview.submitEvent.on(() => this.submit.emit());\n\t\tview.cancelEvent.on(() => this.cancel.emit());\n\t\tview.resetEvent.on(() => this.reset.emit());\n\n\t\tthis.context = { $implicit: view };\n\t}\n\n\tngOnDestroy() {\n\t\tthis.context.$implicit.dispose();\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EditFormTriggerComponent } from './edit-form-trigger.component';\nimport { EditFormComponent } from './edit-form.component';\nimport { EditFormControlComponent } from './edit-form-control.component';\nimport { TemplateModule } from '../../template/template.module';\n\n@NgModule({\n\tdeclarations: [\n\t\tEditFormTriggerComponent,\n\t\tEditFormComponent,\n\t\tEditFormControlComponent\n\t],\n\texports: [EditFormTriggerComponent, EditFormComponent, EditFormControlComponent],\n\timports: [CommonModule, TemplateModule]\n})\nexport class EditFormModule { }\n","module.exports = \"\"","import { AfterViewInit, Component, Input, TemplateRef, ChangeDetectionStrategy, ContentChild } from '@angular/core';\nimport { PluginService } from '../plugin.service';\nimport { Command } from 'ng2-qgrid/core/command/command';\nimport { ExportView } from 'ng2-qgrid/plugin/export/export.view';\nimport { Action } from 'ng2-qgrid/core/action/action';\nimport { Composite } from 'ng2-qgrid/core/infrastructure/composite';\nimport { TemplateHostService } from '../../template/template-host.service';\n\n@Component({\n\tselector: 'q-grid-export',\n\ttemplateUrl: './export.component.html',\n\tproviders: [TemplateHostService, PluginService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ExportComponent implements AfterViewInit {\n\t@Input() type: string;\n\t@ContentChild(TemplateRef) templateRef: TemplateRef<any>;\n\n\tcontext: { $implicit: ExportComponent } = {\n\t\t$implicit: this\n\t};\n\n\tconstructor(\n\t\tprivate plugin: PluginService,\n\t\tprivate templateHost: TemplateHostService\n\t) {\n\t\tthis.templateHost.key = () => `export-${this.type}`;\n\t}\n\n\tngAfterViewInit() {\n\t\tconst { model } = this.plugin;\n\t\tconst exportView = new ExportView(model, { type: this.type });\n\t\tconst action = new Action(\n\t\t\tnew Command({ execute: () => exportView[this.type].execute() }),\n\t\t\t`Export to ${this.type}`,\n\t\t\t'file_download'\n\t\t);\n\n\t\taction.id = this.type;\n\t\tif (this.templateRef) {\n\t\t\taction.templateUrl = this.templateHost.key('trigger');\n\t\t}\n\n\t\tmodel.action({\n\t\t\titems: Composite.list([model.action().items, [action]])\n\t\t}, {\n\t\t\t\tsource: 'export.component'\n\t\t\t});\n\t}\n}\n","import {NgModule} from '@angular/core';\r\nimport {ExportComponent} from './export.component';\r\nimport {TemplateModule} from '../../template/template.module';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tExportComponent\r\n\t],\r\n\texports: [\r\n\t\tExportComponent\r\n\t],\r\n\timports: [\r\n\t\tTemplateModule\r\n\t]\r\n})\r\nexport class ExportModule {\r\n}\r\n","import { isObject, isArray, isFunction } from 'ng2-qgrid/core/utility/kit';\r\n\r\nexport function evaluateFactory(expression, args) {\r\n\treturn visit;\r\n\r\n\tfunction visit(value) {\r\n\t\tif (isArray(value)) {\r\n\t\t\treturn visitArray(value);\r\n\t\t} else if (isFunction(value)) {\r\n\t\t\treturn visitFunction(value);\r\n\t\t} else if (isObject(value)) {\r\n\t\t\treturn visitObject(value);\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n\tfunction visitObject(inst) {\r\n\t\tconst keys = Object.keys(inst);\r\n\t\tconst length = keys.length;\r\n\t\tconst result = {};\r\n\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\tconst key = keys[i];\r\n\t\t\tresult[key] = visit(inst[key]);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction visitArray(list) {\r\n\t\tconst result = [];\r\n\t\tfor (let i = 0, length = list.length; i < length; i++) {\r\n\t\t\tresult[i] = visit(list[i]);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction visitFunction(delegate) {\r\n\t\treturn delegate.apply(expression, args);\r\n\t}\r\n}\r\n","import { evaluateFactory } from './evaluate';\r\n\r\nexport class Watcher {\r\n\tprivate evaluate: (x: any) => any;\r\n\tprivate oldValue: any;\r\n\tprivate isFirstRun = true;\r\n\r\n\tconstructor(\r\n\t\tprivate expression: any,\r\n\t\tprivate key: string,\r\n\t\tprivate handler: (context: any, e: any) => void,\r\n\t\tprivate args = []) {\r\n\r\n\t\tthis.evaluate = evaluateFactory(expression, args);\r\n\t\tthis.oldValue = this.evaluate(expression[key]);\r\n\t}\r\n\r\n\tdetect() {\r\n\t\tconst inst = this.expression[this.key];\r\n\t\tconst newValue = this.evaluate(inst);\r\n\t\tif (this.isFirstRun || this.oldValue !== newValue) {\r\n\t\t\tthis.isFirstRun = false;\r\n\r\n\t\t\tthis.handler.apply(this.expression, [newValue, this.oldValue].concat(this.args));\r\n\t\t\tthis.oldValue = newValue;\r\n\t\t}\r\n\t}\r\n}\r\n","import { Directive, ElementRef, OnInit, Input, DoCheck, Optional } from '@angular/core';\nimport { isArray } from 'ng2-qgrid/core/utility/kit';\nimport { evaluateFactory } from './digest/evaluate';\nimport { EbNodeComponent } from './eb-node.component';\n\n@Directive({\n\tselector: '[q-grid-eb-class]'\n})\nexport class EbClassDirective implements OnInit, DoCheck {\n\tprivate evaluate: (value: any) => any;\n\tprivate oldClassList: Array<string> = [];\n\n\t@Input('q-grid-eb-class') klass: any;\n\t@Input('q-grid-eb-class-model') model: any;\n\n\tconstructor(private elementRef: ElementRef, @Optional() private node: EbNodeComponent) {\n\t}\n\n\tngOnInit() {\n\t\tthis.evaluate = evaluateFactory(this.model, [this.node ? this.node.model : null]);\n\t}\n\n\tngDoCheck() {\n\t\tconst result = this.evaluate(this.klass);\n\t\tif (result) {\n\t\t\tconst classList = this.fetchClasses(result);\n\t\t\tif (this.oldClassList.length !== classList.length\n\t\t\t\t|| this.oldClassList.join(' ') !== classList.join(' ')) {\n\n\t\t\t\tconst element = this.elementRef.nativeElement as HTMLElement;\n\t\t\t\telement.classList.remove(...this.oldClassList);\n\t\t\t\telement.classList.add(...classList);\n\t\t\t\tthis.oldClassList = classList;\n\t\t\t}\n\t\t} else if (this.oldClassList.length) {\n\t\t\tconst element = this.elementRef.nativeElement as HTMLElement;\n\t\t\telement.classList.remove(...this.oldClassList);\n\t\t\tthis.oldClassList = [];\n\t\t}\n\t}\n\n\tprivate fetchClasses(meta) {\n\t\tif (isArray(meta)) {\n\t\t\treturn meta;\n\t\t}\n\n\t\tconst keys = Object.keys(meta);\n\t\tconst classList = [];\n\t\tfor (let i = 0, length = keys.length; i < length; i++) {\n\t\t\tconst key = keys[i];\n\t\t\tif (meta[key]) {\n\t\t\t\tclassList.push(key);\n\t\t\t}\n\t\t}\n\n\t\treturn classList;\n\t}\n}\n","module.exports = \"<ng-container [key]=\\\"model.templateUrl\\\" [context]=\\\"context\\\">\\r\\n</ng-container>\\r\\n\"","import { Component, DoCheck, Input, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { Line } from './model/line';\nimport { Node } from './model/node';\nimport { Watcher } from './digest/watch';\n\n@Component({\n\tselector: 'q-grid-eb-expression',\n\ttemplateUrl: './eb-expression.component.html'\n})\nexport class EbExpressionComponent implements OnInit, DoCheck {\n\tprivate watchers: Watcher[];\n\n\t@Input() node: Node;\n\t@Input() line: Line;\n\t@Input() model: any;\n\n\tcontext: { $implicit: any, node: Node, line: Line };\n\n\tngOnInit() {\n\t\tthis.context = { $implicit: this.model, node: this.node, line: this.line };\n\n\t\tconst $watch = this.model.$watch;\n\t\tif ($watch) {\n\t\t\tthis.watchers =\n\t\t\t\tObject\n\t\t\t\t\t.keys($watch)\n\t\t\t\t\t.map(key =>\n\t\t\t\t\t\tnew Watcher(\n\t\t\t\t\t\t\tthis.model,\n\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t$watch[key],\n\t\t\t\t\t\t\t[this.node, this.line])\n\t\t\t\t\t);\n\t\t}\n\t}\n\n\tngDoCheck() {\n\t\tconst ws = this.watchers;\n\t\tif (!ws) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (let i = 0, length = ws.length; i < length; i++) {\n\t\t\tws[i].detect();\n\t\t}\n\t}\n}\n","module.exports = \"<ul class=\\\"q-grid-eb-node\\\"\\r\\n\\t[q-grid-eb-class]=\\\"model.attr('class')\\\"\\r\\n\\t[ngClass]=\\\"{'q-grid-eb-active': service.current === model}\\\"\\r\\n\\t(click)=\\\"select($event)\\\">\\r\\n\\t<li class=\\\"q-grid-eb-line\\\">\\r\\n\\t\\t<ul>\\r\\n\\t\\t\\t<li *ngFor=\\\"let expr of model.line.expressions\\\"\\r\\n\\t\\t\\t    class=\\\"q-grid-eb-expression\\\">\\r\\n\\t\\t\\t\\t<q-grid-eb-expression [model]=\\\"expr\\\"\\r\\n\\t\\t\\t\\t                      [node]=\\\"model\\\"\\r\\n\\t\\t\\t\\t                      [line]=\\\"model.line\\\">\\r\\n\\t\\t\\t\\t</q-grid-eb-expression>\\r\\n\\t\\t\\t</li>\\r\\n\\t\\t</ul>\\r\\n\\t</li>\\r\\n\\r\\n\\t<li class=\\\"q-grid-eb-children\\\">\\r\\n\\t\\t<ul>\\r\\n\\t\\t\\t<li *ngFor=\\\"let child of model.children\\\"\\r\\n\\t\\t\\t    class=\\\"q-grid-eb-child\\\">\\r\\n\\t\\t\\t\\t<q-grid-eb-node [model]=\\\"child\\\">\\r\\n\\t\\t\\t\\t</q-grid-eb-node>\\r\\n\\t\\t\\t</li>\\r\\n\\t\\t</ul>\\r\\n\\t</li>\\r\\n</ul>\\r\\n\\r\\n<ng-template key=\\\"eb-group.tpl.html\\\"\\r\\n\\t\\t\\t let-$group\\r\\n\\t\\t\\t let-$node=\\\"node\\\"\\r\\n\\t\\t\\t let-$line=\\\"line\\\">\\r\\n\\t<ul class=\\\"q-grid-eb-group\\\">\\r\\n\\t\\t<li *ngFor=\\\"let expr of $group.expressions\\\"\\r\\n\\t\\t    class=\\\"q-grid-eb-expression\\\">\\r\\n\\t\\t\\t<q-grid-eb-expression [model]=\\\"expr\\\"\\r\\n\\t\\t\\t                      [node]=\\\"$node\\\"\\r\\n\\t\\t\\t                      [line]=\\\"$line\\\">\\r\\n\\t\\t\\t</q-grid-eb-expression>\\r\\n\\t\\t</li>\\r\\n\\t</ul>\\r\\n</ng-template>\\r\\n\"","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { Node } from './model/node';\nimport { EbNodeService } from './eb-node.service';\n\n@Component({\n\tselector: 'q-grid-eb-node',\n\ttemplateUrl: './eb-node.component.html'\n})\nexport class EbNodeComponent {\n\t@Input() model: Node;\n\n\tconstructor(public service: EbNodeService) {\n\t}\n\n\tselect(e) {\n\t\te.stopPropagation();\n\n\t\tif (this.model.parent) {\n\t\t\tthis.service.current = this.model;\n\t\t}\n\t}\n}\n","import { Injectable, EventEmitter } from '@angular/core';\r\nimport { EbNodeComponent } from './eb-node.component';\r\nimport { Node } from './model/node';\r\n\r\nexport interface EbNodeServiceEventArg<T> {\r\n\tnewValue: T;\r\n\toldValue: T;\r\n}\r\n\r\n@Injectable()\r\nexport class EbNodeService {\r\n\tprivate node: Node = null;\r\n\r\n\tcurrentChange = new EventEmitter<EbNodeServiceEventArg<Node>>();\r\n\r\n\tget current() {\r\n\t\treturn this.node;\r\n\t}\r\n\r\n\tset current(value) {\r\n\t\tconst oldNode = this.node;\r\n\t\tif (value !== oldNode) {\r\n\t\t\tthis.node = value;\r\n\t\t\tthis.currentChange.emit({\r\n\t\t\t\toldValue: oldNode,\r\n\t\t\t\tnewValue: value\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SerializationService } from './serialization.service';\r\nimport { EbNodeComponent } from './eb-node.component';\r\nimport { EbExpressionComponent } from './eb-expression.component';\r\nimport { EbClassDirective } from './eb-class.directive';\r\nimport { EbNodeService } from './eb-node.service';\r\nimport { TemplateModule } from '../../template/template.module';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tTemplateModule\r\n\t],\r\n\texports: [\r\n\t\tEbNodeComponent,\r\n\t\tEbClassDirective\r\n\t],\r\n\tdeclarations: [\r\n\t\tEbNodeComponent,\r\n\t\tEbExpressionComponent,\r\n\t\tEbClassDirective\r\n\t],\r\n\tproviders: [\r\n\t\tSerializationService,\r\n\t\tEbNodeService\r\n\t]\r\n})\r\nexport class EbModule {\r\n}\r\n","import { guid } from 'ng2-qgrid/core/services/guid';\nimport { isFunction } from 'ng2-qgrid/core/utility/kit';\nimport { Expression, GroupExpression } from './expression';\nimport { nodeSchema, INodeSchema } from './node.schema';\nimport { GroupSchema } from './group.schema';\nimport * as utility from '../utility';\nimport * as patch from '../patch';\nimport { Node } from './node';\nimport { Line } from './line';\nimport { IStatement, EmptyStatement } from './statement';\n\n\nexport class ExpressionBuilder {\n\tconstructor(private settings) {\n\t}\n\n\tbuild<T>(statements: Array<IStatement>): T {\n\t\tconst NodeSchemaT = nodeSchema(GroupSchema);\n\n\t\tconst settings = this.settings;\n\t\tstatements\n\t\t\t.concat([new EmptyStatement()])\n\t\t\t.forEach(statement => {\n\t\t\t\tconst factory = function (...args) {\n\t\t\t\t\tlet id = guid();\n\t\t\t\t\tlet sampleExpression: Expression;\n\t\t\t\t\tif (args.length > 1) {\n\t\t\t\t\t\tid = args[0];\n\t\t\t\t\t\tsampleExpression = args[1];\n\t\t\t\t\t} else if (args.length === 1) {\n\t\t\t\t\t\tsampleExpression = args[0];\n\t\t\t\t\t}\n\n\t\t\t\t\tconst build = function (node: Node, line: Line) {\n\t\t\t\t\t\tconst expression =\n\t\t\t\t\t\t\tutility.defaults<Expression>(\n\t\t\t\t\t\t\t\tsampleExpression,\n\t\t\t\t\t\t\t\tstatement.defaults,\n\t\t\t\t\t\t\t\tsettings.defaults\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\texpression.id = id;\n\t\t\t\t\t\texpression.type = statement.type;\n\t\t\t\t\t\texpression.templateUrl = statement.templateKey;\n\n\t\t\t\t\t\tconst group = new GroupExpression();\n\t\t\t\t\t\tgroup.id = id;\n\t\t\t\t\t\tgroup.expressions.push(expression);\n\n\t\t\t\t\t\tline.add(group);\n\t\t\t\t\t\tpatch.methodsOf(expression).with(node, line);\n\n\t\t\t\t\t\tconst keys = Object.keys(expression);\n\n\t\t\t\t\t\tkeys.forEach(key => {\n\t\t\t\t\t\t\tconst sourceFunction = expression[key];\n\n\t\t\t\t\t\t\tif (isFunction(sourceFunction)) {\n\t\t\t\t\t\t\t\texpression[key] = (...context) => {\n\t\t\t\t\t\t\t\t\tconst result = sourceFunction.apply(expression, context);\n\n\t\t\t\t\t\t\t\t\t// TODO add decorator for mutable methods instead of trigger\n\t\t\t\t\t\t\t\t\tif (!line.immutable) {\n\t\t\t\t\t\t\t\t\t\texpression.method = expression.method || [];\n\t\t\t\t\t\t\t\t\t\tif (expression.method.indexOf(key) < 0) {\n\t\t\t\t\t\t\t\t\t\t\texpression.method.push(key);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tline.immutable = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn node;\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.plan.push(build);\n\t\t\t\t\tthis.planMap[id] = build;\n\n\t\t\t\t\treturn this;\n\t\t\t\t};\n\n\t\t\t\tconst groupFactory = function (...args) {\n\t\t\t\t\tlet id = guid();\n\t\t\t\t\tlet sampleExpression: Expression;\n\t\t\t\t\tif (args.length > 1) {\n\t\t\t\t\t\tid = args[0];\n\t\t\t\t\t\tsampleExpression = args[1];\n\t\t\t\t\t} else if (args.length === 1) {\n\t\t\t\t\t\tsampleExpression = args[0];\n\t\t\t\t\t}\n\n\t\t\t\t\tconst build = function (node, line, expressionGroup) {\n\t\t\t\t\t\tconst expression =\n\t\t\t\t\t\t\tutility.defaults<Expression>(\n\t\t\t\t\t\t\t\tsampleExpression,\n\t\t\t\t\t\t\t\tstatement.defaults,\n\t\t\t\t\t\t\t\tsettings.defaults\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\texpression.id = id;\n\t\t\t\t\t\texpression.type = statement.type;\n\t\t\t\t\t\texpression.templateUrl = statement.templateKey;\n\t\t\t\t\t\texpressionGroup.expressions.push(expression);\n\n\t\t\t\t\t\tpatch.methodsOf(expression).with(node, line);\n\n\t\t\t\t\t\treturn node;\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.plan.push(build);\n\n\t\t\t\t\treturn this;\n\t\t\t\t};\n\n\t\t\t\tNodeSchemaT.prototype[statement.type] = factory;\n\t\t\t\tGroupSchema.prototype[statement.type] = groupFactory;\n\t\t\t});\n\n\t\t// TODO: think how to avoid this\n\t\treturn new NodeSchemaT() as T;\n\t}\n}\n","export abstract class Expression {\n\tid: string;\n\ttype: string;\n\ttemplateUrl = '';\n\tmethod: string[] = [];\n}\n\nexport class GroupExpression extends Expression {\n\texpressions: Expression[] = [];\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.type = 'group';\n\t\tthis.templateUrl = 'eb-group.tpl.html';\n\t}\n}\n\n","import { Line } from './line';\nimport { Node } from './node';\nimport { GroupExpression } from './expression';\n\nexport class GroupSchema {\n\tplan: Array<(node: Node, line: Line, group: GroupExpression) => void> = [];\n\n\tconstructor(public node: Node, public line: Line) {\n\t}\n\n\tapply(group: GroupExpression) {\n\t\tthis.plan.forEach(p => p(this.node, this.line, group));\n\t}\n}\n","import { AppError } from 'ng2-qgrid/core/infrastructure/error';\nimport { cloneDeep } from 'ng2-qgrid/core/utility/kit';\nimport { Expression, GroupExpression } from './expression';\nimport { GroupSchema } from './group.schema';\nimport { Node } from './node';\n\ninterface ExpressionEntry {\n\tindex: number;\n\texpression: Expression;\n\tparent: GroupExpression;\n}\n\nexport class Line {\n\timmutable = true;\n\treadonly expressions: Expression[] = [];\n\n\tconstructor(private GroupSchemaT: typeof GroupSchema) {\n\t}\n\n\tprivate getIndex(id: string) {\n\t\tconst index = this.expressions.findIndex(item => item.id === id);\n\t\tif (index < 0) {\n\t\t\tthrow new AppError('line', `Expression ${id} not found`);\n\t\t}\n\n\t\treturn index;\n\t}\n\n\tprivate findById(expressions: Expression[], id: string, parent: GroupExpression = null): ExpressionEntry {\n\t\tfor (let index = 0, length = expressions.length; index < length; index++) {\n\t\t\tconst expression = expressions[index];\n\t\t\tif (expression.id === id) {\n\t\t\t\treturn { index, expression, parent };\n\t\t\t}\n\t\t\tif (expression instanceof GroupExpression) {\n\t\t\t\tconst group = expression as GroupExpression;\n\t\t\t\tconst groupChild = this.findById(group.expressions, id, group);\n\t\t\t\tif (groupChild) {\n\t\t\t\t\treturn groupChild;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tadd(expression: Expression) {\n\t\tthis.expressions.push(expression);\n\t}\n\n\tclone(id: string) {\n\t\treturn cloneDeep(this.get(id)) as Expression;\n\t}\n\n\tget(id: string) {\n\t\tconst expression = this.findById(this.expressions, id);\n\t\tif (!expression) {\n\t\t\tthrow new AppError('line', `Expression ${id} not found`);\n\t\t}\n\n\t\treturn expression.expression;\n\t}\n\n\tput(id: string, node: Node, build) {\n\t\tconst index = this.getIndex(id);\n\t\tconst schema = new this.GroupSchemaT(node, this);\n\t\tconst group = new GroupExpression();\n\n\t\tconst item = this.findById(this.expressions, id);\n\t\tif (item.expression instanceof GroupExpression) {\n\t\t\tbuild(schema);\n\t\t\tschema.apply(group);\n\t\t\tgroup.id = id;\n\t\t\tthis.expressions.splice(index, 1, group);\n\t\t\tthis.immutable = false;\n\t\t} else {\n\t\t\tthrow new AppError('line', 'Unsupported operation: put to expression, that is not a group');\n\t\t}\n\t}\n\n\tremove(id) {\n\t\tconst item = this.findById(this.expressions, id);\n\t\tconst expressions = item.parent ? item.parent.expressions : this.expressions;\n\t\tif (item.expression instanceof GroupExpression) {\n\t\t\titem.expression.expressions = [];\n\t\t} else {\n\t\t\tthrow new AppError('line', 'Unsupported operation: remove expression, that is not a group');\n\t\t}\n\t}\n}\n","import { AppError } from 'ng2-qgrid/core/infrastructure/error';\nimport { Line } from './line';\nimport { GroupExpression } from './expression';\nimport { Node } from './node';\nimport { GroupSchema } from './group.schema';\n\nexport interface INodeSchema {\n\tschemaMap: { [key: string]: INodeSchema };\n\n\tapply(node?: Node): Node;\n\tattr(key: string, value: any): INodeSchema;\n\tnode(id: string, build: (schema: INodeSchema) => void): INodeSchema;\n\tgroup(id: string, build: (schema: GroupSchema) => void): INodeSchema;\n\tget(id: string): INodeSchema;\n\tmaterialize(id: string): Node;\n}\n\nexport function nodeSchema(GroupSchemaT: typeof GroupSchema): any {\n\treturn class NodeSchema implements INodeSchema {\n\t\tplan = [];\n\t\tplanMap = {};\n\n\t\tconstructor(public schemaMap = {}) {\n\t\t}\n\n\t\tclone(): INodeSchema {\n\t\t\tconst schema = new NodeSchema({ ...this.schemaMap });\n\t\t\tschema.plan = [...this.plan];\n\t\t\tschema.planMap = { ...this.planMap };\n\t\t\treturn schema;\n\t\t}\n\n\t\tattr(key: string, value: any) {\n\t\t\tthis.plan.push(node => node.attr(key, value));\n\t\t\treturn this;\n\t\t}\n\n\t\tapply(node?: Node): Node {\n\t\t\tnode = node || new Node('#root', this);\n\n\t\t\tconst line = new Line(GroupSchemaT);\n\t\t\tnode.line = line;\n\n\t\t\tthis.plan.forEach(p => p(node, line));\n\n\t\t\treturn node;\n\t\t}\n\n\t\tnode(id: string, build: (schema: INodeSchema) => void) {\n\t\t\tif (!build) {\n\t\t\t\tthrow new AppError('node.schema', 'Build function is not defined');\n\t\t\t}\n\n\t\t\tthis.plan.push((node, line) => {\n\t\t\t\tconst schema = new NodeSchema(this.schemaMap);\n\t\t\t\tbuild(schema);\n\n\t\t\t\tconst newNode = new Node(id, schema, node);\n\t\t\t\tschema.apply(newNode);\n\t\t\t\tnode.addChildAfter(newNode);\n\t\t\t\tthis.schemaMap[id] = schema;\n\n\t\t\t\treturn node;\n\t\t\t});\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgroup(id: string, build: (schema: GroupSchema) => void) {\n\t\t\tif (!build) {\n\t\t\t\tthrow new AppError('node.schema', 'Build function is not defined');\n\t\t\t}\n\n\t\t\tconst buildGroup = (node, line) => {\n\t\t\t\tconst group = new GroupExpression();\n\t\t\t\tgroup.id = id;\n\n\t\t\t\tconst schema = new GroupSchemaT(node, line);\n\t\t\t\tbuild(schema);\n\t\t\t\tschema.apply(group);\n\t\t\t\tline.add(group);\n\n\t\t\t\treturn node;\n\t\t\t};\n\n\t\t\tthis.plan.push(buildGroup);\n\t\t\tthis.planMap[id] = buildGroup;\n\n\t\t\treturn this;\n\t\t}\n\n\t\tget(id: string) {\n\t\t\tconst schema = this.schemaMap[id];\n\t\t\tif (!schema) {\n\t\t\t\tthrow new AppError('node.schema', `Schema ${id} is not found`);\n\t\t\t}\n\n\t\t\treturn schema;\n\t\t}\n\n\t\tmaterialize(id: string): Node {\n\t\t\tconst schema = this.get(id);\n\t\t\treturn schema.apply(new Node(id, schema));\n\t\t}\n\t};\n}\n","import { AppError } from 'ng2-qgrid/core/infrastructure/error';\nimport { Line } from './line';\n\nexport class Node {\n\treadonly attributes: { [key: string]: any } = {};\n\tchildren: Node[] = [];\n\tlevel: number;\n\tline: Line;\n\n\tconstructor(public id: string, public schema, public parent?: Node) {\n\t\tthis.level = parent ? parent.level + 1 : 0;\n\t}\n\n\tattr(key: string, value?) {\n\t\tif (arguments.length === 2) {\n\t\t\tthis.attributes[key] = value;\n\t\t} else {\n\t\t\treturn this.attributes[key];\n\t\t}\n\t}\n\n\tclasses() {\n\t}\n\n\taddChildAfter(child: Node, after?: Node) {\n\t\tconst index = after ? this.children.indexOf(after) : this.children.length - 1;\n\n\t\tthis.children.splice(index + 1, 0, child);\n\t\tchild.parent = this;\n\t\tchild.level = this.level + 1;\n\t}\n\n\taddChildBefore(child: Node, before: Node) {\n\t\tconst index = before ? this.children.indexOf(before) : 0;\n\n\t\tthis.children.splice(index, 0, child);\n\t\tchild.parent = this;\n\t\tchild.level = this.level + 1;\n\t}\n\n\taddAfter(child: Node) {\n\t\tif (!this.parent) {\n\t\t\tthrow new AppError('node', 'Can\\'t add after root');\n\t\t}\n\t\tthis.parent.addChildAfter(child, this);\n\t}\n\n\taddBefore(child: Node) {\n\t\tif (!this.parent) {\n\t\t\tthrow new AppError('node', 'Can\\'t add after root');\n\t\t}\n\t\tthis.parent.addChildBefore(child, this);\n\t}\n\n\tclone() {\n\t\treturn this.schema.apply(new Node(this.id, this.schema));\n\t}\n\n\tremove() {\n\t\tif (!this.parent) {\n\t\t\tthrow new AppError('node', 'Root element can\\'t be removed');\n\t\t}\n\n\t\tconst index = this.parent.children.indexOf(this);\n\t\tthis.parent.children.splice(index, 1);\n\t}\n\n\tclear() {\n\t\tthis.children.forEach(child => child.parent = null);\n\t\tthis.children = [];\n\t}\n\n\ttoString(indent = 0) {\n\t\treturn Array(indent).join('-') + ' ' + this.level + '\\n' +\n\t\t\tthis.children\n\t\t\t\t.map(child => {\n\t\t\t\t\treturn child.toString(indent + 1);\n\t\t\t\t})\n\t\t\t\t.join('\\n');\n\t}\n\n\ttoTraceString() {\n\t\tif (null != this.parent) {\n\t\t\tlet parent = this.parent;\n\t\t\twhile (null !== parent.parent) {\n\t\t\t\tparent = parent.parent;\n\t\t\t}\n\n\t\t\treturn parent.toString();\n\t\t}\n\n\t\treturn this.toString();\n\t}\n}\n","export interface IStatement {\r\n\ttype: string;\r\n\ttemplateKey: string;\r\n\tdefaults?: any;\r\n}\r\n\r\nexport class EmptyStatement implements IStatement {\r\n\ttype = 'empty';\r\n\ttemplateKey = 'eb-empty.tpl.html';\r\n}\r\n","import { isFunction } from 'ng2-qgrid/core/utility/kit';\n\nexport function method(inst: any, key: string) {\n\tconst sourceFn = inst[key];\n\n\treturn {\n\t\twith: withFactory(inst, key, sourceFn)\n\t};\n}\n\nexport function methodsOf(inst: any) {\n\tconst keys = Object.keys(inst);\n\tconst length = keys.length;\n\tconst patch = {};\n\n\tfor (let i = 0; i < length; i++) {\n\t\tconst key = keys[i];\n\t\tif (isFunction(inst[key])) {\n\t\t\tpatch[key] = method(inst, key);\n\t\t}\n\t}\n\n\treturn {\n\t\twith: (...args) => {\n\t\t\tconst patchKeys = Object.keys(patch);\n\t\t\tconst patchLength = patchKeys.length;\n\n\t\t\tfor (let i = 0; i < patchLength; i++) {\n\t\t\t\tconst key = patchKeys[i];\n\n\t\t\t\tinst.action = key;\n\t\t\t\tpatch[key].with.apply(inst, args);\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function withFactory(inst, key, sourceFn) {\n\tconst withFn = (...withArgs) =>\n\t\tinst[key] = (...keyArgs) =>\n\t\t\tsourceFn.apply(inst, withArgs.concat(keyArgs));\n\n\t(withFn as any).decorator = (...args) => {\n\t\tconst decorate = args[0];\n\t\targs = args.slice(1);\n\n\t\tinst[key] = () => decorate.apply(inst, [sourceFn, inst, key].concat(args));\n\t};\n\n\treturn withFn;\n}\n","import { Node } from './model/node';\nimport { Line } from './model/line';\nimport { GroupExpression } from './model/expression';\nimport { INodeSchema } from './model/node.schema';\nimport { override, indexOf } from './utility';\n\nclass Serializer {\n\tconstructor(private node: Node) {\n\t}\n\n\tserialize(): ISerializationNode {\n\t\tconst groups = this.node.line.expressions.map(expr => this.serializeGroup(expr));\n\n\t\treturn {\n\t\t\tid: this.node.id,\n\t\t\tattributes: this.serializeAttributes(this.node),\n\t\t\tchildren: this.node.children.map(child => new Serializer(child).serialize()),\n\t\t\tline: groups.filter(group => group.expressions.length)\n\t\t};\n\t}\n\n\tserializeGroup(group): ISerializationGroup {\n\t\treturn {\n\t\t\tid: group.id,\n\t\t\texpressions: group.expressions\n\t\t\t\t.filter(expr => this.canSerialize(expr))\n\t\t\t\t.map(expr => this.serializeExpression(expr))\n\t\t};\n\t}\n\n\tserializeExpression(expression): ISerializationExpression {\n\t\tconst result = {} as ISerializationExpression;\n\n\t\tconst serializeAttr = this.node.attr('serialize');\n\t\tconst serializableProps = serializeAttr[expression.id];\n\t\tfor (let i = 0, length = serializableProps.length; i < length; i++) {\n\t\t\tconst prop = serializableProps[i];\n\t\t\tresult[prop] = expression[prop];\n\t\t}\n\n\t\tresult.id = expression.id;\n\t\tresult.type = expression.type;\n\t\tresult.method = expression.method;\n\n\t\treturn result;\n\t}\n\n\tserializeAttributes(node) {\n\t\tconst serializeAttr = this.node.attr('serialize');\n\t\tif (serializeAttr && serializeAttr['@attr']) {\n\t\t\tconst props = serializeAttr['@attr'];\n\t\t\treturn props.reduce((memo, attr) => {\n\t\t\t\tmemo[attr] = this.node.attr(attr);\n\t\t\t\treturn memo;\n\t\t\t}, {});\n\t\t}\n\t\treturn {};\n\t}\n\n\tcanSerialize(expression) {\n\t\tconst serializeAttr = this.node.attr('serialize');\n\t\tif (!serializeAttr) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst props = serializeAttr[expression.id];\n\t\treturn !!(props && props.length);\n\t}\n}\n\nclass Deserializer {\n\tconstructor(private schema: INodeSchema) {\n\t}\n\n\tdeserialize(data: ISerializationNode, parent: Node = null, nodeMap?: { [key: string]: Node }) {\n\t\tnodeMap = nodeMap || {};\n\n\t\tlet node: Node;\n\t\tif (!parent) {\n\t\t\tnode = new Node(data.id, this.schema);\n\t\t\tthis.schema.apply(node);\n\t\t\ttraverse(node, nodeMap);\n\t\t\tnode.clear();\n\t\t} else {\n\t\t\tnode = nodeMap[data.id].clone();\n\t\t\tparent.addChildAfter(node);\n\t\t\ttraverse(parent, nodeMap);\n\t\t\tnode.clear();\n\t\t}\n\n\t\toverride(node.attributes, data.attributes);\n\n\t\tthis.deserializeLine(node, node.line, data.line);\n\n\t\tconst children = data.children;\n\t\tconst length = children.length;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tconst child = children[i];\n\t\t\tconst childSchema = this.schema.schemaMap[child.id];\n\t\t\tnew Deserializer(childSchema).deserialize(child, node, nodeMap);\n\t\t}\n\n\t\treturn node;\n\t}\n\n\tprivate deserializeLine(node: Node, line: Line, dataGroups: ISerializationGroup[]) {\n\t\tfor (let i = 0, length = dataGroups.length; i < length; i++) {\n\t\t\tconst dataGroup = dataGroups[i];\n\t\t\tconst exprGroup = line.get(dataGroup.id) as GroupExpression;\n\t\t\tthis.deserializeGroup(node, line, exprGroup, dataGroup);\n\t\t}\n\t}\n\n\tprivate deserializeGroup(node: Node, line: Line, group: GroupExpression, dataGroup: ISerializationGroup) {\n\t\tconst dataExpressions = dataGroup.expressions;\n\t\tconst length = dataExpressions.length;\n\n\t\tlet index;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tconst dataExp = dataExpressions[i];\n\t\t\tindex = indexOf(group.expressions, expr => expr.id === dataExp.id);\n\t\t\toverride(group.expressions[index], dataExp);\n\t\t}\n\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tconst dataExpr = dataExpressions[i];\n\t\t\tif (dataExpr.method) {\n\t\t\t\tdataExpr.method.forEach(m => {\n\t\t\t\t\tgroup.expressions[index][m](node, line);\n\t\t\t\t\tgroup.expressions[index].method = dataExpressions[i].method;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction traverse(node: Node, map: { [key: string]: Node }) {\n\tif (!map.hasOwnProperty(node.id)) {\n\t\tmap[node.id] = node;\n\t}\n\n\tfor (let i = 0, length = node.children.length; i < length; i++) {\n\t\tconst child = node.children[0];\n\t\ttraverse(child, map);\n\t}\n}\n\nexport declare interface ISerializationNode {\n\tid: string;\n\tattributes: any;\n\tchildren: ISerializationNode[];\n\tline: ISerializationGroup[];\n}\n\nexport declare interface ISerializationGroup {\n\tid: string;\n\texpressions: ISerializationExpression[];\n}\n\nexport declare interface ISerializationExpression {\n\tid: string;\n\ttype: string;\n\tmethod: Array<string>;\n}\n\nexport class SerializationService {\n\tserialize(node: Node): ISerializationNode {\n\t\treturn new Serializer(node).serialize();\n\t}\n\n\tdeserialize(schema: INodeSchema, data: ISerializationNode): Node {\n\t\treturn new Deserializer(schema).deserialize(data);\n\t}\n}\n","import { Node } from './model/node';\r\n\r\nexport class TraverseService {\r\n\tfindUp(node: Node, test: (node: Node) => boolean) {\r\n\t\twhile (node) {\r\n\t\t\tif (test(node)) {\r\n\t\t\t\treturn node;\r\n\t\t\t}\r\n\r\n\t\t\tnode = node.parent;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tfindUpSibling(node: Node) {\r\n\t\tif (node.parent) {\r\n\t\t\tconst children = node.parent.children;\r\n\t\t\tconst index = children.indexOf(node);\r\n\t\t\tif (index >= 0) {\r\n\t\t\t\tif (index > 0) {\r\n\t\t\t\t\treturn children[index - 1];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn node.parent;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tdepth(root: Node): (reduce: any, memo: any) => any {\r\n\t\treturn (reduce, memo) => {\r\n\t\t\tmemo = this.visitLine(reduce, memo, root, root.line);\r\n\r\n\t\t\tconst children = root.children;\r\n\t\t\tconst length = children.length;\r\n\r\n\t\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\t\tmemo = this.depth(children[i])(reduce, memo);\r\n\t\t\t}\r\n\r\n\t\t\treturn memo;\r\n\t\t};\r\n\t}\r\n\r\n\tprivate visitLine(reduce, memo, node, line) {\r\n\t\tconst groups = line.expressions;\r\n\t\tconst length = groups.length;\r\n\r\n\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\tmemo = this.visitGroup(reduce, memo, node, line, groups[i]);\r\n\t\t}\r\n\r\n\t\treturn memo;\r\n\t}\r\n\r\n\tprivate visitGroup(reduce, memo, node, line, group) {\r\n\t\tconst expressions = group.expressions;\r\n\t\tconst length = expressions.length;\r\n\r\n\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\tmemo = reduce(memo, expressions[i], line, node);\r\n\t\t}\r\n\r\n\t\treturn memo;\r\n\t}\r\n}\r\n","import { clone } from 'ng2-qgrid/core/utility/kit';\r\n\r\nexport function indexOf(array, predicate) {\r\n\tfor (let i = 0, length = array.length; i < length; i++) {\r\n\t\tif (predicate(array[i], i)) {\r\n\t\t\treturn i;\r\n\t\t}\r\n\t}\r\n\treturn -1;\r\n}\r\n\r\nexport function defaults<T>(...args: any[]): T {\r\n\tconst dst = args[0];\r\n\tconst result = clone(dst) as T;\r\n\r\n\tfor (let i = 1, sourcesLength = args.length; i < sourcesLength; i++) {\r\n\t\tconst source = args[i];\r\n\r\n\t\tif (!source) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tconst keys = Object.keys(source);\r\n\r\n\t\tfor (let k = 0, keysLength = keys.length; k < keysLength; k++) {\r\n\t\t\tconst key = keys[k];\r\n\t\t\tif (!result.hasOwnProperty(key)) {\r\n\t\t\t\tresult[key] = source[key];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\nexport function override(dst, src) {\r\n\tconst keys = Object.keys(src);\r\n\tconst length = keys.length;\r\n\r\n\tfor (let i = 0; i < length; i++) {\r\n\t\tconst key = keys[i];\r\n\t\tdst[key] = src[key];\r\n\t}\r\n\r\n\treturn dst;\r\n}\r\n","module.exports = \"\"","import { AfterViewInit, Component, ElementRef, Input, TemplateRef, ChangeDetectionStrategy, ContentChild } from '@angular/core';\nimport { PluginService } from '../plugin.service';\nimport { ColumnModel } from 'ng2-qgrid/core/column-type/column.model';\nimport { Command } from 'ng2-qgrid/core/command/command';\nimport { Action } from 'ng2-qgrid/core/action/action';\nimport { Composite } from 'ng2-qgrid/core/infrastructure/composite';\nimport { TemplateHostService } from '../../template/template-host.service';\nimport { ImportView } from 'ng2-qgrid/plugin/import/import.view';\nimport { EventManager } from 'ng2-qgrid/core/infrastructure/event.manager';\nimport { EventListener } from 'ng2-qgrid/core/infrastructure/event.listener';\n\n@Component({\n\tselector: 'q-grid-import',\n\ttemplateUrl: './import.component.html',\n\tproviders: [TemplateHostService, PluginService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ImportComponent implements AfterViewInit {\n\t@Input() options: any;\n\t@ContentChild(TemplateRef) templateRef: TemplateRef<any>;\n\n\tcontext: { $implicit: ImportComponent } = {\n\t\t$implicit: this\n\t};\n\n\tconstructor(\n\t\tprivate plugin: PluginService,\n\t\tprivate templateHost: TemplateHostService,\n\t\tprivate hostElement: ElementRef\n\t) {\n\t\tthis.templateHost.key = () => `import`;\n\t}\n\n\tngAfterViewInit() {\n\t\tconst element = this.hostElement.nativeElement;\n\t\tconst eventListener = new EventListener(element, new EventManager(this));\n\t\tconst { model } = this.plugin;\n\t\tconst context = { element, options: this.options };\n\t\tconst importView = new ImportView(model, context);\n\t\teventListener.on('change', (e) => importView.load(e));\n\t\tconst action = new Action(\n\t\t\tnew Command({ execute: () => importView.upload.execute() }),\n\t\t\t`Import data`,\n\t\t\t'file_upload'\n\t\t);\n\n\t\taction.id = 'import';\n\n\t\tif (this.templateRef) {\n\t\t\taction.templateUrl = this.templateHost.key('trigger');\n\t\t}\n\n\t\tmodel.action({\n\t\t\titems: Composite.list([model.action().items, [action]])\n\t\t}, {\n\t\t\t\tsource: 'import.component'\n\t\t\t});\n\t}\n\n\tget rows() {\n\t\treturn this.plugin.model.data().rows;\n\t}\n\n\tget columns(): ColumnModel[] {\n\t\treturn this.plugin.model.columnList().line;\n\t}\n\n\tget id() {\n\t\treturn this.plugin.model.grid().id;\n\t}\n}\n","import {NgModule} from '@angular/core';\r\nimport {ImportComponent} from './import.component';\r\nimport {TemplateModule} from '../../template/template.module';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tImportComponent\r\n\t],\r\n\texports: [\r\n\t\tImportComponent\r\n\t],\r\n\timports: [\r\n\t\tTemplateModule\r\n\t]\r\n})\r\nexport class ImportModule {\r\n}\r\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { TemplateHostService } from '../../template/template-host.service';\n\n@Component({\n\tselector: 'q-grid-layer',\n\ttemplate: '<ng-content></ng-content>',\n\tproviders: [TemplateHostService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LayerComponent {\n\tconstructor(templateHost: TemplateHostService) {\n\t\ttemplateHost.key = source => `layer-${source}.tpl.html`;\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { TemplateModule } from '../../template/template.module';\nimport { LayerComponent } from './layer.component';\n\n@NgModule({\n\tdeclarations: [\n\t\tLayerComponent\n\t],\n\texports: [\n\t\tLayerComponent\n\t],\n\timports: [\n\t\tTemplateModule\n\t]\n})\nexport class LayerModule {\n}\n","module.exports = \"<ng-container key=\\\"plugin-legend-core.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\r\\n\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { TemplateHostService } from '../../template/template-host.service';\n\n@Component({\n\tselector: 'q-grid-legend',\n\ttemplateUrl: './legend.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tproviders: [TemplateHostService]\n})\nexport class LegendComponent {\n\tcontext: { $implicit: LegendComponent } = {\n\t\t$implicit: this\n\t};\n\n\tconstructor(templateHost: TemplateHostService) {\n\t\ttemplateHost.key = () => 'plugin-legend-core.tpl.html';\n\t}\n}\n","import { NgModule } from '@angular/core';\r\nimport { LegendComponent } from './legend.component';\r\nimport { TemplateModule } from '../../template/template.module';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tLegendComponent\r\n\t],\r\n\texports: [\r\n\t\tLegendComponent\r\n\t],\r\n\timports: [\r\n\t\tTemplateModule\r\n\t]\r\n})\r\nexport class LegendModule {\r\n}\r\n","module.exports = \"<ng-container key=\\\"plugin-pager-target.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\n\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { Shortcut } from 'ng2-qgrid/core/shortcut/shortcut';\nimport { PluginService } from '../plugin.service';\n\n@Component({\n\tselector: 'q-grid-pager-target',\n\ttemplateUrl: './pager-target.component.html',\n\tproviders: [PluginService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PagerTargetComponent implements OnInit {\n\tprivate value: number;\n\n\tcontext: { $implicit: PagerTargetComponent } = {\n\t\t$implicit: this\n\t};\n\n\tconstructor(private plugin: PluginService) {\n\t}\n\n\tngOnInit() {\n\t\tthis.value = this.current;\n\t}\n\n\tkeyDown(e: KeyboardEvent) {\n\t\tlet code = Shortcut.translate(e);\n\t\tif (code.startsWith('numpad')) {\n\t\t\tcode = code.slice(6);\n\t\t}\n\n\t\tconst value = this.value || 0;\n\n\t\tswitch (code) {\n\t\t\tcase 'enter': {\n\t\t\t\tif (value) {\n\t\t\t\t\tthis.plugin.model.pagination({ current: value - 1 }, { source: 'pager-target.component' });\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'up': {\n\t\t\t\tif (value < this.total) {\n\t\t\t\t\tthis.value = value + 1;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'down': {\n\t\t\t\tif (value > 1) {\n\t\t\t\t\tthis.value = value - 1;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'left':\n\t\t\tcase 'right':\n\t\t\tcase 'backspace': {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tconst digit = Number.parseInt(code, 10);\n\t\t\t\tconst page = Number.parseInt('' + value + digit, 10);\n\t\t\t\tconst min = 1;\n\t\t\t\tconst max = this.total;\n\t\t\t\tconst isValid = page >= min && page <= max && !isNaN(digit);\n\n\t\t\t\tif (!isValid) {\n\t\t\t\t\tpage > this.total ? this.value = max : this.value = min;\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tget current() {\n\t\treturn this.plugin.model.pagination().current + 1;\n\t}\n\n\tget total() {\n\t\tconst pagination = this.plugin.model.pagination();\n\t\tconst count = pagination.count;\n\t\tconst size = pagination.size;\n\n\t\treturn size === 0 ? 0 : Math.max(1, Math.ceil(count / size));\n\t}\n}\n","module.exports = \"<ng-container key=\\\"plugin-pager.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\n\"","import { Component, Input, OnInit, SimpleChanges, OnChanges, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { PagerView } from 'ng2-qgrid/plugin/pager/pager.view';\nimport { PluginService } from '../plugin.service';\n\n@Component({\n\tselector: 'q-grid-pager',\n\ttemplateUrl: './pager.component.html',\n\tproviders: [PluginService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PagerComponent implements OnInit, OnChanges {\n\t@Input('size') paginationSize: number;\n\t@Input('sizeList') paginationSizeList: number[];\n\n\tcontext: { $implicit: PagerView };\n\n\tconstructor(private plugin: PluginService, private cd: ChangeDetectorRef) {\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.plugin.keep(changes, ['pagination']);\n\t}\n\n\tngOnInit() {\n\t\tconst { model, table } = this.plugin;\n\t\tconst pager = new PagerView(model, table);\n\t\tthis.context = { $implicit: pager };\n\n\t\tmodel.paginationChanged.on(() => this.cd.detectChanges());\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { PagerComponent } from './pager.component';\nimport { PagerTargetComponent } from './pager-target.component';\nimport { TemplateModule } from '../../template/template.module';\n\n@NgModule({\n\tdeclarations: [\n\t\tPagerComponent,\n\t\tPagerTargetComponent\n\t],\n\texports: [\n\t\tPagerComponent,\n\t\tPagerTargetComponent\n\t],\n\timports: [\n\t\tTemplateModule\n\t]\n})\nexport class PagerModule {\n}\n","module.exports = \"<q-grid-layer>\\n    <ng-template for=\\\"pane-right\\\">\\n        <div class=\\\"q-grid-pane q-grid-pane-right\\\">\\n            <ng-container key=\\\"plugin-pane-right.tpl.html\\\"\\n                          [context]=\\\"context\\\">\\n            </ng-container>\\n        </div>\\n    </ng-template>\\n</q-grid-layer>\"","import { Component, OnInit, ChangeDetectorRef, Input } from '@angular/core';\nimport { PluginService } from '../plugin.service';\nimport { TemplateHostService } from '../../template/template-host.service';\nimport { AppError } from 'ng2-qgrid/core/infrastructure/error';\nimport { ColumnModel } from 'ng2-qgrid/core/column-type/column.model';\n\n@Component({\n\tselector: 'q-grid-pane',\n\ttemplateUrl: './pane.component.html',\n\tproviders: [\n\t\tPluginService,\n\t\tTemplateHostService\n\t]\n})\nexport class PaneComponent implements OnInit {\n\t@Input() trigger: string;\n\n\tcontext: {\n\t\t$implicit: PaneComponent,\n\t\tcell: {\n\t\t\trowIndex: number,\n\t\t\tcolumnIndex: number,\n\t\t\trow: any,\n\t\t\tcolumn: any\n\t\t};\n\t};\n\n\tconstructor(\n\t\tprivate plugin: PluginService,\n\t\tprivate cd: ChangeDetectorRef,\n\t\ttemplateHost: TemplateHostService\n\t) {\n\t\ttemplateHost.key = source => `plugin-pane-${source}.tpl.html`;\n\t}\n\n\tngOnInit() {\n\t\tconst { model } = this.plugin;\n\t\tconst parts = this.trigger ? this.trigger.split('.') : [];\n\t\tif (parts.length > 0) {\n\t\t\tconst [state, prop] = parts;\n\t\t\tif (!model[state]) {\n\t\t\t\tthrow new AppError('pane.component', `Trigger ${state} not found`);\n\t\t\t}\n\n\t\t\tmodel[`${state}Changed`].watch(e => {\n\t\t\t\tif (!prop || e.hasChanges(prop)) {\n\t\t\t\t\tthis.close('right');\n\t\t\t\t\tthis.open('right');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\topen(side: 'right') {\n\t\tconst { table, model } = this.plugin;\n\n\t\tthis.context = {\n\t\t\t$implicit: this,\n\t\t\tcell: model.navigation().cell\n\t\t};\n\n\t\tthis.cd.markForCheck();\n\t\ttable.view.addLayer(`pane-${side}`);\n\t}\n\n\tclose(side: 'right') {\n\t\tconst { table } = this.plugin;\n\t\ttable.view.removeLayer(`pane-${side}`);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TemplateModule } from '../../template/template.module';\nimport { PaneComponent } from './pane.component';\nimport { LayerModule } from '../layer/layer.module';\n\n@NgModule({\n\tdeclarations: [\n\t\tPaneComponent,\n\t],\n\texports: [\n\t\tPaneComponent,\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tTemplateModule,\n\t\tLayerModule\n\t]\n})\nexport class PaneModule { }\n","module.exports = \"<ng-container key=\\\"plugin-persistence-panel.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\r\\n\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { PersistenceView } from 'ng2-qgrid/plugin/persistence/persistence.view';\nimport { PluginService } from '../plugin.service';\nimport { ModelBuilderService } from '../../main/model/model-builder.service';\n\n@Component({\n\tselector: 'q-grid-persistence-panel',\n\ttemplateUrl: './persistence-panel.component.html',\n\tproviders: [PluginService]\n})\nexport class PersistencePanelComponent implements OnInit {\n\tcontext: {\n\t\t$implicit: PersistenceView\n\t};\n\n\tconstructor(\n\t\tprivate plugin: PluginService,\n\t\tprivate modelBuilder: ModelBuilderService\n\t) {\n\t}\n\n\tngOnInit() {\n\t\tconst persistence = new PersistenceView(this.plugin.model, () => this.modelBuilder.build());\n\t\tthis.context = { $implicit: persistence };\n\t}\n}\n","import { Component, OnInit, OnChanges, SimpleChanges, ChangeDetectionStrategy } from '@angular/core';\nimport { Command } from 'ng2-qgrid/core/command/command';\nimport { Action } from 'ng2-qgrid/core/action/action';\nimport { Composite } from 'ng2-qgrid/core/infrastructure/composite';\nimport { PersistenceItem } from 'ng2-qgrid/plugin/persistence/persistence.view';\nimport { PersistenceService } from 'ng2-qgrid/core/persistence/persistence.service';\nimport { PluginService } from '../plugin.service';\nimport { ModelBuilderService } from '../../main/model/model-builder.service';\n\n@Component({\n\tselector: 'q-grid-persistence',\n\ttemplate: '',\n\tproviders: [PluginService]\n})\nexport class PersistenceComponent implements OnInit, OnChanges {\n\tconstructor(\n\t\tprivate plugin: PluginService,\n\t\tprivate modelBuilder: ModelBuilderService,\n\t) {\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.plugin.keep(changes, ['persistence']);\n\t}\n\n\tngOnInit() {\n\t\tconst { model } = this.plugin;\n\t\tconst id = `q-grid:${model.grid().id}:persistence-list`;\n\t\tmodel.persistence({ id });\n\t\tmodel.persistence().storage\n\t\t\t.getItem(id)\n\t\t\t.then((items: PersistenceItem[]) => {\n\t\t\t\tif (!items || items.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst defaultItem = items.find(item => item.isDefault);\n\t\t\t\tif (defaultItem) {\n\t\t\t\t\tconst persistenceService = new PersistenceService(model, () => this.modelBuilder.build());\n\t\t\t\t\tpersistenceService.load(defaultItem.model);\n\t\t\t\t}\n\t\t\t});\n\n\t\tconst action =\n\t\t\tnew Action(\n\t\t\t\tnew Command(),\n\t\t\t\t'Save/Load',\n\t\t\t\t'history'\n\t\t\t);\n\n\t\taction.templateUrl = 'plugin-persistence.tpl.html';\n\t\taction.id = 'persistence';\n\n\t\tthis.plugin.model.action({\n\t\t\titems: Composite.list([[action], this.plugin.model.action().items])\n\t\t}, {\n\t\t\t\tsource: 'persistence.component'\n\t\t\t});\n\t}\n}\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { PersistenceComponent } from './persistence.component';\r\nimport { PersistencePanelComponent } from './persistence-panel.component';\r\nimport { TemplateModule } from '../../template/template.module';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tFormsModule,\r\n\t\tTemplateModule\r\n\t],\r\n\texports: [\r\n\t\tPersistenceComponent,\r\n\t\tPersistencePanelComponent\r\n\t],\r\n\tdeclarations: [\r\n\t\tPersistenceComponent,\r\n\t\tPersistencePanelComponent\r\n\t],\r\n\tentryComponents: [\r\n\t\tPersistencePanelComponent\r\n\t]\r\n})\r\nexport class PersistenceModule {\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { ActionBarModule } from './action-bar/action-bar.module';\nimport { AutocompleteEditorModule } from './autocomplete-editor/autocomplete-editor.module';\nimport { BackdropModule } from './backdrop/backdrop.module';\nimport { BoolEditorModule } from './bool-editor/bool-editor.module';\nimport { CaptionModule } from './caption/caption.module';\nimport { CellEditorModule } from './cell-editor/cell-editor.module';\nimport { ColumnChooserModel } from 'ng2-qgrid/plugin/column-chooser/column.chooser.model';\nimport { ColumnChooserModule } from './colum-chooser/column-chooser.module';\nimport { ColumnFilterModel } from 'ng2-qgrid/plugin/column-filter/column.filter.model';\nimport { ColumnFilterModule } from './column-filter/column-filter.module';\nimport { ColumnSortModule } from './column-sort/column-sort.module';\nimport { DataManipulationModel } from 'ng2-qgrid/plugin/data-manipulation/data.manipulation.model';\nimport { DataManipulationModule } from './data-manipulation/data-manipulation.module';\nimport { EbModule } from './expression-builder/eb.module';\nimport { EditFormModule } from './edit-form/edit-form.module';\nimport { ExportModule } from './export/export.module';\nimport { ImportModule } from './import/import.module';\nimport { LegendModule } from './legend/legend.module';\nimport { ModelBuilderService } from '../main/model/model-builder.service';\nimport { PagerModule } from './pagination/pager.module';\nimport { PaneModule } from './pane/pane.module';\nimport { PersistenceModule } from './persistence/persistence.module';\nimport { ProgressModule } from './progress/progress.module';\nimport { QueryBuilderModel } from './query-builder/query-builder.model';\nimport { QueryBuilderModule } from './query-builder/query-builder.module';\nimport { ReferenceEditorModule } from './reference-editor/reference-editor.module';\nimport { RestModule } from './rest/rest.module';\nimport { StatusBarModule } from './status-bar/status-bar.module';\nimport { TabTrapModule } from './tab-trap/tab-trap.module';\nimport { TitleModule } from './title/title.module';\nimport { ValidationModule } from './validation/validation.module';\nimport { LayerModule } from './layer/layer.module';\n\n@NgModule({\n\texports: [\n\t\tActionBarModule,\n\t\tAutocompleteEditorModule,\n\t\tBackdropModule,\n\t\tBoolEditorModule,\n\t\tCaptionModule,\n\t\tCellEditorModule,\n\t\tColumnChooserModule,\n\t\tColumnFilterModule,\n\t\tColumnSortModule,\n\t\tDataManipulationModule,\n\t\tEbModule,\n\t\tEditFormModule,\n\t\tExportModule,\n\t\tImportModule,\n\t\tLayerModule,\n\t\tLegendModule,\n\t\tPagerModule,\n\t\tPaneModule,\n\t\tPersistenceModule,\n\t\tProgressModule,\n\t\tQueryBuilderModule,\n\t\tReferenceEditorModule,\n\t\tRestModule,\n\t\tStatusBarModule,\n\t\tTabTrapModule,\n\t\tTitleModule,\n\t\tValidationModule,\n\t]\n})\nexport class PluginModule {\n\tconstructor(modelBuilder: ModelBuilderService) {\n\t\tmodelBuilder\n\t\t\t.register('columnChooser', ColumnChooserModel)\n\t\t\t.register('columnFilter', ColumnFilterModel)\n\t\t\t.register('dataManipulation', DataManipulationModel)\n\t\t\t.register('queryBuilder', QueryBuilderModel);\n\t}\n}\n","import { Injectable, OnDestroy, SimpleChanges } from '@angular/core';\nimport { Guard } from 'ng2-qgrid/core/infrastructure/guard';\nimport { ModelProxy } from 'ng2-qgrid/core/infrastructure/model.proxy';\nimport { ModelBinder } from 'ng2-qgrid/core/infrastructure/model.bind';\nimport { Model as GridModel } from 'ng2-qgrid/core/infrastructure/model';\nimport { Table as DomTable } from 'ng2-qgrid/core/dom/table';\nimport { RootService } from '../infrastructure/component/root.service';\n\nexport { Model as GridModel, ModelEventArg as GridEventArg, ModelEvent as GridEvent } from 'ng2-qgrid/core/infrastructure/model';\nexport { Table as DomTable } from 'ng2-qgrid/core/dom/table';\n\n@Injectable()\nexport class PluginService implements OnDestroy {\n\tprivate modelProxy: ModelProxy = null;\n\n\tconstructor(private root: RootService) { }\n\n\tget model(): GridModel {\n\t\tconst { model } = this.root;\n\t\tif (!this.modelProxy) {\n\t\t\tGuard.notNull(model, 'model');\n\n\t\t\tthis.modelProxy = new ModelProxy(model);\n\t\t\treturn this.modelProxy.subject;\n\t\t}\n\n\t\tif (model !== this.modelProxy.target) {\n\t\t\tthis.modelProxy.dispose();\n\t\t\tGuard.notNull(model, 'model');\n\n\t\t\tthis.modelProxy = new ModelProxy(model);\n\t\t\treturn this.modelProxy.subject;\n\t\t}\n\n\t\treturn this.modelProxy.subject;\n\t}\n\n\tget table(): DomTable {\n\t\tconst { table } = this.root;\n\t\tGuard.notNull(table, 'table');\n\n\t\treturn table;\n\t}\n\n\tkeep(changes: SimpleChanges, models: string[]) {\n\t\tconst host = {};\n\t\tfor (const key in changes) {\n\t\t\tif (changes.hasOwnProperty(key)) {\n\t\t\t\tconst change = changes[key];\n\t\t\t\thost[key] = change.currentValue;\n\t\t\t}\n\t\t}\n\n\t\tconst binder = new ModelBinder(host);\n\t\tconst commit = binder.bound(this.model, models, false, false);\n\t\tcommit();\n\t}\n\n\tngOnDestroy() {\n\t\tif (this.modelProxy) {\n\t\t\tthis.modelProxy.dispose();\n\t\t\tthis.modelProxy = null;\n\t\t}\n\t}\n}\n","module.exports = \"<ng-container key=\\\"plugin-progress.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\r\\n\"","import { Component, ChangeDetectionStrategy, ChangeDetectorRef, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { PluginService } from '../plugin.service';\n\n@Component({\n\tselector: 'q-grid-progress',\n\ttemplateUrl: './progress.component.html',\n\tproviders: [PluginService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProgressComponent implements OnInit, OnChanges {\n\tcontext: { $implicit: ProgressComponent } = {\n\t\t$implicit: this\n\t};\n\n\tconstructor(private plugin: PluginService, private cd: ChangeDetectorRef) {\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.plugin.keep(changes, ['progress']);\n\t}\n\n\tngOnInit() {\n\t\tthis.plugin.model.progressChanged.watch(() => this.cd.detectChanges());\n\t}\n\n\tget isBusy() {\n\t\tconst { isBusy, queue } = this.plugin.model.progress();\n\t\treturn isBusy || queue.length;\n\t}\n}\n","import { NgModule } from '@angular/core';\r\nimport { ProgressComponent } from './progress.component';\r\nimport { TemplateModule } from '../../template/template.module';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tProgressComponent\r\n\t],\r\n\texports: [\r\n\t\tProgressComponent\r\n\t],\r\n\timports: [\r\n\t\tTemplateModule\r\n\t]\r\n})\r\nexport class ProgressModule {\r\n}\r\n","module.exports = \"<ng-container key=\\\"plugin-query-builder-panel.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\"","import { Component, Output, EventEmitter, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { Command } from 'ng2-qgrid/core/command/command';\nimport { clone } from 'ng2-qgrid/core/utility/kit';\nimport { QueryBuilderService } from './query-builder.service';\nimport { WhereSchema } from './schema/where.schema';\nimport { visit as convert } from './schema/converter';\nimport { SerializationService } from '../expression-builder/serialization.service';\nimport { INodeSchema } from '../expression-builder/model/node.schema';\nimport { Node } from '../expression-builder/model/node';\nimport { EbNodeService } from '../expression-builder/eb-node.service';\nimport { TraverseService } from '../expression-builder/traverse.service';\nimport { FocusAfterRender } from '../../common/focus/focus.service';\nimport { PluginService } from '../plugin.service';\n\n@Component({\n\tselector: 'q-grid-query-builder-panel',\n\ttemplateUrl: './query-builder-panel.component.html',\n\tproviders: [FocusAfterRender, PluginService]\n})\nexport class QueryBuilderPanelComponent implements OnInit {\n\tnode: Node;\n\t@Output() close = new EventEmitter<any>();\n\tqueryService: QueryBuilderService;\n\n\tcontext: { $implicit: QueryBuilderPanelComponent } = {\n\t\t$implicit: this\n\t};\n\n\tprivate traverse = new TraverseService();\n\n\taddGroup = new Command({\n\t\texecute: () => {\n\t\t\tconst current = this.nodeService.current;\n\t\t\tconst parent = this.findLogicalNode(current);\n\t\t\tconst group = parent.clone();\n\t\t\tparent.addChildAfter(group, current.id === '#condition' && current);\n\t\t\tif (current.id === '#condition') {\n\t\t\t\tthis.nodeService.current = group;\n\t\t\t}\n\t\t},\n\t\tcanExecute: () => !!this.findLogicalNode(this.nodeService.current)\n\t});\n\n\taddRule = new Command({\n\t\texecute: () => {\n\t\t\tconst current = this.nodeService.current;\n\t\t\tconst parent = this.findLogicalNode(current);\n\t\t\tconst rule = this.plan.materialize('#condition');\n\t\t\tparent.addChildAfter(rule, current.id === '#condition' && current);\n\t\t\tif (current.id === '#condition') {\n\t\t\t\tthis.nodeService.current = rule;\n\t\t\t}\n\t\t},\n\t\tcanExecute: () => !!this.findLogicalNode(this.nodeService.current)\n\t});\n\n\tremove = new Command({\n\t\texecute: () => {\n\t\t\tconst current = this.nodeService.current;\n\t\t\tif (current.id === '#logical' && current.level === 1) {\n\t\t\t\tcurrent.clear();\n\t\t\t} else {\n\t\t\t\tconst previous = this.traverse.findUpSibling(current);\n\t\t\t\tthis.nodeService.current = previous;\n\t\t\t\tcurrent.remove();\n\t\t\t}\n\t\t},\n\t\tcanExecute: () => {\n\t\t\tconst current = this.nodeService.current;\n\t\t\treturn current && (current.id === '#condition' || (current.level > 1 || current.children.length > 0));\n\t\t}\n\t});\n\n\tsubmit = new Command({\n\t\tsource: 'query-builder.component',\n\t\texecute: () => {\n\t\t\tconst serializer = new SerializationService();\n\t\t\tconst node = serializer.serialize(this.node);\n\n\t\t\tconst by = clone(this.plugin.model.filter().by);\n\t\t\tby.$expression = convert(node);\n\n\t\t\tthis.plugin.model.filter({ by });\n\t\t\tthis.plugin.model.queryBuilder({ node: by.$expression ? node : null });\n\n\t\t\tthis.close.emit();\n\t\t},\n\t\tcanExecute: () => {\n\t\t\tconst depth = this.traverse.depth(this.node);\n\t\t\treturn depth((memo, expression, line, node) =>\n\t\t\t\tnode.attr('placeholder')\n\t\t\t\t\t? memo\n\t\t\t\t\t: memo && expression.isValid()\n\t\t\t\t, true);\n\t\t}\n\t});\n\n\tcancel = new Command({\n\t\tsource: 'query-builder.component',\n\t\texecute: () => {\n\t\t\tthis.close.emit();\n\t\t}\n\t});\n\n\treset = new Command({\n\t\tsource: 'query-builder.component',\n\t\texecute: () => {\n\t\t\tconst schema = new WhereSchema(this.queryService);\n\t\t\tconst plan = schema.factory();\n\t\t\tthis.node = plan.apply();\n\n\t\t\tconst root = this.node.children[0];\n\t\t\troot.clear();\n\n\t\t\tthis.nodeService.current = this.node.children[0];\n\n\t\t}\n\t});\n\n\tprivate plan: INodeSchema;\n\n\tconstructor(\n\t\tprivate plugin: PluginService,\n\t\tprivate nodeService: EbNodeService,\n\t\tfocusAfterRender: FocusAfterRender\n\t) {\n\t}\n\n\tngOnInit() {\n\t\tthis.queryService = new QueryBuilderService(this.plugin.model);\n\n\t\tconst schema = new WhereSchema(this.queryService);\n\t\tthis.plan = schema.factory() as any;\n\t\tthis.node = this.plan.apply();\n\n\t\tconst serializer = new SerializationService();\n\t\tconst { node } = this.plugin.model.queryBuilder();\n\t\tif (node) {\n\t\t\tthis.node = serializer.deserialize(this.plan, node);\n\t\t}\n\n\t\tthis.nodeService.current = this.node.children[0];\n\t}\n\n\tprivate findLogicalNode(node: Node) {\n\t\treturn this.traverse.findUp(node, n => n.id === '#logical');\n\t}\n}\n","module.exports = \"<ng-container key=\\\"plugin-query-builder.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { Command } from 'ng2-qgrid/core/command/command';\nimport { Action } from 'ng2-qgrid/core/action/action';\nimport { Composite } from 'ng2-qgrid/core/infrastructure/composite';\nimport { PluginService } from '../plugin.service';\n\n@Component({\n\tselector: 'q-grid-query-builder',\n\ttemplateUrl: './query-builder.component.html',\n\tproviders: [PluginService]\n})\nexport class QueryBuilderComponent implements OnInit {\n\tcontext: { $implicit: QueryBuilderComponent } = {\n\t\t$implicit: this\n\t};\n\n\tconstructor(private plugin: PluginService) {\n\t}\n\n\tngOnInit() {\n\t\tconst action =\n\t\t\tnew Action(\n\t\t\t\tnew Command(),\n\t\t\t\t'Query Builder',\n\t\t\t\t'filter'\n\t\t\t);\n\n\t\taction.templateUrl = 'plugin-query-builder.tpl.html';\n\t\taction.id = 'query-builder';\n\n\t\tthis.plugin.model.action({\n\t\t\titems: Composite.list([[action], this.plugin.model.action().items])\n\t\t}, {\n\t\t\t\tsource: 'query-builder.component'\n\t\t\t});\n\t}\n}\n","import { ISerializationNode } from '../expression-builder/serialization.service';\r\n\r\nexport class QueryBuilderModel {\r\n\tnode: ISerializationNode = null;\r\n\r\n\tconstructor() {\r\n\t}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { TemplateModule } from '../../template/template.module';\r\nimport { QueryBuilderComponent } from './query-builder.component';\r\nimport { QueryBuilderPanelComponent } from './query-builder-panel.component';\r\nimport { QueryBuilderPipe } from './query-builder.pipe';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tTemplateModule\r\n\t],\r\n\texports: [\r\n\t\tQueryBuilderComponent,\r\n\t\tQueryBuilderPanelComponent,\r\n\t\tQueryBuilderPipe\r\n\t],\r\n\tdeclarations: [\r\n\t\tQueryBuilderComponent,\r\n\t\tQueryBuilderPanelComponent,\r\n\t\tQueryBuilderPipe\r\n\t]\r\n})\r\nexport class QueryBuilderModule {\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Node } from '../expression-builder/model/node';\nimport { MarkupVisitor } from 'ng2-qgrid/core/expression/markup.visitor';\nimport { SerializationService } from '../expression-builder/serialization.service';\nimport { visit as convert } from './schema/converter';\nimport { QueryBuilderService, ColumnMap } from './query-builder.service';\nimport { Validator } from './schema/validator';\n\n@Pipe({\n\tname: 'qGridQueryBuilderMarkup',\n\tpure: false\n})\nexport class QueryBuilderPipe implements PipeTransform {\n\tvisitor: MarkupVisitor;\n\n\ttransform(value: any, service: QueryBuilderService): any {\n\t\tconst node = value as Node;\n\t\tif (node) {\n\t\t\tif (!this.visitor) {\n\t\t\t\tconst validator = new Validator(service);\n\t\t\t\tconst columnMap = service.columnMap();\n\t\t\t\tthis.visitor =\n\t\t\t\t\tnew MarkupVisitor(\n\t\t\t\t\t\tk => columnMap[k].title,\n\t\t\t\t\t\tk => columnMap[k].type,\n\t\t\t\t\t\t(k, v) => validator.for(k)(v).length === 0\n\t\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst serializer = new SerializationService();\n\t\t\tconst filter = serializer.serialize(node);\n\t\t\tconst expression = convert(filter);\n\t\t\tif (expression) {\n\t\t\t\treturn this.visitor.visit(expression);\n\t\t\t}\n\t\t}\n\n\t\treturn 'Please, select a query';\n\t}\n}\n","import { AppError } from 'ng2-qgrid/core/infrastructure/error';\nimport { isUndefined, yes, uniq } from 'ng2-qgrid/core/utility/kit';\nimport { ExpressionBuilder } from '../expression-builder/model/expression.builder';\nimport { Node } from '../expression-builder/model/node';\nimport { typeMapping } from './schema/operator';\nimport { getFactory } from 'ng2-qgrid/core/services/value';\nimport { Model } from 'ng2-qgrid/core/infrastructure/model';\nimport * as columnService from 'ng2-qgrid/core/column/column.service';\n\nexport interface Column {\n\tkey: string; title: string; type: string;\n}\n\nexport interface ColumnMap {\n\t[key: string]: Column;\n}\n\nexport interface IQueryBuilderSchema {\n\tapply(node?: Node): Node;\n\tattr(key: string, value: any): IQueryBuilderSchema;\n\tnode(id: string, build: (schema: IQueryBuilderSchema) => void): IQueryBuilderSchema;\n\tgroup(id: string, build: (schema: IQueryBuilderSchema) => void): IQueryBuilderSchema;\n\tget(id: string): IQueryBuilderSchema;\n\tmaterialize(id: string): Node;\n\n\tautocomplete(id: string, settings?: any): IQueryBuilderSchema;\n\tbutton(id: string, settings?: any): IQueryBuilderSchema;\n\tinput(id: string, settings?: any): IQueryBuilderSchema;\n\ticonButton(id: string, settings?: any): IQueryBuilderSchema;\n\tlabel(id: string, settings?: any): IQueryBuilderSchema;\n\tmultiselect(id: string, settings?: any): IQueryBuilderSchema;\n\tselect(id: string, settings?: any): IQueryBuilderSchema;\n}\n\nexport class QueryBuilderService {\n\tconstructor(private model: Model) {\n\t}\n\n\tcolumns(): Array<Column> {\n\t\tconst model = this.model;\n\t\treturn model\n\t\t\t.columnList()\n\t\t\t.line\n\t\t\t.filter(column => typeMapping.hasOwnProperty(column.type))\n\t\t\t.map(column => ({\n\t\t\t\tkey: column.key,\n\t\t\t\ttitle: column.title,\n\t\t\t\ttype: column.type\n\t\t\t}));\n\t}\n\n\tcolumnMap(): ColumnMap {\n\t\treturn this.columns().reduce((memo, column) => {\n\t\t\tmemo[column.key] = column;\n\t\t\treturn memo;\n\t\t}, {});\n\t}\n\n\tsubmit(expression) {\n\t\tconst model = this.model;\n\t\tmodel.filter({\n\t\t\tby: expression\n\t\t}, {\n\t\t\t\tsource: 'query-builder.service'\n\t\t\t});\n\t}\n\n\tsuggest(key, skip, take, search, selection?: Array<string>): Promise<string[]> {\n\t\tselection = (selection || []).map(item => ('' + item).toLowerCase());\n\n\t\tconst model = this.model;\n\t\tconst columnMap = columnService.map(model.columnList().line);\n\t\tconst column = columnMap[key];\n\t\tif (!column) {\n\t\t\tthrow new AppError('query-builder.service', `Column ${key} is not found`);\n\t\t}\n\n\t\tconst getValue = getFactory(column);\n\t\treturn new Promise(resolve => {\n\t\t\tconst view = model\n\t\t\t\t.data()\n\t\t\t\t.rows\n\t\t\t\t.map(getValue)\n\t\t\t\t.filter(item =>\n\t\t\t\t\t!isUndefined(item) &&\n\t\t\t\t\titem !== '' &&\n\t\t\t\t\titem !== null &&\n\t\t\t\t\tselection.indexOf(('' + item).toLowerCase()) < 0\n\t\t\t\t);\n\n\t\t\tconst uniqueView = uniq(view);\n\t\t\tconst sortedView = uniqueView.sort();\n\t\t\tconst searchText = ('' + search).toLowerCase();\n\t\t\tconst filterView = searchText\n\t\t\t\t? sortedView.filter(x => ('' + x).toLowerCase().indexOf(searchText) >= 0)\n\t\t\t\t: sortedView;\n\n\t\t\tconst toggleView = filterView.length ? filterView : sortedView;\n\t\t\tconst pageView = toggleView.slice(skip, take);\n\t\t\tresolve(pageView);\n\t\t});\n\t}\n\n\tbuild(): IQueryBuilderSchema {\n\t\tconst statements = [\n\t\t\t{\n\t\t\t\ttype: 'label',\n\t\t\t\ttemplateKey: 'plugin-eb-label.tpl.html'\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'input',\n\t\t\t\ttemplateKey: 'plugin-eb-input.tpl.html'\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'select',\n\t\t\t\ttemplateKey: 'plugin-eb-select.tpl.html'\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'button',\n\t\t\t\ttemplateKey: 'plugin-eb-button.tpl.html'\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'iconButton',\n\t\t\t\ttemplateKey: 'plugin-eb-icon-button.tpl.html'\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'autocomplete',\n\t\t\t\ttemplateKey: 'plugin-eb-autocomplete.tpl.html'\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'multiselect',\n\t\t\t\ttemplateKey: 'plugin-eb-multiselect.tpl.html'\n\t\t\t}\n\t\t];\n\n\t\tconst settings = {\n\t\t\tdefaults: {\n\t\t\t\tisValid: function () {\n\t\t\t\t\treturn !this.validate || !(this.state = this.validate()).length;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn new ExpressionBuilder(settings)\n\t\t\t.build<IQueryBuilderSchema>(statements);\n\t}\n}\n","import { AppError } from 'ng2-qgrid/core/infrastructure/error';\r\nimport { cloneDeep } from 'ng2-qgrid/core/utility/kit';\r\nimport { camelCaseMapping as camelCase } from './operator';\r\n\r\nexport function visit(item) {\r\n\tswitch (item.id) {\r\n\t\tcase '#root':\r\n\t\t\treturn visit(item.children[0]);\r\n\t\tcase '#logical':\r\n\t\t\tconst group = visitGroup(item);\r\n\t\t\tif (group) {\r\n\t\t\t\tif (!(group.left || group.right)) {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn group;\r\n\t\tcase '#condition':\r\n\t\t\treturn visitCondition(item);\r\n\t\tdefault:\r\n\t\t\tthrow new AppError('converter', `Invalid kind ${item.kind}`);\r\n\t}\r\n}\r\n\r\nfunction visitGroup(node) {\r\n\tconst line = node.line;\r\n\tconst opExpr = find(line, '#logical-op', '#logical-op');\r\n\tconst children = node.children.filter(notPlaceholder).map(visit);\r\n\r\n\tif (children.length === 0) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tif (children.length === 1) {\r\n\t\treturn {\r\n\t\t\tkind: 'group',\r\n\t\t\top: opExpr.value.toLowerCase(),\r\n\t\t\tleft: children[0],\r\n\t\t\tright: null\r\n\t\t};\r\n\t}\r\n\r\n\treturn children\r\n\t\t.slice(1)\r\n\t\t.reduce((memo, item) => ({\r\n\t\t\tkind: 'group',\r\n\t\t\top: opExpr.value.toLowerCase(),\r\n\t\t\tleft: memo,\r\n\t\t\tright: item\r\n\t\t}), children[0]);\r\n}\r\n\r\nfunction visitCondition(node) {\r\n\tconst line = node.line;\r\n\tconst opExpr = find(line, '#operator', '#operator');\r\n\tconst value = opExpr.value.toUpperCase();\r\n\r\n\tlet condition;\r\n\tswitch (value) {\r\n\t\tcase 'IS NOT EMPTY':\r\n\t\tcase 'IS EMPTY':\r\n\t\t\tcondition = visitUnary(line, opExpr.value);\r\n\t\t\tbreak;\r\n\t\tcase 'EQUALS':\r\n\t\tcase 'NOT EQUALS':\r\n\t\tcase 'GREATER OR EQ. TO':\r\n\t\tcase 'GREATER THAN':\r\n\t\tcase 'LESS OR EQ. TO':\r\n\t\tcase 'LESS THAN':\r\n\t\tcase 'LIKE':\r\n\t\tcase 'NOT LIKE':\r\n\t\tcase 'STARTS WITH':\r\n\t\tcase 'ENDS WITH':\r\n\t\t\tcondition = visitBinary(line, opExpr.value);\r\n\t\t\tbreak;\r\n\t\tcase 'BETWEEN':\r\n\t\t\tcondition = visitBetween(line);\r\n\t\t\tbreak;\r\n\t\tcase 'IN':\r\n\t\t\tcondition = visitIn(line);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tthrow new AppError('converter', `Invalid operation ${value}`);\r\n\t}\r\n\r\n\tcondition.kind = 'condition';\r\n\treturn condition;\r\n}\r\n\r\nfunction visitUnary(line, op) {\r\n\tconst left = visitField(line);\r\n\r\n\treturn {\r\n\t\tleft: left.value,\r\n\t\top: camelCase[op.toUpperCase()]\r\n\t};\r\n}\r\n\r\nfunction visitBinary(line, op) {\r\n\tconst left = visitField(line);\r\n\tconst right = find(line, '#operand', '#value') || find(line, '#fieldRight');\r\n\r\n\treturn {\r\n\t\tleft: left.value,\r\n\t\top: camelCase[op.toUpperCase()],\r\n\t\tright: right.value\r\n\t};\r\n}\r\n\r\nfunction visitIn(line) {\r\n\tconst left = visitField(line);\r\n\tconst right = find(line, '#operand', '#in-operand') || find(line, '#fieldRight');\r\n\r\n\treturn {\r\n\t\tleft: left.value,\r\n\t\top: 'in',\r\n\t\tright: cloneDeep(right.values) || right.value\r\n\t};\r\n}\r\n\r\nfunction visitBetween(line) {\r\n\tconst left = visitField(line);\r\n\tconst from = find(line, '#operand', '#from') || find(line, '#fieldFrom');\r\n\tconst to = find(line, '#operand', '#to') || find(line, '#fieldTo');\r\n\r\n\treturn {\r\n\t\tleft: left.value,\r\n\t\top: 'between',\r\n\t\tright: [from.value, to.value]\r\n\t};\r\n}\r\n\r\nfunction visitField(line) {\r\n\treturn find(line, '#field') || find(line, '#fieldLeft');\r\n}\r\n\r\nfunction notPlaceholder(node) {\r\n\treturn !node.attributes.placeholder;\r\n}\r\n\r\nfunction find(line, groupId: string, exprId?: string) {\r\n\tconst group = findById(line, groupId);\r\n\tif (!group) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn findById(group.expressions, exprId || groupId);\r\n}\r\n\r\nfunction findById(items, id: string) {\r\n\tconst result = items.filter(item => item.id === id);\r\n\tconst length = result.length;\r\n\r\n\tif (length === 1) {\r\n\t\treturn result[0];\r\n\t}\r\n\r\n\tif (length > 1) {\r\n\t\tthrow new AppError('converter', `Ambiguous id ${id}`);\r\n\t}\r\n\r\n\treturn null;\r\n}\r\n","function swap(inst: { [key: string]: string }): { [key: string]: string } {\n\tconst result = {};\n\tfor (const prop in inst) {\n\t\tif (inst.hasOwnProperty(prop)) {\n\t\t\tresult[inst[prop]] = prop;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nconst commonOperators = [\n\t'EQUALS',\n\t'NOT EQUALS',\n\t'IN',\n\t'IS EMPTY',\n\t'IS NOT EMPTY'\n];\n\nconst oneToOneCommonOperators = [\n\t'EQUALS',\n\t'NOT EQUALS'\n];\n\nconst textOperators = [\n\t'LIKE',\n\t'NOT LIKE',\n\t'STARTS WITH',\n\t'ENDS WITH'\n];\n\nconst numberOperators = [\n\t'BETWEEN',\n\t'GREATER THAN',\n\t'LESS THAN',\n\t'GREATER OR EQ. TO',\n\t'LESS OR EQ. TO'\n];\n\nconst oneToOneNumberOperators = [\n\t'GREATER THAN',\n\t'LESS THAN',\n\t'GREATER OR EQ. TO',\n\t'LESS OR EQ. TO'\n];\n\nexport const camelCaseMapping = {\n\t'IS EMPTY': 'isNull',\n\t'IS NOT EMPTY': 'isNotNull',\n\t'EQUALS': 'equals',\n\t'NOT EQUALS': 'notEquals',\n\t'GREATER OR EQ. TO': 'greaterThanOrEquals',\n\t'LESS OR EQ. TO': 'lessThanOrEquals',\n\t'GREATER THAN': 'greaterThan',\n\t'LESS THAN': 'lessThan',\n\t'LIKE': 'like',\n\t'NOT LIKE': 'notLike',\n\t'STARTS WITH': 'startsWith',\n\t'ENDS WITH': 'endsWith',\n\t'IN': 'in',\n\t'BETWEEN': 'between'\n};\n\nexport const typeMapping = {\n\tbool: oneToOneCommonOperators,\n\tid: commonOperators.concat(textOperators),\n\ttext: commonOperators.concat(textOperators),\n\temail: commonOperators.concat(textOperators),\n\turl: commonOperators.concat(textOperators),\n\tpassword: commonOperators.concat(textOperators),\n\tnumber: commonOperators.concat(numberOperators),\n\tdate: commonOperators.concat(numberOperators),\n\ttime: commonOperators.concat(numberOperators),\n\tcurrency: commonOperators.concat(numberOperators)\n};\n\nexport const oneToOneMapping = {\n\tbool: oneToOneCommonOperators,\n\tid: oneToOneCommonOperators.concat(textOperators),\n\ttext: oneToOneCommonOperators.concat(textOperators),\n\temail: oneToOneCommonOperators.concat(textOperators),\n\turl: oneToOneCommonOperators.concat(textOperators),\n\tpassword: oneToOneCommonOperators.concat(textOperators),\n\tnumber: oneToOneCommonOperators.concat(oneToOneNumberOperators),\n\tdate: oneToOneCommonOperators.concat(oneToOneNumberOperators),\n\ttime: oneToOneCommonOperators.concat(oneToOneNumberOperators),\n\tcurrency: oneToOneCommonOperators.concat(oneToOneNumberOperators)\n};\n\nexport const labelMapping = swap(camelCaseMapping);\n","import { QueryBuilderService } from '../query-builder.service';\r\n\r\nexport function suggestFactory(service: QueryBuilderService, name: string) {\r\n\treturn function (node, line) {\r\n\t\tconst search = this.value == null ? '' : ('' + this.value).toLowerCase();\r\n\t\tconst field = line.get(name).expressions[0].value;\r\n\t\treturn service.suggest(field, 0, 10, search);\r\n\t};\r\n}\r\n\r\nexport function suggestsFactory(service: QueryBuilderService, name: string) {\r\n\treturn function (node, line) {\r\n\t\tconst search = this.search;\r\n\t\tconst field = line.get(name).expressions[0].value;\r\n\t\tconst selection =\r\n\t\t\t(this.values || [])\r\n\t\t\t\t.map(item => ('' + item).toLowerCase());\r\n\r\n\t\treturn new Promise((resolve, reject) =>\r\n\t\t\tservice\r\n\t\t\t\t.suggest(field, 0, 10, search, selection)\r\n\t\t\t\t.then(items => {\r\n\t\t\t\t\tconst result = selection.length\r\n\t\t\t\t\t\t? items.filter(item => selection.indexOf(('' + item).toLowerCase()) < 0)\r\n\t\t\t\t\t\t: items;\r\n\t\t\t\t})\r\n\t\t\t\t.catch(ex => reject(ex))\r\n\t\t);\r\n\t};\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AppError } from 'ng2-qgrid/core/infrastructure/error';\r\nimport { isArray } from 'ng2-qgrid/core/utility/kit';\r\nimport { Column, QueryBuilderService, ColumnMap } from '../query-builder.service';\r\nimport { createValidator } from 'ng2-qgrid/core/validation/validation.service';\r\n\r\nexport class Validator {\r\n\tprivate columnMap: ColumnMap;\r\n\tprivate trueResult: Array<string> = [];\r\n\tprivate validators: { [key: string]: (value: any) => Array<string> } = {};\r\n\tprivate rules = {\r\n\t\t'bool': ['required'],\r\n\t\t'currency': ['required', 'decimal'],\r\n\t\t'date': ['required', 'iso_date'],\r\n\t\t'email': ['required' /*, 'email'*/],\r\n\t\t'file': ['required'],\r\n\t\t'id': ['required'],\r\n\t\t'image': ['required'],\r\n\t\t'number': ['required', 'decimal'],\r\n\t\t'password': ['required'],\r\n\t\t'url': ['required'/*, 'url'*/],\r\n\t\t'reference': ['required'],\r\n\t\t'text': ['required', 'string'],\r\n\t\t'time': ['required']\r\n\t};\r\n\r\n\tconstructor(service: QueryBuilderService) {\r\n\t\tthis.columnMap = service.columnMap();\r\n\t}\r\n\r\n\tfor(key: string) {\r\n\t\tconst validators = this.validators;\r\n\t\tif (validators.hasOwnProperty('key')) {\r\n\t\t\treturn validators[key];\r\n\t\t}\r\n\r\n\t\tconst column = this.columnMap[key];\r\n\t\tif (!column) {\r\n\t\t\tthrow new AppError('validator', `Can't find column ${key}`);\r\n\t\t}\r\n\r\n\t\tconst trueResult = this.trueResult;\r\n\t\tconst id = column.type;\r\n\t\tconst rule = this.rules[id];\r\n\t\tlet validate = (value: any) => trueResult;\r\n\t\tif (rule) {\r\n\t\t\tconst schema = { [id]: rule };\r\n\t\t\tvalidate = function test(value): Array<string> {\r\n\t\t\t\tif (isArray(value)) {\r\n\t\t\t\t\tconst result = [];\r\n\t\t\t\t\tfor (const item of value) {\r\n\t\t\t\t\t\tresult.push(...test(item));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst target = { [id]: value };\r\n\t\t\t\tconst validator = createValidator(schema);\r\n\t\t\t\tconst isValid = validator.validate(target);\r\n\t\t\t\tif (isValid) {\r\n\t\t\t\t\treturn trueResult;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst error = validator.getErrors()[id];\r\n\t\t\t\treturn isArray(error) ? error : [error];\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tvalidators[key] = validate;\r\n\t\treturn validate;\r\n\t}\r\n}\r\n","import { typeMapping as operators } from './operator';\nimport { suggestFactory, suggestsFactory } from './suggest.service';\nimport { QueryBuilderService, IQueryBuilderSchema } from '../query-builder.service';\nimport { isArray, noop } from 'ng2-qgrid/core/utility/kit';\nimport { Validator } from './validator';\n\nexport const getValue = (line, id, props) => {\n\tconst group = line.get(id);\n\tif (group) {\n\t\tif (group.expressions.length === 1) {\n\t\t\tconst expr = group.expressions[0];\n\t\t\tconst prop = props.filter(p => expr.hasOwnProperty(p))[0];\n\t\t\tif (prop) {\n\t\t\t\tconst value = expr[prop];\n\t\t\t\tif (isArray(value) && value.length) {\n\t\t\t\t\treturn value[0];\n\t\t\t\t}\n\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n};\n\nexport class WhereSchema {\n\tconstructor(private service: QueryBuilderService) {\n\t}\n\n\tfactory(): IQueryBuilderSchema {\n\t\tconst service = this.service;\n\t\tconst suggest = suggestFactory(service, '#field');\n\t\tconst suggests = suggestsFactory(service, '#field');\n\t\tconst validator = new Validator(service);\n\n\t\treturn this.service.build()\n\t\t\t.node('#logical', function (logical) {\n\t\t\t\tlogical\n\t\t\t\t\t.attr('serialize', {\n\t\t\t\t\t\t'#logical-op': ['value']\n\t\t\t\t\t})\n\t\t\t\t\t.attr('class', {\n\t\t\t\t\t\t'qb-logical': true,\n\t\t\t\t\t\t'qb-and': function (node) {\n\t\t\t\t\t\t\tconst op = node.line.get('#logical-op');\n\t\t\t\t\t\t\treturn op.expressions[0].value === 'AND';\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'qb-or': function (node) {\n\t\t\t\t\t\t\tconst op = node.line.get('#logical-op');\n\t\t\t\t\t\t\treturn op.expressions[0].value === 'OR';\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.select('#logical-op', {\n\t\t\t\t\t\tclasses: ['qb-operation'],\n\t\t\t\t\t\toptions: ['AND', 'OR'],\n\t\t\t\t\t\tvalue: 'AND'\n\t\t\t\t\t})\n\t\t\t\t\t.node('#condition', function (condition) {\n\t\t\t\t\t\tcondition\n\t\t\t\t\t\t\t.attr('serialize', {\n\t\t\t\t\t\t\t\t'#field': ['value'],\n\t\t\t\t\t\t\t\t'#operator': ['value'],\n\t\t\t\t\t\t\t\t'#value': ['value'],\n\t\t\t\t\t\t\t\t'#from': ['value'],\n\t\t\t\t\t\t\t\t'#to': ['value'],\n\t\t\t\t\t\t\t\t'#in-operand': ['values']\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.select('#field', {\n\t\t\t\t\t\t\t\tclasses: ['qb-field'],\n\t\t\t\t\t\t\t\toptions: service.columns().map(c => c.key),\n\t\t\t\t\t\t\t\tvalue: service.columns().length ? service.columns()[0].key : '',\n\t\t\t\t\t\t\t\tgetLabel: function (node, line, key) {\n\t\t\t\t\t\t\t\t\tconst column = service.columns().filter(c => c.key === key)[0];\n\t\t\t\t\t\t\t\t\treturn (column && column.title) || null;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tgetType: function (node, line, key) {\n\t\t\t\t\t\t\t\t\tconst column = service.columns().filter(c => c.key === key)[0];\n\t\t\t\t\t\t\t\t\treturn (column && column.type) || null;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tchange: function (node, line) {\n\t\t\t\t\t\t\t\t\tconst field = this.value;\n\t\t\t\t\t\t\t\t\tconst type = this.getType(field);\n\t\t\t\t\t\t\t\t\tconst ops = operators[type] || [];\n\t\t\t\t\t\t\t\t\tconst op = line.get('#operator').expressions[0];\n\n\t\t\t\t\t\t\t\t\tif (ops.indexOf(op.value) < 0) {\n\t\t\t\t\t\t\t\t\t\top.value = ops.length ? ops[0] : null;\n\t\t\t\t\t\t\t\t\t\top.change();\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tconst operand = line.get('#operand').expressions[0];\n\t\t\t\t\t\t\t\t\t\tif (operand.validate) {\n\t\t\t\t\t\t\t\t\t\t\tconst result = operand.validate();\n\t\t\t\t\t\t\t\t\t\t\tif (result.length) {\n\t\t\t\t\t\t\t\t\t\t\t\toperand.value = null;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\toperand.value = null;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.select('#operator', {\n\t\t\t\t\t\t\t\tclasses: ['qb-operator'],\n\t\t\t\t\t\t\t\tgetOptions: function (node, line) {\n\t\t\t\t\t\t\t\t\tconst field = line.get('#field').expressions[0];\n\t\t\t\t\t\t\t\t\tconst name = field.value;\n\t\t\t\t\t\t\t\t\tconst type = field.getType(name);\n\n\t\t\t\t\t\t\t\t\treturn type ? operators[type] : [];\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tvalue: 'EQUALS',\n\t\t\t\t\t\t\t\tchange: function (node, line) {\n\t\t\t\t\t\t\t\t\tswitch (this.value.toLowerCase()) {\n\t\t\t\t\t\t\t\t\t\tcase 'equals':\n\t\t\t\t\t\t\t\t\t\tcase 'not equals':\n\t\t\t\t\t\t\t\t\t\tcase 'greater than':\n\t\t\t\t\t\t\t\t\t\tcase 'less than':\n\t\t\t\t\t\t\t\t\t\tcase 'greater or eq. to':\n\t\t\t\t\t\t\t\t\t\tcase 'less or eq. to':\n\t\t\t\t\t\t\t\t\t\tcase 'like':\n\t\t\t\t\t\t\t\t\t\tcase 'not like':\n\t\t\t\t\t\t\t\t\t\tcase 'starts with':\n\t\t\t\t\t\t\t\t\t\tcase 'ends with':\n\t\t\t\t\t\t\t\t\t\t\tconst value = getValue(line, '#operand', ['value', 'values']);\n\n\t\t\t\t\t\t\t\t\t\t\tline.put('#operand', node, function (schema) {\n\t\t\t\t\t\t\t\t\t\t\t\tschema.input('#value', {\n\t\t\t\t\t\t\t\t\t\t\t\t\tclasses: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'qb-operand': true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'qb-has-value': function () {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn !!this.value;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'qb-invalid': function (n) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn !this.isValid(n);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidate: function () {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst field = line.get('#field').expressions[0].value;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn validator.for(field)(this.value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholderText: 'Select value',\n\t\t\t\t\t\t\t\t\t\t\t\t\tsuggest: suggest,\n\t\t\t\t\t\t\t\t\t\t\t\t\toptions: null,\n\t\t\t\t\t\t\t\t\t\t\t\t\trefresh: function (n, l) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.options = this.suggest(n, l);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\tcase 'between':\n\t\t\t\t\t\t\t\t\t\t\tline.put('#operand', node, function (operand) {\n\t\t\t\t\t\t\t\t\t\t\t\toperand\n\t\t\t\t\t\t\t\t\t\t\t\t\t.input('#from', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclasses: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'qb-operand': true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'qb-has-value': function () {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn !!this.value;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'qb-invalid': function (n) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn !this.isValid(n);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidate: function () {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst field = line.get('#field').expressions[0].value;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn validator.for(field)(this.value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptions: suggest,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: null,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholderText: 'Select value'\n\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t.label('#and', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclasses: ['qb-operand', 'qb-operand-and-label'],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext: 'AND'\n\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t.input('#to', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclasses: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'qb-operand': true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'qb-has-value': function () {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn !!this.value;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'qb-invalid': function (n) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn !this.isValid(n);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: null,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidate: function () {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst field = line.get('#field').expressions[0].value;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn validator.for(field)(this.value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholderText: 'Select value',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsuggest: suggest,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptions: null,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trefresh: function (n, l) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.options = this.suggest(n, l);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\tcase 'in':\n\t\t\t\t\t\t\t\t\t\t\tline.put('#operand', node, function (schema) {\n\t\t\t\t\t\t\t\t\t\t\t\tschema\n\t\t\t\t\t\t\t\t\t\t\t\t\t.label('#in-open', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext: '('\n\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t.multiselect('#in-operand', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclasses: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'qb-operand': true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'qb-has-value': function () {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn !!this.values.length;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'qb-invalid': function (n) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn !this.isValid(n);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidate: function () {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst field = line.get('#field').expressions[0].value;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn validator.for(field)(this.values);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalues: [],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptions: suggests,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholderText: 'Select value',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tadd: function (n, l, v) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (v && this.values.indexOf(v) < 0) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.values.push(v);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t.label('#in-close', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext: ')'\n\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\tcase 'is empty':\n\t\t\t\t\t\t\t\t\t\tcase 'is not empty':\n\t\t\t\t\t\t\t\t\t\t\tline.put('#operand', node, noop);\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.group('#operand', function (schema) {\n\t\t\t\t\t\t\t\tschema.autocomplete('#value', {\n\t\t\t\t\t\t\t\t\tclasses: {\n\t\t\t\t\t\t\t\t\t\t'qb-operand': true,\n\t\t\t\t\t\t\t\t\t\t'qb-has-value': function () {\n\t\t\t\t\t\t\t\t\t\t\treturn !!this.value;\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t'qb-invalid': function (node) {\n\t\t\t\t\t\t\t\t\t\t\treturn !this.isValid(node);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tvalue: null,\n\t\t\t\t\t\t\t\t\tvalidate: function (node, line) {\n\t\t\t\t\t\t\t\t\t\tconst field = line.get('#field').expressions[0].value;\n\t\t\t\t\t\t\t\t\t\treturn validator.for(field)(this.value);\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tplaceholderText: 'Select value',\n\t\t\t\t\t\t\t\t\tsuggest: suggest,\n\t\t\t\t\t\t\t\t\toptions: null,\n\t\t\t\t\t\t\t\t\trefresh: function (node, line) {\n\t\t\t\t\t\t\t\t\t\tthis.options = this.suggest(node, line);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t});\n\t}\n}\n","module.exports = \"<ng-container key=\\\"plugin-reference-editor.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\r\\n\"","import { Component, Input, EventEmitter, Output, AfterViewInit, ChangeDetectionStrategy } from '@angular/core';\nimport { Command } from 'ng2-qgrid/core/command/command';\nimport { SelectionService } from 'ng2-qgrid/core/selection/selection.service';\nimport { NgComponent } from '../../infrastructure/component/ng.component';\nimport { CellView } from 'ng2-qgrid/core/scene/view/cell.view';\nimport { Model } from 'ng2-qgrid/core/infrastructure/model';\n\n@Component({\n\tselector: 'q-grid-reference-editor',\n\ttemplateUrl: './reference-editor.component.html'\n})\nexport class ReferenceEditorComponent extends NgComponent implements AfterViewInit {\n\tprivate state: any;\n\n\t@Input() caption: string;\n\t@Input() cell: CellView;\n\t@Output() valueChange = new EventEmitter<any>();\n\t@Output() afterSubmit = new EventEmitter();\n\t@Output() afterCancel = new EventEmitter();\n\n\treference: { commit: Command, cancel: Command };\n\tmodel: Model;\n\n\tcontext: { $implicit: ReferenceEditorComponent } = {\n\t\t$implicit: this\n\t};\n\n\tsubmit = new Command();\n\tcancel = new Command();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\t@Input() get value() {\n\t\treturn this.state;\n\t}\n\n\tset value(value) {\n\t\tif (value !== this.state) {\n\t\t\tthis.state = value;\n\t\t\tthis.valueChange.emit(value);\n\t\t}\n\t}\n\n\tngAfterViewInit() {\n\t\tconst { model } = this;\n\t\tconst { commit, cancel } = this.reference;\n\n\t\tconst { commitShortcuts, cancelShortcuts } = model.edit();\n\t\tconst selectionService = new SelectionService(model);\n\n\t\t// TODO: think how to get rid of this shit.\n\t\tsetTimeout(() => {\n\t\t\tthis.submit = new Command({\n\t\t\t\tshortcut: commitShortcuts.form,\n\t\t\t\tcanExecute: () => {\n\t\t\t\t\tconst { items } = model.selection();\n\t\t\t\t\tconst entries = selectionService.lookup(items);\n\t\t\t\t\tconst context = { items, entries };\n\n\t\t\t\t\treturn commit.canExecute(context);\n\t\t\t\t},\n\t\t\t\texecute: () => {\n\t\t\t\t\tconst { items } = model.selection();\n\t\t\t\t\tconst entries = selectionService.lookup(items);\n\t\t\t\t\tconst context = { items, entries };\n\t\t\t\t\tif (commit.execute(context) !== false) {\n\t\t\t\t\t\tthis.afterSubmit.emit();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.afterCancel.emit();\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.cancel = new Command({\n\t\t\t\tshortcut: cancelShortcuts.form || cancelShortcuts.$default,\n\t\t\t\tcanExecute: () => cancel.canExecute(),\n\t\t\t\texecute: () => {\n\t\t\t\t\tif (cancel.execute() !== false) {\n\t\t\t\t\t\tthis.afterCancel.emit();\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst { shortcut, manager } = model.action();\n\t\t\tthis.using(shortcut.register(manager, [this.submit, this.cancel]));\n\t\t}, 0);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { ReferenceEditorComponent } from './reference-editor.component';\nimport { ReferenceComponent } from './reference.component';\nimport { TemplateModule } from '../../template/template.module';\n\n@NgModule({\n\tdeclarations: [ReferenceEditorComponent, ReferenceComponent],\n\texports: [ReferenceEditorComponent, ReferenceComponent],\n\timports: [TemplateModule]\n})\nexport class ReferenceEditorModule {}\n","module.exports = \"<ng-container key=\\\"plugin-reference.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\n\"","import { Component, OnInit, Input, EventEmitter, Output, ChangeDetectionStrategy } from '@angular/core';\nimport { NgComponent } from '../../infrastructure/component/ng.component';\nimport { CellView } from 'ng2-qgrid/core/scene/view/cell.view';\nimport { Command } from 'ng2-qgrid/core/command/command';\nimport { getFactory as valueFactory } from 'ng2-qgrid/core/services/value';\nimport { isArray, isUndefined } from 'ng2-qgrid/core/utility/kit';\nimport { Model } from 'ng2-qgrid/core/infrastructure/model';\nimport { SelectionService } from 'ng2-qgrid/core/selection/selection.service';\nimport { ModelBuilderService } from '../../main/model/model-builder.service';\n\n@Component({\n\tselector: 'q-grid-reference',\n\ttemplateUrl: './reference.component.html'\n})\nexport class ReferenceComponent extends NgComponent implements OnInit {\n\tprivate _value: any;\n\tprivate _model: Model;\n\tprivate _reference: {\n\t\tcommit: Command,\n\t\tcancel: Command,\n\t\tvalue: any\n\t};\n\n\t@Input() autofocus = false;\n\t@Input() cell: CellView;\n\n\tget value() { return this._value; }\n\t@Output() valueChange = new EventEmitter<any>();\n\t@Input() set value(value) {\n\t\tif (value !== this._value) {\n\t\t\tthis._value = value;\n\t\t\tthis.valueChange.emit(value);\n\t\t}\n\t}\n\n\tget model() { return this._model; }\n\t@Output() modelChange = new EventEmitter<Model>();\n\t@Input() set model(value) {\n\t\tif (value !== this._model) {\n\t\t\tthis._model = value;\n\t\t\tthis.modelChange.emit(value);\n\t\t}\n\t}\n\n\tget reference() { return this._reference; }\n\t@Output() referenceChange = new EventEmitter<{ commit: Command, cancel: Command, value: any }>();\n\t@Input() set reference(value) {\n\t\tif (value !== this._reference) {\n\t\t\tthis._reference = value;\n\t\t\tthis.referenceChange.emit(value);\n\t\t}\n\t}\n\n\tcontext: { $implicit: ReferenceComponent } = {\n\t\t$implicit: this\n\t};\n\n\tconstructor(private modelBuilder: ModelBuilderService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.reference = {\n\t\t\tcommit: new Command({ execute: e => this.value = e.entries }),\n\t\t\tcancel: new Command(),\n\t\t\tvalue: this.value\n\t\t};\n\n\t\tthis.model = this.cell.column.editorOptions.modelFactory({\n\t\t\treference: this.reference,\n\t\t\trow: this.cell.row,\n\t\t\tcolumn: this.cell.column,\n\t\t\tgetValue: valueFactory(this.cell.column),\n\t\t\tcreateDefaultModel: () => this.modelBuilder.build(),\n\t\t} as any);\n\n\t\tconst selectionService = new SelectionService(this.model);\n\t\tthis.using(this.model.dataChanged.watch((e, off) => {\n\t\t\tif (e.hasChanges('rows') && e.state.rows.length > 0) {\n\t\t\t\toff();\n\n\t\t\t\tif (!this.model.selection().items.length) {\n\t\t\t\t\tconst { value } = this.reference;\n\t\t\t\t\tif (!isUndefined(value)) {\n\t\t\t\t\t\tconst entries = isArray(value) ? value : [value];\n\t\t\t\t\t\tconst items = selectionService.map(entries);\n\t\t\t\t\t\tthis.model.selection({ items }, { source: 'reference.component' });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tthis.using(this.model.selectionChanged.watch(e => {\n\t\t\tif (e.tag.source === 'reference.component') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (e.hasChanges('items')) {\n\t\t\t\tconst entries = selectionService.lookup(e.state.items);\n\t\t\t\tthis.value = entries;\n\t\t\t}\n\t\t}));\n\t}\n}\n","import { Component, Input, OnInit, SimpleChanges, OnChanges, ChangeDetectionStrategy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { RestView } from 'ng2-qgrid/plugin/rest/rest.view';\nimport { PluginService } from '../plugin.service';\n\n@Component({\n\tselector: 'q-grid-rest',\n\ttemplate: '',\n\tproviders: [PluginService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RestComponent implements OnInit, OnChanges {\n\t@Input('url') restUrl: string;\n\t@Input('method') restMethod: string;\n\t@Input('serialize') restSerialize: (x: any) => any;\n\n\tcontext: { $implicit: RestView };\n\n\tconstructor(private http: HttpClient, private plugin: PluginService) {\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.plugin.keep(changes, ['rest']);\n\t}\n\n\tngOnInit() {\n\t\tconst rest = new RestView(this.plugin.model, {\n\t\t\tget: (url, params) => this.http.get(url, { params }).toPromise(),\n\t\t\tpost: (url, data) => this.http.post(url, { data }).toPromise()\n\t\t});\n\n\t\tthis.context = { $implicit: rest };\n\t}\n}\n","import { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RestComponent } from './rest.component';\r\n\r\n@NgModule({\r\n\timports: [HttpClientModule],\r\n\tdeclarations: [RestComponent],\r\n\texports: [RestComponent]\r\n})\r\nexport class RestModule {\r\n}\r\n","module.exports = \"<ng-container key=\\\"plugin-status-bar.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\r\\n\"","import { Component, ChangeDetectionStrategy, ChangeDetectorRef, OnInit } from '@angular/core';\nimport { TemplateHostService } from '../../template/template-host.service';\nimport { PluginService } from '../plugin.service';\n\n@Component({\n\tselector: 'q-grid-status-bar',\n\ttemplateUrl: './status-bar.component.html',\n\tproviders: [TemplateHostService, PluginService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StatusBarComponent implements OnInit {\n\tcontext: { $implicit: StatusBarComponent } = {\n\t\t$implicit: this\n\t};\n\n\tconstructor(\n\t\tprivate plugin: PluginService,\n\t\tprivate cd: ChangeDetectorRef,\n\t\ttemplateHost: TemplateHostService) {\n\t\ttemplateHost.key = () => 'plugin-status-bar.tpl.html';\n\t}\n\n\tngOnInit() {\n\t\tconst { model } = this.plugin;\n\t\tmodel.focusChanged.on(() => this.cd.detectChanges());\n\t}\n\n\tget rowIndex() {\n\t\treturn this.plugin.model.focus().rowIndex;\n\t}\n\n\tget columnIndex() {\n\t\treturn this.plugin.model.focus().columnIndex;\n\t}\n}\n","import { NgModule } from '@angular/core';\r\nimport { TemplateModule } from '../../template/template.module';\r\nimport { StatusBarComponent } from './status-bar.component';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tStatusBarComponent\r\n\t],\r\n\texports: [\r\n\t\tStatusBarComponent\r\n\t],\r\n\timports: [\r\n\t\tTemplateModule\r\n\t]\r\n})\r\nexport class StatusBarModule {\r\n}\r\n","import { Directive, Input, ElementRef, NgZone, OnInit } from '@angular/core';\nimport { EventManager } from 'ng2-qgrid/core/infrastructure/event.manager';\nimport { EventListener } from 'ng2-qgrid/core/infrastructure/event.listener';\nimport { TabTrapComponent } from './tab-trap.component';\n\n@Directive({\n\tselector: '[q-grid-tab-trap-in]'\n})\nexport class TabtrapInDirective implements OnInit {\n\t@Input('q-grid-tab-trap-in') target;\n\t@Input('q-grid-tab-trap-host') host: TabTrapComponent;\n\n\tconstructor(private elementRef: ElementRef) {\n\t\telementRef.nativeElement.tabIndex = 0;\n\n\t\tconst listener = new EventListener(elementRef.nativeElement, new EventManager(this));\n\t\tlistener.on('focus', () => this.host.activate(this.target));\n\t}\n\n\tngOnInit() {\n\t\tthis.host.traps.set(this.target, this);\n\t}\n\n\tfocus() {\n\t\tthis.elementRef.nativeElement.focus();\n\t}\n}\n","module.exports = \"<ng-template>\\n    <ng-content></ng-content>\\n</ng-template>\\n\\n<ng-container key=\\\"plugin-tab-trap.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\n\"","import {\n\tComponent,\n\tTemplateRef,\n\tElementRef,\n\tInput,\n\tViewChild\n} from '@angular/core';\nimport { AppError } from 'ng2-qgrid/core/infrastructure/error';\nimport { EventListener } from 'ng2-qgrid/core/infrastructure/event.listener';\nimport { EventManager } from 'ng2-qgrid/core/infrastructure/event.manager';\nimport { Shortcut } from 'ng2-qgrid/core/shortcut/shortcut';\nimport { PluginService } from '../plugin.service';\n\n@Component({\n\tselector: 'q-grid-tab-trap',\n\ttemplateUrl: './tab-trap.component.html',\n\tproviders: [PluginService]\n})\nexport class TabTrapComponent {\n\tprivate isActivating = false;\n\n\t@ViewChild(TemplateRef) template: TemplateRef<any>;\n\t@Input() roundTrip = false;\n\n\tcontext: { $implicit: TabTrapComponent } = {\n\t\t$implicit: this\n\t};\n\n\ttraps = new Map<string, any>();\n\n\tconstructor(private plugin: PluginService, elementRef: ElementRef) {\n\t\tconst listener = new EventListener(elementRef.nativeElement, new EventManager(this));\n\t\tlistener.on('keydown', e => {\n\t\t\tconst code = Shortcut.translate(e);\n\t\t\tif (code === 'tab' || code === 'shift+tab') {\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\t});\n\t}\n\n\tactivate(target) {\n\t\tif (this.isActivating) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.isActivating = true;\n\t\ttry {\n\t\t\tif (this.roundTrip) {\n\t\t\t\tthis.goRound(target);\n\t\t\t} else {\n\t\t\t\tthis.exit(target);\n\t\t\t}\n\t\t} finally {\n\t\t\tthis.isActivating = false;\n\t\t}\n\t}\n\n\texit(target) {\n\t\tconst e = {\n\t\t\tkey: 'Tab',\n\t\t\tkeyCode: 9,\n\t\t\tshiftKey: target === 'start'\n\t\t};\n\n\t\tconst { model } = this.plugin;\n\t\tconst shortcut = model.action().shortcut;\n\t\tshortcut.keyDown(e, 'tab-trap');\n\t}\n\n\tgoRound(target) {\n\t\tswitch (target) {\n\t\t\tcase 'start': {\n\t\t\t\tconst end = this.traps.get('end');\n\t\t\t\tend.focus();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'end': {\n\t\t\t\tconst start = this.traps.get('start');\n\t\t\t\tstart.focus();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tthrow new AppError('tab.trap', `Invalid target ${target}`);\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\r\nimport { TabTrapComponent } from './tab-trap.component';\r\nimport { TemplateModule } from '../../template/template.module';\r\nimport { TabtrapInDirective } from './tab-trap-in.directive';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tTabTrapComponent,\r\n\t\tTabtrapInDirective\r\n\t],\r\n\texports: [\r\n\t\tTabTrapComponent,\r\n\t\tTabtrapInDirective\r\n\t],\r\n\timports: [\r\n\t\tTemplateModule\r\n\t]\r\n})\r\nexport class TabTrapModule {\r\n}\r\n","module.exports = \"<ng-container key=\\\"plugin-title.tpl.html\\\" [context]=\\\"context\\\"></ng-container>\\r\\n\"","import { Component, ChangeDetectionStrategy, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { PluginService } from '../plugin.service';\n\n// @deprecated\n@Component({\n\tselector: 'q-grid-title',\n\ttemplateUrl: './title.component.html',\n\tproviders: [PluginService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TitleComponent implements OnInit {\n\tcontext: { $implicit: TitleComponent } = {\n\t\t$implicit: this\n\t};\n\n\tconstructor(private plugin: PluginService, private cd: ChangeDetectorRef) {\n\t}\n\n\tngOnInit() {\n\t\tthis.plugin.model.gridChanged.on(() => this.cd.detectChanges());\n\t}\n\n\tget value() {\n\t\treturn this.plugin.model.grid().title;\n\t}\n}\n","import { NgModule } from '@angular/core';\r\nimport { TitleComponent } from './title.component';\r\nimport { TemplateModule } from '../../template/template.module';\r\n\r\n@NgModule({\r\n\tdeclarations: [TitleComponent],\r\n\texports: [TitleComponent],\r\n\timports: [TemplateModule]\r\n})\r\nexport class TitleModule {}\r\n","module.exports = \"<ng-template>\\n\\t<ng-content>\\n\\t</ng-content>\\n</ng-template>\"","import { Component, Input, OnChanges, SimpleChanges, TemplateRef, ViewChild } from '@angular/core';\nimport { PluginService } from '../plugin.service';\nimport { TemplateHostService } from '../../template/template-host.service';\n\n@Component({\n\tselector: 'q-grid-rule',\n\ttemplateUrl: './rule.component.html',\n\tproviders: [TemplateHostService, PluginService]\n})\nexport class RuleComponent implements OnChanges {\n\t@Input() for: string;\n\t@Input() key: string;\n\n\t// Common Rules\n\t@Input() required?: string;\n\t@Input('notEmptyList') not_empty_list?: string;\n\t@Input('anyObject') any_object?: string;\n\n\t// String Rules\n\t@Input('equal') eq?: string;\n\t@Input() string?: string;\n\t@Input('lengthBetween') length_between?: string;\n\t@Input('lengthEqual') length_equal?: string;\n\t@Input('minLength') min_length?: string;\n\t@Input('maxLength') max_length?: string;\n\t@Input('oneOf') one_of?: string;\n\t@Input('pattern') like?: string;\n\n\t// Numeric Rules\n\t@Input() integer?: string;\n\t@Input('positiveInteger') positive_integer?: string;\n\t@Input() decimal?: string;\n\t@Input('positiveDecimal') positive_decimal?: string;\n\t@Input('maxNumber') max_number?: string;\n\t@Input('minNumber') min_number?: string;\n\n\t// Special Rules\n\t@Input() email?: string;\n\t@Input() url?: string;\n\t@Input('isoDate') iso_date?: string;\n\t@Input('equalToField') equal_to_field?: string;\n\t@Input('listOf') list_of?: string;\n\n\t@ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n\n\tcontext: { $implicit: RuleComponent } = {\n\t\t$implicit: this\n\t};\n\n\tconstructor(\n\t\tprivate plugin: PluginService,\n\t\tprivate templateHost: TemplateHostService\n\t) {\n\t\tthis.templateHost.key = () => `rule`;\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tconst rule = {\n\t\t\tfor: this.for,\n\t\t\tkey: this.key\n\t\t};\n\n\t\tconst { model } = this.plugin;\n\t\tconst validation = model.validation;\n\t\tconst rules = Array.from(validation().rules);\n\n\t\tObject\n\t\t\t.keys(changes)\n\t\t\t.forEach(key => {\n\t\t\t\tif (!['for', 'key'].includes(key) && changes[key].firstChange) {\n\t\t\t\t\trule[key] = this[key];\n\t\t\t\t}\n\t\t\t});\n\n\t\trules.push(rule);\n\t\tvalidation({ rules });\n\t}\n}\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { PluginService } from '../plugin.service';\n\n@Component({\n\tselector: 'q-grid-validation',\n\ttemplate: '',\n\tproviders: [PluginService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ValidationComponent {\n\t@Input() type: string;\n}\n","import { NgModule } from '@angular/core';\nimport { ValidatorComponent } from './validator.component';\nimport { TemplateModule } from '../../template/template.module';\nimport { RuleComponent } from './rule.component';\nimport { ValidationComponent } from './validation.component';\n\n@NgModule({\n\tdeclarations: [\n\t\tValidationComponent,\n\t\tValidatorComponent,\n\t\tRuleComponent\n\t],\n\texports: [\n\t\tValidationComponent,\n\t\tValidatorComponent,\n\t\tRuleComponent\n\t],\n\timports: [\n\t\tTemplateModule\n\t]\n})\nexport class ValidationModule {\n}\n","module.exports = \"<ng-container key=\\\"plugin-validator.tpl.html\\\"\\n              [context]=\\\"context\\\"></ng-container>\\n\"","import { Component, Input, OnInit } from '@angular/core';\nimport { ValidatorView } from 'ng2-qgrid/plugin/validation/validator.view';\nimport { PluginService } from '../plugin.service';\nimport { TemplateHostService } from '../../template/template-host.service';\n\n@Component({\n\tselector: 'q-grid-validator',\n\ttemplateUrl: './validator.component.html',\n\tproviders: [TemplateHostService, PluginService]\n})\nexport class ValidatorComponent implements OnInit {\n\t@Input() value: string;\n\t@Input() key: string;\n\t@Input() type: string;\n\tcontext: { $implicit: ValidatorView };\n\n\tconstructor(\n\t\tprivate plugin: PluginService,\n\t\tprivate templateHost: TemplateHostService\n\t) {\n\t\tthis.templateHost.key = () => `validator`;\n\t}\n\n\tngOnInit() {\n\t\tconst { model } = this.plugin;\n\t\tconst view = new ValidatorView(model, this);\n\t\tthis.context = { $implicit: view };\n\t}\n}\n","// Main\nexport { GridModule } from './grid.module';\nexport { GridComponent } from './main/grid/grid.component';\nexport { Grid, GridService } from './main/grid/grid.service';\nexport { PluginService as GridPlugin, GridModel, GridEventArg, GridEvent, DomTable } from './plugins/plugin.service';\n\n// NG Pipe\nexport { HighlightPipe } from './pipes/highlight.pipe';\nexport { TimePipe } from './pipes/time.pipe';\nexport { FilterPipe } from './pipes/filter.pipe';\nexport { NumberPipe } from './pipes/number.pipe';\nexport { DatePipe } from './pipes/date.pipe';\nexport { CurrencyPipe } from './pipes/currency.pipe';\nexport { ArrayPipe } from './pipes/array.pipe';\nexport { PipeModule } from './pipes/pipe.module';\n\n// Infrastructure\nexport { Action } from 'ng2-qgrid/core/action/action';\nexport { Command } from 'ng2-qgrid/core/command/command';\nexport { Pipe } from 'ng2-qgrid/core/pipe/pipe';\nexport { PipeUnit } from 'ng2-qgrid/core/pipe/pipe.unit';\nexport { Node } from 'ng2-qgrid/core/node/node';\nexport { RowDetailsStatus } from 'ng2-qgrid/core/row-details/row.details.status';\nexport { FetchContext } from 'ng2-qgrid/core/fetch/fetch.context';\nexport { EditorOptions } from 'ng2-qgrid/core/column-type/editor.options';\nexport { Shortcut } from 'ng2-qgrid/core/shortcut/shortcut';\nexport { ShortcutDispatcher } from 'ng2-qgrid/core/shortcut/shortcut.dispatcher';\nexport { CommandManager } from 'ng2-qgrid/core/command/command.manager';\nexport { AppError as GridError } from 'ng2-qgrid/core/infrastructure/error';\n\n// Column\nexport { ArrayColumnModel as ArrayColumn } from 'ng2-qgrid/core/column-type/array.column';\nexport { BoolColumnModel as BoolColumn } from 'ng2-qgrid/core/column-type/bool.column';\nexport { CohortColumnModel as CohortColumn } from 'ng2-qgrid/core/column-type/cohort.column';\nexport { ColumnModel as Column } from 'ng2-qgrid/core/column-type/column.model';\nexport { CurrencyColumnModel as CurrencyColumn } from 'ng2-qgrid/core/column-type/currency.column';\nexport { DataColumnModel as DataColumn } from 'ng2-qgrid/core/column-type/data.column.model';\nexport { DateColumnModel as DateColumn } from 'ng2-qgrid/core/column-type/date.column';\nexport { EmailColumnModel as EmailColumn } from 'ng2-qgrid/core/column-type/email.column';\nexport { FileColumnModel as FileColumn } from 'ng2-qgrid/core/column-type/file.column';\nexport { FilterRowColumnModel as FilterRowColumn } from 'ng2-qgrid/core/column-type/filter.row.column';\nexport { GroupColumnModel as GroupColumn } from 'ng2-qgrid/core/column-type/group.column';\nexport { GroupSummaryColumnModel as GroupSummaryColumn } from 'ng2-qgrid/core/column-type/group.summary.column';\nexport { IdColumnModel as IdColumn } from 'ng2-qgrid/core/column-type/id.column';\nexport { ImageColumnModel as ImageColumn } from 'ng2-qgrid/core/column-type/image.column';\nexport { NumberColumnModel as NumberColumn } from 'ng2-qgrid/core/column-type/number.column';\nexport { PadColumnModel as PadColumn } from 'ng2-qgrid/core/column-type/pad.column';\nexport { PasswordColumnModel as PasswordColumn } from 'ng2-qgrid/core/column-type/password.column';\nexport { PivotColumnModel as PivotColumn } from 'ng2-qgrid/core/column-type/pivot.column';\nexport { ReferenceColumnModel as ReferenceColumn } from 'ng2-qgrid/core/column-type/reference.column';\nexport { RowDetailsColumnModel as RowDetailsColumn } from 'ng2-qgrid/core/column-type/row.details.column';\nexport { RowExpandColumnModel as RowExpandColumn } from 'ng2-qgrid/core/column-type/row.expand.column';\nexport { RowIndicatorColumnModel as RowIndicatorColumn } from 'ng2-qgrid/core/column-type/row.indicator.column';\nexport { RowNumberColumnModel as RowNumberColumn } from 'ng2-qgrid/core/column-type/row.number.column';\nexport { RowOptionsColumnModel as RowOptionsColumn } from 'ng2-qgrid/core/column-type/row.options.column';\nexport { SelectColumnModel as SelectColumn } from 'ng2-qgrid/core/column-type/select.column';\nexport { TextColumnModel as TextColumn } from 'ng2-qgrid/core/column-type/text.column';\nexport { TimeColumnModel as TimeColumn } from 'ng2-qgrid/core/column-type/time.column';\nexport { UrlColumnModel as UrlColumn } from 'ng2-qgrid/core/column-type/url.column';\n\n// Style\nexport { StyleCellContext, StyleRowContext } from 'ng2-qgrid/core/style/style.context';\n\n// Pipe\nexport { PipeContext, PipeMemo } from 'ng2-qgrid/core/pipe/pipe.item';\n\n// Dom\nexport { Tr as DomTr } from 'ng2-qgrid/core/dom/tr';\nexport { Td as DomTd } from 'ng2-qgrid/core/dom/td';\nexport { Box as DomBox } from 'ng2-qgrid/core/dom/box';\nexport { Cell as DomCell } from 'ng2-qgrid/core/dom/cell';\nexport { Row as DomRow } from 'ng2-qgrid/core/dom/row';\nexport { Data as DomData } from 'ng2-qgrid/core/dom/data';\nexport { View as DomView } from 'ng2-qgrid/core/dom/view';\n\n// Plugin\nexport { PluginModule } from './plugins/plugin.module';\n\n// Template\nexport { TemplateModule } from './template/template.module';\nexport { TemplateService } from './template/template.service';\nexport { ThemeService } from './template/theme.service';\n\n// Common\nexport { CommonModule } from './common/common.module';\n\n// View\nexport { ColumnView } from 'ng2-qgrid/core/scene/view/column.view';\n\n// Vscroll\nexport { VscrollModule } from './common/vscroll/vscroll.module';\nexport { VscrollContext } from './common/vscroll/vscroll.context';\nexport { VscrollService } from './common/vscroll/vscroll.service';\nexport { IVscrollSettings } from './common/vscroll/vscroll.settings';\nexport { IVscrollContainer } from './common/vscroll/vscroll.container';\nexport { VscrollPipe } from './common/vscroll/vscroll.pipe';\nexport { VscrollPortXDirective } from './common/vscroll/vscroll-port-x.directive';\nexport { VscrollPortYDirective } from './common/vscroll/vscroll-port-y.directive';\nexport { VscrollMarkDirective } from './common/vscroll/vscroll-mark.directive';\nexport { VscrollColumnDirective } from './common/vscroll/vscroll-column.directive';\nexport { VscrollRowDirective } from './common/vscroll/vscroll-row.directive';\nexport { VscrollDirective } from './common/vscroll/vscroll.directive';\n\nexport { PaneModule } from './plugins/pane/pane.module';\nexport { PaneComponent } from './plugins/pane/pane.component';\n","import { Directive, Input, OnInit, TemplateRef, Optional } from '@angular/core';\nimport { TemplateCacheService } from './template-cache.service';\nimport { TemplateHostService } from './template-host.service';\nimport { TemplateLink } from './template-link';\n\n@Directive({\n\t// tslint:disable-next-line\n\tselector: 'ng-template[for]'\n})\nexport class TemplateCacheDirective implements OnInit {\n\t@Input('for') key = '';\n\t@Input() context = {};\n\n\tconstructor(\n\t\tprivate templateCache: TemplateCacheService,\n\t\tprivate templateRef: TemplateRef<any>,\n\t\t@Optional() private templateHost: TemplateHostService) {\n\t}\n\n\tngOnInit() {\n\t\tconst link = new TemplateLink(this.templateRef, this.context);\n\t\tif (this.templateHost) {\n\t\t\tthis.templateCache.put(this.templateHost.key(this.key), link);\n\t\t} else {\n\t\t\tthis.templateCache.put(this.key, link);\n\t\t}\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\r\nimport { TemplateLink } from './template-link';\r\n\r\n@Injectable()\r\nexport class TemplateCacheService {\r\n\tprivate cache: Map<string, TemplateLink> = new Map();\r\n\r\n\tconstructor() {\r\n\t}\r\n\r\n\tget(key: string): TemplateLink {\r\n\t\treturn this.cache.get(key);\r\n\t}\r\n\r\n\tput(key: string, value: TemplateLink) {\r\n\t\tthis.cache.set(key, value);\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { identity } from 'ng2-qgrid/core/utility/kit';\n\n@Injectable()\nexport class TemplateHostService {\n\tkey: (x: string) => string = identity;\n}\n","import { Directive, Input, OnInit, TemplateRef } from '@angular/core';\nimport { TemplateLinkService } from './template-link.service';\nimport { TemplateLink } from './template-link';\n\n@Directive({\n\t// tslint:disable-next-line\n\tselector: 'ng-template[key]'\n})\nexport class TemplateLinkDirective implements OnInit {\n\t@Input() key = '';\n\t@Input() context = {};\n\n\tconstructor(private templateLink: TemplateLinkService, private templateRef: TemplateRef<any>) {\n\t}\n\n\tngOnInit() {\n\t\tconst link = new TemplateLink(this.templateRef, this.context);\n\t\tthis.templateLink.put(this.key, link);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { TemplateLink } from './template-link';\n\n@Injectable()\nexport class TemplateLinkService {\n\tprivate cache: Map<string, TemplateLink> = new Map();\n\n\tget(key: string): TemplateLink {\n\t\treturn this.cache.get(key);\n\t}\n\n\tput(key: string, value: TemplateLink) {\n\t\tthis.cache.set(key, value);\n\t}\n}\n","import { TemplateRef } from '@angular/core';\n\nexport class TemplateLink {\n\tconstructor(public template: TemplateRef<any>, public context: any) {\n\t}\n}\n","import {\n\tDirective,\n\tDoCheck,\n\tEmbeddedViewRef,\n\tInput,\n\tViewContainerRef,\n\tSimpleChanges,\n\tOnChanges\n} from '@angular/core';\nimport { TemplateService } from './template.service';\n\n@Directive({\n\t// tslint:disable-next-line\n\tselector: 'ng-container[key]'\n})\nexport class TemplateDirective implements DoCheck, OnChanges {\n\tprivate viewRef: EmbeddedViewRef<any>;\n\n\t@Input() check = false;\n\t@Input() key: any = '';\n\t@Input() context = null;\n\n\tconstructor(\n\t\tprivate templateService: TemplateService,\n\t\tprivate viewContainerRef: ViewContainerRef\n\t) { }\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tconst keyChange = changes['key'];\n\t\tif (keyChange) {\n\t\t\tif (this.viewRef) {\n\t\t\t\tthis.viewRef.destroy();\n\t\t\t\tthis.viewRef = null;\n\t\t\t}\n\t\t}\n\t}\n\n\tngDoCheck() {\n\t\tif (!this.viewRef) {\n\t\t\tconst link = this.templateService.find(this.key);\n\t\t\tif (link) {\n\t\t\t\tconst createView = this.templateService.viewFactory(this.context);\n\t\t\t\tthis.viewRef = createView(link, this.viewContainerRef);\n\t\t\t}\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\r\nimport { TemplateDirective } from './template.directive';\r\nimport { TemplateLinkDirective } from './template-link.directive';\r\nimport { TemplateCacheDirective } from './template-cache.directive';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tTemplateDirective,\r\n\t\tTemplateLinkDirective,\r\n\t\tTemplateCacheDirective\r\n\t],\r\n\texports: [\r\n\t\tTemplateDirective,\r\n\t\tTemplateLinkDirective,\r\n\t\tTemplateCacheDirective\r\n\t]\r\n})\r\nexport class TemplateModule {\r\n}\r\n","import { Injectable, ViewContainerRef, EmbeddedViewRef } from '@angular/core';\nimport { TemplateLink } from './template-link';\nimport { TemplateLinkService } from './template-link.service';\nimport { TemplateCacheService } from './template-cache.service';\nimport { isString, isArray } from 'ng2-qgrid/core/utility/kit';\n\n@Injectable()\nexport class TemplateService {\n\tconstructor(\n\t\tprivate templateLink: TemplateLinkService,\n\t\tprivate templateCache: TemplateCacheService\n\t) { }\n\n\tviewFactory(context: any) {\n\t\treturn (link: TemplateLink, viewContainerRef: ViewContainerRef): EmbeddedViewRef<any> => {\n\t\t\tconst { template } = link;\n\t\t\treturn viewContainerRef.createEmbeddedView(template, context);\n\t\t};\n\t}\n\n\tfind(keys: string | string[]): TemplateLink {\n\t\tif (isString(keys)) {\n\t\t\tconst key = keys as string;\n\t\t\tconst link = this.templateCache.get(key) || this.templateLink.get(key);\n\t\t\treturn link || null;\n\t\t}\n\n\t\tif (isArray(keys)) {\n\t\t\treturn this.lookInCache(keys) || this.lookInLink(keys);\n\t\t}\n\t}\n\n\tprivate lookInCache(keys) {\n\t\tfor (const key of keys) {\n\t\t\tconst link = this.templateCache.get(key);\n\t\t\tif (link) {\n\t\t\t\treturn link;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate lookInLink(keys) {\n\t\tfor (const key of keys) {\n\t\t\tconst link = this.templateLink.get(key);\n\t\t\tif (link) {\n\t\t\t\treturn link;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n}\n","import { Injectable } from '@angular/core';\r\nimport { Event } from 'ng2-qgrid/core/infrastructure/event';\r\n\r\n@Injectable()\r\nexport class ThemeService {\r\n\tprivate themeName = '';\r\n\r\n\tchanged = new Event();\r\n\tcomponent: any;\r\n\r\n\tconstructor() {}\r\n\r\n\tget name() {\r\n\t\treturn this.themeName;\r\n\t}\r\n\r\n\tset name(value: string) {\r\n\t\tif (value !== this.themeName) {\r\n\t\t\tthis.themeName = value;\r\n\t\t\tthis.changed.emit({\r\n\t\t\t\tnewValue: value,\r\n\t\t\t\toldValue: value\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n\tenableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n\t.catch(err => console.log(err));\n","import { Disposable } from '../../core/infrastructure/disposable';\n\nexport class AutofocusView extends Disposable {\n\tconstructor(model, table, markup) {\n\t\tsuper();\n\n\t\tthis.using(model.sceneChanged.watch((e, off) => {\n\t\t\tif (e.hasChanges('status')) {\n\t\t\t\tif (e.state.status === 'stop') {\n\t\t\t\t\tconst count = table.body.rowCount(0);\n\t\t\t\t\tif (count) {\n\t\t\t\t\t\toff();\n\n\t\t\t\t\t\tconst key = Object.keys(markup).find(p => p.startsWith('body'));\n\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\tconst element = markup[key];\n\t\t\t\t\t\t\tif (element) {\n\t\t\t\t\t\t\t\telement.focus();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst body = table.body;\n\t\t\t\t\t\tconst focus = model.focus;\n\t\t\t\t\t\tconst focusState = focus();\n\t\t\t\t\t\tconst cell = body.cell(focusState.rowIndex, focusState.columnIndex);\n\t\t\t\t\t\tconst cellModel = cell.model();\n\t\t\t\t\t\tif (!cellModel || !cellModel.column.canFocus) {\n\t\t\t\t\t\t\tlet rowIndex = 0;\n\t\t\t\t\t\t\tconst rowCount = body.rowCount(0);\n\t\t\t\t\t\t\twhile (rowIndex < rowCount) {\n\t\t\t\t\t\t\t\tconst row = body.row(rowIndex);\n\t\t\t\t\t\t\t\tconst cells = row.cells();\n\t\t\t\t\t\t\t\tconst columnIndex = cells.findIndex(c => {\n\t\t\t\t\t\t\t\t\tconst m = c.model();\n\t\t\t\t\t\t\t\t\treturn m && m.column.canFocus;\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tif (columnIndex >= 0) {\n\t\t\t\t\t\t\t\t\tfocus({ rowIndex, columnIndex }, { source: 'autofocus.view' });\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\trowIndex++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n}\n","import { Event } from '../../core/infrastructure/event';\nimport { EventListener } from '../../core/infrastructure/event.listener';\nimport { EventManager } from '../../core/infrastructure/event.manager';\nimport { checkButtonCode, LEFT_BUTTON, MIDDLE_BUTTON } from '../../core/mouse/mouse.code';\nimport { elementFromPoint } from '../../core/services/dom';\n\nexport class BackdropView {\n\tconstructor(context) {\n\t\tthis.closeEvent = new Event();\n\n\t\tconst element = context.element;\n\t\tconst listener = new EventListener(element, new EventManager(this));\n\n\t\tlistener.on('mouseup', e => {\n\t\t\tif (checkButtonCode(e, LEFT_BUTTON) || checkButtonCode(e, MIDDLE_BUTTON)) {\n\n\t\t\t\te.stopPropagation();\n\t\t\t\telement.remove();\n\n\t\t\t\tif (context.propagate !== false) {\n\t\t\t\t\tconst target = elementFromPoint(e.clientX, e.clientY);\n\t\t\t\t\tconst event = document.createEvent('MouseEvents');\n\t\t\t\t\tevent.initEvent('mouseup', true, true);\n\t\t\t\t\ttarget.dispatchEvent(event);\n\t\t\t\t}\n\n\t\t\t\tthis.closeEvent.emit(e);\n\n\t\t\t}\n\t\t});\n\n\t\tlistener.on('keydown', e => context.onKeyDown({ $event: e }));\n\t}\n}\n","import { Resource } from '../../core/resource/resource';\r\n\r\nexport class ColumnChooserModel {\r\n\tconstructor() {\r\n\t\tthis.resource = new Resource();\r\n\t\tthis.canAggregate = false;\r\n\t\tthis.canSort = true;\r\n\t}\r\n}","import { Command } from '../../core/command/command';\nimport { Aggregation } from '../../core/services/aggregation';\nimport { isFunction, identity } from '../../core/utility/kit';\nimport { Event } from '../../core/infrastructure/event';\nimport { preOrderDFS, copy, find, filter } from '../../core/node/node.service';\n\nexport class ColumnChooserView {\n\tconstructor(model, context) {\n\t\tthis.model = model;\n\n\t\tthis.context = context;\n\n\t\tthis.cancelEvent = new Event();\n\t\tthis.submitEvent = new Event();\n\t\tthis.dropEvent = new Event();\n\n\t\tconst setup = () => {\n\t\t\tconst { index } = model.columnList();\n\n\t\t\tthis.tree = preOrderDFS([index], (node, current, parent) => {\n\t\t\t\tconst { model } = node.key;\n\t\t\t\tconst column = {\n\t\t\t\t\tkey: model.key,\n\t\t\t\t\ttitle: model.title,\n\t\t\t\t\tisVisible: model.isVisible,\n\t\t\t\t\tcanMove: model.canMove,\n\t\t\t\t\taggregation: model.aggregation\n\t\t\t\t};\n\n\t\t\t\tif (parent) {\n\t\t\t\t\tconst newNode = copy(node);\n\t\t\t\t\tnewNode.value = {\n\t\t\t\t\t\tcolumn,\n\t\t\t\t\t\tisVisible: model.class === 'data' || model.class === 'cohort',\n\t\t\t\t\t};\n\n\t\t\t\t\tcurrent.children.push(newNode);\n\t\t\t\t\treturn newNode;\n\t\t\t\t}\n\n\t\t\t\tcurrent.value = { column, isVisible: true };\n\t\t\t\treturn current;\n\t\t\t}, copy(index));\n\n\t\t\tupdateView();\n\t\t};\n\n\t\tlet applyFilter = identity;\n\t\tconst updateView = () => {\n\t\t\tthis.listView = [];\n\t\t\tthis.treeView = applyFilter(this.tree);\n\t\t\tpreOrderDFS([this.treeView], n => {\n\t\t\t\tif (n.value.isVisible) {\n\t\t\t\t\tthis.listView.push(n.value.column);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tthis.search = value => {\n\t\t\tconst search = ('' + value).toLowerCase();\n\t\t\tapplyFilter =\n\t\t\t\tsearch\n\t\t\t\t\t? node => filter(node, n => n.value.column.title.toLowerCase().indexOf(search) >= 0)\n\t\t\t\t\t: identity;\n\n\t\t\tupdateView();\n\t\t};\n\n\t\tsetup();\n\n\t\tconst toggle = (node, value) => {\n\t\t\tconst { children } = node;\n\t\t\tconst { column } = node.value;\n\t\t\tcolumn.isVisible = value;\n\t\t\tif (children.length) {\n\t\t\t\tchildren.forEach(n => toggle(n, value));\n\t\t\t}\n\t\t};\n\n\t\tthis.toggle = new Command({\n\t\t\tsource: 'column.chooser',\n\t\t\tcanExecute: node => node.value.isVisible,\n\t\t\texecute: node => toggle(node, !this.state(node))\n\t\t});\n\n\t\tthis.toggleAll = new Command({\n\t\t\tsource: 'column.chooser',\n\t\t\texecute: () => {\n\t\t\t\tconst state = !this.stateAll();\n\t\t\t\tfor (let column of this.listView) {\n\t\t\t\t\tcolumn.isVisible = state;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.defaults = new Command({\n\t\t\tsource: 'column.chooser',\n\t\t\texecute: () => {\n\t\t\t\tfor (let column of this.listView) {\n\t\t\t\t\tcolumn.isVisible = column.isDefault !== false;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.toggleAggregation = new Command({ source: 'column.chooser' });\n\n\t\tthis.drop = new Command({\n\t\t\tsource: 'column.chooser',\n\t\t\tcanExecute: e => {\n\t\t\t\tconst node = e.dropData;\n\t\t\t\treturn node && node.value.column.canMove;\n\n\t\t\t},\n\t\t\texecute: e => {\n\t\t\t\tswitch (e.action) {\n\t\t\t\t\tcase 'over': {\n\t\t\t\t\t\tconst src = e.dragData;\n\t\t\t\t\t\tconst trg = e.dropData;\n\t\t\t\t\t\tif (src !== trg) {\n\t\t\t\t\t\t\tconst tree = this.tree;\n\n\t\t\t\t\t\t\tconst oldPos = find(tree, node => node === src);\n\t\t\t\t\t\t\tconst newPos = find(tree, node => node === trg);\n\t\t\t\t\t\t\tif (oldPos && newPos && newPos.path.indexOf(oldPos.node) < 0) {\n\t\t\t\t\t\t\t\tconst queue = oldPos.path.reverse();\n\t\t\t\t\t\t\t\tconst hostIndex = queue.findIndex(node => node.children.length > 1);\n\t\t\t\t\t\t\t\tif (hostIndex >= 0) {\n\t\t\t\t\t\t\t\t\tconst host = queue[hostIndex];\n\t\t\t\t\t\t\t\t\tconst target = queue[hostIndex - 1] || oldPos.node;\n\t\t\t\t\t\t\t\t\tconst index = host.children.indexOf(target);\n\n\t\t\t\t\t\t\t\t\thost.children.splice(index, 1);\n\t\t\t\t\t\t\t\t\tnewPos.parent.children.splice(newPos.index, 0, target);\n\n\t\t\t\t\t\t\t\t\ttarget.level = newPos.parent.level + 1;\n\t\t\t\t\t\t\t\t\tpreOrderDFS(\n\t\t\t\t\t\t\t\t\t\ttarget.children,\n\t\t\t\t\t\t\t\t\t\t(node, root, parent) => {\n\t\t\t\t\t\t\t\t\t\t\tnode.level = (root || parent).level + 1;\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\ttarget\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\tthis.dropEvent.emit();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.drag = new Command({\n\t\t\tsource: 'column.chooser',\n\t\t\tcanExecute: e => {\n\t\t\t\tconst node = e.data;\n\t\t\t\treturn node && node.value.column.canMove;\n\t\t\t}\n\t\t});\n\n\t\tthis.submit = new Command({\n\t\t\tsource: 'column.chooser',\n\t\t\texecute: () => {\n\t\t\t\tconst { model } = this;\n\n\t\t\t\tconst index = preOrderDFS([this.tree], (node, current, parent) => {\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tconst newNode = copy(node);\n\t\t\t\t\t\tcurrent.children.push(newNode);\n\n\t\t\t\t\t\tconst { isVisible, column } = node.value;\n\t\t\t\t\t\tif (isVisible) {\n\t\t\t\t\t\t\tconst { model } = newNode.key;\n\t\t\t\t\t\t\tmodel.isVisible = column.isVisible;\n\t\t\t\t\t\t\tmodel.aggregation = column.aggregation;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnewNode.value = null;\n\t\t\t\t\t\treturn newNode;\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrent.value = null;\n\t\t\t\t\treturn current;\n\t\t\t\t}, copy(this.tree));\n\n\t\t\t\tmodel.columnList({ index }, {\n\t\t\t\t\tsource: 'column.chooser.view'\n\t\t\t\t});\n\n\t\t\t\tthis.submitEvent.emit();\n\t\t\t}\n\t\t});\n\n\t\tthis.cancel = new Command({\n\t\t\tsource: 'column.chooser',\n\t\t\texecute: () => this.cancelEvent.emit()\n\t\t});\n\n\t\tthis.reset = new Command({\n\t\t\tsource: 'column.chooser',\n\t\t\texecute: () => setup()\n\t\t});\n\n\t\tthis.aggregations = Object\n\t\t\t.getOwnPropertyNames(Aggregation)\n\t\t\t.filter(key => isFunction(Aggregation[key]));\n\n\t\tmodel.dataChanged.on(e => {\n\t\t\tif (e.tag.source === 'column.chooser') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (e.hasChanges('columns')) {\n\t\t\t\tsetup();\n\t\t\t}\n\t\t});\n\n\t\tmodel.columnListChanged.on(e => {\n\t\t\tif (e.tag.source === 'column.chooser') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (e.hasChanges('index')) {\n\t\t\t\tsetup();\n\t\t\t}\n\t\t});\n\t}\n\n\tstate(node) {\n\t\tconst { children } = node;\n\t\tconst { column } = node.value;\n\t\tif (children.length) {\n\t\t\treturn children.some(n => n.value.column.isVisible);\n\t\t}\n\n\t\treturn column.isVisible !== false;\n\t}\n\n\tstateAll() {\n\t\treturn this.listView.every(c => c.isVisible);\n\t}\n\n\tstateDefault() {\n\t\treturn this.listView.every(c => (c.isDefault !== false && c.isVisible !== false) || (c.isDefault === false && c.isVisible === false));\n\t}\n\n\tisIndeterminate() {\n\t\treturn !this.stateAll() && this.listView.some(c => c.isVisible);\n\t}\n\n\tget canAggregate() {\n\t\treturn this.columnChooserCanAggregate;\n\t}\n\n\tget resource() {\n\t\treturn this.model.columnChooser().resource;\n\t}\n}\n","export class ColumnFilterModel {\r\n\tconstructor() {\r\n\t\tthis.threshold = 20;\r\n\t\tthis.source = 'data';\r\n\t}\r\n}","import { Command } from '../../core/command/command';\nimport * as columnService from '../../core/column/column.service';\nimport { getFactory as labelFactory } from '../../core/services/label';\nimport { clone } from '../../core/utility/kit';\nimport { Event } from '../../core/infrastructure/event';\n\nexport class ColumnFilterView {\n\tconstructor(model, context) {\n\t\tthis.model = model;\n\t\tthis.key = context.key;\n\n\t\tthis.cancelEvent = new Event();\n\t\tthis.submitEvent = new Event();\n\t\tthis.resetEvent = new Event();\n\n\t\tconst filterBy = this.model.filter().by[this.key];\n\t\tthis.by = new Set((filterBy && filterBy.items) || []);\n\t\tthis.byBlanks = !!(filterBy && filterBy.blanks);\n\t\tthis.operator = filterBy && filterBy.expression && filterBy.expression.op || 'contains';\n\t\tthis.value = filterBy && filterBy.expression && filterBy.expression.right || null;\n\n\t\tthis.items = [];\n\n\t\tObject.assign(this, this.commands);\n\n\t\tthis.column = columnService.find(this.model.columnList().line, this.key);\n\t\tthis.title = this.column.title;\n\t\tthis.getValue = labelFactory(this.column);\n\t}\n\n\tstate(item) {\n\t\treturn this.by.has(item);\n\t}\n\n\tstateAll() {\n\t\treturn this.items.every(this.state.bind(this)) && (!this.hasBlanks || this.byBlanks);\n\t}\n\n\tisIndeterminate() {\n\t\treturn !this.stateAll() && (this.items.some(this.state.bind(this)) || this.byBlanks);\n\t}\n\n\tisEmpty() {\n\t\treturn !!this.by.size || this.byBlanks;\n\t};\n\n\tget commands() {\n\t\treturn {\n\t\t\ttoggle: new Command({\n\t\t\t\tsource: 'column.filter.view',\n\t\t\t\texecute: (item) => {\n\t\t\t\t\tif (this.by.has(item)) {\n\t\t\t\t\t\tthis.by.delete(item);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.by.add(item);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t\ttoggleAll: new Command({\n\t\t\t\tsource: 'column.filter.view',\n\t\t\t\texecute: search => {\n\t\t\t\t\tconst state = !this.stateAll();\n\t\t\t\t\tif (state) {\n\t\t\t\t\t\tfor (let item of this.items) {\n\t\t\t\t\t\t\tthis.by.add(item);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (search) {\n\t\t\t\t\t\t\tfor (let item of this.by) {\n\t\t\t\t\t\t\t\tif (this.items.indexOf(item) >= 0) {\n\t\t\t\t\t\t\t\t\tthis.by.delete(item);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.by.clear();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.byBlanks = this.hasBlanks && state;\n\t\t\t\t}\n\t\t\t}),\n\n\t\t\tchangeOperator: new Command({\n\t\t\t\tsource: 'column.filter.view',\n\t\t\t\texecute: (op) => {\n\t\t\t\t\tthis.operator = op;\n\n\t\t\t\t\tlet { value } = this;\n\t\t\t\t\tswitch (op) {\n\t\t\t\t\t\tcase 'between': {\n\t\t\t\t\t\t\tif (!Array.isArray(value)) {\n\t\t\t\t\t\t\t\tthis.value = [value];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\t\t\t\tthis.value = value[0];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\n\t\t\tsubmit: new Command({\n\t\t\t\tsource: 'column.filter.view',\n\t\t\t\texecute: () => {\n\t\t\t\t\tconst model = this.model;\n\t\t\t\t\tconst by = clone(model.filter().by);\n\n\t\t\t\t\tconst filter = by[this.key] || {};\n\n\t\t\t\t\tfilter.items = Array.from(this.by);\n\t\t\t\t\tfilter.blanks = this.byBlanks;\n\n\t\t\t\t\tif (this.operator !== 'contains') {\n\t\t\t\t\t\tfilter.expression = {\n\t\t\t\t\t\t\tkind: \"condition\",\n\t\t\t\t\t\t\top: this.operator,\n\t\t\t\t\t\t\tleft: this.key,\n\t\t\t\t\t\t\tright: this.value\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tif (filter.items && filter.items.length || filter.blanks || filter.expression) {\n\t\t\t\t\t\tby[this.key] = filter;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdelete by[this.key];\n\t\t\t\t\t}\n\n\t\t\t\t\tmodel.filter({ by }, { source: 'column.filter.view' });\n\n\t\t\t\t\tthis.submitEvent.emit();\n\t\t\t\t}\n\t\t\t}),\n\n\t\t\tcancel: new Command({\n\t\t\t\tsource: 'column.filter.view',\n\t\t\t\texecute: () => this.cancelEvent.emit()\n\t\t\t}),\n\n\t\t\treset: new Command({\n\t\t\t\tsource: 'column.filter.view',\n\t\t\t\texecute: () => {\n\t\t\t\t\tthis.by = new Set();\n\t\t\t\t\tthis.byBlanks = false;\n\t\t\t\t\tthis.value = this.operator === \"between\" ? [] : null;\n\t\t\t\t\tthis.resetEvent.emit();\n\t\t\t\t}\n\t\t\t}),\n\t\t};\n\t}\n}\n","import { GRID_PREFIX } from '../../core/definition';\r\nimport { Command } from '../../core/command/command';\r\nimport { Fastdom } from '../../core/services/fastdom';\r\n\r\nconst GRID_ACTIVE_CLASS = `${GRID_PREFIX}-active`;\r\nconst GRID_HIDE_CLASS = `${GRID_PREFIX}-hide`;\r\n\r\nexport class ColumnSortView {\r\n\tconstructor(model, context) {\r\n\t\tthis.model = model;\r\n\r\n\t\tconst column = context.column;\r\n\t\tconst view = context.view;\r\n\t\tconst element = this.element = context.element;\r\n\t\tconst iconDesc = context.iconDesc;\r\n\t\tconst iconAsc = context.iconAsc;\r\n\r\n\t\tmodel.sortChanged.watch(e => {\r\n\t\t\tif (e.hasChanges('by')) {\r\n\t\t\t\tif (view.sort.order(column) < 0) {\r\n\t\t\t\t\tFastdom.mutate(() => {\r\n\t\t\t\t\t\telement.classList.add(GRID_HIDE_CLASS);\r\n\t\t\t\t\t\telement.classList.remove(GRID_ACTIVE_CLASS);\r\n\r\n\t\t\t\t\t\ticonAsc.classList.remove(GRID_ACTIVE_CLASS);\r\n\t\t\t\t\t\ticonDesc.classList.remove(GRID_ACTIVE_CLASS);\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst direction = view.sort.direction(column);\r\n\t\t\t\t\tconst oldIcon = direction === 'asc' ? iconDesc : iconAsc;\r\n\t\t\t\t\tconst newIcon = direction === 'asc' ? iconAsc : iconDesc;\r\n\r\n\t\t\t\t\tFastdom.mutate(() => {\r\n\t\t\t\t\t\telement.classList.add(GRID_ACTIVE_CLASS);\r\n\t\t\t\t\t\telement.classList.remove(GRID_HIDE_CLASS);\r\n\r\n\t\t\t\t\t\toldIcon.classList.remove(GRID_ACTIVE_CLASS);\r\n\t\t\t\t\t\tnewIcon.classList.add(GRID_ACTIVE_CLASS);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.toggle = new Command({\r\n\t\t\tcanExecute: () => column.canSort,\r\n\t\t\texecute: () => view.sort.toggle.execute(column)\r\n\t\t});\r\n\t}\r\n\r\n\tonClick() {\r\n\t\tif (this.toggle.canExecute()) {\r\n\t\t\tthis.toggle.execute();\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tonMouseLeave() {\r\n\t\tFastdom.mutate(() => {\r\n\t\t\tthis.element.classList.remove(GRID_HIDE_CLASS);\r\n\t\t});\r\n\t}\r\n}\r\n","import { Resource } from '../../core/resource/resource';\nimport { cloneDeep, isArray, isObject, isDate, isBoolean, isNumber, isFunction } from '../../core/utility/kit';\n\nexport class DataManipulationModel {\n\tconstructor() {\n\t\tthis.resource = new Resource();\n\n\t\tthis.deleted = new Set();\n\t\tthis.added = new Set();\n\t\tthis.edited = new Map();\n\n\t\tthis.rowFactory = etalonRow => {\n\t\t\tif (etalonRow) {\n\t\t\t\treturn cloneDeep(etalonRow, value => {\n\t\t\t\t\tif (isArray(value)) {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!isObject(value) ||\n\t\t\t\t\t\tisNumber(value) ||\n\t\t\t\t\t\tisDate(value) ||\n\t\t\t\t\t\tisBoolean(value) ||\n\t\t\t\t\t\tisFunction(value)) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n}","import { Command } from '../../core/command/command';\nimport { Action } from '../../core/action/action';\nimport { AppError } from '../../core/infrastructure/error';\nimport { Composite } from '../../core/infrastructure/composite';\nimport { isUndefined } from '../../core/utility/kit';\nimport * as columnService from '../../core/column/column.service';\nimport { set as setValue } from '../../core/services/value';\nimport { set as setLabel } from '../../core/services/label';\n\nexport class DataManipulationView {\n\tconstructor(model) {\n\t\tthis.model = model;\n\n\t\tthis.commitCommand = new Command({\n\t\t\texecute: e => {\n\t\t\t\tif (e.column.class !== 'data') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst rowId = this.rowId(e.rowIndex, e.row);\n\t\t\t\tconst columnId = this.columnId(e.columnIndex, e.column);\n\t\t\t\tconst edited = this.changes.edited;\n\n\t\t\t\tlet entries = edited.get(rowId);\n\t\t\t\tif (!entries) {\n\t\t\t\t\tentries = [];\n\t\t\t\t\tedited.set(rowId, entries);\n\t\t\t\t}\n\n\t\t\t\tlet entryIndex = entries.findIndex(entry => entry.column === columnId);\n\t\t\t\tlet entry = entries[entryIndex];\n\t\t\t\tif (!entry) {\n\t\t\t\t\tentry = {\n\t\t\t\t\t\tcolumn: columnId,\n\t\t\t\t\t\toldValue: e.oldValue,\n\t\t\t\t\t\toldLabel: e.oldLabel\n\t\t\t\t\t};\n\n\t\t\t\t\tentryIndex = entries.length;\n\t\t\t\t\tentries.push(entry);\n\t\t\t\t}\n\n\t\t\t\tentry.newValue = e.newValue;\n\t\t\t\tentry.newLabel = e.newLabel;\n\n\t\t\t\t// TODO: understand if we need to track label changes?\n\t\t\t\tif (!this.hasChanges(entry.newValue, entry.oldValue)) {\n\t\t\t\t\tentries.splice(entryIndex, 1);\n\t\t\t\t\tif (!entries.length) {\n\t\t\t\t\t\tedited.delete(rowId);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.actions = [\n\t\t\tnew Action(\n\t\t\t\tnew Command({\n\t\t\t\t\tsource: 'data.manipulation',\n\t\t\t\t\texecute: () => {\n\t\t\t\t\t\tconst newRow = this.rowFactory(this.model.data().rows[0]);\n\t\t\t\t\t\tif (isUndefined(newRow)) {\n\t\t\t\t\t\t\tthrow new AppError('data.manipulation', 'Setup rowFactory property to add new rows');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst rowId = this.rowId(0, newRow);\n\t\t\t\t\t\tconst data = this.model.data;\n\n\t\t\t\t\t\tthis.changes.added.add(rowId);\n\t\t\t\t\t\tdata({\n\t\t\t\t\t\t\trows: [newRow].concat(data().rows)\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\tsource: 'data.manipulation'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tshortcut: 'F7'\n\t\t\t\t}),\n\t\t\t\t'Add New Row',\n\t\t\t\t'add'\n\t\t\t)];\n\n\t\tthis.rowActions = [\n\t\t\tnew Action(\n\t\t\t\tnew Command({\n\t\t\t\t\tsource: 'data.manipulation',\n\t\t\t\t\tcanExecute: e => {\n\t\t\t\t\t\tconst rowId = this.rowId(e.rowIndex, e.row);\n\t\t\t\t\t\treturn !this.changes.deleted.has(rowId);\n\t\t\t\t\t},\n\t\t\t\t\texecute: e => {\n\t\t\t\t\t\tconst rowId = this.rowId(e.rowIndex, e.row);\n\t\t\t\t\t\tconst changes = this.changes;\n\t\t\t\t\t\tif (changes.added.has(rowId)) {\n\t\t\t\t\t\t\tchanges.added.delete(rowId);\n\t\t\t\t\t\t\tconst data = this.model.data;\n\t\t\t\t\t\t\tconst rows = data().rows.filter((row, i) => this.rowId(i, row) !== rowId);\n\t\t\t\t\t\t\tdata({ rows }, {\n\t\t\t\t\t\t\t\tsource: 'data.manipulation'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tchanges.deleted.add(rowId);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\t'Delete Row',\n\t\t\t\t'delete'\n\t\t\t),\n\t\t\tnew Action(\n\t\t\t\tnew Command({\n\t\t\t\t\tsource: 'data.manipulation',\n\t\t\t\t\texecute: e => {\n\t\t\t\t\t\tconst rowId = this.rowId(e.rowIndex, e.row);\n\t\t\t\t\t\tif (this.changes.deleted.has(rowId)) {\n\t\t\t\t\t\t\tthis.changes.deleted.delete(rowId);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this.changes.edited.has(rowId)) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tconst edits = this.changes.edited.get(rowId);\n\t\t\t\t\t\t\t\tconst columnMap = columnService.map(this.model.columnList().line);\n\t\t\t\t\t\t\t\tfor (const edit of edits) {\n\t\t\t\t\t\t\t\t\tconst column = columnMap[edit.column];\n\t\t\t\t\t\t\t\t\tif (!column) {\n\t\t\t\t\t\t\t\t\t\tthrow new AppError('data.manipulation', `Column ${edit.column} is not found`);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tsetValue(e.row, column, edit.oldValue);\n\t\t\t\t\t\t\t\t\tsetLabel(e.row, column, edit.oldLabel);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfinally {\n\t\t\t\t\t\t\t\tthis.changes.edited.delete(rowId);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tcanExecute: e => {\n\t\t\t\t\t\tconst rowId = this.rowId(e.rowIndex, e.row);\n\t\t\t\t\t\treturn this.changes.deleted.has(rowId) || this.changes.edited.has(rowId);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\t'Revert Row',\n\t\t\t\t'restore'\n\t\t\t),\n\t\t\t// new Action(\n\t\t\t//\tsource: 'data.manipulation',\n\t\t\t// \tnew Command({\n\t\t\t// \t\texecute: () => {\n\t\t\t// \t\t\t// TODO make edit form service\n\t\t\t// \t\t}\n\t\t\t// \t}),\n\t\t\t// \t'Edit Form',\n\t\t\t// \t'edit'\n\t\t\t// )\n\t\t];\n\n\t\tthis.rowId = model.data().id.row;\n\t\tthis.columnId = model.data().id.column;\n\t\tthis.rowFactory = model.dataManipulation().rowFactory;\n\n\t\tconst styleState = model.style();\n\t\tconst rows = Array.from(styleState.rows);\n\t\tconst cells = Array.from(styleState.cells);\n\t\trows.push(this.styleRow.bind(this));\n\t\tcells.push(this.styleCell.bind(this));\n\n\t\tmodel\n\t\t\t.edit({\n\t\t\t\tmode: 'cell',\n\t\t\t\tcommit: Composite.command([this.commitCommand, model.edit().commit])\n\t\t\t})\n\t\t\t.style({\n\t\t\t\trows, cells\n\t\t\t})\n\t\t\t.action({\n\t\t\t\titems: Composite.list([this.actions, model.action().items])\n\t\t\t});\n\n\t\tmodel.columnListChanged.watch((e, off) => {\n\t\t\tif (e.hasChanges('line')) {\n\t\t\t\tconst rowOptionsColumn = e.state.line.find(column => column.type === 'row-options');\n\t\t\t\tif (rowOptionsColumn) {\n\t\t\t\t\trowOptionsColumn.editorOptions.actions.push(...this.rowActions);\n\t\t\t\t\toff();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\thasChanges(newValue, oldValue) {\n\t\t// TODO: understand if we need to parse values (e.g. '12' vs 12)\n\t\treturn newValue !== oldValue;\n\t}\n\n\tstyleRow(row, context) {\n\t\tconst rowId = this.rowId(context.row, row);\n\t\tif (this.changes.deleted.has(rowId)) {\n\t\t\tcontext.class('deleted', { opacity: 0.3 });\n\t\t}\n\t}\n\n\tstyleCell(row, column, context) {\n\t\tconst rowId = this.rowId(context.row, row);\n\t\tconst changes = this.changes;\n\t\tif (column.type === 'row-indicator') {\n\t\t\tif (changes.deleted.has(rowId)) {\n\t\t\t\tcontext.class('delete-indicator', { background: '#EF5350' });\n\t\t\t}\n\t\t\telse if (changes.added.has(rowId)) {\n\t\t\t\tcontext.class('add-indicator', { background: '#C8E6C9' });\n\t\t\t}\n\t\t\telse if (changes.edited.has(rowId)) {\n\t\t\t\tcontext.class('edit-indicator', { background: '#E3F2FD' });\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (changes.edited.has(rowId)) {\n\t\t\tconst entries = changes.edited.get(rowId);\n\t\t\tif (entries.findIndex(entry => entry.column === this.columnId(context.column, column)) >= 0) {\n\t\t\t\tcontext.class('edited', { background: '#E3F2FD' });\n\t\t\t}\n\t\t}\n\t}\n\n\tget changes() {\n\t\tconst model = this.model;\n\t\treturn model.dataManipulation();\n\t}\n\n\tget resource() {\n\t\treturn this.model.dataManipulation().resource;\n\t}\n}\n","import { isUndefined } from '../../core/utility/kit';\nimport { Command } from '../../core/command/command';\nimport { RowEditor } from '../../core/edit/edit.row.editor';\nimport { Event } from '../../core/infrastructure/event';\nimport { Disposable } from '../../core/infrastructure/disposable';\n\nexport class EditFormPanelView extends Disposable {\n\tconstructor(model, context) {\n\t\tsuper();\n\n\t\tthis.model = model;\n\n\t\tthis.editor = new RowEditor(context.row, model.columnList().line);\n\t\tthis.caption = context.caption;\n\n\t\tthis.submitEvent = new Event();\n\t\tthis.cancelEvent = new Event();\n\t\tthis.resetEvent = new Event();\n\n\t\tthis.submit = this.commands.submit;\n\t\tthis.cancel = this.commands.cancel;\n\t\tthis.reset = this.commands.reset;\n\n\t\tif (!isUndefined(context.shortcut)) {\n\t\t\tthis.using(context.shortcut.register(new Map(\n\t\t\t\tObject.entries(this.commands)\n\t\t\t)));\n\t\t}\n\t}\n\n\tget editors() {\n\t\treturn this.editor.editors;\n\t}\n\n\tget commands() {\n\t\tconst commands = {\n\t\t\tsubmit: new Command({\n\t\t\t\tsource: 'edit.form.panel',\n\t\t\t\tshortcut: this.shortcutFactory('commit'),\n\t\t\t\texecute: () => {\n\t\t\t\t\tthis.editor.commit();\n\t\t\t\t\tthis.submitEvent.emit();\n\t\t\t\t}\n\t\t\t}),\n\t\t\tcancel: new Command({\n\t\t\t\tsource: 'edit.form.panel',\n\t\t\t\tshortcut: this.shortcutFactory('cancel'),\n\t\t\t\texecute: () => this.cancelEvent.emit()\n\t\t\t}),\n\t\t\treset: new Command({\n\t\t\t\tsource: 'edit.form.panel',\n\t\t\t\texecute: () => {\n\t\t\t\t\tthis.editor.editors.forEach(e => e.reset());\n\t\t\t\t\tthis.resetEvent.emit();\n\t\t\t\t}\n\t\t\t})\n\t\t};\n\n\t\treturn commands;\n\t}\n\n\tshortcutFactory(type) {\n\t\tconst { edit } = this.model;\n\t\treturn () => {\n\t\t\tconst shortcuts = edit()[type + 'Shortcuts'];\n\t\t\treturn shortcuts['reference'] || shortcuts['$default'];\n\t\t};\n\t}\n}\n","export function downloadFactory(fileSaver) {\r\n\treturn function download(name, data, mimeType, extension) {\r\n\t\tconst blob = new Blob([data], {type: mimeType});\r\n\t\tconst type = extension ? extension : mimeType.split('/')[1];\r\n\t\tconst fileName = `${name}.${type}`;\r\n\t\tfileSaver.saveAs(blob, fileName);\r\n\t};\r\n}","import { PluginService } from '../../core/plugin/plugin.service';\nimport { Command } from '../../core/command/command';\nimport { Json } from '../../core/export/json/json';\nimport { Xml } from '../../core/export/xml/xml';\nimport { Csv } from '../../core/export/csv/csv';\nimport { downloadFactory } from './download';\nimport { Xlsx } from './xlsx';\nimport { Pdf } from './pdf';\n\nexport class ExportView {\n\tconstructor(model, context) {\n\t\tthis.model = model;\n\t\tthis.type = context.type;\n\t\tthis.csv = new Command({\n\t\t\tsource: 'export',\n\t\t\tcanExecute: () => this.type === 'csv',\n\t\t\texecute: () => {\n\t\t\t\tconst pluginService = new PluginService(this.model);\n\t\t\t\tconst fileSaver = pluginService.resolve('fileSaver');\n\t\t\t\tconst csv = new Csv();\n\t\t\t\tconst data = csv.write(this.rows, this.columns);\n\t\t\t\tconst download = downloadFactory(fileSaver);\n\t\t\t\tdownload(this.id, data, `text/${this.type}`);\n\t\t\t}\n\t\t});\n\t\tthis.json = new Command({\n\t\t\tsource: 'export',\n\t\t\tcanExecute: () => this.type === 'json',\n\t\t\texecute: () => {\n\t\t\t\tconst pluginService = new PluginService(this.model);\n\t\t\t\tconst fileSaver = pluginService.resolve('fileSaver');\n\t\t\t\tconst json = new Json();\n\t\t\t\tconst data = json.write(this.rows, this.columns);\n\t\t\t\tconst download = downloadFactory(fileSaver);\n\t\t\t\tdownload(this.id, data, `text/${this.type}`);\n\t\t\t}\n\t\t});\n\t\tthis.xml = new Command({\n\t\t\tsource: 'export',\n\t\t\tcanExecute: () => this.type === 'xml',\n\t\t\texecute: () => {\n\t\t\t\tconst pluginService = new PluginService(this.model);\n\t\t\t\tconst fileSaver = pluginService.resolve('fileSaver');\n\t\t\t\tconst xml = new Xml();\n\t\t\t\tconst data = xml.write(this.rows);\n\t\t\t\tconst download = downloadFactory(fileSaver);\n\t\t\t\tdownload(this.id, data, `application/${this.type}`);\n\t\t\t}\n\t\t});\n\t\tthis.xlsx = new Command({\n\t\t\tsource: 'export',\n\t\t\tcanExecute: () => this.type === 'xlsx',\n\t\t\texecute: () => {\n\t\t\t\tconst pluginService = new PluginService(this.model);\n\t\t\t\tconst lib = pluginService.resolve('xlsx');\n\t\t\t\tconst fileSaver = pluginService.resolve('fileSaver');\n\t\t\t\tconst xlsx = new Xlsx(lib);\n\t\t\t\tconst data = xlsx.write(this.rows, this.columns);\n\t\t\t\tconst download = downloadFactory(fileSaver);\n\t\t\t\tdownload(this.id, data, 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'xlsx');\n\t\t\t}\n\t\t});\n\t\tthis.pdf = new Command({\n\t\t\tsource: 'export',\n\t\t\tcanExecute: () => this.type === 'pdf',\n\t\t\texecute: () => {\n\t\t\t\tconst pluginService = new PluginService(this.model);\n\t\t\t\tconst lib = pluginService.resolve('pdf');\n\t\t\t\tconst pdf = new Pdf(lib);\n\t\t\t\tpdf.write(this.rows, this.columns, this.id);\n\t\t\t}\n\t\t});\n\t}\n\n\tget columns() {\n\t\treturn this.model.columnList().line;\n\t}\n\n\tget rows() {\n\t\treturn this.model.data().rows;\n\t}\n\n\tget id() {\n\t\treturn this.model.grid().id;\n\t}\n}\n","import {flatView} from '../../core/export/export.service';\r\n\r\nexport class Pdf {\r\n\tconstructor(jsPDF) {\r\n\t\tthis.jsPDF = jsPDF;\r\n\t}\r\n\twrite(rows, columns, name) {\r\n\t\tconst jsPDF = this.jsPDF;\r\n\t\tconst titles = [];\r\n\t\tconst values = [];\r\n\t\tconst doc = new jsPDF({orientation: 'landscape', unit: 'in'});\r\n\t\tconst tableOptions = {\r\n\t\t\tstyles: {\r\n\t\t\t\toverflow: 'linebreak',\r\n\t\t\t\tfontSize: 8,\r\n\t\t\t\tcolumnWidth: 'auto',\r\n\t\t\t\toverflowColumns: true\r\n\t\t\t},\r\n\t\t\theaderStyles: {\r\n\t\t\t\toverflow: 'ellipsize',\r\n\t\t\t},\r\n\t\t\tpageBreak: 'auto',\r\n\t\t\tmargin: 0\r\n\t\t};\r\n\t\tfor (let column of columns) {\r\n\t\t\ttitles.push({title: column.title, dataKey: column.path});\r\n\t\t}\r\n\t\tfor (let row of rows) {\r\n\t\t\tvalues.push(flatView(row));\r\n\t\t}\r\n\r\n\t\tdoc.autoTable(titles, values, tableOptions);\r\n\t\tdoc.save(`${name}.pdf`);\r\n\t}\r\n}\r\n","import {flatView} from '../../core/export/export.service';\r\n\r\nfunction sheet_to_workbook(sheet) {\r\n\tconst sheets = {};\r\n\tsheets['Sheet1'] = sheet;\r\n\treturn {SheetNames: ['Sheet1'], Sheets: sheets};\r\n}\r\n\r\nfunction toArrayBuffer(excel) {\r\n\tconst buffer = new ArrayBuffer(excel.length);\r\n\tconst view = new Uint8Array(buffer);\r\n\tfor (let i = 0; i < excel.length; ++i) {\r\n\t\tview[i] = excel.charCodeAt(i) & 0xFF;\r\n\t}\r\n\treturn buffer;\r\n}\r\n\r\nexport class Xlsx {\r\n\tconstructor(xlsx) {\r\n\t\tthis.xlsx = xlsx;\r\n\t}\r\n\twrite(rows, columns) {\r\n\t\tconst result = [];\r\n\t\tconst headers = [];\r\n\t\tconst excelOptions = {bookType: 'xlsx', bookSST: true, cellDates: true, compression: true, type: 'binary'};\r\n\r\n\t\tfor (let row of rows) {\r\n\t\t\tresult.push(flatView(row));\r\n\t\t}\r\n\t\tfor (let column of columns) {\r\n\t\t\theaders.push(column.title);\r\n\t\t}\r\n\t\tconst worksheet = this.xlsx.utils.json_to_sheet(result);\r\n\t\tconst workbook = sheet_to_workbook(this.updateTitles(worksheet, headers));\r\n\t\tconst excel = this.xlsx.write(workbook, excelOptions);\r\n\r\n\t\treturn toArrayBuffer(excel);\r\n\t}\r\n\r\n\tupdateTitles(worksheet, headers) {\r\n\t\tconst range = this.xlsx.utils.decode_range(worksheet['!ref']);\r\n\t\tfor (let i = range.s.r; i <= range.e.r; ++i) {\r\n\t\t\tconst address = this.xlsx.utils.encode_col(i) + '1';\r\n\t\t\tif (!worksheet[address]) continue;\r\n\t\t\tworksheet[address].v = headers[i];\r\n\t\t}\r\n\t\treturn worksheet;\r\n\t}\r\n}\r\n","import { Command } from '../../core/command/command';\r\nimport { upload } from '../../core/services/upload';\r\nimport { readFile } from './read';\r\n\r\nexport class ImportView {\r\n\tconstructor(model, context) {\r\n\t\tthis.model = model;\r\n\r\n\t\tconst { element, options } = context;\r\n\r\n\t\tthis.options = options;\r\n\r\n\t\tthis.upload = new Command({\r\n\t\t\tsource: 'import',\r\n\t\t\texecute: () => upload(element)\r\n\t\t});\r\n\t}\r\n\r\n\tload(e) {\r\n\t\tconst files = e.target.files;\r\n\r\n\t\tfor (let file of files) {\r\n\t\t\tconst reader = new FileReader();\r\n\t\t\treader.onload = e => {\r\n\t\t\t\treadFile(e, file, this.model, this.options);\r\n\t\t\t};\r\n\t\t\treader.readAsBinaryString(file);\r\n\t\t}\r\n\t}\r\n}\r\n","import { AppError } from '../../core/infrastructure/error';\r\nimport { columnFactory } from '../../core/column/column.factory';\r\nimport { generate } from '../../core/column-list/column.list.generate';\r\nimport { firstRowTitle, numericTitle, alphaTitle } from '../../core/services/title';\r\nimport { Xlsx } from './xlsx';\r\nimport { PluginService } from '../../core/plugin/plugin.service';\r\nimport { Xml } from '../../core/import/xml/xml';\r\nimport { Json } from '../../core/import/json/json';\r\nimport { Csv } from '../../core/import/csv/csv';\r\n\r\nfunction getType(name) {\r\n\tconst dotDelimeter = /[.]/g.test(name);\r\n\tif (dotDelimeter) {\r\n\t\tlet type = name.split('.');\r\n\t\treturn type[type.length - 1];\r\n\t}\r\n}\r\n\r\nfunction readFile(e, file, model, options = {}) {\r\n\tconst data = e.target.result;\r\n\tconst type = file.type === '' ? getType(file.name) : file.type;\r\n\tconst pluginService = new PluginService(model);\r\n\tswitch (type) {\r\n\t\tcase 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet':\r\n\t\tcase 'xlsx': {\r\n\t\t\tconst lib = pluginService.resolve('xlsx');\r\n\t\t\tconst xlsx = new Xlsx(lib);\r\n\t\t\tconst rows = xlsx.read(data, options);\r\n\t\t\tconst createColumn = columnFactory(model);\r\n\t\t\tconst columns = generate({\r\n\t\t\t\trows,\r\n\t\t\t\tcolumnFactory: (type, body) => createColumn('text', body),\r\n\t\t\t\tdeep: false\r\n\t\t\t});\r\n\t\t\tmodel.data({\r\n\t\t\t\tcolumns,\r\n\t\t\t\trows\r\n\t\t\t}, { source: 'read' });\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'application/json':\r\n\t\tcase 'text/json':\r\n\t\tcase 'json': {\r\n\t\t\tconst json = new Json();\r\n\t\t\tconst rows = json.read(data);\r\n\t\t\tif (rows.length) {\r\n\t\t\t\tconst createColumn = columnFactory(model);\r\n\t\t\t\tconst columns = generate({\r\n\t\t\t\t\trows,\r\n\t\t\t\t\tcolumnFactory: (type, body) => createColumn('text', body),\r\n\t\t\t\t\tdeep: true\r\n\t\t\t\t});\r\n\t\t\t\tmodel.data({\r\n\t\t\t\t\tcolumns,\r\n\t\t\t\t\trows\r\n\t\t\t\t}, { source: 'read' });\r\n\t\t\t} else {\r\n\t\t\t\tthrow new AppError('import', 'JSON for input should be an array of objects');\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'application/xml':\r\n\t\tcase 'text/xml':\r\n\t\tcase 'xml': {\r\n\t\t\tconst xml = new Xml();\r\n\t\t\tconst rows = xml.read(data);\r\n\t\t\tconst columns = generate({\r\n\t\t\t\trows,\r\n\t\t\t\tcolumnFactory: columnFactory(model),\r\n\t\t\t\tdeep: true\r\n\t\t\t});\r\n\t\t\tmodel.data({\r\n\t\t\t\tcolumns,\r\n\t\t\t\trows\r\n\t\t\t}, { source: 'read' });\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'application/vnd.ms-excel':\r\n\t\tcase 'text/csv':\r\n\t\tcase 'csv': {\r\n\t\t\tconst csv = new Csv();\r\n\t\t\tconst rows = csv.read(data);\r\n\r\n\t\t\tlet title = firstRowTitle;\r\n\r\n\t\t\tif (options.head === 'alpha') {\r\n\t\t\t\ttitle = alphaTitle;\r\n\t\t\t} else if (options.head === 'numeric') {\r\n\t\t\t\ttitle = numericTitle;\r\n\t\t\t}\r\n\r\n\t\t\tconst columns = generate({\r\n\t\t\t\trows,\r\n\t\t\t\tcolumnFactory: columnFactory(model),\r\n\t\t\t\tdeep: false,\r\n\t\t\t\ttitle\r\n\t\t\t});\r\n\r\n\t\t\tif (title === firstRowTitle) {\r\n\t\t\t\trows.shift(0);\r\n\t\t\t}\r\n\t\t\tmodel.data({\r\n\t\t\t\tcolumns,\r\n\t\t\t\trows\r\n\t\t\t}, { source: 'read' });\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\tthrow new AppError('import', `This is not valid file type ${type}`);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport {\r\n\treadFile\r\n};\r\n","function rewriteObject(obj) {\r\n\tconst result = {};\r\n\tfor (let [key, value] of Object.entries(obj)) {\r\n\t\tresult[key] = value;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport class Xlsx {\r\n\tconstructor(xlsx) {\r\n\t\tthis.xlsx = xlsx;\r\n\t}\r\n\tread(data, options) {\r\n\r\n\t\tconst workbook = this.xlsx.read(data, {type: 'binary'});\r\n\t\treturn this.toJson(workbook, options);\r\n\t}\r\n\r\n\ttoJson(workbook, options = {}) {\r\n\t\tconst wbOptions = {};\r\n\t\tswitch (options.head) {\r\n\t\t\tcase 'alpha': {\r\n\t\t\t\twbOptions.header = 'A';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'numeric': {\r\n\t\t\t\twbOptions.header = 1;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tdefault: {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet result = [];\r\n\t\tfor (let sheetName of workbook.SheetNames) {\r\n\t\t\tconst partial = this.xlsx.utils.sheet_to_json(workbook.Sheets[sheetName], wbOptions);\r\n\t\t\tresult = partial.concat(result);\r\n\t\t}\r\n\r\n\t\treturn result.map(rewriteObject);\r\n\t}\r\n}","import { Command } from '../../core/command/command';\r\nimport { FocusAfterRender } from '../../core/focus/focus.service';\r\n\r\nexport class PagerView {\r\n\tconstructor(model, table) {\r\n\t\tthis.model = model;\r\n\t\tthis.table = table;\r\n\r\n\t\tthis.next = new Command({\r\n\t\t\tsource: 'pager',\r\n\t\t\texecute: () => {\r\n\t\t\t\tnew FocusAfterRender(model, table);\r\n\t\t\t\tmodel.pagination({ current: model.pagination().current + 1 }, { source: 'pager.view' })\r\n\t\t\t},\r\n\t\t\tcanExecute: () => (model.pagination().current + 1) * model.pagination().size < model.pagination().count\r\n\t\t});\r\n\r\n\t\tthis.prev = new Command({\r\n\t\t\tsource: 'pager',\r\n\t\t\texecute: () => {\r\n\t\t\t\tnew FocusAfterRender(model, table);\r\n\t\t\t\tmodel.pagination({ current: model.pagination().current - 1 }, { source: 'pager.view' });\r\n\t\t\t},\r\n\t\t\tcanExecute: () => model.pagination().current > 0\r\n\t\t});\r\n\t}\r\n\r\n\tget theme() {\r\n\t\treturn this.model.style().classList\t\t\r\n\t}\r\n\r\n\tget resource() {\r\n\t\treturn this.model.pagination().resource;\r\n\t}\r\n\r\n\tget size() {\r\n\t\treturn this.model.pagination().size;\r\n\t}\r\n\r\n\tset size(value) {\r\n\t\tthis.model.pagination({ size: value, current: 0 }, { source: 'pager.view' });\r\n\t}\r\n\r\n\tget sizeList() {\r\n\t\treturn this.model.pagination().sizeList;\r\n\t}\r\n\r\n\tget current() {\r\n\t\treturn this.model.pagination().current;\r\n\t}\r\n\r\n\tset current(value) {\r\n\t\treturn this.model.pagination({ current: value }, { source: 'pager.view' });\r\n\t}\r\n\r\n\tget from() {\r\n\t\treturn Math.min(this.total, this.current * this.size + 1);\r\n\t}\r\n\r\n\tget to() {\r\n\t\treturn Math.min(this.total, (this.current + 1) * this.size);\r\n\t}\r\n\r\n\tget total() {\r\n\t\treturn this.model.pagination().count;\r\n\t}\r\n\r\n\tget totalPages() {\r\n\t\treturn this.size === 0\r\n\t\t\t? 0\r\n\t\t\t: Math.max(1, Math.ceil(this.total / this.size));\r\n\t}\r\n\r\n\tget scroll() {\r\n\t\treturn this.model.scroll();\r\n\t}\r\n}","import { PersistenceService } from '../../core/persistence/persistence.service';\nimport { Command } from '../../core/command/command';\nimport { CommandManager } from '../../core/command/command.manager';\nimport { stringifyFactory } from '../../core/services/model.stringify';\nimport { Shortcut } from '../../core/shortcut/shortcut';\nimport { ShortcutDispatcher } from '../../core/shortcut/shortcut.dispatcher';\nimport { clone } from '../../core/utility/kit';\nimport { Event } from '../../core/infrastructure/event';\nimport { groupBy } from '../../core/utility/kit';\n\nexport class PersistenceView {\n\tconstructor(model, createDefaultModel) {\n\t\tthis.model = model;\n\t\tthis.service = new PersistenceService(model, createDefaultModel);\n\t\tthis.items = [];\n\t\tthis.state = {\n\t\t\teditItem: null,\n\t\t\toldValue: null\n\t\t};\n\t\tthis.closeEvent = new Event();\n\n\t\tconst persistence = model.persistence;\n\t\tthis.id = persistence().id;\n\t\tthis.title = this.stringify();\n\n\t\tpersistence()\n\t\t\t.storage.getItem(this.id)\n\t\t\t.then(items => {\n\t\t\t\tthis.items = items || [];\n\t\t\t\tthis.groups = this.buildGroups(this.items);\n\t\t\t});\n\n\t\tthis.model.gridChanged.watch(e => {\n\t\t\tif (e.hasChanges('status') && e.state.status === 'unbound') {\n\t\t\t\tthis.closeEvent.emit();\n\t\t\t}\n\t\t});\n\n\t\tthis.create = new Command({\n\t\t\tsource: 'persistence.view',\n\t\t\texecute: () => {\n\t\t\t\tconst item = {\n\t\t\t\t\ttitle: this.title,\n\t\t\t\t\tmodified: Date.now(),\n\t\t\t\t\tmodel: this.service.save(),\n\t\t\t\t\tisDefault: false,\n\t\t\t\t\tgroup: persistence().defaultGroup,\n\t\t\t\t\tcanEdit: true\n\t\t\t\t};\n\n\t\t\t\tif (persistence().create.execute(item) !== false) {\n\t\t\t\t\tthis.items.push(item);\n\t\t\t\t\tthis.persist();\n\t\t\t\t\tthis.title = '';\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tcanExecute: () => {\n\t\t\t\tif (!!this.title && this.isUniqueTitle(this.title)) {\n\t\t\t\t\tconst item = {\n\t\t\t\t\t\ttitle: this.title,\n\t\t\t\t\t\tmodified: Date.now(),\n\t\t\t\t\t\tmodel: this.service.save(),\n\t\t\t\t\t\tisDefault: false,\n\t\t\t\t\t\tgroup: persistence().defaultGroup,\n\t\t\t\t\t\tcanEdit: true\n\t\t\t\t\t};\n\n\t\t\t\t\treturn persistence().create.canExecute(item);\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\n\t\tthis.edit = {\n\t\t\tenter: new Command({\n\t\t\t\tsource: 'persistence.view',\n\t\t\t\texecute: item => {\n\t\t\t\t\titem = item || this.items.find(this.isActive);\n\t\t\t\t\tif (!item) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tthis.state = {\n\t\t\t\t\t\teditItem: item,\n\t\t\t\t\t\toldValue: clone(item)\n\t\t\t\t\t};\n\t\t\t\t\treturn true;\n\t\t\t\t},\n\t\t\t\tcanExecute: item => this.state.editItem === null && item.canEdit\n\t\t\t}),\n\t\t\tcommit: new Command({\n\t\t\t\tsource: 'persistence.view',\n\t\t\t\tshortcut: 'enter',\n\t\t\t\texecute: item => {\n\t\t\t\t\titem = item || this.state.editItem;\n\t\t\t\t\tif (persistence().modify.execute(item) !== false) {\n\t\t\t\t\t\tconst title = item.title;\n\t\t\t\t\t\tif (!title || !this.isUniqueTitle(title)) {\n\t\t\t\t\t\t\tthis.edit.cancel.execute();\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\titem.modified = Date.now();\n\t\t\t\t\t\tthis.persist();\n\t\t\t\t\t\tthis.state.editItem = null;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t},\n\t\t\t\tcanExecute: () =>\n\t\t\t\t\tthis.state.editItem !== null &&\n\t\t\t\t\tpersistence().modify.canExecute(this.state.editItem)\n\t\t\t}),\n\t\t\tcancel: new Command({\n\t\t\t\tsource: 'persistence.view',\n\t\t\t\tshortcut: 'escape',\n\t\t\t\texecute: () => {\n\t\t\t\t\tif (this.state.editItem !== null) {\n\t\t\t\t\t\tconst index = this.items.indexOf(this.state.editItem);\n\t\t\t\t\t\tthis.items.splice(index, 1, this.state.oldValue);\n\t\t\t\t\t\tthis.state.oldValue = null;\n\t\t\t\t\t\tthis.state.editItem = null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.closeEvent.emit();\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t})\n\t\t};\n\n\t\tthis.load = new Command({\n\t\t\tsource: 'persistence.view',\n\t\t\tcanExecute: item => persistence().load.canExecute(item),\n\t\t\texecute: item => {\n\t\t\t\tif (persistence().load.execute(item) !== false) {\n\t\t\t\t\tthis.service.load(item.model);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\n\t\tthis.reset = new Command({\n\t\t\tsource: 'persistence.view',\n\t\t\texecute: () => {\n\t\t\t\tif (persistence().reset.execute() !== false) {\n\t\t\t\t\tthis.service.reset();\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tcanExecute: () => persistence().reset.canExecute()\n\t\t});\n\n\t\tthis.remove = new Command({\n\t\t\tsource: 'persistence.view',\n\t\t\texecute: item => {\n\t\t\t\tconst index = this.items.indexOf(item);\n\t\t\t\tif (index >= 0) {\n\t\t\t\t\tif (persistence().remove.execute(item) !== false) {\n\t\t\t\t\t\tthis.items.splice(index, 1);\n\n\t\t\t\t\t\tthis.persist();\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tcanExecute: item =>\n\t\t\t\titem.canEdit && persistence().remove.canExecute(item)\n\t\t});\n\n\t\tthis.setDefault = new Command({\n\t\t\tsource: 'persistence.view',\n\t\t\tcanExecute: item => persistence().setDefault.canExecute(item),\n\t\t\texecute: item => {\n\t\t\t\tif (persistence().setDefault.execute(item) !== false) {\n\t\t\t\t\tconst index = this.items.indexOf(item);\n\t\t\t\t\tif (index === -1) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (item.isDefault) {\n\t\t\t\t\t\titem.isDefault = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.items.forEach(i => (i.isDefault = false));\n\t\t\t\t\t\titem.isDefault = true;\n\t\t\t\t\t}\n\t\t\t\t\tthis.items.splice(index, 1, item);\n\n\t\t\t\t\tthis.persist();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\n\t\tconst commandManager = new CommandManager();\n\t\tconst shortcut = new Shortcut(new ShortcutDispatcher());\n\n\t\tthis.keyDown = e => shortcut.keyDown(e);\n\n\t\tshortcut.register(commandManager, [\n\t\t\tthis.edit.enter,\n\t\t\tthis.edit.commit,\n\t\t\tthis.edit.cancel\n\t\t]);\n\t}\n\n\tget blank() {\n\t\treturn {\n\t\t\ttitle: 'Blank',\n\t\t\tmodified: Date.now(),\n\t\t\tmodel: {},\n\t\t\tisDefault: false,\n\t\t\tgroup: 'blank',\n\t\t\tcanEdit: false\n\t\t};\n\t}\n\n\tget sortedItems() {\n\t\treturn this.items.sort((a, b) => b.modified - a.modified);\n\t}\n\n\tbuildGroups(items) {\n\t\treturn items.reduce((memo, item) => {\n\t\t\tconst group = memo.find(m => m.key === item.group);\n\t\t\tif (group) {\n\t\t\t\tgroup.items.push(item);\n\t\t\t} else {\n\t\t\t\tmemo.push({\n\t\t\t\t\tkey: item.group,\n\t\t\t\t\titems: [item]\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn memo;\n\t\t}, []);\n\t}\n\n\tisActive(item) {\n\t\treturn JSON.stringify(item.model) === JSON.stringify(this.service.save()); // eslint-disable-line angular/json-functions\n\t}\n\n\tpersist() {\n\t\tthis.model\n\t\t\t.persistence()\n\t\t\t.storage.setItem(this.id, this.items.filter(item => item.canEdit));\n\n\t\tthis.groups = this.buildGroups(this.items);\n\t}\n\n\tstringify(item) {\n\t\tconst model = item ? item.model : this.service.save();\n\t\tconst targets = [];\n\t\tconst settings = this.model.persistence().settings;\n\n\t\tfor (let key in settings) {\n\t\t\tif (!model[key]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst stringify = stringifyFactory(key);\n\t\t\tconst target = stringify(model[key]);\n\t\t\tif (target !== '') {\n\t\t\t\ttargets.push(target);\n\t\t\t}\n\t\t}\n\n\t\treturn targets.join('; ') || 'No settings';\n\t}\n\n\tisUniqueTitle(title) {\n\t\treturn !this.items.some(item => {\n\t\t\treturn (\n\t\t\t\titem !== this.state.editItem &&\n\t\t\t\titem.title.toLowerCase() === title.trim().toLowerCase()\n\t\t\t);\n\t\t});\n\t}\n}\n","import { GRID_PREFIX } from '../../core/definition';\r\nimport { max } from '../../core/utility/kit';\r\nimport { EventListener } from '../../core/infrastructure/event.listener';\r\nimport { EventManager } from '../../core/infrastructure/event.manager';\r\nimport { jobLine } from '../../core/services/job.line';\r\nimport { Disposable } from '../../core/infrastructure/disposable';\r\n\r\nexport class PositionView extends Disposable {\r\n\tconstructor(context) {\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis.element = context.element;\r\n\t\tthis.targetName = context.targetName;\r\n\r\n\t\tconst windowListener = new EventListener(window, new EventManager(this));\r\n\t\tconst job = jobLine(400);\r\n\r\n\t\tthis.using(windowListener.on('resize', () => {\r\n\t\t\tthis.invalidate();\r\n\t\t\t// In case if after window resize there can different animated layout changes\r\n\t\t\tjob(() => this.invalidate());\r\n\t\t}));\r\n\t}\r\n\r\n\tinvalidate() {\r\n\t\tlet node = this.element.parentNode;\r\n\t\twhile (node) {\r\n\t\t\tconst targetName = (this.targetName || '').toLowerCase();\r\n\t\t\tif (node.nodeName.toLowerCase() === targetName) {\r\n\t\t\t\tthis.layout(node, this.element);\r\n\t\t\t\tthis.element.style.opacity = 1;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tnode = node.parentNode;\r\n\t\t}\r\n\t}\r\n\r\n\tlayout(target, source) {\r\n\t\tconst { top, right, left, bottom } = target.getBoundingClientRect();\r\n\t\tconst { width, height } = source.getBoundingClientRect();\r\n\t\tconst br = this.boxRect();\r\n\t\tconst intersections = [];\r\n\r\n\t\tintersections.push(\r\n\t\t\tthis.intersection(br, {\r\n\t\t\t\ttop: top,\r\n\t\t\t\tright: left + width,\r\n\t\t\t\tbottom: top + height,\r\n\t\t\t\tleft: left\r\n\t\t\t}));\r\n\r\n\t\tintersections.push(\r\n\t\t\tthis.intersection(br, {\r\n\t\t\t\ttop: top,\r\n\t\t\t\tright: right,\r\n\t\t\t\tbottom: top + height,\r\n\t\t\t\tleft: right - width\r\n\t\t\t}));\r\n\r\n\t\tintersections.push(\r\n\t\t\tthis.intersection(br, {\r\n\t\t\t\ttop: bottom - height,\r\n\t\t\t\tright: left + width,\r\n\t\t\t\tbottom: bottom,\r\n\t\t\t\tleft: left\r\n\t\t\t}));\r\n\r\n\t\tintersections.push(\r\n\t\t\tthis.intersection(br, {\r\n\t\t\t\ttop: bottom - height,\r\n\t\t\t\tright: right,\r\n\t\t\t\tbottom: bottom,\r\n\t\t\t\tleft: right - width\r\n\t\t\t}));\r\n\r\n\t\tconst intersection = max(intersections, i => i.area);\r\n\t\tconst { left: l, top: t } = intersection.b;\r\n\t\tconst pos = this.fix({ left: l - br.left, top: t - br.top, width, height });\r\n\r\n\t\tsource.style.left = pos.left + 'px';\r\n\t\tsource.style.top = pos.top + 'px';\r\n\t}\r\n\r\n\tintersection(a, b) {\r\n\t\tconst xo = Math.max(0, Math.min(a.right, b.right) - Math.max(a.left, b.left));\r\n\t\tconst yo = Math.max(0, Math.min(a.bottom, b.bottom) - Math.max(a.top, b.top));\r\n\t\tconst area = xo * yo;\r\n\t\treturn { area, a, b };\r\n\t}\r\n\r\n\tfix(rect) {\r\n\t\tconst wr = this.windowRect();\r\n\t\tconst br = this.boxRect();\r\n\t\tconst { width: vw, height: vh } = wr;\r\n\t\tconst vx = br.left - wr.left;\r\n\t\tconst vy = br.top - wr.top;\r\n\t\tconst { height: rh, width: rw } = rect;\r\n\t\tconst rx = rect.left + vx;\r\n\t\tconst ry = rect.top + vy;\r\n\t\tconst gtx1 = rx + rw > vw;\r\n\t\tconst ltx0 = rx < 0;\r\n\t\tconst gty1 = ry + rh > vh;\r\n\t\tconst lty0 = ry < 0;\r\n\t\tconst left = ltx0 || gtx1\r\n\t\t\t? (vw - rw) / 2 - vx\r\n\t\t\t: rect.left;\r\n\t\tconst top = lty0 || gty1\r\n\t\t\t? (vh - rh) / 2 - vy\r\n\t\t\t: rect.top;\r\n\r\n\t\treturn { left, top };\r\n\t}\r\n\r\n\tboxRect() {\r\n\t\tlet view = this.element;\r\n\t\tconst marker = `${GRID_PREFIX}-box`;\r\n\t\twhile (view) {\r\n\t\t\tif (view.classList && view.classList.contains(marker)) {\r\n\t\t\t\treturn view.getBoundingClientRect();\r\n\t\t\t}\r\n\r\n\t\t\tview = view.parentNode;\r\n\t\t}\r\n\r\n\t\treturn this.windowRect();\r\n\t}\r\n\r\n\twindowRect() {\r\n\t\tconst { innerHeight: h, innerWidth: w } = window;\r\n\t\treturn {\r\n\t\t\ttop: 0,\r\n\t\t\tleft: 0,\r\n\t\t\tbottom: h,\r\n\t\t\tright: w,\r\n\t\t\theight: h,\r\n\t\t\twidth: w\r\n\t\t};\r\n\t}\r\n}","import { isFunction } from '../../core/utility/kit';\r\nimport { AppError } from '../../core/infrastructure/error';\r\nimport { PipeUnit } from '../../core/pipe/pipe.unit';\r\nimport { serialize as serializeGet } from '../../core/rest/get.serialize';\r\nimport { serialize as serializePost } from '../../core/rest/post.serialize';\r\n\r\nexport class RestView {\r\n\tconstructor(model, { get, post }) {\r\n\t\tthis.model = model;\r\n\r\n\t\tconst { method, url, serialize } = this.model.rest();\r\n\t\tif (!url) {\r\n\t\t\tthrow new AppError('rest', 'REST endpoint URL is required');\r\n\t\t}\r\n\r\n\t\tconst fetch = this.fetchFactory(method, get, post);\r\n\t\tconst doSerialize = this.serializeFactory(method, serialize);\r\n\r\n\t\tmodel.data({\r\n\t\t\tpipe: [\r\n\t\t\t\t(data, context, next) => {\r\n\t\t\t\t\tfetch(url, doSerialize(model)).then(data => next(data));\r\n\t\t\t\t},\r\n\t\t\t\t...PipeUnit.view\r\n\t\t\t]\r\n\t\t}, { source: 'rest.view' });\r\n\t}\r\n\r\n\tfetchFactory(method, get, post) {\r\n\t\tswitch (method.toLowerCase()) {\r\n\t\t\tcase 'get':\r\n\t\t\t\treturn get;\r\n\t\t\tcase 'post':\r\n\t\t\t\treturn post;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new AppError('rest', `\"${method}\" is incorrect REST method`);\r\n\t\t}\r\n\t}\r\n\r\n\tserializeFactory(method, serialize) {\r\n\t\tif (isFunction(serialize)) {\r\n\t\t\treturn serialize;\r\n\t\t} else if (method === 'get') {\r\n\t\t\treturn serializeGet;\r\n\t\t} else if (method === 'post') {\r\n\t\t\treturn serializePost;\r\n\t\t}\r\n\t}\r\n}\r\n","import { isString, isEqual } from '../../core/utility/kit';\nimport { hasRules, createValidator } from '../../core/validation/validation.service';\n\nexport class ValidatorView {\n\tconstructor(model, context) {\n\t\tthis.model = model;\n\t\tthis.context = context;\n\n\t\tthis.oldErrors = [];\n\t\tif (hasRules(this.rules, this.key)) {\n\t\t\tthis.validator = createValidator(this.rules, this.key);\n\t\t}\n\t}\n\n\tget errors() {\n\t\tif (this.validator) {\n\t\t\tconst target = {\n\t\t\t\t[this.key]: this.value\n\t\t\t};\n\n\t\t\tconst isValid = this.validator.validate(target);\n\t\t\tif (!isValid) {\n\t\t\t\tconst newError = this.validator.getErrors()[this.key];\n\t\t\t\tconst newErrors = isString(newError) ? [newError] : newError;\n\t\t\t\tif (!isEqual(newErrors, this.oldErrors)) {\n\t\t\t\t\tthis.oldErrors = newErrors;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.oldErrors.length = 0;\n\t\t\t}\n\n\t\t\treturn this.oldErrors;\n\t\t}\n\t}\n\n\tget rules() {\n\t\treturn this.model.validation().rules;\n\t}\n\n\tget type() {\n\t\treturn this.context.type;\n\t}\n\n\tget value() {\n\t\treturn this.context.value;\n\t}\n\n\tget key() {\n\t\treturn this.context.key;\n\t}\n}\n","import {\n\tDirective,\n\tElementRef,\n\tContentChild,\n\tAfterViewInit,\n\tOutput,\n\tEventEmitter,\n\tNgZone\n} from '@angular/core';\nimport { MatChipInput } from '@angular/material';\nimport { Shortcut } from 'ng2-qgrid';\nimport { ChipsDirective } from './chips.directive';\n\n@Directive({\n\tselector: '[q-grid-chips-push]'\n})\nexport class ChipsPushDirective implements AfterViewInit {\n\t@ContentChild(MatChipInput) inputComponent: MatChipInput;\n\t@ContentChild('qGridInput') inputElement: ElementRef;\n\n\t@Output('q-grid-chips-push') push = new EventEmitter<string>();\n\n\tconstructor(private zone: NgZone, private chipsDirective: ChipsDirective) { }\n\n\tngAfterViewInit() {\n\t\tthis.inputComponent.chipEnd.subscribe(e => {\n\t\t\t// we need to override it to prevent default behavior\n\t\t});\n\n\t\tconst input = this.inputElement.nativeElement;\n\t\tthis.zone.runOutsideAngular(() =>\n\t\t\tinput.addEventListener('keydown', e => {\n\t\t\t\tconst code = Shortcut.translate(e);\n\t\t\t\tif (code === 'enter') {\n\t\t\t\t\tconst value = (input.value || '').trim() as string;\n\t\t\t\t\tif (value) {\n\t\t\t\t\t\tthis.push.emit(value);\n\n\t\t\t\t\t\tinput.value = '';\n\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\tthis.chipsDirective.tick();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n}\n","import {\n\tDirective, ContentChild, AfterViewInit, Output, EventEmitter\n} from '@angular/core';\nimport { ChipsDirective } from './chips.directive';\nimport { MatChip } from '@angular/material';\n\n@Directive({\n\tselector: '[q-grid-chips-remove]'\n})\nexport class ChipsRemoveDirective implements AfterViewInit {\n\t@ContentChild(MatChip) list: MatChip;\n\t@Output('q-grid-chips-remove') remove = new EventEmitter<any>();\n\n\tconstructor(private chipsDirective: ChipsDirective) { }\n\n\tngAfterViewInit() {\n\t\tthis.list.removed.subscribe(() => {\n\t\t\tif (this.remove) {\n\t\t\t\tthis.remove.emit();\n\t\t\t\tthis.chipsDirective.tick();\n\t\t\t}\n\t\t});\n\t}\n}\n","import {\n\tDirective,\n\tApplicationRef,\n\tNgZone,\n\tChangeDetectorRef\n} from '@angular/core';\n\n@Directive({\n\tselector: '[q-grid-chips]'\n})\nexport class ChipsDirective {\n\tconstructor(private app: ApplicationRef, private zone: NgZone, public cd: ChangeDetectorRef) { }\n\n\ttick() {\n\t\tthis.app.tick();\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { ChipsDirective } from './chips.directive';\nimport { ChipsPushDirective } from './chips-push.directive';\nimport { ChipsRemoveDirective } from './chips-remove.directive';\n\n@NgModule({\n\tdeclarations: [\n\t\tChipsDirective,\n\t\tChipsPushDirective,\n\t\tChipsRemoveDirective,\n\t],\n\texports: [\n\t\tChipsDirective,\n\t\tChipsPushDirective,\n\t\tChipsRemoveDirective,\n\t]\n})\nexport class ChipsModule {\n}\n","import {\n\tDirective,\n\tContentChild,\n\tEventEmitter,\n\tOutput,\n\tInput,\n\tAfterViewInit\n} from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material';\n\n@Directive({\n\tselector: '[q-grid-menu-trigger]'\n})\nexport class MenuTriggerDirective implements AfterViewInit {\n\t@ContentChild(MatMenuTrigger) trigger: MatMenuTrigger;\n\t@Output('q-grid-menu-trigger') onClose = new EventEmitter<any>();\n\n\tconstructor() {}\n\n\tngAfterViewInit() {\n\t\tPromise.resolve(null).then(() => this.trigger.openMenu());\n\n\t\tthis.trigger.menuClosed.subscribe(() => {\n\t\t\tif (this.onClose) {\n\t\t\t\tsetTimeout(() => this.onClose.emit(), 10);\n\t\t\t}\n\t\t});\n\t}\n}\n","import { Directive, Input, ElementRef, NgZone } from '@angular/core';\r\n\r\n@Directive({\r\n\tselector: '[q-grid-menu]'\r\n})\r\nexport class MenuDirective {\r\n\tconstructor(element: ElementRef, zone: NgZone) {\r\n\t\tzone.runOutsideAngular(() =>\r\n\t\t\telement.nativeElement.addEventListener('click', e => e.stopPropagation())\r\n\t\t);\r\n\t}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { MenuDirective } from './menu.directive';\r\nimport { MenuTriggerDirective } from './menu-trigger.directive';\r\n\r\n@NgModule({\r\n\tdeclarations: [MenuDirective, MenuTriggerDirective],\r\n\texports: [MenuDirective, MenuTriggerDirective]\r\n})\r\nexport class MenuModule {}\r\n","import { Directive, AfterViewInit, ContentChild } from '@angular/core';\nimport { MatSelect } from '@angular/material';\n\n@Directive({\n\tselector: '[q-grid-select]'\n})\nexport class SelectDirective implements AfterViewInit {\n\t@ContentChild(MatSelect) input: MatSelect;\n\n\tconstructor() { }\n\n\tngAfterViewInit() {\n\t\tthis.input.focus();\n\t\tPromise.resolve(null)\n\t\t\t.then(() => this.input.open());\n\t}\n}\n","import { NgModule } from '@angular/core';\r\nimport { SelectDirective } from './select.directive';\r\nimport { MatSelectModule } from '@angular/material';\r\n\r\n@NgModule({\r\n\tdeclarations: [SelectDirective],\r\n\texports: [SelectDirective]\r\n})\r\nexport class SelectModule {}\r\n","import { Directive, ElementRef, Renderer2, AfterViewInit } from '@angular/core';\nimport { GridError, GridPlugin } from 'ng2-qgrid';\n\n@Directive({\n\tselector: '[q-grid-theme-overlay]',\n\tproviders: [GridPlugin]\n})\nexport class ThemeOverlayDirective implements AfterViewInit {\n\n\tconstructor(\n\t\tprivate plugin: GridPlugin,\n\t\tprivate elementRef: ElementRef,\n\t\tprivate renderer: Renderer2) {\n\t}\n\n\tngAfterViewInit(): void {\n\t\tconst { model } = this.plugin;\n\t\tconst element = this.elementRef.nativeElement;\n\t\tlet parent = this.renderer.parentNode(element);\n\t\tlet overlayContainer: any = null;\n\n\t\twhile (parent && !(parent.id && parent.id.startsWith('cdk-overlay'))) {\n\t\t\tparent = this.renderer.parentNode(parent);\n\t\t\tif (parent.nodeName === 'BODY') {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (parent.nodeName !== 'BODY') {\n\t\t\toverlayContainer = parent;\n\t\t}\n\n\t\tif (!overlayContainer) {\n\t\t\tthrow new GridError(\n\t\t\t\t'theme-overlay.directive',\n\t\t\t\t`cdk-overlay container is not found`\n\t\t\t);\n\t\t}\n\n\t\tmodel.style().classList.forEach(cssClass => {\n\t\t\tthis.renderer.addClass(overlayContainer, cssClass);\n\t\t});\n\t}\n}\n","import { NgModule } from '@angular/core';\r\nimport { ThemeOverlayDirective } from './theme-overlay.directive';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tThemeOverlayDirective\r\n\t],\r\n\texports: [\r\n\t\tThemeOverlayDirective\r\n\t]\r\n})\r\nexport class ThemeOverlayModule {\r\n}\r\n","module.exports = \"@charset \\\"UTF-8\\\";\\n.q-grid.q-grid-theme-material .q-grid-view:not(.q-grid-active) td {\\n  border-top-color: rgba(0, 0, 0, 0.06); }\\n.q-grid-backdrop {\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  position: fixed;\\n  background: transparent;\\n  z-index: -1; }\\n.q-grid-backdrop-inactive {\\n    pointer-events: none; }\\n.q-grid.q-grid-theme-material.q-grid-box {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.q-grid.q-grid-theme-material td.q-grid-array > ul {\\n  list-style: none;\\n  margin: 0;\\n  padding: 0;\\n  overflow: hidden; }\\n.q-grid.q-grid-theme-material td.q-grid-array > ul li {\\n    display: inline-block;\\n    min-width: 16px;\\n    padding: 4px 8px;\\n    text-align: center;\\n    white-space: nowrap;\\n    vertical-align: middle;\\n    background-color: #e0e0e0;\\n    border-radius: 16px;\\n    margin-right: 4px; }\\n.q-grid.q-grid-theme-material td.q-grid-array > ul li:last-child {\\n    margin-right: 0; }\\n.q-grid.q-grid-theme-material .q-grid-editor.q-grid-array {\\n  min-height: 48px;\\n  width: 340px; }\\n.q-grid.q-grid-theme-material .q-grid-editor.q-grid-array .q-grid-array-view {\\n    max-height: 140px;\\n    overflow-y: auto;\\n    overflow-x: hidden; }\\n.q-grid.q-grid-theme-material .q-grid-editor.q-grid-array .q-grid-array-view .q-grid-array-item {\\n      margin: 3px 1px 3px 1px; }\\n.q-grid.q-grid-theme-material .q-grid-editor.q-grid-array .q-grid-array-input {\\n    margin: 0px 3px 3px 0px;\\n    width: 100%; }\\n.q-grid.q-grid-theme-material .q-grid-editor.q-grid-autocomplete {\\n  width: 200px; }\\n.q-grid.q-grid-theme-material .q-grid-editor.q-grid-autocomplete input {\\n    border-color: #3f51b5;\\n    border-width: 0 0 2px 0;\\n    border-radius: 0;\\n    border-style: solid;\\n    line-height: 26px;\\n    padding: 2px 2px 1px 2px;\\n    height: 30px; }\\n.q-grid-autocomplete-menu {\\n  z-index: 101; }\\n.q-grid.q-grid-theme-material td.q-grid-bool {\\n  text-overflow: unset; }\\n.q-grid.q-grid-theme-material td.q-grid-bool .q-grid-checkbox {\\n    margin: 0;\\n    outline: none; }\\n.q-grid.q-grid-theme-material th.q-grid-bool.q-grid-filter-row {\\n  text-align: center; }\\n.q-grid.q-grid-theme-material .q-grid-edit-trigger {\\n  position: absolute;\\n  right: 2px;\\n  font-size: 12px;\\n  min-width: 16px;\\n  width: 16px;\\n  min-height: 16px;\\n  height: 16px;\\n  outline: none;\\n  border: none;\\n  background: transparent;\\n  padding: 0;\\n  margin: auto 0;\\n  top: 0;\\n  bottom: 0; }\\n.q-grid.q-grid-theme-material .q-grid-edit-trigger .q-grid-icon {\\n    color: #757575;\\n    font-size: 16px;\\n    height: 16px;\\n    width: 16px;\\n    min-height: 16px;\\n    min-width: 16px;\\n    line-height: 16px;\\n    display: block; }\\n.q-grid.q-grid-theme-material td.q-grid-edit {\\n  overflow: visible !important; }\\n.q-grid.q-grid-theme-material td.q-grid-edit .q-grid-editor {\\n    display: block;\\n    position: fixed;\\n    border-radius: 4px;\\n    background-color: #fcfcfc;\\n    color: rgba(0, 0, 0, 0.87);\\n    left: 0;\\n    top: 0;\\n    box-shadow: 0 7px 8px -4px rgba(0, 0, 0, 0.2), 0 13px 19px 2px rgba(0, 0, 0, 0.14), 0 5px 24px 4px rgba(0, 0, 0, 0.12);\\n    flex-direction: column;\\n    box-sizing: content-box;\\n    z-index: 2; }\\n.q-grid.q-grid-theme-material td.q-grid-edit .q-grid-actions button {\\n    margin: 8px 0 0 8px;\\n    float: right;\\n    text-transform: uppercase; }\\n.q-grid.q-grid-theme-material td.q-grid-edit .q-grid-position {\\n    opacity: 0; }\\n.q-grid.q-grid-theme-material td.q-grid-edit .q-grid-editor-content {\\n    padding: 24px;\\n    overflow: hidden; }\\n.q-grid.q-grid-theme-material td.q-grid-edit .q-grid-editor-content h2 {\\n      margin-top: 0; }\\n.q-grid.q-grid-theme-material td.q-grid-edit .q-grid-editor-content .q-grid-editor-actions {\\n      text-align: right; }\\n.q-grid.q-grid-theme-material td.q-grid-edit .q-grid-editor-content .q-grid-editor-actions button {\\n        margin-bottom: 0;\\n        display: inline-block; }\\n.q-grid.q-grid-theme-material td.q-grid-edit .q-grid-editor-content .q-grid-editor-actions button:last-child {\\n          margin-right: 0; }\\n.q-grid.q-grid-theme-material .q-grid-editor.q-grid-email {\\n  width: 297px; }\\n.q-grid.q-grid-theme-material .q-grid-editor.q-grid-email .q-grid-email-fields {\\n    padding-top: 8px; }\\n.q-grid.q-grid-theme-material td .q-grid-editor.q-grid-file {\\n  height: 192px;\\n  width: 346px; }\\n.q-grid.q-grid-theme-material td .q-grid-editor.q-grid-file h2 {\\n    text-align: left; }\\n.q-grid-file-upload-area {\\n  position: relative;\\n  border: 1px dashed #e0e0e0;\\n  text-align: center;\\n  height: 120px; }\\n.q-grid-file-upload-area .q-grid-file-upload-message {\\n    position: relative;\\n    top: 50%;\\n    -webkit-transform: translateY(-50%);\\n            transform: translateY(-50%);\\n    line-height: 24px; }\\n.q-grid-file-upload-area .q-grid-file-upload-message span {\\n      overflow: hidden;\\n      text-overflow: ellipsis; }\\n.q-grid-file-upload-area .q-grid-file-upload-message .q-grid-icon {\\n      margin: 0; }\\n.q-grid-file-upload-area.q-grid-file-has-preview .q-grid-file-upload-message {\\n    visibility: hidden; }\\n.q-grid-file-upload-area .q-grid-file-upload-filename {\\n    padding: 10px;\\n    font-weight: bold;\\n    color: #757575; }\\n.q-grid-file-upload-area input {\\n    opacity: 0;\\n    position: absolute;\\n    height: 100%;\\n    width: 100%;\\n    left: 0;\\n    top: 0;\\n    z-index: 2; }\\n.q-grid-file-upload-area .q-grid-file-preview {\\n    opacity: 1;\\n    position: absolute;\\n    left: 0;\\n    top: 0;\\n    height: 100%;\\n    width: 100%;\\n    vertical-align: middle;\\n    text-align: center; }\\n.q-grid-file-upload-area .q-grid-file-preview img {\\n      position: relative;\\n      max-height: 100% !important;\\n      max-width: 100% !important;\\n      z-index: 3; }\\n.q-grid-file-upload-area:hover {\\n  background-color: #f5f5f5; }\\n.q-grid-file-upload-area:hover .q-grid-file-preview {\\n    opacity: 0;\\n    transition: opacity 0.2s ease-in-out; }\\n.q-grid-file-upload-area:hover .q-grid-file-preview img {\\n      z-index: 1; }\\n.q-grid-file-upload-area:hover .q-grid-file-upload-message {\\n    visibility: visible; }\\n.q-grid.q-grid-theme-material td.q-grid-group-summary {\\n  color: #007fa3 !important;\\n  background-color: rgba(0, 0, 0, 0.04) !important; }\\n.q-grid.q-grid-theme-material td.q-grid-image {\\n  cursor: pointer;\\n  text-align: center; }\\n.q-grid.q-grid-theme-material td.q-grid-image img {\\n    max-height: 40px;\\n    max-width: 40px; }\\n.q-grid.q-grid-theme-material td.q-grid-image .q-grid-icon {\\n    color: #757575; }\\n.q-grid.q-grid-theme-material thead th.q-grid-pivot {\\n  border-top: 1px solid #e0e0e0;\\n  border-left: 1px solid #e0e0e0;\\n  padding: 0; }\\n.q-grid.q-grid-theme-material thead th.q-grid-pivot:nth-last-child(2) {\\n    border-right: 1px solid #e0e0e0; }\\n.q-grid.q-grid-theme-material .q-grid-editor.q-grid-reference {\\n  height: 417px;\\n  width: 385px; }\\n.q-grid.q-grid-theme-material .q-grid-editor.q-grid-reference .q-grid-reference-content {\\n    width: 100%;\\n    height: 100%; }\\n.q-grid.q-grid-theme-material .q-grid-editor.q-grid-reference .q-grid-reference-content .q-grid-title h2,\\n    .q-grid.q-grid-theme-material .q-grid-editor.q-grid-reference .q-grid-reference-content .q-grid-caption h2 {\\n      margin-bottom: 8px; }\\n.q-grid.q-grid-theme-material td.q-grid-row-details {\\n  background: #fff; }\\n.q-grid.q-grid-theme-material td.q-grid-row-indicator,\\n.q-grid.q-grid-theme-material th.q-grid-row-indicator {\\n  padding: 0 !important; }\\n.q-grid.q-grid-theme-material td.q-grid-row-indicator .q-grid-icon,\\n  .q-grid.q-grid-theme-material th.q-grid-row-indicator .q-grid-icon {\\n    font-size: 16px;\\n    width: 16px;\\n    min-width: 16px;\\n    height: 16px;\\n    min-height: 16px; }\\n.q-grid.q-grid-theme-material td.q-grid-edit.q-grid-row-options button {\\n  width: 24px;\\n  margin: 0;\\n  padding: 0; }\\n.q-grid.q-grid-theme-material td.q-grid-select,\\n.q-grid.q-grid-theme-material th.q-grid-select {\\n  text-align: center; }\\n.q-grid.q-grid-theme-material td.q-grid-select > div,\\n  .q-grid.q-grid-theme-material th.q-grid-select > div {\\n    width: 100%;\\n    height: 100%;\\n    display: inline-block; }\\n.q-grid.q-grid-theme-material td.q-grid-select > div div,\\n    .q-grid.q-grid-theme-material th.q-grid-select > div div {\\n      border-radius: 2px;\\n      width: 100%;\\n      height: 100%;\\n      box-sizing: border-box;\\n      text-align: center; }\\n.q-grid.q-grid-theme-material td.q-grid-select > div div .q-grid-icon,\\n      .q-grid.q-grid-theme-material th.q-grid-select > div div .q-grid-icon {\\n        font-size: 18px;\\n        font-weight: 500;\\n        width: 18px;\\n        height: 18px;\\n        min-width: 18px;\\n        min-height: 18px;\\n        margin-top: 1px; }\\n.q-grid.q-grid-theme-material td.q-grid-select > div div.q-grid-checked,\\n      .q-grid.q-grid-theme-material th.q-grid-select > div div.q-grid-checked {\\n        cursor: pointer;\\n        background: rgba(255, 64, 129, 0.87); }\\n.q-grid.q-grid-theme-material td.q-grid-select > div div.q-grid-checked .q-grid-icon,\\n        .q-grid.q-grid-theme-material th.q-grid-select > div div.q-grid-checked .q-grid-icon {\\n          color: #fff; }\\n.q-grid.q-grid-theme-material td.q-grid-select > div div.q-grid-unchecked, .q-grid.q-grid-theme-material td.q-grid-select > div div.q-grid-indeterminate,\\n      .q-grid.q-grid-theme-material th.q-grid-select > div div.q-grid-unchecked,\\n      .q-grid.q-grid-theme-material th.q-grid-select > div div.q-grid-indeterminate {\\n        cursor: pointer;\\n        border: 2px solid rgba(0, 0, 0, 0.54);\\n        border-radius: 2px;\\n        width: 20px;\\n        height: 20px;\\n        min-width: 20px;\\n        min-height: 20px;\\n        box-sizing: border-box; }\\n.q-grid.q-grid-theme-material td.q-grid-select > div div.q-grid-unchecked .q-grid-icon, .q-grid.q-grid-theme-material td.q-grid-select > div div.q-grid-indeterminate .q-grid-icon,\\n        .q-grid.q-grid-theme-material th.q-grid-select > div div.q-grid-unchecked .q-grid-icon,\\n        .q-grid.q-grid-theme-material th.q-grid-select > div div.q-grid-indeterminate .q-grid-icon {\\n          color: rgba(0, 0, 0, 0.54); }\\n.q-grid.q-grid-theme-material td.q-grid-select .q-grid-checkbox,\\n  .q-grid.q-grid-theme-material th.q-grid-select .q-grid-checkbox {\\n    margin: 0;\\n    outline: none; }\\n.q-grid.q-grid-theme-material td.q-grid-text-area > span {\\n  display: block;\\n  white-space: normal;\\n  overflow: hidden;\\n  position: relative;\\n  line-height: 1.2em;\\n  max-height: 3.6em;\\n  text-align: justify;\\n  margin-right: -1em;\\n  padding-right: 1em; }\\n.q-grid.q-grid-theme-material td.q-grid-text-area > span:before {\\n    content: '...';\\n    position: absolute;\\n    right: 0;\\n    bottom: 0; }\\n.q-grid.q-grid-theme-material td.q-grid-text-area > span:after {\\n    content: '';\\n    position: absolute;\\n    right: 0;\\n    width: 1em;\\n    height: 1em;\\n    margin-top: 0.2em;\\n    background-color: #fff; }\\n.q-grid.q-grid-theme-material td.q-grid-text-area.q-grid-highlighted > span {\\n  overflow: hidden;\\n  position: relative;\\n  line-height: 1.2em;\\n  max-height: 3.6em;\\n  text-align: justify;\\n  margin-right: -1em;\\n  padding-right: 1em; }\\n.q-grid.q-grid-theme-material td.q-grid-text-area.q-grid-highlighted > span:before {\\n    content: '...';\\n    position: absolute;\\n    right: 0;\\n    bottom: 0; }\\n.q-grid.q-grid-theme-material td.q-grid-text-area.q-grid-highlighted > span:after {\\n    content: '';\\n    position: absolute;\\n    right: 0;\\n    width: 1em;\\n    height: 1em;\\n    margin-top: 0.2em;\\n    background-color: #eee; }\\n.q-grid.q-grid-theme-material tr:hover .q-grid-text-area td > span {\\n  overflow: hidden;\\n  position: relative;\\n  line-height: 1.2em;\\n  max-height: 3.6em;\\n  text-align: justify;\\n  margin-right: -1em;\\n  padding-right: 1em; }\\n.q-grid.q-grid-theme-material tr:hover .q-grid-text-area td > span:before {\\n    content: '...';\\n    position: absolute;\\n    right: 0;\\n    bottom: 0; }\\n.q-grid.q-grid-theme-material tr:hover .q-grid-text-area td > span:after {\\n    content: '';\\n    position: absolute;\\n    right: 0;\\n    width: 1em;\\n    height: 1em;\\n    margin-top: 0.2em;\\n    background-color: #eee; }\\n.q-grid.q-grid-theme-material .q-grid-editor.q-grid-text-area {\\n  height: 202px;\\n  width: 347px; }\\n.q-grid.q-grid-theme-material .q-grid-editor.q-grid-text-area textarea {\\n    height: 150px !important; }\\n.q-grid.q-grid-theme-material td .q-grid-editor.q-grid-text {\\n  width: 203px;\\n  height: 96px; }\\n.q-grid.q-grid-theme-material .q-grid-editor.q-grid-url {\\n  height: auto;\\n  width: 300px; }\\n.q-grid.q-grid-theme-material .q-grid-editor.q-grid-url .q-grid-url-fields {\\n    padding-top: 8px; }\\n.q-grid.q-grid-theme-material td {\\n  color: #212121;\\n  font-size: 13px;\\n  padding: 0 16px;\\n  font-size: 13px; }\\n.q-grid.q-grid-theme-material tfoot td {\\n  color: #007fa3 !important;\\n  background-color: rgba(0, 0, 0, 0.04) !important; }\\n.q-grid.q-grid-theme-material thead th {\\n  color: #757575;\\n  font-size: 12px;\\n  font-weight: bold;\\n  padding: 0 16px; }\\n.q-grid.q-grid-theme-material thead th:hover label {\\n    font-weight: bold; }\\n.q-grid.q-grid-theme-material.q-grid-box:not(.q-grid-drag) th.q-grid-highlighted .q-grid-column-filter-trigger {\\n  opacity: 1; }\\n.q-grid.q-grid-theme-material .q-grid-column-filter-trigger {\\n  position: absolute;\\n  right: 2px;\\n  transition: opacity 0.3s;\\n  margin: 0 auto;\\n  opacity: 0;\\n  height: 16px;\\n  line-height: 16px;\\n  transition: opacity 0.3s; }\\n.q-grid.q-grid-theme-material .q-grid-column-filter-trigger.q-grid-active {\\n    opacity: 1; }\\n.q-grid.q-grid-theme-material .q-grid-column-filter-trigger.q-grid-active .q-grid-icon {\\n      color: #212121; }\\n.q-grid.q-grid-theme-material .q-grid-column-filter-trigger.q-grid-active + label {\\n      color: #212121; }\\n.q-grid.q-grid-theme-material .q-grid-column-filter-trigger button {\\n    font-size: 12px;\\n    width: 16px;\\n    min-width: 16px;\\n    min-height: 16px;\\n    height: 16px;\\n    outline: none;\\n    border: none;\\n    background: transparent;\\n    padding: 0;\\n    left: 0;\\n    margin: 0 2px 2px 2px; }\\n.q-grid.q-grid-theme-material .q-grid-column-filter-trigger button .q-grid-icon {\\n      color: #757575;\\n      font-size: 16px;\\n      height: 16px;\\n      width: 16px;\\n      min-height: 16px;\\n      min-width: 16px;\\n      line-height: 16px;\\n      display: block; }\\n.q-grid-column-filter.q-grid-menu {\\n  width: 360px;\\n  min-width: 360px;\\n  max-width: 360px;\\n  max-height: 500px;\\n  overflow: hidden; }\\n.q-grid-column-filter.q-grid-menu ul {\\n    list-style-type: none;\\n    padding: 0; }\\n.q-grid-column-filter.q-grid-menu .q-grid-column-filter-with-operators {\\n    position: relative; }\\n.q-grid-column-filter.q-grid-menu .q-grid-column-filter-with-operators .q-grid-column-filter-operator-select {\\n      position: absolute;\\n      top: 15px;\\n      right: -20px;\\n      width: 40px; }\\n.q-grid-column-filter.q-grid-menu .q-grid-column-filter-with-operators .q-grid-column-filter-operator-select .mat-icon {\\n        font-size: 20px; }\\n.q-grid-column-filter.q-grid-menu .q-grid-column-filter-with-operators .q-grid-column-filter-operator-select .mat-select-arrow {\\n        border-width: 0; }\\n.q-grid-column-filter.q-grid-menu .q-grid-column-filter-with-operators .q-grid-column-filter-input {\\n      width: calc(100% - 28px); }\\n.q-grid-column-filter.q-grid-menu .q-grid-column-filter-with-operators .q-grid-column-filter-input.half {\\n        display: inline-block;\\n        width: calc(50% - 20px); }\\n.q-grid-column-filter.q-grid-menu .q-grid-column-filter-with-operators .q-grid-column-filter-input.half:last-of-type {\\n          padding-left: 12px; }\\n.q-grid-column-filter.q-grid-menu .q-grid-column-filter-input {\\n    margin: 0;\\n    padding: 0;\\n    width: 100%; }\\n.q-grid-column-filter.q-grid-menu .q-grid-column-filter-list {\\n    overflow-y: auto;\\n    height: 230px; }\\n.q-grid-column-filter.q-grid-menu .q-grid-column-filter-list ul {\\n      margin: 0; }\\n.q-grid-column-filter.q-grid-menu .q-grid-column-filter-by {\\n    height: 57px;\\n    overflow-y: auto;\\n    overflow-x: hidden;\\n    margin-bottom: 10px;\\n    margin-top: -5px; }\\n.q-grid-column-filter.q-grid-menu .q-grid-column-filter-by-blank {\\n      text-align: center;\\n      color: #C8C8C8;\\n      position: relative;\\n      top: 20px; }\\n.q-grid-column-filter.q-grid-menu .q-grid-column-filter-by ul {\\n      margin-top: 0; }\\n.q-grid-column-filter.q-grid-menu .q-grid-column-filter-by li {\\n      display: inline; }\\n.q-grid-column-filter.q-grid-menu .q-grid-checkbox {\\n    width: 100%;\\n    overflow: hidden;\\n    margin: 0 0 5px 0; }\\n.mat-option .mat-option-text::first-letter {\\n  text-transform: uppercase; }\\n.mat-option .mat-icon.html {\\n  font-size: 20px;\\n  line-height: 20px;\\n  margin-top: -6px;\\n  margin-right: 0; }\\n.mat-form-field-label::first-letter {\\n  text-transform: uppercase; }\\n.q-grid-filter-by {\\n  display: inline-flex;\\n  background-color: #EBEBEB;\\n  margin-right: 2px;\\n  border-radius: 100px;\\n  padding: 0 14px;\\n  margin-bottom: 3px; }\\n.q-grid-filter-by-item {\\n    font-size: 12px;\\n    margin: 2px 7px 1px -4px; }\\n.q-grid-filter-by-remove {\\n    width: 5px;\\n    height: 5px;\\n    position: relative;\\n    cursor: pointer; }\\n.q-grid-filter-by .q-grid-icon {\\n    top: 2px;\\n    font-size: 14px;\\n    width: 5px;\\n    height: 5px;\\n    position: absolute;\\n    color: #C8C8C8; }\\n@media (max-height: 540px) {\\n  .q-grid-column-filter-contains .q-grid-column-filter-list {\\n    max-height: 148px; } }\\n.q-grid.q-grid-theme-material td.q-grid-sorted {\\n  background-color: #f5f5f5; }\\n.q-grid.q-grid-theme-material th .q-grid-desc,\\n.q-grid.q-grid-theme-material th .q-grid-asc {\\n  display: none; }\\n.q-grid.q-grid-theme-material th.q-grid-can-sort .q-grid-sort {\\n  cursor: pointer; }\\n.q-grid.q-grid-theme-material th.q-grid-can-sort .q-grid-desc,\\n.q-grid.q-grid-theme-material th.q-grid-can-sort .q-grid-asc {\\n  display: block; }\\n.q-grid.q-grid-theme-material.q-grid-box:not(.q-grid-drag) th .q-grid-sort:not(.q-grid-active):hover .q-grid-desc {\\n  opacity: 1; }\\n.q-grid.q-grid-theme-material th .q-grid-sort {\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  margin-left: -16px;\\n  padding-left: 16px; }\\n.q-grid.q-grid-theme-material th .q-grid-sort label {\\n    display: inline;\\n    vertical-align: middle; }\\n.q-grid.q-grid-theme-material th .q-grid-sort.q-grid-active label {\\n    color: #212121; }\\n.q-grid.q-grid-theme-material th .q-grid-sort.q-grid-active .q-grid-icon {\\n    color: #212121; }\\n.q-grid.q-grid-theme-material th .q-grid-sort .q-grid-icon {\\n    transition: opacity 0.3s;\\n    opacity: 0;\\n    position: absolute;\\n    margin-left: -16px;\\n    color: #757575;\\n    font-size: 16px;\\n    height: 16px;\\n    width: 16px;\\n    min-height: 16px;\\n    min-width: 16px;\\n    vertical-align: middle;\\n    display: inline-block; }\\n.q-grid.q-grid-theme-material th .q-grid-sort .q-grid-icon.q-grid-active {\\n      opacity: 1; }\\n.q-grid.q-grid-theme-material th .q-grid-sort.q-grid-hide .q-grid-icon {\\n    opacity: 0 !important; }\\n@-webkit-keyframes arrow-animation-up {\\n  0% {\\n    -webkit-transform: rotate(180deg);\\n            transform: rotate(180deg); }\\n  25% {\\n    -webkit-transform: rotate(220deg);\\n            transform: rotate(220deg); }\\n  50% {\\n    -webkit-transform: rotate(270deg);\\n            transform: rotate(270deg); }\\n  75% {\\n    -webkit-transform: rotate(300deg);\\n            transform: rotate(300deg); }\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n            transform: rotate(360deg); } }\\n@keyframes arrow-animation-up {\\n  0% {\\n    -webkit-transform: rotate(180deg);\\n            transform: rotate(180deg); }\\n  25% {\\n    -webkit-transform: rotate(220deg);\\n            transform: rotate(220deg); }\\n  50% {\\n    -webkit-transform: rotate(270deg);\\n            transform: rotate(270deg); }\\n  75% {\\n    -webkit-transform: rotate(300deg);\\n            transform: rotate(300deg); }\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n            transform: rotate(360deg); } }\\n@-webkit-keyframes arrow-animation-down {\\n  0% {\\n    -webkit-transform: rotate(-180deg);\\n            transform: rotate(-180deg); }\\n  25% {\\n    -webkit-transform: rotate(-220deg);\\n            transform: rotate(-220deg); }\\n  50% {\\n    -webkit-transform: rotate(-270deg);\\n            transform: rotate(-270deg); }\\n  75% {\\n    -webkit-transform: rotate(-300deg);\\n            transform: rotate(-300deg); }\\n  100% {\\n    -webkit-transform: rotate(-360deg);\\n            transform: rotate(-360deg); } }\\n@keyframes arrow-animation-down {\\n  0% {\\n    -webkit-transform: rotate(-180deg);\\n            transform: rotate(-180deg); }\\n  25% {\\n    -webkit-transform: rotate(-220deg);\\n            transform: rotate(-220deg); }\\n  50% {\\n    -webkit-transform: rotate(-270deg);\\n            transform: rotate(-270deg); }\\n  75% {\\n    -webkit-transform: rotate(-300deg);\\n            transform: rotate(-300deg); }\\n  100% {\\n    -webkit-transform: rotate(-360deg);\\n            transform: rotate(-360deg); } }\\n.q-grid.q-grid-theme-material .q-grid-icon.q-grid-asc.q-grid-active {\\n  -webkit-animation-name: arrow-animation-up;\\n          animation-name: arrow-animation-up;\\n  -webkit-animation-duration: .2s;\\n          animation-duration: .2s;\\n  -webkit-animation-iteration-count: 1;\\n          animation-iteration-count: 1; }\\n.q-grid.q-grid-theme-material .q-grid-icon.q-grid-desc.q-grid-active {\\n  -webkit-animation-name: arrow-animation-down;\\n          animation-name: arrow-animation-down;\\n  -webkit-animation-duration: .2s;\\n          animation-duration: .2s;\\n  -webkit-animation-iteration-count: 1;\\n          animation-iteration-count: 1; }\\n.q-grid.q-grid-theme-material .q-grid-embed,\\n.q-grid.q-grid-theme-material .q-grid-lcc {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.q-grid.q-grid-theme-material .q-grid-embed .q-grid .q-grid-title h2,\\n  .q-grid.q-grid-theme-material .q-grid-lcc .q-grid .q-grid-title h2 {\\n    font-size: 24px;\\n    font-weight: normal;\\n    font-style: normal;\\n    text-align: left;\\n    color: #006f8f; }\\n.q-grid.q-grid-theme-material .q-grid-embed .q-grid .q-grid-caption h3,\\n  .q-grid.q-grid-theme-material .q-grid-lcc .q-grid .q-grid-caption h3 {\\n    color: #006f8f; }\\n.q-grid.q-grid-theme-material .q-grid-embed .q-grid .q-grid-sort,\\n  .q-grid.q-grid-theme-material .q-grid-lcc .q-grid .q-grid-sort {\\n    margin-left: 0; }\\n.q-grid.q-grid-theme-material .q-grid-embed .q-grid .q-grid-text,\\n  .q-grid.q-grid-theme-material .q-grid-lcc .q-grid .q-grid-text {\\n    font-size: 13px; }\\n.q-grid.q-grid-theme-material .q-grid-embed .q-grid .q-grid-table tr,\\n  .q-grid.q-grid-theme-material .q-grid-lcc .q-grid .q-grid-table tr {\\n    height: 36px; }\\n.q-grid.q-grid-theme-material .q-grid-embed .q-grid .q-grid-table th,\\n  .q-grid.q-grid-theme-material .q-grid-lcc .q-grid .q-grid-table th {\\n    font-size: 12px !important;\\n    color: #006f8f !important;\\n    font-weight: normal !important;\\n    line-height: 14px; }\\n.q-grid.q-grid-theme-material .q-grid-embed .q-grid .q-grid-table th:hover label,\\n    .q-grid.q-grid-theme-material .q-grid-lcc .q-grid .q-grid-table th:hover label {\\n      font-weight: normal !important; }\\n.q-grid.q-grid-theme-material .q-grid-embed .q-grid .q-grid-table th .q-grid-icon,\\n    .q-grid.q-grid-theme-material .q-grid-lcc .q-grid .q-grid-table th .q-grid-icon {\\n      text-align: center;\\n      line-height: 16px;\\n      font-size: 14px;\\n      padding: 0 2px;\\n      color: rgba(0, 0, 0, 0.87); }\\n.q-grid.q-grid-theme-material .q-grid-embed .q-grid .q-grid-table th .q-grid-column-filter-trigger,\\n    .q-grid.q-grid-theme-material .q-grid-lcc .q-grid .q-grid-table th .q-grid-column-filter-trigger {\\n      right: 4px; }\\n.q-grid.q-grid-theme-material .q-grid-embed .q-grid .q-grid-table th .q-grid-column-filter-trigger button,\\n      .q-grid.q-grid-theme-material .q-grid-lcc .q-grid .q-grid-table th .q-grid-column-filter-trigger button {\\n        margin: 0;\\n        width: 20px; }\\n.q-grid.q-grid-theme-material .q-grid-embed .q-grid .q-grid-table th .q-grid-sort,\\n    .q-grid.q-grid-theme-material .q-grid-lcc .q-grid .q-grid-table th .q-grid-sort {\\n      padding-left: 20px; }\\n.q-grid.q-grid-theme-material .q-grid-embed .q-grid .q-grid-table th .q-grid-sort.q-grid-active label,\\n      .q-grid.q-grid-theme-material .q-grid-lcc .q-grid .q-grid-table th .q-grid-sort.q-grid-active label {\\n        color: inherit; }\\n.q-grid.q-grid-theme-material .q-grid-embed .q-grid .q-grid-table th .q-grid-sort .q-grid-icon,\\n      .q-grid.q-grid-theme-material .q-grid-lcc .q-grid .q-grid-table th .q-grid-sort .q-grid-icon {\\n        margin-left: -20px; }\\n.q-grid.q-grid-theme-material .q-grid-embed .q-grid .q-grid-table th .q-grid-sort label,\\n      .q-grid.q-grid-theme-material .q-grid-lcc .q-grid .q-grid-table th .q-grid-sort label {\\n        cursor: pointer; }\\n.q-grid.q-grid-theme-material .q-grid-embed .q-grid .q-grid-table td,\\n  .q-grid.q-grid-theme-material .q-grid-lcc .q-grid .q-grid-table td {\\n    font-size: 14px;\\n    font-weight: normal;\\n    padding: 0 20px;\\n    color: rgba(0, 0, 0, 0.87); }\\n.q-grid.q-grid-theme-material .q-grid-embed .q-grid .q-grid-table td.q-grid-text-area > span,\\n    .q-grid.q-grid-theme-material .q-grid-lcc .q-grid .q-grid-table td.q-grid-text-area > span {\\n      white-space: nowrap; }\\n.q-grid.q-grid-theme-material .q-grid-embed .q-grid .q-grid-table td.q-grid-array li,\\n    .q-grid.q-grid-theme-material .q-grid-lcc .q-grid .q-grid-table td.q-grid-array li {\\n      padding: 2px 8px; }\\n.q-grid.q-grid-theme-material .q-grid-embed .q-grid .q-grid-table td.q-grid-edit.q-grid-row-options button,\\n    .q-grid.q-grid-theme-material .q-grid-lcc .q-grid .q-grid-table td.q-grid-edit.q-grid-row-options button {\\n      width: 24px;\\n      height: 24px;\\n      line-height: 24px; }\\n.q-grid.q-grid-theme-material .q-grid-embed .q-grid .q-grid-table td.q-grid-image img,\\n    .q-grid.q-grid-theme-material .q-grid-lcc .q-grid .q-grid-table td.q-grid-image img {\\n      max-height: 24px;\\n      max-width: 24px; }\\n.q-grid.q-grid-theme-material .q-grid-embed .q-grid .q-grid-legend-list,\\n  .q-grid.q-grid-theme-material .q-grid-lcc .q-grid .q-grid-legend-list {\\n    font-size: 16px !important;\\n    text-align: left !important;\\n    color: #000000 !important; }\\n.q-grid.q-grid-theme-material .q-grid-embed .q-grid .q-grid-legend-item,\\n  .q-grid.q-grid-theme-material .q-grid-lcc .q-grid .q-grid-legend-item {\\n    width: 8px !important;\\n    height: 8px !important;\\n    margin-right: 18px !important;\\n    margin-bottom: 2px !important; }\\n.q-grid.q-grid-theme-material .q-grid-embed .q-grid .q-grid-progress-linear,\\n  .q-grid.q-grid-theme-material .q-grid-lcc .q-grid .q-grid-progress-linear {\\n    top: -10px; }\\n.q-grid.q-grid-theme-material .q-grid-embed .q-grid .q-grid-pager,\\n  .q-grid.q-grid-theme-material .q-grid-lcc .q-grid .q-grid-pager {\\n    padding: 11px 0; }\\n.q-grid.q-grid-theme-material .q-grid-embed .q-grid .q-grid-legend-list,\\n  .q-grid.q-grid-theme-material .q-grid-lcc .q-grid .q-grid-legend-list {\\n    margin-top: 15px; }\\n.q-grid.q-grid-theme-material .q-grid-export {\\n  padding: 10px 0; }\\n.q-grid.q-grid-theme-material .q-grid-head-span thead tr {\\n  height: 30px; }\\n.q-grid.q-grid-theme-material .q-grid-head-span thead th {\\n  line-height: 14px;\\n  border-top: 1px solid #e0e0e0;\\n  border-left: 1px solid #e0e0e0; }\\n.q-grid.q-grid-theme-material .q-grid-head-span thead th .q-grid-icon {\\n    line-height: 14px;\\n    font-size: 14px; }\\n.q-grid.q-grid-theme-material .q-grid-head-span thead th .q-grid-column-filter-trigger {\\n    line-height: 14px;\\n    height: 14px; }\\n.q-grid.q-grid-theme-material .q-grid-head-span thead th:nth-last-child(2) {\\n    border-right: 1px solid #e0e0e0; }\\n.q-grid.q-grid-theme-material.q-grid-box:not(.q-grid-drag) td.q-grid-highlighted,\\n.q-grid.q-grid-theme-material.q-grid-box:not(.q-grid-drag) tr.q-grid-highlighted {\\n  background-color: #eee; }\\n.q-grid-highlight-part {\\n  background-color: yellow;\\n  color: #000; }\\n.q-grid.q-grid-theme-material .q-grid-legend-list {\\n  list-style-type: none;\\n  padding: 0;\\n  margin: 24px 20px 0 20px;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  color: #212121;\\n  font-size: 13px; }\\n.q-grid.q-grid-theme-material .q-grid-legend-list li {\\n    margin-right: 20px;\\n    display: inline; }\\n.q-grid.q-grid-theme-material .q-grid-legend-list li:last-child {\\n      margin-right: 0; }\\n.q-grid.q-grid-theme-material .q-grid-legend-list li .q-grid-legend-item {\\n      display: inline-block; }\\n.q-grid.q-grid-theme-material .q-grid-legend-item {\\n  width: 10px;\\n  height: 10px;\\n  border-radius: 10px;\\n  margin: auto; }\\n.q-grid.q-grid-theme-material tbody tr.q-grid-scroll-mark {\\n  height: 0;\\n  border: none; }\\n.q-grid-menu ::-webkit-scrollbar {\\n  width: 8px;\\n  height: 8px; }\\n.q-grid-menu ::-webkit-scrollbar-thumb {\\n  height: 15px;\\n  background-color: #c8c8c8;\\n  -webkit-box-shadow: inset 1px 1px 0 rgba(0, 0, 0, 0.1), inset 0 -1px 0 rgba(0, 0, 0, 0.07); }\\n.q-grid-menu ::-webkit-scrollbar-button {\\n  width: 0;\\n  height: 0;\\n  display: none; }\\n.q-grid-menu ::-webkit-scrollbar-corner {\\n  background-color: transparent; }\\n.q-grid-menu ::-webkit-scrollbar-track,\\n.q-grid-menu ::-webkit-scrollbar-track-piece {\\n  background-color: #f8f8f8; }\\n.q-grid.q-grid-theme-material th.q-grid-group label {\\n  cursor: pointer;\\n  outline: none; }\\n.q-grid.q-grid-theme-material td.q-grid-group button,\\n.q-grid.q-grid-theme-material td.q-grid-row-expand button {\\n  width: 24px;\\n  height: 24px;\\n  line-height: 24px;\\n  min-height: 24px;\\n  margin: -1px 0 0 -6px;\\n  padding: 0; }\\n.q-grid.q-grid-theme-material td.q-grid-group button.q-grid-expand .q-grid-icon,\\n  .q-grid.q-grid-theme-material td.q-grid-row-expand button.q-grid-expand .q-grid-icon {\\n    -webkit-transform: rotate(90deg);\\n            transform: rotate(90deg); }\\n.q-grid.q-grid-theme-material td.q-grid-group button .q-grid-icon,\\n  .q-grid.q-grid-theme-material td.q-grid-row-expand button .q-grid-icon {\\n    opacity: 0.54; }\\n.q-grid.q-grid-theme-material td.q-grid-group .q-grid-group-label,\\n.q-grid.q-grid-theme-material td.q-grid-row-expand .q-grid-group-label {\\n  margin-left: -6px;\\n  vertical-align: middle; }\\n.q-grid.q-grid-theme-material td.q-grid-group .q-grid-group-count,\\n.q-grid.q-grid-theme-material td.q-grid-row-expand .q-grid-group-count {\\n  vertical-align: middle;\\n  color: #757575; }\\n.q-grid.q-grid-theme-material .q-grid-pager-target-trigger {\\n  top: 3px; }\\n.q-grid.q-grid-theme-material .q-grid-icon-class {\\n  font-size: 16px;\\n  margin-bottom: 4px; }\\n.q-grid.q-grid-theme-material .q-grid-pager {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  height: 24px;\\n  color: #757575;\\n  float: right;\\n  padding: 16px 0;\\n  font-size: 12px; }\\n.q-grid.q-grid-theme-material .q-grid-pager > * {\\n    display: inline-block; }\\n@media (max-width: 599px) {\\n    .q-grid.q-grid-theme-material .q-grid-pager .hide-xs:not(.show-xs):not(.show),\\n    .q-grid.q-grid-theme-material .q-grid-pager .hide:not(.show-xs):not(.show) {\\n      display: none; } }\\n.q-grid.q-grid-theme-material .q-grid-pager .q-grid-pager-page {\\n    margin-left: 32px;\\n    margin-right: 14px;\\n    min-width: 37.2px;\\n    display: inline-block; }\\n.q-grid.q-grid-theme-material .q-grid-pager button {\\n    background: transparent;\\n    border: none;\\n    font-size: 20px;\\n    width: 24px;\\n    height: 24px;\\n    line-height: 24px;\\n    padding: 0; }\\n.q-grid.q-grid-theme-material .q-grid-pager button.q-grid-prev-page {\\n      top: 3px;\\n      margin-left: 18px;\\n      margin-right: 0; }\\n.q-grid.q-grid-theme-material .q-grid-pager button.q-grid-prev-page .q-grid-icon {\\n        margin-bottom: 4px;\\n        margin-right: 1px; }\\n.q-grid.q-grid-theme-material .q-grid-pager button.q-grid-next-page {\\n      top: 3px;\\n      margin-right: 14px;\\n      margin-left: 0; }\\n.q-grid.q-grid-theme-material .q-grid-pager button.q-grid-next-page .q-grid-icon {\\n        margin-bottom: 4px;\\n        margin-left: 1px; }\\n.q-grid.q-grid-theme-material .q-grid-pager button.q-grid-target-page .q-grid-icon {\\n      font-size: 16px;\\n      width: 16px;\\n      height: 16px;\\n      min-width: 16px;\\n      min-height: 16px; }\\n.q-grid-pager-target {\\n  width: 200px; }\\n.q-grid.q-grid-theme-material .q-grid-progress {\\n  position: relative; }\\n.q-grid.q-grid-theme-material .q-grid-progress .q-grid-progress-linear {\\n    position: absolute; }\\n.q-grid-query-builder-panel.q-grid-menu {\\n  width: 480px;\\n  min-width: 480px;\\n  max-width: 480px;\\n  height: 525px;\\n  overflow: hidden; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression {\\n    margin-top: 15px;\\n    height: 270px;\\n    overflow: auto;\\n    padding: 2px; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression ul {\\n      margin: 0;\\n      padding: 0;\\n      list-style-type: none; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression ul li {\\n        display: inline; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression ul li.q-grid-eb-expression {\\n          margin-right: 3px;\\n          display: inline-block; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression ul.q-grid-eb-node {\\n        padding: 5px;\\n        white-space: nowrap; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression ul.q-grid-eb-node.qb-logical {\\n          padding-left: 0;\\n          position: relative;\\n          min-height: 27px; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression ul.q-grid-eb-node.qb-logical > .q-grid-eb-line {\\n            position: absolute;\\n            -webkit-transform: rotate(-90deg);\\n                    transform: rotate(-90deg);\\n            -webkit-transform-origin: top;\\n                    transform-origin: top;\\n            top: 50%;\\n            left: -5px;\\n            margin-top: -1px; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression ul.q-grid-eb-node.qb-logical > .q-grid-eb-line > ul {\\n              -webkit-transform: rotate(90deg);\\n                      transform: rotate(90deg); }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression ul.q-grid-eb-node.qb-logical > .q-grid-eb-children {\\n            display: flex; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression ul.q-grid-eb-node.qb-logical > .q-grid-eb-children > ul {\\n              border-left: 1px solid #999;\\n              border-radius: 5px;\\n              margin-left: 35px;\\n              padding-left: 10px; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression ul.q-grid-eb-node.qb-logical.qb-or > .q-grid-eb-line {\\n            left: 5px; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression ul.q-grid-eb-group {\\n        display: inline; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression .q-grid-eb-active {\\n      outline: 2px solid rgba(63, 81, 181, 0.25);\\n      background: #f5f5f5; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-icon-button {\\n    height: 16px;\\n    width: 16px;\\n    line-height: 16px; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-icon-button .q-grid-icon {\\n      line-height: 16px;\\n      height: 16px;\\n      width: 16px;\\n      font-size: 16px; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression-line {\\n    margin-top: 15px;\\n    font-size: 12px;\\n    background-color: #f5f5f5;\\n    padding: 10px;\\n    overflow-y: auto;\\n    height: 27px; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression-line span {\\n      word-break: break-word; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression-line .q-grid-markup-node, .q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression-line .q-grid-markup-node-left, .q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression-line .q-grid-markup-node-right {\\n      display: inline; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression-line .q-grid-markup-group-op {\\n      color: #3eb1c8;\\n      text-transform: uppercase; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression-line .q-grid-markup-group-op:before, .q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression-line .q-grid-markup-group-op:after {\\n        content: ' '; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression-line .q-grid-markup-condition-unary:before {\\n      content: ' '; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression-line .q-grid-markup-group-open, .q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression-line .q-grid-markup-group-close, .q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression-line .q-grid-markup-condition-open, .q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression-line .q-grid-markup-condition-close {\\n      color: #888; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression-line .q-grid-markup-condition-left {\\n      color: #888; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression-line .q-grid-markup-condition-quote {\\n      color: #a11; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression-line .q-grid-markup-condition-op {\\n      color: #666;\\n      text-transform: uppercase; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression-line .q-grid-markup-condition-value-text {\\n      color: #a11 !important; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression-line .q-grid-markup-condition-value, .q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression-line .q-grid-markup-condition-value {\\n      color: #000; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression-line .q-grid-markup-condition-value-invalid:before {\\n      color: #dd2c00;\\n      content: '﹏'; }\\n@media (max-height: 540px) {\\n  .q-grid-query-builder-panel.q-grid-menu {\\n    height: 400px;\\n    max-height: 400px;\\n    min-height: 400px; }\\n    .q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression {\\n      height: 138px; } }\\n.q-grid.q-grid-theme-material tbody tr {\\n  height: 48px; }\\n.q-grid.q-grid-theme-material tfoot tr,\\n.q-grid.q-grid-theme-material tbody tr {\\n  border-top: 1px solid #e0e0e0; }\\n.q-grid.q-grid-theme-material tfoot tr:nth-child(2),\\n.q-grid.q-grid-theme-material tbody tr:nth-child(2) {\\n  border-top: 0; }\\n.q-grid.q-grid-theme-material thead tr,\\n.q-grid.q-grid-theme-material tfoot tr {\\n  height: 56px; }\\n.q-grid.q-grid-theme-material tr:not(.q-grid-highlighted) td.q-grid-selected {\\n  background-color: #f5f5f5; }\\n.q-grid.q-grid-theme-material tr:not(.q-grid-highlighted) td.q-grid-selected.q-grid-sorted {\\n    background-color: #f5f5f5; }\\n.q-grid.q-grid-theme-material tr:not(.q-grid-highlighted) td.q-grid-selected.q-grid-highlighted {\\n    background-color: #eee; }\\n.q-grid.q-grid-theme-material .q-grid-select-cell.q-grid-select-single tr:not(.q-grid-highlighted) td.q-grid-selected:not(.q-grid-sorted):not(.q-grid-highlighted) {\\n  background-color: inherit; }\\n.q-grid.q-grid-theme-material q-grid-status-bar {\\n  font-size: 14px;\\n  text-align: right;\\n  height: 24px;\\n  padding: 11px 8px;\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: flex-end; }\\n.q-grid.q-grid-theme-material thead {\\n  box-shadow: 0 1px 0px #ddd; }\\n.q-grid.q-grid-theme-material .q-grid-body-top tr:last-child {\\n  border-bottom: 1px solid #e0e0e0; }\\n.q-grid.q-grid-theme-material .q-grid-body-bottom tr:first-child {\\n  border-top: 1px solid #e0e0e0; }\\n.q-grid.q-grid-theme-material .q-grid-title h3,\\n.q-grid.q-grid-theme-material .q-grid-caption h3 {\\n  margin: 0;\\n  overflow: hidden;\\n  text-overflow: ellipsis; }\\n.q-grid.q-grid-theme-material .q-grid-validator {\\n  display: block;\\n  width: calc(100% - 48px);\\n  position: absolute;\\n  bottom: 20px;\\n  text-align: left;\\n  color: #dd2c00;\\n  font-size: 11px; }\\n.q-grid.q-grid-theme-material .q-grid-validator ul {\\n    margin: 0;\\n    padding: 0;\\n    overflow: hidden;\\n    white-space: nowrap;\\n    text-overflow: ellipsis; }\\n.q-grid.q-grid-theme-material .q-grid-validator ul li {\\n      display: inline;\\n      list-style: none;\\n      margin-right: 4px; }\\n.q-grid.q-grid-theme-material .q-grid-view > .q-grid-table-left,\\n.q-grid.q-grid-theme-material .q-grid-view > .q-grid-table-right {\\n  transition: box-shadow .2s ease-in-out; }\\n.q-grid.q-grid-theme-material .q-grid-view.q-grid-scroll-horizontal > .q-grid-table-left {\\n  box-shadow: 1px 0 0 0 #e0e0e0; }\\n.q-grid.q-grid-theme-material .q-grid-view.q-grid-scroll-horizontal > .q-grid-table-right {\\n  box-shadow: -1px 0 0 0 #e0e0e0; }\\n.q-grid.q-grid-theme-material q-grid-edit-form-trigger .q-grid-icon {\\n  color: #757575;\\n  font-size: 16px;\\n  height: 16px;\\n  width: 16px;\\n  min-height: 16px;\\n  min-width: 16px;\\n  line-height: 16px; }\\n.q-grid-edit-form {\\n  width: 500px;\\n  min-width: 500px !important; }\\n.q-grid-edit-form .q-grid-edit-form-body {\\n    height: 300px;\\n    overflow-y: auto;\\n    overflow-x: hidden;\\n    padding: 0 15px; }\\n.q-grid-edit-form .q-grid-edit-form-body .q-grid-edit-form-control {\\n      display: block;\\n      margin-bottom: 1.25em; }\\n.q-grid-edit-form .q-grid-edit-form-body .q-grid-edit-form-control-image, .q-grid-edit-form .q-grid-edit-form-body .q-grid-edit-form-control-bool {\\n        margin-bottom: 2.5em; }\\n.q-grid.q-grid-theme-material .q-grid-layer-pane-right, .q-grid.q-grid-theme-material .q-grid-layer-pane-left {\\n  pointer-events: none; }\\n.q-grid.q-grid-theme-material .q-grid-pane {\\n  box-shadow: 0 2px 1px -1px rgba(0, 0, 0, 0.2), 0 1px 1px 0 rgba(0, 0, 0, 0.14), 0 1px 3px 0 rgba(0, 0, 0, 0.12);\\n  position: absolute;\\n  z-index: 3;\\n  background: #fff;\\n  padding: 4px 16px;\\n  pointer-events: all; }\\n.q-grid.q-grid-theme-material .q-grid-pane > .mat-card {\\n    box-shadow: none;\\n    padding: 0; }\\n.q-grid.q-grid-theme-material .q-grid-pane-right {\\n    top: -50px;\\n    right: 0;\\n    width: 300px;\\n    height: calc(100% + 10px); }\\n.q-grid.q-grid-theme-material .q-grid-pane-left {\\n    top: -50px;\\n    left: 0;\\n    width: 300px;\\n    height: calc(100% + 10px); }\\n.q-grid.q-grid-theme-material td.q-grid-array .mat-form-field-prefix {\\n  width: 100%; }\\n.q-grid.q-grid-theme-material td.q-grid-array .q-grid-editor-content .mat-chip-list-wrapper {\\n  margin: 0; }\\n.q-grid.q-grid-theme-material .q-grid-editor.q-grid-autocomplete md-autocomplete {\\n  min-width: 30px;\\n  background-color: transparent; }\\n.q-grid.q-grid-theme-material .q-grid-editor.q-grid-autocomplete md-autocomplete-wrap {\\n  box-shadow: none; }\\n.q-grid.q-grid-theme-material td .q-grid-checkbox .md-label, .q-grid.q-grid-theme-material th .q-grid-checkbox .md-label {\\n  display: none; }\\n.q-grid.q-grid-theme-material .q-grid-editor.q-grid-date .md-datepicker-button {\\n  margin-left: 0;\\n  padding: 0;\\n  width: 24px;\\n  height: 24px; }\\n.q-grid.q-grid-theme-material .q-grid-editor.q-grid-date .md-datepicker-triangle-button {\\n  margin-right: 0;\\n  padding: 0;\\n  width: 24px;\\n  height: 24px; }\\n.q-grid.q-grid-theme-material td.q-grid-edit.q-grid-dropdown .q-grid-editor-content {\\n  padding: 0; }\\n.q-grid.q-grid-theme-material td.q-grid-edit.q-grid-dropdown .q-grid-editor-content .mat-select-arrow-wrapper {\\n    opacity: 0;\\n    width: 0;\\n    height: 0; }\\n.q-grid.q-grid-theme-material th.q-grid-filter-row {\\n  height: 56px;\\n  text-overflow: unset; }\\n.q-grid.q-grid-theme-material th.q-grid-filter-row:hover label {\\n    font-weight: normal; }\\n.q-grid.q-grid-theme-material th.q-grid-filter-row .mat-form-field {\\n    width: 100%;\\n    font-size: 14px;\\n    color: rgba(0, 0, 0, 0.87);\\n    max-height: 56px; }\\n.q-grid.q-grid-theme-material .q-grid-reference-card {\\n  margin: 0;\\n  box-shadow: none;\\n  padding: 0;\\n  background: inherit; }\\n.q-grid.q-grid-theme-material .q-grid-reference-card .mat-card-header-text {\\n    margin: 0; }\\n.q-grid.q-grid-theme-material .q-grid-reference-card .mat-card-content {\\n    height: 310px;\\n    margin: 0; }\\n.q-grid.q-grid-theme-material .q-grid-reference-card .mat-card-actions {\\n    margin-left: 0;\\n    margin-right: 0;\\n    text-align: right; }\\n.q-grid.q-grid-theme-material .q-grid-reference-card .mat-card-actions > button {\\n      text-transform: uppercase; }\\n.q-grid.q-grid-theme-material td.q-grid-text-area textarea.mat-input-element {\\n  padding: 0; }\\n.q-grid.q-grid-theme-material td.q-grid-text-area .mat-form-field-hint-wrapper {\\n  justify-content: flex-end;\\n  -webkit-transform: none !important;\\n          transform: none !important; }\\n.q-grid.q-grid-theme-material td.q-grid-text-area .mat-form-field-hint-wrapper .mat-hint {\\n    position: fixed; }\\n.q-grid.q-grid-theme-material td.q-grid-text-area.q-grid-edit .mat-form-field-infix {\\n  border-top: none;\\n  padding-top: 0; }\\n.q-grid.q-grid-theme-material td.q-grid-edit .mat-form-field {\\n  width: 100%; }\\n.q-grid-column-chooser.q-grid-menu {\\n  width: 360px;\\n  max-width: 360px;\\n  min-width: 360px;\\n  height: 500px;\\n  overflow: hidden; }\\n.q-grid-column-chooser.q-grid-menu .mat-card {\\n    padding: 4px 12px;\\n    box-shadow: none;\\n    margin: 0; }\\n.q-grid-column-chooser.q-grid-menu .mat-card-content {\\n      margin-bottom: 0; }\\n.q-grid-column-chooser.q-grid-menu ul {\\n    list-style-type: none;\\n    padding: 0; }\\n.q-grid-column-chooser.q-grid-menu .q-grid-column-chooser-filter {\\n    width: 100%; }\\n.q-grid-column-chooser.q-grid-menu .q-grid-column-chooser-list {\\n    margin: 0;\\n    overflow-y: auto;\\n    height: 281px; }\\n.q-grid-column-chooser.q-grid-menu .q-grid-column-chooser-list ul {\\n      margin: 0; }\\n.q-grid-column-chooser.q-grid-menu .q-grid-column-chooser-list ul ul {\\n        padding-left: 24px; }\\n.q-grid-column-chooser.q-grid-menu .q-grid-column-chooser-list li {\\n      white-space: nowrap; }\\n.q-grid-column-chooser.q-grid-menu .q-grid-column-chooser-toolbar {\\n    margin-top: 0;\\n    padding-left: 16px;\\n    margin-bottom: 14px; }\\n.q-grid-column-chooser.q-grid-menu .q-grid-column-chooser-actions {\\n    padding: 7px 0; }\\n.q-grid-column-chooser.q-grid-menu .q-grid-checkbox {\\n    width: 100%;\\n    overflow: hidden;\\n    margin: 0 0 5px 0; }\\n.q-grid-column-chooser.q-grid-menu .q-grid-can-drag {\\n    cursor: move;\\n    opacity: 0.4;\\n    display: inline-block;\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none; }\\n.q-grid-column-chooser.q-grid-menu .q-grid-can-drag .q-grid-icon {\\n      width: 16px;\\n      min-width: 16px;\\n      min-height: 16px;\\n      height: 16px;\\n      font-size: 16px;\\n      vertical-align: middle; }\\n@media (max-height: 540px) {\\n  .q-grid-column-chooser.q-grid-menu {\\n    height: 400px;\\n    max-height: 400px;\\n    min-height: 400px; }\\n    .q-grid-column-chooser.q-grid-menu .q-grid-column-chooser-list {\\n      height: 184px; } }\\n.q-grid-column-filter .mat-card {\\n  box-shadow: none;\\n  padding: 4px 16px;\\n  margin: 0; }\\n.q-grid-column-filter .mat-card-content {\\n    margin-bottom: 0; }\\n.q-grid-column-filter .mat-card .q-grid-column-filter-toolbar {\\n    margin-top: 0; }\\n.q-grid-column-filter .mat-card .mat-card-header-text {\\n    overflow: hidden; }\\n.q-grid-column-filter .mat-card .mat-card-header-text .mat-card-title {\\n      overflow: hidden;\\n      white-space: nowrap;\\n      text-overflow: ellipsis; }\\n.q-grid-edit-form .q-grid-edit-form-control .mat-form-field {\\n  width: 100%; }\\n.q-grid-menu .mat-menu-content {\\n  padding: 0; }\\n.q-grid-menu .mat-card-header-text {\\n  margin: 0; }\\n.q-grid-menu .mat-card-actions {\\n  text-align: right; }\\n.q-grid-menu .mat-card-actions > button {\\n    text-transform: uppercase; }\\n.q-grid-mat-menu .mat-menu-content,\\n.q-grid-mat-menu .mat-menu-content:not(:empty) {\\n  padding-top: 0;\\n  padding-bottom: 0; }\\n.q-grid.q-grid-theme-material .q-grid-pager mat-select {\\n  width: 50px;\\n  max-width: 50px;\\n  background: transparent;\\n  border: 0;\\n  margin: 0 0 0 12px;\\n  display: inline-block;\\n  height: 24px;\\n  padding: 0; }\\n.q-grid.q-grid-theme-material tbody tr.q-grid-scroll-mark {\\n  height: 0;\\n  border: none; }\\n.q-grid-persistence-panel ::-webkit-scrollbar {\\n  width: 8px;\\n  height: 8px; }\\n.q-grid-persistence-panel ::-webkit-scrollbar-thumb {\\n  height: 15px;\\n  background-color: #c8c8c8;\\n  -webkit-box-shadow: inset 1px 1px 0 rgba(0, 0, 0, 0.1), inset 0 -1px 0 rgba(0, 0, 0, 0.07); }\\n.q-grid-persistence-panel ::-webkit-scrollbar-button {\\n  width: 0;\\n  height: 0;\\n  display: none; }\\n.q-grid-persistence-panel ::-webkit-scrollbar-corner {\\n  background-color: transparent; }\\n.q-grid-persistence-panel ::-webkit-scrollbar-track,\\n.q-grid-persistence-panel ::-webkit-scrollbar-track-piece {\\n  background-color: #f8f8f8; }\\n.q-grid-persistence-panel .mat-card {\\n  padding: 4px 16px; }\\n.q-grid-persistence-panel.q-grid-menu {\\n  width: 400px;\\n  min-width: 400px;\\n  max-width: 400px;\\n  height: 500px;\\n  overflow: hidden; }\\n.q-grid-persistence-panel .mat-card-content {\\n  display: flex;\\n  flex-direction: column;\\n  max-height: 419px; }\\n.q-grid-persistence-panel .mat-card-content > div {\\n    flex: 0 0; }\\n.q-grid-persistence-panel .q-grid-persistence-title {\\n  margin: 0; }\\n.q-grid-persistence-panel .q-grid-persistence-title .mat-form-field {\\n    width: 100%; }\\n.q-grid-persistence-panel .q-grid-persistence-save {\\n  margin: auto 0 auto 8px; }\\n.q-grid-persistence-panel .q-grid-persistence-save .mat-button-wrapper {\\n    text-transform: uppercase; }\\n.q-grid-persistence-panel .q-grid-persistence-default-icon {\\n  max-width: 14px;\\n  min-width: 14px;\\n  max-height: 14px;\\n  min-height: 14px;\\n  margin-bottom: 14px; }\\n.q-grid-persistence-panel .q-grid-persistence-default-icon .q-grid-icon {\\n    color: #757575;\\n    font-size: 14px;\\n    height: 14px;\\n    width: 14px; }\\n.q-grid-persistence-panel .q-grid-persistence-list {\\n  padding: 0;\\n  overflow: auto; }\\n.q-grid-persistence-panel .q-grid-persistence-list > .q-grid-persistence-list-item {\\n    height: 40px; }\\n.q-grid-persistence-panel .q-grid-persistence-list-item {\\n  font-size: 13px; }\\n.q-grid-persistence-panel .q-grid-persistence-list-item.q-grid-persistence-selected {\\n    background-color: #f5f5f5; }\\n.q-grid-persistence-panel .q-grid-persistence-list-item.mat-list-item .mat-list-item-content {\\n    padding: 0 6px; }\\n.q-grid-persistence-panel .q-grid-persistence-list-item .mat-button {\\n    line-height: 13px;\\n    flex: 1 1;\\n    padding: 0 6px; }\\n.q-grid-persistence-panel .q-grid-persistence-list-item .mat-list[dense] {\\n    padding: 0; }\\n.q-grid-persistence-panel .q-grid-persistence-list-item .mat-list[dense] .mat-list-item {\\n      height: 40px; }\\n.q-grid-persistence-panel .q-grid-persistence-list-item .mat-list[dense] .mat-list-item-content {\\n      padding: 0;\\n      text-align: left; }\\n.q-grid-persistence-panel .q-grid-persistence-list-item h3 {\\n    text-transform: uppercase; }\\n.q-grid-persistence-panel .q-grid-persistence-list-item .q-grid-selected-item-modified {\\n    color: #757575; }\\n.q-grid-persistence-panel .q-grid-persistence-item-edit {\\n  flex: 1;\\n  padding: 0 6px; }\\n.q-grid-persistence-panel .q-grid-persistence-item-edit .mat-form-field-infix {\\n    width: 100%; }\\n.q-grid-persistence-panel .q-grid-more .mat-button {\\n  min-width: 24px; }\\n.q-grid-persistence-panel .q-grid-more .mat-button .mat-button-focus-overlay {\\n    background-color: transparent; }\\n.q-grid-persistence-panel .q-grid-more .mat-icon {\\n  color: #757575;\\n  line-height: 20px;\\n  font-size: 20px; }\\n.q-grid-persistence-panel .q-grid-persistence-group-title {\\n  margin: 0;\\n  text-transform: uppercase; }\\n@media (max-height: 540px) {\\n  .q-grid-persistence-panel.q-grid-menu {\\n    height: 400px;\\n    max-height: 400px;\\n    min-height: 400px; }\\n    .q-grid-persistence-panel.q-grid-menu .mat-card-content {\\n      max-height: 318px; } }\\n.q-grid-query-builder-panel.q-grid-menu .mat-card {\\n  padding: 4px 16px; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression .mat-select {\\n  width: auto; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression .mat-select-value {\\n    max-width: none; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression .mat-select-arrow-wrapper {\\n    display: none; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression .mat-form-field {\\n  width: 75px; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression .mat-form-field .mat-form-field-wrapper {\\n    padding-bottom: 0; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression .mat-form-field .mat-form-field-wrapper .mat-form-field-infix {\\n      border: none;\\n      padding: 0; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression .mat-form-field .mat-form-field-wrapper .mat-form-field-infix input {\\n        margin: 0; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression .mat-form-field .mat-form-field-label-wrapper {\\n    top: 0;\\n    padding-top: 0; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression .mat-form-field .mat-form-field-label-wrapper > .mat-form-field-label {\\n      top: 0; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression .mat-form-field .mat-form-field-underline {\\n    bottom: 0;\\n    display: none; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression .mat-form-field.mat-focused .mat-form-field-underline {\\n    display: block; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression .mat-form-field.qb-invalid .mat-form-field-underline {\\n    display: block;\\n    background: #dd2c00; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression .mat-chip-list {\\n  display: inline-block; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression .mat-chip-list .mat-chip-list-wrapper {\\n    display: inline-block; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression .mat-chip-list .mat-chip {\\n    padding: 0;\\n    border-radius: 0;\\n    background-color: transparent;\\n    outline: none; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression .mat-chip-list .mat-chip .q-grid-icon {\\n      margin-left: -3px;\\n      margin-right: 0px;\\n      font-size: 13px;\\n      line-height: 13px;\\n      height: 15px;\\n      width: 15px;\\n      vertical-align: middle; }\\n.q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression .qb-operation .mat-select-value, .q-grid-query-builder-panel.q-grid-menu .q-grid-query-builder-expression .qb-operator .mat-select-value {\\n  color: #3eb1c8; }\\n.q-grid-query-builder-error-tooltip {\\n  text-transform: lowercase; }\\n.q-grid-shortcut {\\n  text-transform: uppercase; }\\n.q-grid-row-options .q-grid-shortcut {\\n  padding-left: 20px; }\\n.q-grid-excel .q-grid.q-grid-theme-material .q-grid-view thead tr {\\n  height: 24px;\\n  background-color: #eee;\\n  border-spacing: 0;\\n  border-collapse: collapse; }\\n.q-grid-excel .q-grid.q-grid-theme-material .q-grid-view thead tr th {\\n    border-left: 1px solid #d2d2d2; }\\n.q-grid-excel .q-grid.q-grid-theme-material .q-grid-view thead tr th label {\\n      color: black;\\n      font-weight: normal; }\\n.q-grid-excel .q-grid.q-grid-theme-material .q-grid-view thead tr th.q-grid-highlighted {\\n      background-color: #9FD5B7; }\\n.q-grid-excel .q-grid.q-grid-theme-material .q-grid-view thead tr th.q-grid-sorted {\\n      background-color: #D3F0E0; }\\n.q-grid-excel .q-grid.q-grid-theme-material .q-grid-view thead tr th .q-grid-divider {\\n      display: none; }\\n.q-grid-excel .q-grid.q-grid-theme-material .q-grid-view thead tr th.focused-row-header {\\n      background-color: #d2d2d2;\\n      border-bottom: 1px solid #227447; }\\n.q-grid-excel .q-grid.q-grid-theme-material .q-grid-view thead tr th.focused-row-header label {\\n        color: #227447; }\\n.q-grid-excel .q-grid.q-grid-theme-material .q-grid-table tbody {\\n  border-collapse: collapse;\\n  border-spacing: 0; }\\n.q-grid-excel .q-grid.q-grid-theme-material .q-grid-table tbody tr:first-child td.q-grid-focus:first-child {\\n    border-left-width: 1px;\\n    border-top-width: 1px; }\\n.q-grid-excel .q-grid.q-grid-theme-material .q-grid-table tbody tr td {\\n    color: black;\\n    border: 1px solid #ccc;\\n    line-height: 21px;\\n    padding: 0 4px 0 4px;\\n    background-color: white;\\n    vertical-align: top;\\n    overflow: hidden;\\n    outline-width: 0;\\n    border-collapse: collapse;\\n    border-spacing: 0; }\\n.q-grid-excel .q-grid.q-grid-theme-material .q-grid-table tbody tr td:not(.q-grid-row-number) {\\n      cursor: cell; }\\n.q-grid-excel .q-grid.q-grid-theme-material .q-grid-table tbody tr td.q-grid-array ul {\\n      display: inline-block;\\n      vertical-align: middle; }\\n.q-grid-excel .q-grid.q-grid-theme-material .q-grid-table tbody tr td.q-grid-array ul li {\\n      display: block;\\n      min-width: 0;\\n      text-align: left;\\n      padding: 0;\\n      vertical-align: middle;\\n      background-color: transparent;\\n      border-radius: 0;\\n      margin-right: 0; }\\n.q-grid-excel .q-grid.q-grid-theme-material .q-grid-table tbody tr td.q-grid-array ul li::after {\\n        content: ',';\\n        white-space: pre; }\\n.q-grid-excel .q-grid.q-grid-theme-material .q-grid-table tbody tr td.q-grid-array ul li:last-child::after {\\n        content: ''; }\\n.q-grid-excel .q-grid.q-grid-theme-material .q-grid-table tbody tr td.q-grid-focus {\\n      background-color: white !important;\\n      border: 2px solid #227447; }\\n.q-grid-excel .q-grid.q-grid-theme-material .q-grid-table tbody tr td.q-grid-focus.q-grid-edit input {\\n      border: none; }\\n.q-grid-excel .q-grid.q-grid-theme-material .q-grid-table tbody tr td.q-grid-selected {\\n      background-color: white !important; }\\n.q-grid-excel .q-grid.q-grid-theme-material .q-grid-table tbody tr td.q-grid-row-number {\\n      background-color: #eee; }\\n.q-grid-excel .q-grid.q-grid-theme-material .q-grid-table tbody tr td.q-grid-sorted {\\n      background-color: #c6c6c6;\\n      border-left: 2px solid #227447;\\n      border-right: 2px solid #227447; }\\n.q-grid-excel .q-grid.q-grid-theme-material .q-grid-table tbody tr td.focused-row-header {\\n      background-color: #d2d2d2;\\n      border-right: 2px solid #227447; }\\n.q-grid-embed,\\n.q-grid-lcc {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.q-grid-embed .q-grid .q-grid-title h2,\\n  .q-grid-lcc .q-grid .q-grid-title h2 {\\n    font-size: 24px;\\n    font-weight: normal;\\n    font-style: normal;\\n    text-align: left;\\n    color: #006f8f; }\\n.q-grid-embed .q-grid .q-grid-caption h3,\\n  .q-grid-lcc .q-grid .q-grid-caption h3 {\\n    color: #006f8f; }\\n.q-grid-embed .q-grid .q-grid-sort,\\n  .q-grid-lcc .q-grid .q-grid-sort {\\n    margin-left: 0; }\\n.q-grid-embed .q-grid .q-grid-text,\\n  .q-grid-lcc .q-grid .q-grid-text {\\n    font-size: 13px; }\\n.q-grid-embed .q-grid .q-grid-table tr,\\n  .q-grid-lcc .q-grid .q-grid-table tr {\\n    height: 36px; }\\n.q-grid-embed .q-grid .q-grid-table th,\\n  .q-grid-lcc .q-grid .q-grid-table th {\\n    font-size: 12px !important;\\n    color: #006f8f !important;\\n    font-weight: normal !important;\\n    line-height: 14px; }\\n.q-grid-embed .q-grid .q-grid-table th:hover label,\\n    .q-grid-lcc .q-grid .q-grid-table th:hover label {\\n      font-weight: normal !important; }\\n.q-grid-embed .q-grid .q-grid-table th .q-grid-icon,\\n    .q-grid-lcc .q-grid .q-grid-table th .q-grid-icon {\\n      text-align: center;\\n      line-height: 16px;\\n      font-size: 14px;\\n      padding: 0 2px;\\n      color: rgba(0, 0, 0, 0.87); }\\n.q-grid-embed .q-grid .q-grid-table th .q-grid-column-filter-trigger,\\n    .q-grid-lcc .q-grid .q-grid-table th .q-grid-column-filter-trigger {\\n      right: 4px; }\\n.q-grid-embed .q-grid .q-grid-table th .q-grid-column-filter-trigger button,\\n      .q-grid-lcc .q-grid .q-grid-table th .q-grid-column-filter-trigger button {\\n        margin: 0;\\n        width: 20px; }\\n.q-grid-embed .q-grid .q-grid-table th .q-grid-sort,\\n    .q-grid-lcc .q-grid .q-grid-table th .q-grid-sort {\\n      padding-left: 20px; }\\n.q-grid-embed .q-grid .q-grid-table th .q-grid-sort.q-grid-active label,\\n      .q-grid-lcc .q-grid .q-grid-table th .q-grid-sort.q-grid-active label {\\n        color: inherit; }\\n.q-grid-embed .q-grid .q-grid-table th .q-grid-sort .q-grid-icon,\\n      .q-grid-lcc .q-grid .q-grid-table th .q-grid-sort .q-grid-icon {\\n        margin-left: -20px; }\\n.q-grid-embed .q-grid .q-grid-table th .q-grid-sort label,\\n      .q-grid-lcc .q-grid .q-grid-table th .q-grid-sort label {\\n        cursor: pointer; }\\n.q-grid-embed .q-grid .q-grid-table td,\\n  .q-grid-lcc .q-grid .q-grid-table td {\\n    font-size: 14px;\\n    font-weight: normal;\\n    padding: 0 20px;\\n    color: rgba(0, 0, 0, 0.87); }\\n.q-grid-embed .q-grid .q-grid-table td.q-grid-text-area > span,\\n    .q-grid-lcc .q-grid .q-grid-table td.q-grid-text-area > span {\\n      white-space: nowrap; }\\n.q-grid-embed .q-grid .q-grid-table td.q-grid-array li,\\n    .q-grid-lcc .q-grid .q-grid-table td.q-grid-array li {\\n      padding: 2px 8px; }\\n.q-grid-embed .q-grid .q-grid-table td.q-grid-edit.q-grid-row-options button,\\n    .q-grid-lcc .q-grid .q-grid-table td.q-grid-edit.q-grid-row-options button {\\n      width: 24px;\\n      height: 24px;\\n      line-height: 24px; }\\n.q-grid-embed .q-grid .q-grid-table td.q-grid-image img,\\n    .q-grid-lcc .q-grid .q-grid-table td.q-grid-image img {\\n      max-height: 24px;\\n      max-width: 24px; }\\n.q-grid-embed .q-grid .q-grid-legend-list,\\n  .q-grid-lcc .q-grid .q-grid-legend-list {\\n    font-size: 16px !important;\\n    text-align: left !important;\\n    color: #000000 !important; }\\n.q-grid-embed .q-grid .q-grid-legend-item,\\n  .q-grid-lcc .q-grid .q-grid-legend-item {\\n    width: 8px !important;\\n    height: 8px !important;\\n    margin-right: 18px !important;\\n    margin-bottom: 2px !important; }\\n.q-grid-embed .q-grid .q-grid-progress-linear,\\n  .q-grid-lcc .q-grid .q-grid-progress-linear {\\n    top: -10px; }\\n.q-grid-embed .q-grid .q-grid-pager,\\n  .q-grid-lcc .q-grid .q-grid-pager {\\n    padding: 11px 0; }\\n.q-grid-embed .q-grid .q-grid-legend-list,\\n  .q-grid-lcc .q-grid .q-grid-legend-list {\\n    margin-top: 15px; }\\n.q-grid-dark .q-grid.q-grid-theme-material {\\n  background-color: #363640;\\n  font-family: \\\"Roboto Condensed\\\", Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-weight: 300; }\\n.q-grid-dark .q-grid.q-grid-theme-material thead {\\n    box-shadow: 0 1px 0px rgba(255, 255, 255, 0.12); }\\n.q-grid-dark .q-grid.q-grid-theme-material thead th {\\n      font-weight: 300; }\\n.q-grid-dark .q-grid.q-grid-theme-material tbody tr {\\n    border-top: 1px solid rgba(255, 255, 255, 0.12); }\\n.q-grid-dark .q-grid.q-grid-theme-material .q-grid-toolbar .q-grid-title h3,\\n  .q-grid-dark .q-grid.q-grid-theme-material .q-grid-toolbar .q-grid-caption h3 {\\n    color: #ffffff;\\n    padding-left: 10px; }\\n.q-grid-dark .q-grid.q-grid-theme-material .q-grid-toolbar .q-grid-icon {\\n    color: #ffffff; }\\n.q-grid-dark .q-grid.q-grid-theme-material .q-grid-pager label {\\n    color: #ffffff; }\\n.q-grid-dark .q-grid.q-grid-theme-material .q-grid-view {\\n    background-color: #3c3c46; }\\n.q-grid-dark .q-grid.q-grid-theme-material .q-grid-view thead tr th {\\n      color: rgba(255, 255, 255, 0.6); }\\n.q-grid-dark .q-grid.q-grid-theme-material .q-grid-view thead tr th.q-grid-sorted .q-grid-sort.q-grid-active label {\\n        color: #ffffff; }\\n.q-grid-dark .q-grid.q-grid-theme-material .q-grid-view thead tr th.q-grid-sorted .q-grid-sort.q-grid-active .q-grid-icon {\\n        color: #ffffff; }\\n.q-grid-dark .q-grid.q-grid-theme-material .q-grid-view thead tr th > .q-grid-divider {\\n        border-right: 1px solid rgba(255, 255, 255, 0.12); }\\n.q-grid-dark .q-grid.q-grid-theme-material .q-grid-view tr td {\\n      color: #ffffff;\\n      font-family: \\\"Roboto Condensed\\\";\\n      font-size: 14px; }\\n.q-grid-dark .q-grid.q-grid-theme-material .q-grid-view tr.q-grid-highlighted {\\n      background-color: #616161; }\\n.q-grid-dark .q-grid.q-grid-theme-material .q-grid-view tr:not(.q-grid-highlighted) td.q-grid-selected {\\n      background-color: #616161; }\\n.q-grid-dark .q-grid.q-grid-theme-material .q-grid-view tr:not(.q-grid-highlighted) td.q-grid-selected.q-grid-sorted {\\n        background-color: #3c3c46; }\\n.q-grid-dark .q-grid.q-grid-theme-material .q-grid-view td.q-grid-highlighted {\\n      background-color: #616161; }\\n.q-grid-dark .q-grid.q-grid-theme-material .q-grid-view td.q-grid-sorted {\\n      background-color: rgba(0, 0, 0, 0); }\\n.q-grid-dark .q-grid.q-grid-theme-material .q-grid-view td.q-grid-selected {\\n      background-color: #616161; }\\n.q-grid-dark .q-grid.q-grid-theme-material .q-grid-view td.q-grid-email a {\\n      color: #ffffff; }\\n.q-grid-dark .q-grid.q-grid-theme-material .q-grid-view td.q-grid-array ul li {\\n      color: #424242; }\\n.q-grid-dark .q-grid.q-grid-theme-material .q-grid-view td .q-grid-editor {\\n      color: #ffffff;\\n      background-color: #424242; }\\n.q-grid-dark .q-grid.q-grid-theme-material .q-grid-view .q-grid-icon {\\n      color: #ffffff; }\\n.q-grid-dark .q-grid.q-grid-theme-material .q-grid-view .mat-hint {\\n      color: #ffffff; }\\n.q-grid-dark .q-grid.q-grid-theme-material .q-grid-view .mat-form-field-underline {\\n      background-color: #ffffff; }\\n.q-grid-dark .q-grid.q-grid-theme-material .q-grid-view .mat-checkbox-frame {\\n      border-color: #ffffff; }\\n.q-grid-dark .q-grid.q-grid-theme-material .q-grid-view .mat-icon {\\n      color: #ffffff; }\\n.q-grid-dark .q-grid.q-grid-theme-material .q-grid-view .mat-form-field-ripple {\\n      background-color: #616161; }\\n.q-grid-dark .q-grid.q-grid-theme-material ul.q-grid-legend-list {\\n    color: #ffffff; }\\n.q-grid-dark .q-grid ::-webkit-scrollbar-track,\\n.q-grid-dark .q-grid ::-webkit-scrollbar-track-piece {\\n  background-color: #424242; }\\n.q-grid-dark .q-grid-menu ::-webkit-scrollbar-track,\\n.q-grid-dark .q-grid-menu ::-webkit-scrollbar-track-piece {\\n  background-color: #616161; }\\n.q-grid-dark .q-grid .mat-select-value {\\n  color: #ffffff; }\\n.q-grid-dark .q-grid .mat-select-arrow {\\n  color: #ffffff; }\\n.q-grid-dark div.mat-select-content {\\n  background: #424242; }\\n.q-grid-dark div.mat-select-content .mat-option {\\n    color: #ffffff; }\\n.q-grid-dark div.mat-select-content .mat-option:hover {\\n    background: #616161; }\\n.q-grid-dark .mat-menu-panel {\\n  background: #424242; }\\n.q-grid-dark .mat-menu-content {\\n  background: #424242;\\n  height: 500px; }\\n.q-grid-dark q-grid-column-chooser .mat-card,\\n.q-grid-dark q-grid-column-filter .mat-card {\\n  background-color: #424242;\\n  color: #ffffff;\\n  font-weight: 300; }\\n.q-grid-dark q-grid-column-chooser .mat-card .mat-card-title,\\n  .q-grid-dark q-grid-column-filter .mat-card .mat-card-title {\\n    font-size: 16px; }\\n.q-grid-dark q-grid-column-chooser .mat-card .mat-button,\\n  .q-grid-dark q-grid-column-filter .mat-card .mat-button {\\n    color: #ffffff; }\\n.q-grid-dark q-grid-column-chooser .mat-card .mat-button:hover,\\n  .q-grid-dark q-grid-column-filter .mat-card .mat-button:hover {\\n    background-color: #616161; }\\n.q-grid-dark q-grid-column-chooser .mat-card .mat-button.mat-primary,\\n  .q-grid-dark q-grid-column-filter .mat-card .mat-button.mat-primary {\\n    background-color: #616161; }\\n.q-grid-dark q-grid-column-chooser .mat-card .mat-form-field-label,\\n  .q-grid-dark q-grid-column-filter .mat-card .mat-form-field-label {\\n    color: #ffffff; }\\n.q-grid-dark q-grid-column-chooser .mat-card .mat-input-underline,\\n  .q-grid-dark q-grid-column-filter .mat-card .mat-input-underline {\\n    color: #fff; }\\n.q-grid-dark q-grid-column-chooser .mat-card .mat-form-field,\\n  .q-grid-dark q-grid-column-filter .mat-card .mat-form-field {\\n    font-weight: 300; }\\n.q-grid-dark q-grid-column-chooser .mat-card .mat-form-field-underline,\\n  .q-grid-dark q-grid-column-filter .mat-card .mat-form-field-underline {\\n    background-color: rgba(255, 255, 255, 0.12); }\\n.q-grid-dark q-grid-column-chooser .mat-card .mat-form-field-ripple,\\n  .q-grid-dark q-grid-column-filter .mat-card .mat-form-field-ripple {\\n    background-color: #1eb980; }\\n.q-grid-dark q-grid-column-chooser .mat-card .mat-form-field-should-float label,\\n  .q-grid-dark q-grid-column-chooser .mat-card .q-grid-filter-by-item,\\n  .q-grid-dark q-grid-column-filter .mat-card .mat-form-field-should-float label,\\n  .q-grid-dark q-grid-column-filter .mat-card .q-grid-filter-by-item {\\n    font-family: \\\"Roboto Condensed\\\", Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n    font-weight: 300; }\\n.q-grid-dark q-grid-column-chooser .mat-card .q-grid-filter-by-item,\\n  .q-grid-dark q-grid-column-filter .mat-card .q-grid-filter-by-item {\\n    color: #424242; }\\n.q-grid-dark q-grid-column-chooser .mat-card .mat-checkbox-checked.mat-accent .mat-checkbox-background,\\n  .q-grid-dark q-grid-column-chooser .mat-card .mat-checkbox-indeterminate.mat-accent .mat-checkbox-background,\\n  .q-grid-dark q-grid-column-filter .mat-card .mat-checkbox-checked.mat-accent .mat-checkbox-background,\\n  .q-grid-dark q-grid-column-filter .mat-card .mat-checkbox-indeterminate.mat-accent .mat-checkbox-background {\\n    background-color: #616161; }\\n.q-grid-dark q-grid-column-chooser .mat-card .q-grid-highlight-part,\\n  .q-grid-dark q-grid-column-filter .mat-card .q-grid-highlight-part {\\n    background-color: #8d8d8d;\\n    color: #ffffff; }\\n.q-grid-dark q-grid-column-chooser label,\\n.q-grid-dark q-grid-column-filter label {\\n  border-color: #ffffff; }\\n.q-grid-dark q-grid-column-chooser .mat-input-underline,\\n.q-grid-dark q-grid-column-filter .mat-input-underline {\\n  color: #ffffff; }\\n.q-grid-dark q-grid-column-chooser .mat-checkbox-frame,\\n.q-grid-dark q-grid-column-filter .mat-checkbox-frame {\\n  border-color: #ffffff; }\\n.q-grid-dark .q-grid-box:not(.q-grid-drag) td.q-grid-focused {\\n  outline-color: #5565A0; }\\n.q-grid-dark .q-grid-view:not(.q-grid-active) td.q-grid-focused {\\n  outline-color: #5565A0; }\\n.q-grid-dark .q-grid-cell-handler {\\n  outline-color: #5565A0; }\\n\"","module.exports = \"<ng-template key=\\\"body-cell-array-of-date.tpl.html\\\"\\n             let-$cell>\\n\\t<ul>\\n\\t\\t<li *ngFor=\\\"let item of $cell.value | qGridArray\\\">{{item | qGridDate: $cell.column.itemFormat}}</li>\\n\\t</ul>\\n</ng-template><ng-template key=\\\"body-cell-array-of-number.tpl.html\\\"\\n\\t\\t\\t let-$cell>\\n\\t<ul>\\n\\t\\t<li *ngFor=\\\"let item of $cell.value | qGridArray\\\">{{item | qGridNumber: $cell.column.itemFormat}}</li>\\n\\t</ul>\\n</ng-template><ng-template key=\\\"body-cell-array.tpl.html\\\"\\n             let-$cell>\\n\\t<ul>\\n\\t\\t<li *ngFor=\\\"let item of $cell.value | qGridArray\\\">{{$cell.column.itemLabel(item)}}</li>\\n\\t</ul>\\n</ng-template><ng-template key=\\\"body-cell-bool.tpl.html\\\"\\n             let-$cell>\\n    <mat-icon class=\\\"q-grid-icon\\\"\\n              *ngIf=\\\"$cell.value === $cell.column.trueValue\\\">\\n        check\\n    </mat-icon>\\n    <mat-icon class=\\\"q-grid-icon\\\"\\n              *ngIf=\\\"$cell.column.isIndeterminate($cell.value)\\\">\\n        remove\\n    </mat-icon>\\n</ng-template><ng-template key=\\\"body-cell-currency.tpl.html\\\"\\n             let-$cell>\\n\\t<span>{{$cell.value | qGridCurrency: $cell.column.code}}</span>\\n</ng-template><ng-template key=\\\"body-cell-date.tpl.html\\\" let-$cell>\\n\\t<span>{{$cell.label | qGridDate: $cell.column.format}}</span>\\n</ng-template>\\n<ng-template key=\\\"body-cell-email.tpl.html\\\"\\n             let-$cell\\n             let-$view=\\\"$view\\\">\\n    <a href=\\\"mailto:{{$cell.value}}\\\">\\n        {{$cell.label || $cell.value}}\\n    </a>\\n    <button class=\\\"q-grid-url-edit q-grid-edit-trigger\\\"\\n            color=\\\"primary\\\"\\n            mat-icon-button\\n            matTooltip=\\\"Edit Email\\\"\\n            [matTooltipShowDelay]=\\\"800\\\"\\n            [matTooltipPosition]=\\\"'before'\\\"\\n            aria-label=\\\"'email'\\\"\\n            (disabled)=\\\"!$view.edit.cell.enter.canExecute($cell)\\\"\\n            (click)=\\\"$view.edit.cell.enter.execute($cell)\\\">\\n        <mat-icon class=\\\"q-grid-icon\\\">edit</mat-icon>\\n    </button>\\n</ng-template><ng-template key=\\\"body-cell-file.tpl.html\\\"\\n             let-$cell\\n             let-$view=\\\"$view\\\">\\n    <a [href]=\\\"$cell.value\\\">{{$cell.label || $cell.value}}</a>\\n    <button mat-icon-button\\n            *ngIf=\\\"$view.edit.cell.canEdit($cell)\\\"\\n            class=\\\"q-grid-file-edit q-grid-edit-trigger\\\"\\n            matTooltip=\\\"Upload\\\"\\n            aria-label=\\\"Аile edit\\\"\\n            (disabled)=\\\"!$view.edit.cell.enter.canExecute($cell)\\\"\\n            (click)=\\\"$view.edit.cell.enter.execute($cell)\\\"\\n            tabindex=\\\"-1\\\">\\n        <mat-icon class=\\\"q-grid-icon\\\">file_upload</mat-icon>\\n    </button>\\n</ng-template><ng-template key=\\\"body-cell-group.tpl.html\\\"\\n\\t     let-$cell\\n\\t     let-$view=\\\"$view\\\">\\n\\t<div [ngStyle]=\\\"{'padding-left': $view.group.offset($cell.row, $cell.column) + 'px'}\\\"\\n\\t     *ngIf=\\\"$view.group.isVisible($cell.row, $cell.column)\\\">\\n\\t\\t<button (mouseup)=\\\"$view.group.toggleStatus.execute($cell.row, $cell.column)\\\"\\n\\t\\t\\t*ngIf=\\\"$view.group.toggleStatus.canExecute($cell.row, $cell.column)\\\"\\n\\t\\t\\t[ngClass]=\\\"'q-grid-'+$view.group.status($cell.row, $cell.column)\\\"\\n\\t\\t\\ttabindex=\\\"-1\\\"\\n\\t\\t\\tmat-icon-button>\\n\\t\\t\\t<mat-icon class=\\\"q-grid-icon\\\">\\n\\t\\t\\t\\tchevron_right\\n\\t\\t\\t</mat-icon>\\n\\t\\t</button>\\n\\t\\t<span>{{$view.group.value($cell.row, $cell.column)}}</span>\\n\\t\\t<span *ngIf=\\\" $view.group.toggleStatus.canExecute($cell.row, $cell.column)\\\">\\n\\t\\t\\t({{$view.group.count($cell.row, $cell.column)}})\\n\\t\\t</span>\\n\\t</div>\\n</ng-template><ng-template key=\\\"body-cell-image.tpl.html\\\"\\n             let-$cell>\\n\\t<img *ngIf=\\\"$cell.value\\\"\\n\\t     [src]=\\\"$cell.value\\\" />\\n\\t<mat-icon class=\\\"q-grid-icon\\\"\\n\\t          *ngIf=\\\"!$cell.value\\\">\\n\\t\\tinsert_photo\\n\\t</mat-icon>\\n</ng-template><ng-template key=\\\"body-cell-number.tpl.html\\\"\\n             let-$cell>\\n\\t<span>{{$cell.label | qGridNumber: $cell.column.format}}</span>\\n</ng-template>\\n<ng-template key=\\\"body-cell-password.tpl.html\\\">\\n    <span>***</span>\\n</ng-template><ng-template key=\\\"body-cell-reference.tpl.html\\\"\\n             let-$cell\\n             let-$view=\\\"$view\\\">\\n\\t<span>{{$cell.label}}</span>\\n\\t<button *ngIf=\\\"$view.edit.cell.canEdit($cell)\\\"\\n\\t        class=\\\"q-grid-reference-edit q-grid-edit-trigger\\\"\\n\\t        (disabled)=\\\"!$view.edit.cell.enter.canExecute($cell)\\\"\\n\\t        (click)=\\\"$view.edit.cell.enter.execute($cell)\\\"\\n\\t        type=\\\"button\\\"\\n\\t        mat-icon-button\\n\\t        matTooltip=\\\"Edit reference\\\"\\n\\t        matTooltipPosition=\\\"below\\\"\\n\\t        tabindex=\\\"-1\\\">\\n\\t\\t<mat-icon matSuffix\\n\\t\\t          class=\\\"q-grid-icon\\\">\\n\\t\\t\\tsearch\\n\\t\\t</mat-icon>\\n\\t</button>\\n</ng-template><ng-template key=\\\"body-cell-row-expand.tpl.html\\\"\\r\\n             let-$cell\\r\\n             let-$view=\\\"$view\\\">\\r\\n\\t<button (mouseup)=\\\"$view.rowDetails.toggleStatus.execute($cell.row)\\\"\\r\\n\\t        *ngIf=\\\"$view.rowDetails.toggleStatus.canExecute($cell.row)\\\"\\r\\n\\t        [ngClass]=\\\"'q-grid-'+$view.rowDetails.status($cell.row)\\\"\\r\\n\\t        tabindex=\\\"-1\\\"\\r\\n\\t        mat-icon-button>\\r\\n\\t\\t<mat-icon class=\\\"q-grid-icon\\\">\\r\\n\\t\\t\\tchevron_right\\r\\n\\t\\t</mat-icon>\\r\\n\\t</button>\\r\\n</ng-template><ng-template key=\\\"body-cell-row-indicator.tpl.html\\\"\\n             let-$cell\\n             let-$view=\\\"$view\\\">\\n\\t<ng-container *ngIf=\\\"$view.row.canMove\\\">\\n\\t\\t<div [q-grid-drag]=\\\"$view.row.drag\\\"\\n\\t\\t     [q-grid-drag-data]=\\\"$cell.rowIndex\\\"\\n\\t\\t     q-grid-drop-area=\\\"body\\\">\\n\\t\\t\\t<mat-icon class=\\\"q-grid-icon\\\">drag_indicator</mat-icon>\\n\\t\\t</div>\\n\\t</ng-container>\\n\\t<ng-container *ngIf=\\\"$view.row.canResize\\\">\\n\\t\\t<div [q-grid-drag]=\\\"$view.row.resize\\\"\\n\\t\\t     [q-grid-resize]=\\\"$cell.row\\\"\\n\\t\\t     q-grid-resize-path=\\\"rows\\\"\\n\\t\\t     [q-grid-can-resize]=\\\"$view.row.resize.canExecute\\\">\\n\\t\\t</div>\\n\\t</ng-container>\\n</ng-template><ng-template key=\\\"body-cell-row-number.tpl.html\\\"\\n             let-$cell\\n             let-$view=\\\"$view\\\">\\n\\t{{$cell.rowIndex + 1}}\\n</ng-template><ng-template key=\\\"body-cell-row-options.tpl.html\\\">\\n    <mat-icon class=\\\"q-grid-icon\\\">more_vert</mat-icon>\\n</ng-template><ng-template key=\\\"body-cell-select.tpl.html\\\"\\n             let-$cell\\n             let-$view=\\\"$view\\\">\\n\\t<mat-checkbox [indeterminate]=\\\"$view.selection.isIndeterminate($cell.row)\\\"\\n\\t              [checked]=\\\"$view.selection.state($cell.row)\\\"\\n\\t              [disabled]=\\\"!$view.selection.toggleRow.canExecute($cell.row)\\\"\\n\\t              (change)=\\\"$view.selection.toggleRow.execute($cell.row)\\\"\\n\\t              tabindex=\\\"-1\\\"\\n\\t              aria-label=\\\"Select\\\"\\n\\t              class=\\\"q-grid-checkbox\\\">\\n\\t</mat-checkbox>\\n</ng-template><ng-template key=\\\"body-cell-text.tpl.html\\\"\\n             let-$cell>\\n    <span>{{$cell.label}}</span>\\n</ng-template><ng-template key=\\\"body-cell-time.tpl.html\\\"\\n             let-$cell>\\n    <span>{{$cell.label | qGridTime: $cell.column.format}}</span>\\n</ng-template><ng-template key=\\\"body-cell-url.tpl.html\\\"\\n             let-$cell\\n             let-$view=\\\"$view\\\">\\n    <a [attr.href]=\\\"$cell.value\\\">\\n       {{$cell.label || $cell.value}}\\n    </a>\\n    <button *ngIf=\\\"$view.edit.cell.canEdit($cell)\\\"\\n            class=\\\"q-grid-url-edit q-grid-edit-trigger\\\"\\n            mat-icon-button\\n            aria-label=\\\"url\\\"\\n            [disabled]=\\\"!$view.edit.cell.enter.canExecute($cell)\\\"\\n            (click)=\\\"$view.edit.cell.enter.execute($cell)\\\"\\n            tabindex=\\\"-1\\\"\\n            matTooltip=\\\"Edit Url\\\"\\n            [matTooltipPosition]=\\\"'below'\\\"\\n            [matTooltipShowDelay]=\\\"800\\\">\\n        <mat-icon class=\\\"q-grid-icon\\\">edit</mat-icon>\\n    </button>\\n</ng-template><ng-template key=\\\"column-filter-cell-currency.tpl.html\\\"\\n             let-$item\\n             let-$list=\\\"itemList\\\">\\n    <span [innerHTML]=\\\"$item.value | qGridCurrency: $list.column.code | qGridHighlight: $list.search\\\"></span>\\n</ng-template><ng-template key=\\\"column-filter-cell-date.tpl.html\\\"\\n             let-$item\\n             let-$list=\\\"itemList\\\">\\n    <span [innerHTML]=\\\"$item.value | qGridDate: $list.column.format | qGridHighlight: $list.search\\\"></span>\\n</ng-template><ng-template key=\\\"column-filter-cell-number.tpl.html\\\"\\n             let-$item\\n             let-$list=\\\"itemList\\\">\\n    <span [innerHTML]=\\\"$item.value | qGridNumber: $list.column.format | qGridHighlight: $list.search\\\"></span>\\n</ng-template><ng-template key=\\\"column-filter-cell-text.tpl.html\\\"\\n             let-$item\\n             let-$list=\\\"itemList\\\">\\n    <span [innerHTML]=\\\"$item.value | qGridHighlight: $list.search\\\"></span>\\n</ng-template><ng-template key=\\\"edit-cell-array.tpl.html\\\"\\n\\t\\t\\t let-$cell\\n\\t\\t\\t let-$view=\\\"$view\\\">\\n\\t<q-grid-cell-editor class=\\\"q-grid-array q-grid-editor q-grid-position\\\"\\n\\t\\t\\t\\t\\t\\t(close)=\\\"$view.edit.cell.exit.execute($cell)\\\"\\n\\t\\t\\t\\t\\t\\tq-grid-position=\\\"td\\\"\\n\\t\\t\\t\\t\\t\\tq-grid-chips>\\n\\t\\t<div class=\\\"q-grid-array-view\\\">\\n\\t\\t\\t<mat-chip-list #chipList>\\n\\t\\t\\t\\t<mat-chip class=\\\"q-grid-array-item\\\"\\n\\t\\t\\t\\t\\t\\t  *ngFor=\\\"let value of $view.edit.cell.value;let $index = index\\\"\\n\\t\\t\\t\\t\\t\\t  selectable=\\\"true\\\"\\n\\t\\t\\t\\t\\t\\t  removable=\\\"true\\\"\\n\\t\\t\\t\\t\\t\\t  (q-grid-chips-remove)=\\\"$view.edit.cell.value.splice($index, 1)\\\">\\n\\t\\t\\t\\t\\t{{value}}\\n\\t\\t\\t\\t\\t<mat-icon class=\\\"q-grid-icon\\\"\\n\\t\\t\\t\\t\\t\\t\\t  matChipRemove>\\n\\t\\t\\t\\t\\t\\tcancel\\n\\t\\t\\t\\t\\t</mat-icon>\\n\\t\\t\\t\\t</mat-chip>\\n\\t\\t\\t</mat-chip-list>\\n\\t\\t</div>\\n\\t\\t<mat-form-field (q-grid-chips-push)=\\\"($view.edit.cell.value || []).push($event)\\\"\\n\\t\\t\\t\\t\\t\\t[floatLabel]=\\\"'never'\\\">\\n\\t\\t\\t<input class=\\\"q-grid-array-input\\\"\\n\\t\\t\\t\\t   matInput\\n\\t\\t\\t\\t   type={{$cell.column.itemType}}\\n\\t\\t\\t\\t   #qGridInput\\n\\t\\t\\t\\t   q-grid-focus\\n\\t\\t\\t\\t   [matChipInputFor]=\\\"chipList\\\" />\\n\\t\\t</mat-form-field>\\n\\t\\t<q-grid-validator class=\\\"q-grid-validator\\\"\\n\\t\\t\\t\\t\\t\\t  [key]=\\\"$cell.column.key\\\"\\n\\t\\t\\t\\t\\t\\t  [type]=\\\"$cell.column.type\\\"\\n\\t\\t\\t\\t\\t\\t  [value]=\\\"$view.edit.cell.value\\\">\\n\\t\\t</q-grid-validator>\\n\\t</q-grid-cell-editor>\\n</ng-template><ng-template key='edit-cell-autocomplete.tpl.html'\\n             let-$cell\\n             let-$view=\\\"$view\\\">\\n    <q-grid-cell-editor class=\\\"q-grid-editor q-grid-position\\\"\\n                        (close)=\\\"$view.edit.cell.exit.execute($cell)\\\"\\n                        q-grid-position=\\\"td\\\">\\n        <q-grid-autocomplete-editor>\\n        </q-grid-autocomplete-editor>\\n    </q-grid-cell-editor>\\n</ng-template><ng-template key=\\\"edit-cell-bool.tpl.html\\\"\\n             let-$cell\\n             let-$view=\\\"$view\\\">\\n    <q-grid-bool-editor [autofocus]=\\\"true\\\"\\n                        [column]=\\\"$cell.column\\\"\\n                        [(value)]=\\\"$view.edit.cell.value\\\">\\n    </q-grid-bool-editor>\\n</ng-template><ng-template key=\\\"edit-cell-currency.tpl.html\\\"\\n\\t\\t\\t let-$cell\\n\\t\\t\\t let-$view=\\\"$view\\\">\\n\\t<q-grid-cell-editor class=\\\"q-grid-currency q-grid-editor q-grid-position q-grid-text\\\"\\n\\t\\t\\t\\t\\t\\t(close)=\\\"$view.edit.cell.exit.execute($cell)\\\"\\n\\t\\t\\t\\t\\t\\tq-grid-position=\\\"td\\\">\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<input matInput\\n\\t\\t\\t\\t   type=\\\"number\\\"\\n\\t\\t\\t\\t   #input\\n\\t\\t\\t\\t   q-grid-focus\\n\\t\\t\\t\\t   [(ngModel)]=\\\"$view.edit.cell.value\\\" />\\n\\t\\t</mat-form-field>\\n\\t\\t<q-grid-validator class=\\\"q-grid-validator\\\"\\n\\t\\t\\t\\t\\t\\t  [key]=\\\"$cell.column.key\\\"\\n\\t\\t\\t\\t\\t\\t  [type]=\\\"$cell.column.type\\\"\\n\\t\\t\\t\\t\\t\\t  [value]=\\\"$view.edit.cell.value\\\">\\n\\t\\t</q-grid-validator>\\n\\t</q-grid-cell-editor>\\n</ng-template><ng-template key=\\\"edit-cell-date.tpl.html\\\"\\n\\t\\t\\t let-$cell\\n\\t\\t\\t let-$view=\\\"$view\\\">\\n\\t<q-grid-cell-editor class=\\\"q-grid-date q-grid-editor q-grid-position q-grid-text\\\"\\n\\t\\t\\t\\t\\t\\t(close)=\\\"$view.edit.cell.exit.execute($cell)\\\"\\n\\t\\t\\t\\t\\t\\tq-grid-position=\\\"td\\\">\\n\\t\\t<mat-form-field *q-grid-date=\\\"let isValid='isValid'\\\"\\n\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{'mat-form-field-invalid': !isValid(input.value)}\\\">\\n\\t\\t\\t<input q-grid-focus\\n\\t\\t\\t\\t   matInput\\n\\t\\t\\t\\t   #input\\n\\t\\t\\t\\t   [matDatepicker]=\\\"picker\\\"\\n\\t\\t\\t\\t   [ngModel]=\\\"$view.edit.cell.value | qGridDate:'yyyy-MM-dd'\\\"\\n\\t\\t\\t\\t   (ngModelChange)=\\\"isValid(input.value) && ($view.edit.cell.value = $event)\\\" />\\n\\t\\t\\t<mat-datepicker-toggle matSuffix\\n\\t\\t\\t\\t\\t\\t\\t\\t   [for]=\\\"picker\\\">\\n\\t\\t\\t</mat-datepicker-toggle>\\n\\t\\t\\t<mat-datepicker #picker>\\n\\t\\t\\t</mat-datepicker>\\n\\t\\t</mat-form-field>\\n\\t\\t<q-grid-validator class=\\\"q-grid-validator\\\"\\n\\t\\t\\t\\t\\t\\t  [key]=\\\"$cell.column.key\\\"\\n\\t\\t\\t\\t\\t\\t  [type]=\\\"$cell.column.type\\\"\\n\\t\\t\\t\\t\\t\\t  [value]=\\\"$view.edit.cell.value\\\">\\n\\t\\t</q-grid-validator>\\n\\t</q-grid-cell-editor>\\n</ng-template><ng-template key=\\\"edit-cell-dropdown.tpl.html\\\"\\n\\t\\t\\t let-$cell\\n\\t\\t\\t let-$view=\\\"$view\\\">\\n\\t<q-grid-cell-editor class=\\\"q-grid-dropdown\\\"\\n\\t\\t\\t\\t\\t\\t(close)=\\\"$view.edit.cell.cancel.execute($cell)\\\">\\n\\t\\t<mat-select disableRipple\\n\\t\\t\\t\\t\\tq-grid-select\\n\\t\\t\\t\\t\\t[(value)]=\\\"$view.edit.cell.value\\\"\\n\\t\\t\\t\\t\\t(openedChange)=\\\"!$event && $view.edit.cell.exit.execute()\\\">\\n\\t\\t\\t<mat-option *ngFor=\\\"let option of $view.edit.cell.fetch.result\\\"\\n\\t\\t\\t\\t\\t\\t[value]=\\\"option\\\">\\n\\t\\t\\t\\t{{($cell.column.itemLabel && $cell.column.itemLabel(option)) || option}}\\n\\t\\t\\t</mat-option>\\n\\t\\t</mat-select>\\n\\t</q-grid-cell-editor>\\n</ng-template><ng-template key=\\\"edit-cell-email.tpl.html\\\"\\n\\t\\t\\t let-$cell\\n\\t\\t\\t let-$view=\\\"$view\\\">\\n\\t<q-grid-cell-editor class=\\\"q-grid-email q-grid-editor q-grid-position\\\"\\n\\t\\t\\t\\t\\t\\t(close)=\\\"$view.edit.cell.exit.execute($cell)\\\"\\n\\t\\t\\t\\t\\t\\tq-grid-position=\\\"td\\\">\\n\\t\\t<q-grid-tab-trap>\\n\\t\\t\\t<div class=\\\"layout-column q-grid-email-fields\\\"\\n\\t\\t\\t\\t flex>\\n\\t\\t\\t\\t<mat-form-field *ngIf=\\\"$cell.column.label !== null\\\">\\n\\t\\t\\t\\t\\t<input matInput\\n\\t\\t\\t\\t\\t\\t   type=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\t   [(ngModel)]=\\\"$view.edit.cell.label\\\"\\n\\t\\t\\t\\t\\t\\t   placeholder=\\\"Label\\\" />\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t<input q-grid-focus\\n\\t\\t\\t\\t\\t\\t   matInput\\n\\t\\t\\t\\t\\t\\t   type=\\\"email\\\"\\n\\t\\t\\t\\t\\t\\t   [(ngModel)]=\\\"$view.edit.cell.value\\\"\\n\\t\\t\\t\\t\\t\\t   placeholder=\\\"Email\\\" />\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t</div>\\n\\t\\t\\t<q-grid-validator class=\\\"q-grid-validator\\\"\\n\\t\\t\\t\\t\\t\\t\\t  [key]=\\\"$cell.column.key\\\"\\n\\t\\t\\t\\t\\t\\t\\t  [type]=\\\"$cell.column.type\\\"\\n\\t\\t\\t\\t\\t\\t\\t  [value]=\\\"$view.edit.cell.value\\\">\\n\\t\\t\\t</q-grid-validator>\\n\\t\\t</q-grid-tab-trap>\\n\\t</q-grid-cell-editor>\\n</ng-template><ng-template key=\\\"edit-cell-file.tpl.html\\\"\\n             let-$cell\\n             let-$view=\\\"$view\\\">\\n    <q-grid-cell-editor class=\\\"q-grid-editor q-grid-file q-grid-position\\\"\\n                        (close)=\\\"$view.edit.cell.cancel.execute($cell)\\\"\\n                        q-grid-position=\\\"td\\\">\\n        <div class=\\\"layout-column flex\\\">\\n            <div class=\\\"q-grid-file-upload-area\\\"\\n                 [ngClass]=\\\"{'q-grid-file-has-preview': $cell.column.hasPreview($view.edit.cell.label)}\\\">\\n                <div class=\\\"layout-column q-grid-file-upload-message\\\"\\n                     [ngSwitch]=\\\"!!$view.edit.cell.value\\\">\\n                    <span class=\\\"q-grid-file-upload-filename\\\"\\n                          *ngSwitchCase=\\\"true\\\">\\n                        {{$view.edit.cell.label}}\\n                    </span>\\n                    <div class=\\\"layout-row layout-align-center-center\\\">\\n                        <mat-icon>file_upload</mat-icon>\\n                        <span *ngSwitchCase=\\\"false\\\">Drag and drop a file here or click</span>\\n                        <span *ngSwitchCase=\\\"true\\\">Drag and drop or click to replace </span>\\n                    </div>\\n                </div>\\n                <input [(q-grid-file)]=\\\"$view.edit.cell.value\\\"\\n                       [(q-grid-file-label)]=\\\"$view.edit.cell.label\\\"\\n                       [q-grid-file-is-valid]=\\\"$cell.column.canUpload\\\"\\n                       type=\\\"file\\\" />\\n                <div class=\\\"q-grid-file-preview\\\"\\n                     *ngIf=\\\"$cell.column.hasPreview($view.edit.cell.label)\\\">\\n                    <img [src]=\\\"$view.edit.cell.value\\\" />\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"q-grid-actions\\\">\\n            <button mat-button\\n                    color=\\\"primary\\\"\\n                    (click)=\\\"$view.edit.cell.commit.execute($cell, $event)\\\">\\n                Save\\n            </button>\\n            <button mat-button\\n                    (click)=\\\"$view.edit.cell.clear.execute($cell)\\\">\\n                Clear\\n            </button>\\n            <button mat-button\\n                    (click)=\\\"$view.edit.cell.cancel.execute($cell, $event)\\\">\\n                Cancel\\n            </button>\\n        </div>\\n    </q-grid-cell-editor>\\n</ng-template><ng-template key=\\\"edit-cell-image.tpl.html\\\"\\n             let-$cell\\n             let-$view=\\\"$view\\\">\\n    <q-grid-cell-editor class=\\\"q-grid-editor q-grid-file q-grid-position\\\"\\n                        (close)=\\\"$view.edit.cell.cancel.execute($cell)\\\"\\n                        q-grid-position=\\\"td\\\">\\n        <div class=\\\"layout-column flex\\\">\\n            <div class=\\\"q-grid-file-upload-area\\\"\\n                 [ngClass]=\\\"{'q-grid-file-has-preview': $cell.column.hasPreview($view.edit.cell.label)}\\\">\\n                <div class=\\\"layout-column q-grid-file-upload-message\\\"\\n                     [ngSwitch]=\\\"!!$view.edit.cell.value\\\">\\n                    <span class=\\\"q-grid-file-upload-filename\\\"\\n                          *ngSwitchCase=\\\"true\\\">\\n                        {{$view.edit.cell.label}}\\n                    </span>\\n                    <div class=\\\"layout-row layout-align-center-center\\\">\\n                        <mat-icon>file_upload</mat-icon>\\n                        <span *ngSwitchCase=\\\"false\\\">Drag and drop an image here or click</span>\\n                        <span *ngSwitchCase=\\\"true\\\">Drag and drop or click to replace </span>\\n                    </div>\\n                </div>\\n                <input [(q-grid-file)]=\\\"$view.edit.cell.value\\\"\\n                       [(q-grid-file-label)]=\\\"$view.edit.cell.label\\\"\\n                       [q-grid-file-is-valid]=\\\"$cell.column.canUpload\\\"\\n                       type=\\\"file\\\" />\\n                <div class=\\\"q-grid-file-preview\\\"\\n                     *ngIf=\\\"$cell.column.hasPreview($view.edit.cell.label)\\\">\\n                    <img [src]=\\\"$view.edit.cell.value\\\" />\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"q-grid-actions\\\">\\n            <button mat-button\\n                    color=\\\"primary\\\"\\n                    (click)=\\\"$view.edit.cell.commit.execute($cell, $event)\\\">\\n                Save\\n            </button>\\n            <button mat-button\\n                    (click)=\\\"$view.edit.cell.clear.execute($cell)\\\">\\n                Clear\\n            </button>\\n            <button mat-button\\n                    (click)=\\\"$view.edit.cell.cancel.execute($cell, $event)\\\">\\n                Cancel\\n            </button>\\n        </div>\\n    </q-grid-cell-editor>\\n</ng-template><ng-template key=\\\"edit-cell-number.tpl.html\\\"\\n\\t\\t\\t let-$cell\\n\\t\\t\\t let-$view=\\\"$view\\\">\\n\\t<q-grid-cell-editor class=\\\"q-grid-number q-grid-editor q-grid-position q-grid-text\\\"\\n\\t\\t\\t\\t\\t\\t(close)=\\\"$view.edit.cell.exit.execute($cell)\\\"\\n\\t\\t\\t\\t\\t\\tq-grid-position=\\\"td\\\">\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<input matInput\\n\\t\\t\\t\\t   type=\\\"number\\\"\\n\\t\\t\\t\\t   #input\\n\\t\\t\\t\\t   q-grid-focus\\n\\t\\t\\t\\t   [(ngModel)]=\\\"$view.edit.cell.value\\\" />\\n\\t\\t</mat-form-field>\\n\\t\\t<q-grid-validator class=\\\"q-grid-validator\\\"\\n\\t\\t\\t\\t\\t\\t  [key]=\\\"$cell.column.key\\\"\\n\\t\\t\\t\\t\\t\\t  [type]=\\\"$cell.column.type\\\"\\n\\t\\t\\t\\t\\t\\t  [value]=\\\"$view.edit.cell.value\\\">\\n\\t\\t</q-grid-validator>\\n\\t</q-grid-cell-editor>\\n</ng-template><ng-template key=\\\"edit-cell-password.tpl.html\\\"\\n\\t\\t\\t let-$cell\\n\\t\\t\\t let-$view=\\\"$view\\\">\\n\\t<q-grid-cell-editor class=\\\"q-grid-password q-grid-editor q-grid-position q-grid-text\\\"\\n\\t\\t\\t\\t\\t\\t(close)=\\\"$view.edit.cell.exit.execute($cell)\\\"\\n\\t\\t\\t\\t\\t\\tq-grid-position=\\\"td\\\">\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<input matInput\\n\\t\\t\\t\\t   [type]=\\\"'password'\\\"\\n\\t\\t\\t\\t   q-grid-focus\\n\\t\\t\\t\\t   [(ngModel)]=\\\"$view.edit.cell.value\\\" />\\n\\t\\t</mat-form-field>\\n\\t\\t<q-grid-validator class=\\\"q-grid-validator\\\"\\n\\t\\t\\t\\t\\t\\t  [key]=\\\"$cell.column.key\\\"\\n\\t\\t\\t\\t\\t\\t  [type]=\\\"$cell.column.type\\\"\\n\\t\\t\\t\\t\\t\\t  [value]=\\\"$view.edit.cell.value\\\">\\n\\t\\t</q-grid-validator>\\n\\t</q-grid-cell-editor>\\n</ng-template><ng-template key=\\\"edit-cell-reference.tpl.html\\\"\\n\\t\\t\\t let-$cell\\n\\t\\t\\t let-$view=\\\"$view\\\">\\n\\t<q-grid-cell-editor class=\\\"q-grid-reference q-grid-editor q-grid-position\\\"\\n\\t\\t\\t\\t\\t\\t(close)=\\\"$view.edit.cell.exit.execute($cell)\\\"\\n\\t\\t\\t\\t\\t\\tq-grid-position=\\\"td\\\">\\n\\t\\t<q-grid-reference-editor [cell]=\\\"$cell\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t [(value)]=\\\"$view.edit.cell.value\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t [caption]=\\\"$cell.column.title\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t (afterSubmit)=\\\"$view.edit.cell.commit.canExecute() && $view.edit.cell.commit.execute()\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t (afterCancel)=\\\"$view.edit.cell.cancel.execute()\\\">\\n\\t\\t</q-grid-reference-editor>\\n\\t</q-grid-cell-editor>\\n</ng-template><ng-template key=\\\"edit-cell-row-options.tpl.html\\\"\\n             let-$cell\\n             let-$view=\\\"$view\\\">\\n    <button aria-label=\\\"Open row menu\\\"\\n            mat-icon-button\\n            [matMenuTriggerFor]=\\\"menu\\\"\\n            (q-grid-menu-trigger)=\\\"$view.edit.cell.cancel.execute($cell)\\\">\\n        <mat-icon class=\\\"q-grid-icon\\\">more_vert</mat-icon>\\n    </button>\\n    <mat-menu #menu=\\\"matMenu\\\"\\n              class=\\\"q-grid-row-options\\\">\\n        <ng-container *ngFor=\\\"let $action of $cell.column.editorOptions.actions\\\"\\n                      [ngSwitch]=$action.title>\\n            <mat-divider *ngSwitchCase=\\\"'---'\\\"></mat-divider>\\n            <button *ngSwitchDefault\\n                    mat-menu-item\\n                    (click)=\\\"$action.command.execute($cell)\\\"\\n                    [disabled]=\\\"!$action.command.canExecute($cell)\\\"\\n                    [q-grid-command]=\\\"$action.command\\\"\\n                    [q-grid-command-context]=\\\"$cell\\\"\\n                    (q-grid-command-execute)=\\\"$view.edit.cell.cancel.execute($cell)\\\">\\n                <mat-icon class=\\\"q-grid-icon\\\">{{$action.icon}}</mat-icon>\\n                <span>{{$action.title}}</span>\\n                <span *ngIf=\\\"$action.command.shortcut\\\"\\n                      class=\\\"q-grid-shortcut\\\">\\n                    {{$action.command.shortcut}}\\n                </span>\\n            </button>\\n        </ng-container>\\n    </mat-menu>\\n</ng-template><ng-template key=\\\"edit-cell-text-area.tpl.html\\\"\\n\\t\\t\\t let-$cell\\n\\t\\t\\t let-$view=\\\"$view\\\">\\n\\t<q-grid-cell-editor class=\\\"q-grid-text-area q-grid-editor q-grid-position\\\"\\n\\t\\t\\t\\t\\t\\t(close)=\\\"$view.edit.cell.exit.execute($cell)\\\"\\n\\t\\t\\t\\t\\t\\tq-grid-position=\\\"td\\\">\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<textarea matInput\\n\\t\\t\\t\\t\\t  #input\\n\\t\\t\\t\\t\\t  rows=\\\"10\\\"\\n\\t\\t\\t\\t\\t  q-grid-focus\\n\\t\\t\\t\\t\\t  maxlength=\\\"{{$cell.column.maxLength}}\\\"\\n\\t\\t\\t\\t\\t  [(ngModel)]=\\\"$view.edit.cell.value\\\">\\n                </textarea>\\n\\t\\t\\t<mat-hint align=\\\"end\\\">{{input.value.length}} / {{$cell.column.maxLength}}</mat-hint>\\n\\t\\t</mat-form-field>\\n\\t\\t<q-grid-validator class=\\\"q-grid-validator\\\"\\n\\t\\t\\t\\t\\t\\t  [key]=\\\"$cell.column.key\\\"\\n\\t\\t\\t\\t\\t\\t  [type]=\\\"$cell.column.type\\\"\\n\\t\\t\\t\\t\\t\\t  [value]=\\\"$view.edit.cell.value\\\">\\n\\t\\t</q-grid-validator>\\n\\t</q-grid-cell-editor>\\n</ng-template><ng-template key=\\\"edit-cell-text.tpl.html\\\"\\n\\t\\t\\t let-$cell\\n\\t\\t\\t let-$view=\\\"$view\\\">\\n\\t<q-grid-cell-editor class=\\\"q-grid-text q-grid-editor q-grid-position\\\"\\n\\t\\t\\t\\t\\t\\t(close)=\\\"$view.edit.cell.exit.execute($cell)\\\"\\n\\t\\t\\t\\t\\t\\tq-grid-position=\\\"td\\\">\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<input matInput\\n\\t\\t\\t\\t   #input\\n\\t\\t\\t\\t   q-grid-focus\\n\\t\\t\\t\\t   maxlength=\\\"{{$cell.column.maxLength}}\\\"\\n\\t\\t\\t\\t   [(ngModel)]=\\\"$view.edit.cell.value\\\" />\\n\\t\\t\\t<mat-hint align=\\\"end\\\">{{input.value.length}} / {{$cell.column.maxLength}}</mat-hint>\\n\\t\\t</mat-form-field>\\n\\t\\t<q-grid-validator *ngIf=\\\"$view?.edit\\\"\\n\\t\\t\\t\\t\\t\\t  class=\\\"q-grid-validator\\\"\\n\\t\\t\\t\\t\\t\\t  [key]=\\\"$cell.column.key\\\"\\n\\t\\t\\t\\t\\t\\t  [type]=\\\"$cell.column.type\\\"\\n\\t\\t\\t\\t\\t\\t  [value]=\\\"$view.edit.cell.value\\\">\\n\\t\\t</q-grid-validator>\\n\\t</q-grid-cell-editor>\\n</ng-template><ng-template key=\\\"edit-cell-time.tpl.html\\\"\\n\\t\\t\\t let-$cell\\n\\t\\t\\t let-$view=\\\"$view\\\">\\n\\t<q-grid-cell-editor class=\\\"q-grid-time q-grid-editor q-grid-position q-grid-text\\\"\\n\\t\\t\\t\\t\\t\\t(close)=\\\"$view.edit.cell.exit.execute($cell)\\\"\\n\\t\\t\\t\\t\\t\\tq-grid-position=\\\"td\\\">\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<input matInput\\n\\t\\t\\t\\t   type=\\\"time\\\"\\n\\t\\t\\t\\t   #input\\n\\t\\t\\t\\t   *q-grid-time=\\\"let time='time'\\\"\\n\\t\\t\\t\\t   q-grid-focus\\n\\t\\t\\t\\t   [value]=\\\"$view.edit.cell.value | qGridTime: 'hh:mm'\\\"\\n\\t\\t\\t\\t   (change)=\\\"$view.edit.cell.value = time($view.edit.cell.value, input.value)\\\" />\\n\\t\\t</mat-form-field>\\n\\t\\t<q-grid-validator class=\\\"q-grid-validator\\\"\\n\\t\\t\\t\\t\\t\\t  [key]=\\\"$cell.column.key\\\"\\n\\t\\t\\t\\t\\t\\t  [type]=\\\"$cell.column.type\\\"\\n\\t\\t\\t\\t\\t\\t  [value]=\\\"$view.edit.cell.value\\\">\\n\\t\\t</q-grid-validator>\\n\\t</q-grid-cell-editor>\\n</ng-template><ng-template key=\\\"edit-cell-url.tpl.html\\\"\\n\\t\\t\\t let-$cell\\n\\t\\t\\t let-$view=\\\"$view\\\">\\n\\t<q-grid-cell-editor class=\\\"q-grid-url q-grid-editor q-grid-position\\\"\\n\\t\\t\\t\\t\\t\\t(close)=\\\"$view.edit.cell.exit.execute($cell)\\\"\\n\\t\\t\\t\\t\\t\\tq-grid-position=\\\"td\\\">\\n\\t\\t<q-grid-tab-trap>\\n\\t\\t\\t<div class=\\\"flex layout-column q-grid-url-fields\\\">\\n\\t\\t\\t\\t<mat-form-field *ngIf=\\\"$cell.column.label !== null\\\">\\n\\t\\t\\t\\t\\t<input matInput\\n\\t\\t\\t\\t\\t\\t   type=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\t   [(ngModel)]=\\\"$view.edit.cell.label\\\"\\n\\t\\t\\t\\t\\t\\t   placeholder=\\\"Label\\\" />\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t<input matInput\\n\\t\\t\\t\\t\\t\\t   type=\\\"url\\\"\\n\\t\\t\\t\\t\\t\\t   q-grid-focus\\n\\t\\t\\t\\t\\t\\t   [(ngModel)]=\\\"$view.edit.cell.value\\\"\\n\\t\\t\\t\\t\\t\\t   placeholder=\\\"Url\\\" />\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t<q-grid-validator class=\\\"q-grid-validator\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t  [key]=\\\"$cell.column.key\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t  [type]=\\\"$cell.column.type\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t  [value]=\\\"$view.edit.cell.value\\\">\\n\\t\\t\\t\\t</q-grid-validator>\\n\\t\\t\\t</div>\\n\\t\\t</q-grid-tab-trap>\\n\\t</q-grid-cell-editor>\\n</ng-template><ng-template key=\\\"edit-form-array.tpl.html\\\"\\n             let-$editor>\\n    <ng-container q-grid-chips>\\n        <h3>{{$editor.cell.column.title}}</h3>\\n        <div class=\\\"q-grid-array-view\\\">\\n            <mat-chip-list #chipList>\\n                <mat-chip class=\\\"q-grid-array-item\\\"\\n                          *ngFor=\\\"let value of $editor.value;let $index = index\\\"\\n                          selectable=\\\"true\\\"\\n                          removable=\\\"true\\\"\\n                          (q-grid-chips-remove)=\\\"$editor.value.splice($index, 1)\\\">\\n                    {{value}}\\n                    <mat-icon class=\\\"q-grid-icon\\\"\\n                              matChipRemove>\\n                        cancel\\n                    </mat-icon>\\n                </mat-chip>\\n            </mat-chip-list>\\n        </div>\\n        <mat-form-field (q-grid-chips-push)=\\\"$editor.value.push($event)\\\"\\n                        [floatLabel]=\\\"'never'\\\">\\n            <input class=\\\"q-grid-array-input\\\"\\n                   matInput\\n                   type={{$editor.cell.column.itemType}}\\n                   #qGridInput\\n                   [matChipInputFor]=\\\"chipList\\\" />\\n        </mat-form-field>\\n    </ng-container>\\n</ng-template><ng-template key=\\\"edit-form-bool.tpl.html\\\"\\n             let-$editor>\\n    <q-grid-bool-editor [column]=\\\"$editor.cell.column\\\"\\n                        [(value)]=\\\"$editor.value\\\"\\n                        [label]=\\\"$editor.cell.column.title\\\">\\n    </q-grid-bool-editor>\\n</ng-template><ng-template key=\\\"edit-form-currency.tpl.html\\\"\\n             let-$editor>\\n    <mat-form-field>\\n        <input matInput\\n               type=\\\"number\\\"\\n               [placeholder]=\\\"$editor.cell.column.title\\\"\\n               [(ngModel)]=\\\"$editor.value\\\" />\\n    </mat-form-field>\\n</ng-template><ng-template key=\\\"edit-form-date.tpl.html\\\"\\n             let-$editor>\\n    <mat-form-field>\\n        <input matInput\\n               [matDatepicker]=\\\"picker\\\"\\n               [placeholder]=\\\"$editor.cell.column.title\\\"\\n               [(ngModel)]=\\\"$editor.value\\\" />\\n        <mat-datepicker-toggle matSuffix\\n                               [for]=\\\"picker\\\">\\n        </mat-datepicker-toggle>\\n        <mat-datepicker #picker>\\n        </mat-datepicker>\\n    </mat-form-field>\\n</ng-template><ng-template key=\\\"edit-form-dropdown.tpl.html\\\">\\n    Dropdown is not implemented\\n</ng-template><ng-template key=\\\"edit-form-email.tpl.html\\\"\\n             let-$editor>\\n    <h3>{{$editor.cell.column.title}}</h3>\\n    <mat-form-field *ngIf=\\\"$editor.cell.column.label !== null\\\">\\n        <input matInput\\n               type=\\\"text\\\"\\n               [(ngModel)]=\\\"$editor.label\\\"\\n               placeholder=\\\"Label\\\" />\\n    </mat-form-field>\\n    <mat-form-field>\\n        <input matInput\\n               type=\\\"email\\\"\\n               [(ngModel)]=\\\"$editor.value\\\"\\n               placeholder=\\\"Email\\\" />\\n    </mat-form-field>\\n</ng-template><ng-template key=\\\"edit-form-file.tpl.html\\\"\\n             let-$editor>\\n    <h3>{{$editor.cell.column.title}}</h3>\\n    <div class=\\\"q-grid-file-upload-area\\\"\\n         [ngClass]=\\\"{'q-grid-file-has-preview': $editor.cell.column.hasPreview($editor.label)}\\\">\\n        <div class=\\\"layout-column q-grid-file-upload-message\\\"\\n             [ngSwitch]=\\\"!!$editor.value\\\">\\n            <span class=\\\"q-grid-file-upload-filename\\\"\\n                  *ngSwitchCase=\\\"true\\\">\\n                {{$editor.label}}\\n            </span>\\n            <div class=\\\"layout-row layout-align-center-center\\\">\\n                <mat-icon>file_upload</mat-icon>\\n                <span *ngSwitchCase=\\\"false\\\">Drag and drop a file here or click</span>\\n                <span *ngSwitchCase=\\\"true\\\">Drag and drop or click to replace </span>\\n            </div>\\n        </div>\\n        <input [(q-grid-file)]=\\\"$editor.value\\\"\\n               [(q-grid-file-label)]=\\\"$editor.label\\\"\\n               [q-grid-file-is-valid]=\\\"$editor.cell.column.canUpload\\\"\\n               q-grid-file\\n               type=\\\"file\\\" />\\n        <div class=\\\"q-grid-file-preview\\\"\\n             *ngIf=\\\"$editor.cell.column.hasPreview($editor.label)\\\">\\n            <img [src]=\\\"$editor.value\\\" />\\n        </div>\\n    </div>\\n</ng-template><ng-template key=\\\"edit-form-image.tpl.html\\\"\\n             let-$editor>\\n    <h3>{{$editor.cell.column.title}}</h3>\\n    <div class=\\\"q-grid-file-upload-area\\\"\\n         [ngClass]=\\\"{'q-grid-file-has-preview': $editor.cell.column.hasPreview($editor.label)}\\\">\\n        <div class=\\\"layout-column q-grid-file-upload-message\\\"\\n             [ngSwitch]=\\\"!!$editor.value\\\">\\n            <span class=\\\"q-grid-file-upload-filename\\\"\\n                  *ngSwitchCase=\\\"true\\\">\\n                {{$editor.label}}\\n            </span>\\n            <div class=\\\"layout-row layout-align-center-center\\\">\\n                <mat-icon>file_upload</mat-icon>\\n                <span *ngSwitchCase=\\\"false\\\">Drag and drop an image here or click</span>\\n                <span *ngSwitchCase=\\\"true\\\">Drag and drop or click to replace </span>\\n            </div>\\n        </div>\\n        <input [(q-grid-file)]=\\\"$editor.value\\\"\\n               [(q-grid-file-label)]=\\\"$editor.label\\\"\\n               [q-grid-file-is-valid]=\\\"$editor.cell.column.canUpload\\\"\\n               type=\\\"file\\\" />\\n        <div class=\\\"q-grid-file-preview\\\"\\n             *ngIf=\\\"$editor.cell.column.hasPreview($editor.label)\\\">\\n            <img [src]=\\\"$editor.value\\\" />\\n        </div>\\n    </div>\\n</ng-template><ng-template key=\\\"edit-form-number.tpl.html\\\"\\n             let-$editor>\\n    <mat-form-field>\\n        <input matInput\\n               type=\\\"number\\\"\\n               #input\\n               [placeholder]=\\\"$editor.cell.column.title\\\"\\n               [(ngModel)]=\\\"$editor.value\\\" />\\n    </mat-form-field>\\n</ng-template><ng-template key=\\\"edit-form-password.tpl.html\\\"\\n             let-$editor>\\n    <mat-form-field>\\n        <input matInput\\n               type=\\\"password\\\"\\n               [placeholder]=\\\"$editor.cell.column.title\\\"\\n               [(ngModel)]=\\\"$editor.value\\\" />\\n    </mat-form-field>\\n</ng-template><ng-template key=\\\"edit-form-reference.tpl.html\\\"\\n             let-$editor>\\n    <h3>{{$editor.cell.column.title}}</h3>\\n    <q-grid-reference [cell]=\\\"$editor.cell\\\"\\n                      [(value)]=\\\"$editor.value\\\"\\n                      [autofocus]=\\\"false\\\">\\n    </q-grid-reference>\\n</ng-template><ng-template key=\\\"edit-form-text-area.tpl.html\\\"\\n             let-$editor>\\n    <mat-form-field>\\n        <textarea matInput\\n                  #input\\n                  rows=\\\"10\\\"\\n                  [placeholder]=\\\"$editor.cell.column.title\\\"\\n                  [(ngModel)]=\\\"$editor.value\\\">\\n                </textarea>\\n        <mat-hint align=\\\"end\\\">{{input.value.length}} / {{$editor.cell.column.maxLength}}</mat-hint>\\n    </mat-form-field>\\n</ng-template><ng-template key=\\\"edit-form-text.tpl.html\\\"\\n             let-$editor>\\n    <mat-form-field class=\\\"edit-form-text\\\">\\n        <input matInput\\n               #input\\n               maxlength=\\\"{{$editor.cell.column.maxLength}}\\\"\\n               [(ngModel)]=\\\"$editor.value\\\"\\n               [placeholder]=\\\"$editor.cell.column.title\\\" />\\n        <mat-hint align=\\\"end\\\">{{input.value.length}} / {{$editor.cell.column.maxLength}}</mat-hint>\\n    </mat-form-field>\\n</ng-template><ng-template key=\\\"edit-form-time.tpl.html\\\"\\n             let-$editor>\\n    <mat-form-field>\\n        <input matInput\\n               type=\\\"time\\\"\\n               [placeholder]=\\\"$editor.cell.column.title\\\"\\n               [(ngModel)]=\\\"$editor.value\\\" />\\n    </mat-form-field>\\n</ng-template><ng-template key=\\\"edit-form-url.tpl.html\\\"\\n             let-$editor>\\n    <h3>{{$editor.cell.column.title}}</h3>\\n    <mat-form-field *ngIf=\\\"$editor.cell.column.label !== null\\\">\\n        <input matInput\\n               type=\\\"text\\\"\\n               [(ngModel)]=\\\"$editor.label\\\"\\n               placeholder=\\\"Label\\\" />\\n    </mat-form-field>\\n    <mat-form-field>\\n        <input matInput\\n               type=\\\"url\\\"\\n               [(ngModel)]=\\\"$editor.value\\\"\\n               placeholder=\\\"Url\\\" />\\n    </mat-form-field>\\n</ng-template><ng-template key=\\\"filter-cell-bool.tpl.html\\\"\\n             let-$cell\\n             let-$view=\\\"$view\\\">\\n    <mat-checkbox *ngIf=\\\"$cell.column.canFilter\\\"\\n                  aria-label=\\\"Bool cell filter\\\"\\n                  class=\\\"q-grid-checkbox\\\"\\n                  #input\\n                  (change)=\\\"$view.filter.column.execute($cell.column.model, input.checked)\\\">\\n    </mat-checkbox>\\n</ng-template><ng-template key=\\\"filter-cell-currency.tpl.html\\\"\\n             let-$cell\\n             let-$view=\\\"$view\\\">\\n    <mat-form-field *ngIf=\\\"$cell.column.canFilter\\\"\\n                    floatLabel=\\\"never\\\">\\n        <mat-placeholder>\\n            <mat-icon>filter_list</mat-icon>\\n        </mat-placeholder>\\n        <input type=\\\"number\\\"\\n               matInput\\n               #input\\n               (change)=\\\"$view.filter.column.execute($cell.column.model, input.value)\\\" />\\n    </mat-form-field>\\n</ng-template><ng-template key=\\\"filter-cell-date.tpl.html\\\"\\n             let-$cell\\n             let-$view=\\\"$view\\\">\\n    <mat-form-field *ngIf=\\\"$cell.column.canFilter\\\"\\n                    floatLabel=\\\"never\\\">\\n        <mat-placeholder>\\n            <mat-icon>filter_list</mat-icon>\\n        </mat-placeholder>\\n        <input matInput\\n               #input\\n               [matDatepicker]=\\\"picker\\\"\\n               (dateChange)=\\\"$view.filter.column.execute($cell.column.model, input.value)\\\" />\\n        <mat-datepicker-toggle matSuffix\\n                               [for]=\\\"picker\\\">\\n        </mat-datepicker-toggle>\\n        <mat-datepicker #picker>\\n        </mat-datepicker>\\n    </mat-form-field>\\n</ng-template><ng-template key=\\\"filter-cell-number.tpl.html\\\"\\n             let-$cell\\n             let-$view=\\\"$view\\\">\\n    <mat-form-field *ngIf=\\\"$cell.column.canFilter\\\"\\n                    floatLabel=\\\"never\\\">\\n        <mat-placeholder>\\n            <mat-icon>filter_list</mat-icon>\\n        </mat-placeholder>\\n        <input type=\\\"number\\\"\\n               matInput\\n               #input\\n               (change)=\\\"$view.filter.column.execute($cell.column.model, input.value)\\\" />\\n    </mat-form-field>\\n</ng-template><ng-template key=\\\"filter-cell-text.tpl.html\\\"\\n             let-$cell\\n             let-$view=\\\"$view\\\">\\n    <mat-form-field *ngIf=\\\"$cell.column.canFilter\\\"\\n                    floatLabel=\\\"never\\\">\\n        <mat-placeholder>\\n            <mat-icon>filter_list</mat-icon>\\n        </mat-placeholder>\\n        <input type=\\\"search\\\"\\n               matInput\\n               #input\\n               (change)=\\\"$view.filter.column.execute($cell.column.model, input.value)\\\" />\\n    </mat-form-field>\\n</ng-template><ng-template key=\\\"foot-cell-currency.tpl.html\\\"\\n             let-$cell>\\n\\t<span>{{$cell.value | qGridCurrency: $cell.column.code}}</span>\\n</ng-template><ng-template key=\\\"foot-cell-number.tpl.html\\\"\\n             let-$cell>\\n    <span>{{$cell.value | qGridNumber:$cell.column.format}}</span>\\n</ng-template><ng-template key=\\\"foot-cell-text.tpl.html\\\" let-$cell>\\n\\t<span>{{$cell.value}}</span>\\n</ng-template>\\n<ng-template key=\\\"head-cell-group.tpl.html\\\"\\n             let-$cell\\n             let-$view=\\\"$view\\\">\\n    <label (click)=\\\"$view.group.toggleAllStatus.execute()\\\"\\n           tabindex=\\\"-1\\\"\\n           [matTooltip]=\\\"$cell.column.description\\\"\\n           [matTooltipShowDelay]=\\\"800\\\">\\n        {{$cell.column.title}}\\n    </label>\\n</ng-template><ng-template key=\\\"head-cell-select.tpl.html\\\"\\r\\n             let-$view=\\\"$view\\\">\\r\\n    <ng-container>        \\r\\n        <mat-checkbox [indeterminate]=\\\"$view.selection.isIndeterminate()\\\"\\r\\n                      [checked]=\\\"$view.selection.state()\\\"\\r\\n                      [disabled]=\\\"!$view.selection.toggleRow.canExecute()\\\"\\r\\n                      (change)=\\\"$view.selection.toggleRow.execute()\\\"\\r\\n                      tabindex=\\\"-1\\\"\\r\\n                      aria-label=\\\"Select all\\\"\\r\\n                      class=\\\"q-grid-checkbox\\\">\\r\\n        </mat-checkbox>\\r\\n    </ng-container>\\r\\n</ng-template><ng-template key=\\\"head-cell-text.tpl.html\\\"\\n             let-$cell\\n             let-$view=\\\"$view\\\">\\n    <q-grid-column-sort *ngIf=\\\"$cell.column.canSort\\\"\\n                        [column]=\\\"$cell.column\\\"\\n                        class=\\\"q-grid-sort\\\">\\n        <label [matTooltip]=\\\"$cell.column.description\\\"\\n               [matTooltipShowDelay]=\\\"800\\\">\\n            {{$cell.column.title}}\\n        </label>\\n    </q-grid-column-sort>\\n    <label *ngIf=\\\"!$cell.column.canSort\\\"\\n           [matTooltip]=\\\"$cell.column.description\\\"\\n           [matTooltipShowDelay]=\\\"800\\\">\\n        {{$cell.column.title}}\\n    </label>\\n    <q-grid-column-filter-trigger class=\\\"q-grid-column-filter-trigger\\\"\\n                                  *ngIf=\\\"$cell.column.canFilter\\\"\\n                                  [column]=\\\"$cell.column\\\">\\n    </q-grid-column-filter-trigger>\\n</ng-template><ng-template key=\\\"plugin-action-bar.tpl.html\\\"\\r\\n             let-$actionBar>\\r\\n\\t<div class=\\\"layout-row\\\">\\r\\n\\t\\t<div class=\\\"flex-100 layout-row\\\"\\r\\n\\t\\t     layout-align=\\\"start center\\\"\\r\\n\\t\\t     layout-align-xs=\\\"start start\\\"\\r\\n\\t\\t     layout-align-sm=\\\"start start\\\"\\r\\n\\t\\t     layout-xs=\\\"column\\\"\\r\\n\\t\\t     layout-sm=\\\"column\\\">\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"q-grid-actions flex-none layout-row\\\"\\r\\n\\t\\t     layout-align=\\\"end center\\\">\\r\\n\\t\\t\\t<q-grid-action-core *ngFor=\\\"let action of $actionBar.actions\\\"\\r\\n\\t\\t\\t                    [action]=\\\"action\\\">\\r\\n\\t\\t\\t</q-grid-action-core>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</ng-template>\\r\\n<ng-template key=\\\"plugin-action-core.tpl.html\\\"\\n\\t\\t\\t let-$action>\\n\\t<div class=\\\"q-grid-action\\\"\\n\\t\\t [ngClass]=\\\"'q-grid-action-' + $action.id\\\"\\n\\t\\t [ngSwitch]=\\\"!!$action.templateUrl\\\">\\n\\t\\t<ng-container *ngSwitchCase=\\\"true\\\"\\n\\t\\t\\t\\t\\t  [key]=\\\"$action.templateUrl\\\"\\n\\t\\t\\t\\t\\t  [context]=\\\"{$implicit: $action}\\\">\\n\\t\\t</ng-container>\\n\\t\\t<ng-container *ngSwitchDefault>\\n\\t\\t\\t<button *ngIf=\\\"$action.icon\\\"\\n\\t\\t\\t\\t\\tmat-icon-button\\n\\t\\t\\t\\t\\t(click)=\\\"$action.execute()\\\"\\n\\t\\t\\t\\t\\t[disabled]=\\\"!$action.canExecute()\\\"\\n\\t\\t\\t\\t\\t[matTooltip]=\\\"$action.title + ' (' + $action.shortcut + ')'\\\"\\n\\t\\t\\t\\t\\t[matTooltipShowDelay]=\\\"800\\\"\\n\\t\\t\\t\\t\\ttabindex=\\\"-1\\\">\\n\\t\\t\\t\\t<mat-icon>{{$action.icon}}</mat-icon>\\n\\t\\t\\t</button>\\n\\t\\t\\t<button *ngIf=\\\"!$action.icon && $action.title\\\"\\n\\t\\t\\t\\t\\tmat-button\\n\\t\\t\\t\\t\\t(click)=\\\"$action.execute()\\\"\\n\\t\\t\\t\\t\\t[disabled]=\\\"!$action.canExecute()\\\"\\n\\t\\t\\t\\t\\ttabindex=\\\"-1\\\">\\n\\t\\t\\t\\t{{$action.title}}\\n\\t\\t\\t</button>\\n\\t\\t</ng-container>\\n\\t</div>\\n</ng-template><ng-template key=\\\"plugin-autocomplete-editor.tpl.html\\\"\\n             let-$editor>\\n    <mat-form-field>\\n        <input type=\\\"text\\\"\\n               #input\\n               q-grid-focus\\n               matInput\\n               [(ngModel)]=\\\"$editor.value\\\"\\n               (ngModelChange)=\\\"$editor.filter(input.value)\\\"\\n               placeholder=\\\"Pick a {{$editor.title}}\\\"\\n               [matAutocomplete]=\\\"autocomplete\\\">\\n    </mat-form-field>\\n    <mat-autocomplete #autocomplete=\\\"matAutocomplete\\\">\\n        <mat-option *ngFor=\\\"let option of $editor.options\\\"\\n                    [value]=\\\"option\\\">\\n            {{option}}\\n        </mat-option>\\n    </mat-autocomplete>\\n</ng-template><ng-template key=\\\"plugin-backdrop.tpl.html\\\" let-$backdrop>\\n    <div class=\\\"q-grid-backdrop\\\">\\n        <ng-container [ngTemplateOutlet]=\\\"$backdrop.template\\\"></ng-container>\\n    </div>\\n</ng-template><ng-template key=\\\"plugin-bool-editor.tpl.html\\\"\\n             let-$editor>\\n    <mat-checkbox aria-label=\\\"Bool cell edit\\\"\\n                  class=\\\"q-grid-checkbox\\\"\\n                  #checkbox\\n                  [q-grid-focus]=\\\"checkbox\\\"\\n                  [q-grid-focus-disabled]=\\\"!$editor.autofocus\\\"\\n                  [checked]=\\\"$editor.isChecked\\\"\\n                  (change)=\\\"$editor.isChecked = $event.checked\\\">\\n        {{$editor.label}}\\n    </mat-checkbox>\\n</ng-template><ng-template key=\\\"plugin-caption.tpl.html\\\" let-$caption>\\r\\n\\t<div class=\\\"q-grid-caption\\\">\\r\\n\\t\\t<h3 class=\\\"mat-card-title\\\">\\r\\n\\t\\t\\t{{$caption.value}}\\r\\n\\t\\t</h3>\\r\\n\\t</div>\\r\\n</ng-template><ng-template key=\\\"plugin-cell-editor.tpl.html\\\"\\n             let-$editor>\\n    <q-grid-backdrop (close)=\\\"$editor.close($event)\\\">\\n    </q-grid-backdrop>\\n    <div class=\\\"q-grid-editor-content\\\"\\n         [q-grid-stop-propagate]=\\\"['click', 'mousedown', 'mouseup']\\\">\\n        <ng-container [ngTemplateOutlet]=\\\"$editor.template\\\">\\n        </ng-container>\\n    </div>\\n</ng-template><ng-template key=\\\"column-chooser.tpl.html\\\"\\n\\t\\t\\t let-$columnChooser\\n\\t\\t\\t let-$plugin=\\\"plugin\\\">\\n\\t<mat-card class=\\\"mat-elevation-z\\\">\\n\\t\\t<mat-card-header>\\n\\t\\t\\t<mat-card-title>Columns Filter</mat-card-title>\\n\\t\\t</mat-card-header>\\n\\t\\t<mat-card-content>\\n\\t\\t\\t<div class=\\\"flex-none layout-row\\\">\\n\\t\\t\\t\\t<mat-form-field class=\\\"q-grid-column-chooser-filter\\\">\\n\\t\\t\\t\\t\\t<input type=\\\"search\\\"\\n\\t\\t\\t\\t\\t\\t   placeholder=\\\"Find in the list\\\"\\n\\t\\t\\t\\t\\t\\t   matInput\\n\\t\\t\\t\\t\\t\\t   (input)=\\\"$columnChooser.search($columnChooser.searchText)\\\"\\n\\t\\t\\t\\t\\t\\t   [(ngModel)]=\\\"$columnChooser.searchText\\\"\\n\\t\\t\\t\\t\\t\\t   q-grid-focus />\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"flex layout-column\\\">\\n\\t\\t\\t\\t<ul class=\\\"q-grid-column-chooser-toolbar\\\">\\n\\t\\t\\t\\t\\t<li>\\n\\t\\t\\t\\t\\t\\t<mat-checkbox [checked]=\\\"$columnChooser.stateAll()\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  (change)=\\\"$columnChooser.toggleAll.execute()\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [indeterminate]=\\\"$columnChooser.isIndeterminate()\\\">\\n\\t\\t\\t\\t\\t\\t\\tSelect All\\n\\t\\t\\t\\t\\t\\t</mat-checkbox>\\n\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t<li>\\n\\t\\t\\t\\t\\t\\t<mat-checkbox [checked]=\\\"$columnChooser.stateDefault()\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  (change)=\\\"$columnChooser.defaults.execute()\\\">\\n\\t\\t\\t\\t\\t\\t\\tSelect Defaults\\n\\t\\t\\t\\t\\t\\t</mat-checkbox>\\n\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t<div class=\\\"q-grid-column-chooser-list\\\">\\n\\t\\t\\t\\t\\t<ng-container key=\\\"column-chooser-node.tpl.html\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t  [context]=\\\"$plugin.root()\\\">\\n\\t\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</mat-card-content>\\n\\t\\t<mat-card-actions>\\n\\t\\t\\t<button mat-button\\n\\t\\t\\t\\t\\t(click)=\\\"$columnChooser.cancel.execute()\\\">\\n\\t\\t\\t\\tCancel\\n\\t\\t\\t</button>\\n\\t\\t\\t<button mat-button\\n\\t\\t\\t\\t\\tcolor=\\\"primary\\\"\\n\\t\\t\\t\\t\\t(click)=\\\"$columnChooser.submit.execute()\\\">\\n\\t\\t\\t\\tApply\\n\\t\\t\\t</button>\\n\\t\\t</mat-card-actions>\\n\\t</mat-card>\\n</ng-template>\\n\\n<ng-template key=\\\"column-chooser-node.tpl.html\\\"\\n\\t\\t\\t let-$context>\\n\\t<ul>\\n\\t\\t<ng-container *ngFor=\\\"let node of $context.node.children\\\">\\n\\t\\t\\t<li *ngIf=\\\"$context.ctrl.toggle.canExecute(node)\\\"\\n\\t\\t\\t\\t[q-grid-drop]=\\\"$context.ctrl.drop\\\"\\n\\t\\t\\t\\t[q-grid-drop-data]=\\\"node\\\"\\n\\t\\t\\t\\t[q-grid-drag-over]=\\\"$context.ctrl.drop\\\"\\n\\t\\t\\t\\tq-grid-drop-area=\\\"column-chooser\\\"\\n\\t\\t\\t\\tq-grid-drag-direction=\\\"y\\\">\\n\\t\\t\\t\\t<div [q-grid-drag]=\\\"$context.ctrl.drag\\\"\\n\\t\\t\\t\\t\\t [q-grid-drag-data]=\\\"node\\\"\\n\\t\\t\\t\\t\\t q-grid-drop-area=\\\"column-chooser\\\">\\n\\t\\t\\t\\t\\t<mat-icon class=\\\"q-grid-icon\\\">drag_indicator</mat-icon>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<mat-checkbox [checked]=\\\"$context.ctrl.state(node)\\\"\\n\\t\\t\\t\\t\\t\\t\\t  (change)=\\\"$context.ctrl.toggle.execute(node)\\\"\\n\\t\\t\\t\\t\\t\\t\\t  aria-label=\\\"Selection\\\">\\n\\t\\t\\t\\t\\t<span [innerHTML]=\\\"node.value.column.title | qGridHighlight: $context.ctrl.searchText\\\"></span>\\n\\t\\t\\t\\t</mat-checkbox>\\n\\t\\t\\t</li>\\n\\t\\t\\t<ng-container key=\\\"column-chooser-node.tpl.html\\\"\\n\\t\\t\\t\\t\\t\\t  [context]=\\\"{$implicit: {ctrl: $context.ctrl, node: node}}\\\">\\n\\t\\t\\t</ng-container>\\n\\t\\t</ng-container>\\n\\t</ul>\\n</ng-template><ng-template key=\\\"plugin-column-filter-by.tpl.html\\\" let-$by>\\n\\t<ul [q-grid-column-filter-item-list]=\\\"$by.column\\\">\\n\\t\\t<li *ngFor=\\\"let item of $by.by\\\">\\n\\t\\t\\t<div class=\\\"q-grid-filter-by\\\">\\n\\t\\t\\t\\t<div class=\\\"q-grid-filter-by-item\\\">\\n\\t\\t\\t\\t\\t<ng-container [q-grid-column-filter-item]=\\\"item\\\"></ng-container>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"q-grid-filter-by-remove\\\" (click)=\\\"$by.remove(item)\\\">\\n\\t\\t\\t\\t\\t<mat-icon class=\\\"q-grid-icon\\\">clear</mat-icon>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</li>\\n\\t\\t<li *ngIf=\\\"$by.isBlanks\\\">\\n\\t\\t\\t<div class=\\\"q-grid-filter-by\\\">\\n\\t\\t\\t\\t<div class=\\\"q-grid-filter-by-item\\\">\\n\\t\\t\\t\\t\\t(Blanks)\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"q-grid-filter-by-remove\\\" (click)=\\\"$by.removeByBlanks()\\\">\\n\\t\\t\\t\\t\\t<mat-icon class=\\\"q-grid-icon\\\">clear</mat-icon>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</li>\\n\\t</ul>\\n</ng-template>\\n<ng-template key=\\\"plugin-column-filter-date-between.tpl.html\\\"\\n             let-$columnFilter\\n             let-$plugin=\\\"plugin\\\"\\n             let-$vscroll=\\\"vscroll\\\">\\n\\n\\t<mat-form-field class=\\\"q-grid-column-filter-input half\\\"\\n\\t                *q-grid-date=\\\"let isValid='isValid'\\\"\\n\\t                [ngClass]=\\\"{'mat-form-field-invalid': !isValid(inputLeft.value)}\\\">\\n\\t\\t<input q-grid-focus\\n\\t\\t       matInput\\n\\t\\t       #inputLeft\\n\\t\\t       placeholder=\\\"From\\\"\\n\\t\\t       [matDatepicker]=\\\"leftPicker\\\"\\n\\t\\t       [ngModel]=\\\"$columnFilter.value[0] | qGridDate:'yyyy-MM-dd'\\\"\\n\\t\\t       (ngModelChange)=\\\"isValid(inputLeft.value) && ($columnFilter.value[0] = $event)\\\" />\\n\\t\\t\\n\\t\\t<mat-datepicker-toggle matSuffix [for]=\\\"leftPicker\\\"> </mat-datepicker-toggle>\\n\\t\\t<mat-datepicker #leftPicker> </mat-datepicker>\\n\\t</mat-form-field>\\n\\n\\t<mat-form-field class=\\\"q-grid-column-filter-input half\\\"\\n\\t                *q-grid-date=\\\"let isValid='isValid'\\\"\\n\\t                [ngClass]=\\\"{'mat-form-field-invalid': !isValid(inputRight.value)}\\\">\\n\\t\\t<input matInput\\n\\t\\t       #inputRight\\n\\t\\t       placeholder=\\\"To\\\"\\n\\t\\t       [matDatepicker]=\\\"rightPicker\\\"\\n\\t\\t       [ngModel]=\\\"$columnFilter.value[1] | qGridDate:'yyyy-MM-dd'\\\"\\n\\t\\t\\t   (ngModelChange)=\\\"isValid(inputRight.value) && ($columnFilter.value[1] = $event)\\\" />\\n\\t\\t\\t   \\n\\t\\t<mat-datepicker-toggle matSuffix [for]=\\\"rightPicker\\\"> </mat-datepicker-toggle>\\n\\t\\t<mat-datepicker #rightPicker> </mat-datepicker>\\n\\t</mat-form-field>\\n\\n</ng-template><ng-template key=\\\"plugin-column-filter-date.tpl.html\\\"\\n             let-$columnFilter\\n             let-$plugin=\\\"plugin\\\"\\n             let-$vscroll=\\\"vscroll\\\">\\n\\n\\t<mat-form-field class=\\\"q-grid-column-filter-input\\\"\\n\\t                *q-grid-date=\\\"let isValid='isValid'\\\"\\n\\t\\t\\t\\t\\t[ngClass]=\\\"{'mat-form-field-invalid': !isValid(input.value)}\\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t<input q-grid-focus\\n\\t\\t       matInput\\n\\t\\t       #input\\n\\t\\t       [matDatepicker]=\\\"picker\\\"\\n\\t\\t       [placeholder]=\\\"$columnFilter.operator | qGridText : 'fromCamelCase'\\\"\\n\\t\\t       [ngModel]=\\\"$columnFilter.value | qGridDate:'yyyy-MM-dd'\\\"\\n\\t\\t\\t   (ngModelChange)=\\\"isValid(input.value) && ($columnFilter.value = $event)\\\" />\\n\\t\\t\\t   \\n\\t\\t<mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"> </mat-datepicker-toggle>\\n\\t\\t<mat-datepicker #picker> </mat-datepicker>\\n\\t</mat-form-field>\\n</ng-template><ng-template key=\\\"plugin-column-filter-default-between.tpl.html\\\"\\n             let-$columnFilter\\n             let-$plugin=\\\"plugin\\\"\\n             let-$vscroll=\\\"vscroll\\\">\\n\\n\\t<mat-form-field class=\\\"q-grid-column-filter-input half\\\">\\n\\t\\t<input matInput\\n\\t\\t       placeholder=\\\"From\\\"\\n\\t\\t       [(ngModel)]=\\\"$columnFilter.value[0]\\\"\\n\\t\\t       q-grid-focus />\\n\\t</mat-form-field>\\n\\n\\t<mat-form-field class=\\\"q-grid-column-filter-input half\\\">\\n\\t\\t<input matInput\\n\\t\\t       placeholder=\\\"To\\\"\\n\\t\\t       [(ngModel)]=\\\"$columnFilter.value[1]\\\" />\\n\\t</mat-form-field>\\n\\n</ng-template><ng-template key=\\\"plugin-column-filter-default-contains.tpl.html\\\"\\n             let-$columnFilter\\n             let-$plugin=\\\"plugin\\\"\\n             let-$vscroll=\\\"vscroll\\\">\\n\\n\\t<mat-form-field class=\\\"q-grid-column-filter-input\\\">\\n\\t\\t<input matInput\\n\\t\\t       placeholder=\\\"Find in the list\\\"\\n\\t\\t       [(ngModel)]=\\\"$plugin.search\\\"\\n\\t\\t       (input)=\\\"$plugin.reset()\\\"\\n\\t\\t       q-grid-focus />\\n\\t</mat-form-field>\\n\\n\\t<ul class=\\\"q-grid-column-filter-toolbar\\\">\\n\\t\\t<li>\\n\\t\\t\\t<mat-checkbox [checked]=\\\"$columnFilter.stateAll()\\\"\\n\\t\\t\\t              (change)=\\\"$columnFilter.toggleAll.execute($plugin.search)\\\"\\n\\t\\t\\t              [indeterminate]=\\\"$columnFilter.isIndeterminate()\\\">\\n\\t\\t\\t\\tSelect All\\n\\t\\t\\t</mat-checkbox>\\n\\t\\t</li>\\n\\t</ul>\\n\\t<div [ngSwitch]=\\\"$columnFilter.isEmpty()\\\"\\n\\t     class=\\\"q-grid-column-filter-by\\\">\\n\\t\\t<ng-container *ngSwitchCase=\\\"false\\\">\\n\\t\\t\\t<div class=\\\"q-grid-column-filter-by-blank\\\">\\n\\t\\t\\t\\tNO SELECTED FILTERS\\n\\t\\t\\t</div>\\n\\t\\t</ng-container>\\n\\t\\t<ng-container *ngSwitchCase=\\\"true\\\">\\n\\t\\t\\t<q-grid-column-filter-by [by]=\\\"$columnFilter.by\\\"\\n\\t\\t\\t                         [(byBlanks)]=\\\"$columnFilter.byBlanks\\\"\\n\\t\\t\\t                         [column]=\\\"$plugin.column\\\">\\n\\t\\t\\t</q-grid-column-filter-by>\\n\\t\\t</ng-container>\\n\\t</div>\\n\\t<div class=\\\"q-grid-column-filter-list\\\"\\n\\t     [q-grid-column-filter-item-list]=\\\"$plugin.column\\\"\\n\\t     [q-grid-column-filter-search]=\\\"$plugin.search\\\"\\n\\t     q-grid-vscroll>\\n\\t\\t<ul [q-grid-vscroll-port-y]=\\\"$vscroll\\\">\\n\\t\\t\\t<li *ngFor=\\\"let item of $columnFilter.items | qGridVscroll: $vscroll; let $index = index; trackBy: $vscroll.id\\\"\\n\\t\\t\\t    [q-grid-vscroll-row]=\\\"$index\\\">\\n\\t\\t\\t\\t<mat-checkbox [checked]=\\\"$columnFilter.state(item)\\\"\\n\\t\\t\\t\\t              *ngIf=\\\"$columnFilter.toggle.canExecute(item)\\\"\\n\\t\\t\\t\\t              aria-label=\\\"Select filter value\\\"\\n\\t\\t\\t\\t              (change)=\\\"$columnFilter.toggle.execute(item)\\\">\\n\\t\\t\\t\\t\\t<ng-container [q-grid-column-filter-item]=\\\"item\\\"></ng-container>\\n\\t\\t\\t\\t</mat-checkbox>\\n\\t\\t\\t</li>\\n\\t\\t\\t<li>\\n\\t\\t\\t\\t<mat-checkbox *ngIf=\\\"$columnFilter.hasBlanks\\\"\\n\\t\\t\\t\\t              [(ngModel)]=\\\"$columnFilter.byBlanks\\\"\\n\\t\\t\\t\\t              aria-label=\\\"Select blanks\\\">\\n\\t\\t\\t\\t\\t<span [innerHTML]=\\\"'(Blanks)' | qGridHighlight: $plugin.search\\\"></span>\\n\\t\\t\\t\\t</mat-checkbox>\\n\\t\\t\\t</li>\\n\\t\\t</ul>\\n\\t</div>\\n\\n</ng-template><ng-template key=\\\"plugin-column-filter-default-disabled.tpl.html\\\"\\n             let-$columnFilter\\n             let-$plugin=\\\"plugin\\\"\\n             let-$vscroll=\\\"vscroll\\\">\\n\\n\\t<mat-form-field class=\\\"q-grid-column-filter-input\\\">\\n\\t\\t<input matInput\\n\\t\\t       [placeholder]=\\\"$columnFilter.operator | qGridText : 'fromCamelCase'\\\"\\n\\t\\t       disabled />\\n\\t</mat-form-field>\\n</ng-template><ng-template key=\\\"plugin-column-filter-default.tpl.html\\\"\\n             let-$columnFilter\\n             let-$plugin=\\\"plugin\\\"\\n             let-$vscroll=\\\"vscroll\\\">\\n\\n\\t<mat-form-field class=\\\"q-grid-column-filter-input\\\">\\n\\t\\t<input matInput\\n\\t\\t       [placeholder]=\\\"$columnFilter.operator | qGridText : 'fromCamelCase'\\\"\\n\\t\\t       [(ngModel)]=\\\"$columnFilter.value\\\"\\n\\t\\t       q-grid-focus />\\n\\t</mat-form-field>\\n\\n</ng-template><ng-template key=\\\"plugin-column-filter-trigger.tpl.html\\\" let-$columnFilterTrigger>\\r\\n\\t<button mat-icon-button\\r\\n\\t\\t\\ttabindex=\\\"-1\\\"\\r\\n\\t\\t\\t#trigger=\\\"matMenuTrigger\\\"\\r\\n\\t\\t\\t[matMenuTriggerFor]=\\\"menu\\\"\\r\\n\\t\\t\\taria-label=\\\"Column filter\\\">\\r\\n\\t\\t<mat-icon class=\\\"q-grid-icon\\\">filter_list</mat-icon>\\r\\n\\t</button>\\r\\n\\t<mat-menu #menu=\\\"matMenu\\\" class=\\\"q-grid-column-filter q-grid-menu\\\">\\r\\n\\t\\t<q-grid-column-filter q-grid-menu\\r\\n\\t\\t\\t\\t\\t\\t\\t  q-grid-theme-overlay\\r\\n\\t\\t\\t\\t\\t\\t\\t  *ngIf=\\\"trigger.menuOpen\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t  [column]=\\\"$columnFilterTrigger.column\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t  (cancel)=\\\"trigger.closeMenu()\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t  (submit)=\\\"trigger.closeMenu()\\\">\\r\\n\\t\\t</q-grid-column-filter>\\r\\n\\t</mat-menu>\\r\\n</ng-template>\\r\\n<ng-template key=\\\"plugin-column-filter.tpl.html\\\"\\n             let-$columnFilter\\n             let-$plugin=\\\"plugin\\\"\\n             let-$vscroll=\\\"vscroll\\\">\\n\\t<mat-card class=\\\"mat-elevation-z\\\">\\n\\t\\t<mat-card-header>\\n\\t\\t\\t<mat-card-title>\\n\\t\\t\\t\\t{{$columnFilter.title}} Filter\\n\\t\\t\\t</mat-card-title>\\n\\t\\t</mat-card-header>\\n\\t\\t<mat-card-content>\\n\\t\\t\\t<div class='q-grid-column-filter-{{$columnFilter.operator}}'\\n\\t\\t\\t     [ngClass]=\\\"{ 'q-grid-column-filter-with-operators' : $plugin.hasOperators }\\\">\\n\\n\\t\\t\\t\\t<!-- Fitler operator select -->\\n\\t\\t\\t\\t<mat-select class=\\\"q-grid-column-filter-operator-select\\\"\\n\\t\\t\\t\\t            *ngIf=\\\"$plugin.hasOperators\\\"\\n\\t\\t\\t\\t            [(value)]=\\\"$columnFilter.operator\\\"\\n\\t\\t\\t\\t            (selectionChange)=\\\"$plugin.reset(); $columnFilter.changeOperator.execute($columnFilter.operator)\\\">\\n\\t\\t\\t\\t\\t<mat-select-trigger>\\n\\t\\t\\t\\t\\t\\t<mat-icon class=\\\"q-grid-icon\\\">more_vert</mat-icon>\\n\\t\\t\\t\\t\\t</mat-select-trigger>\\n\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let op of $plugin.operators\\\"\\n\\t\\t\\t\\t\\t            [value]=\\\"op\\\">\\n\\t\\t\\t\\t\\t\\t{{ op | qGridText : 'fromCamelCase' }}\\n\\t\\t\\t\\t\\t</mat-option>\\n\\t\\t\\t\\t</mat-select>\\n\\n\\t\\t\\t\\t<!-- Form inputs in accordance with selected filter operator -->\\n\\t\\t\\t\\t<ng-container [key]=\\\"$plugin.operatorTemplateKey($columnFilter.operator)\\\"\\n\\t\\t\\t\\t              [context]=\\\"{ $implicit: $columnFilter, plugin: $plugin, vscroll: $vscroll }\\\">\\n\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t</div>\\n\\t\\t</mat-card-content>\\n\\t\\t<mat-card-actions>\\n\\t\\t\\t<button mat-button\\n\\t\\t\\t        (click)=\\\"$columnFilter.cancel.execute()\\\">\\n\\t\\t\\t\\tCancel\\n\\t\\t\\t</button>\\n\\t\\t\\t<button mat-button\\n\\t\\t\\t        (click)=\\\"$plugin.clear()\\\">\\n\\t\\t\\t\\tClear\\n\\t\\t\\t</button>\\n\\t\\t\\t<button mat-button\\n\\t\\t\\t        color=\\\"primary\\\"\\n\\t\\t\\t        (click)=\\\"$columnFilter.submit.execute()\\\">\\n\\t\\t\\t\\tApply\\n\\t\\t\\t</button>\\n\\t\\t</mat-card-actions>\\n\\t</mat-card>\\n</ng-template><ng-template key=\\\"plugin-column-sort.tpl.html\\\" let-$columnSort>\\n    <mat-icon class=\\\"q-grid-icon q-grid-asc\\\">arrow_upward</mat-icon>\\n    <mat-icon class=\\\"q-grid-icon q-grid-desc\\\">arrow_downward</mat-icon>\\n    <ng-container [ngTemplateOutlet]=\\\"$columnSort.template\\\"></ng-container>\\n</ng-template><ng-template key=\\\"plugin-eb-autocomplete.tpl.html\\\"\\r\\n\\t\\t\\t\\t let-$expr>\\r\\n\\t<mat-form-field floatLabel=\\\"never\\\"\\r\\n\\t\\t\\t\\t\\t\\t q-grid-autosize=\\\"input\\\"\\r\\n\\t\\t\\t\\t\\t\\t [q-grid-autisize-value]=\\\"$expr.value\\\"\\r\\n\\t\\t\\t\\t\\t\\t [q-grid-eb-class]=\\\"$expr.classes\\\"\\r\\n\\t\\t\\t\\t\\t\\t [q-grid-eb-class-model]=\\\"$expr\\\"\\r\\n\\t\\t\\t\\t\\t\\t matTooltip=\\\"{{$expr.state && $expr.state.join(', ')}}\\\"\\r\\n\\t\\t\\t\\t\\t\\t matTooltipPosition=\\\"after\\\"\\r\\n\\t\\t\\t\\t\\t\\t matTooltipShowDelay=\\\"500\\\"\\r\\n\\t\\t\\t\\t\\t\\t matTooltipClass=\\\"q-grid-query-builder-error-tooltip\\\">\\r\\n\\t\\t<input matInput\\r\\n\\t\\t\\t\\t #input=\\\"matAutocompleteTrigger\\\"\\r\\n\\t\\t\\t\\t [(ngModel)]=\\\"$expr.value\\\"\\r\\n\\t\\t\\t\\t (click)=\\\"$expr.refresh && $expr.refresh() && input.openPanel()\\\"\\r\\n\\t\\t\\t\\t (input)=\\\"$expr.change && $expr.change();$expr.refresh && $expr.refresh()\\\"\\r\\n\\t\\t\\t\\t (optionSelected)=\\\"$expr.change && $expr.change()\\\"\\r\\n\\t\\t\\t\\t [placeholder]=\\\"$expr.placeholderText\\\"\\r\\n\\t\\t\\t\\t [matAutocomplete]=\\\"autocomplete\\\">\\r\\n\\r\\n\\t\\t<mat-autocomplete #autocomplete=\\\"matAutocomplete\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t(q-grid-backdrop)=\\\"input.closePanel()\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t[q-grid-backdrop-active]=\\\"autocomplete.isOpen\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tq-grid-backdrop-selector=\\\".mat-autocomplete-panel\\\">\\r\\n\\t\\t\\t<mat-option *ngFor=\\\"let option of $expr.options | async\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t[value]=\\\"option\\\">\\r\\n\\t\\t\\t\\t{{option}}\\r\\n\\t\\t\\t</mat-option>\\r\\n\\t\\t</mat-autocomplete>\\r\\n\\t</mat-form-field>\\r\\n</ng-template>\\r\\n<ng-template key=\\\"plugin-eb-button.tpl.html\\\"\\r\\n             let-$expr>\\r\\n\\t<button mat-button\\r\\n\\t        class=\\\"q-grid-query-builder-button\\\"\\r\\n\\t        (click)=\\\"$expr.click && $expr.click($event)\\\"\\r\\n\\t        [ngClass]=\\\"$expr.classes\\\">\\r\\n\\t\\t{{$expr.text}}\\r\\n\\t</button>\\r\\n</ng-template><ng-template key=\\\"plugin-eb-icon-button.tpl.html\\\"\\r\\n             let-$expr>\\r\\n\\t<button class=\\\"q-grid-query-builder-icon-button\\\"\\r\\n\\t        (click)=\\\"$expr.click && $expr.click($event)\\\"\\r\\n\\t        [ngClass]=\\\"$expr.classes\\\"\\r\\n\\t        mat-icon-button>\\r\\n\\t\\t<mat-icon class=\\\"q-grid-icon\\\">\\r\\n\\t\\t\\t{{ $expr.icon }}\\r\\n\\t\\t</mat-icon>\\r\\n\\t</button>\\r\\n</ng-template><ng-template key=\\\"plugin-eb-input.tpl.html\\\"\\r\\n             let-$expr>\\r\\n\\t<mat-form-field floatLabel=\\\"never\\\"\\r\\n\\t                q-grid-autosize=\\\"input\\\"\\r\\n\\t\\t\\t\\t\\t\\t [q-grid-autisize-value]=\\\"$expr.value\\\"\\r\\n\\t                [q-grid-eb-class]=\\\"$expr.classes\\\"\\r\\n\\t                [q-grid-eb-class-model]=\\\"$expr\\\"\\r\\n\\t                matTooltip=\\\"{{$expr.state && $expr.state.join(', ')}}\\\"\\r\\n\\t                matTooltipPosition=\\\"after\\\"\\r\\n\\t                matTooltipShowDelay=\\\"500\\\"\\r\\n\\t                matTooltipClass=\\\"q-grid-query-builder-error-tooltip\\\">\\r\\n\\t\\t<input matInput\\r\\n\\t\\t       [(ngModel)]=\\\"$expr.value\\\"\\r\\n\\t\\t       (input)=\\\"$expr.change && $expr.change();$expr.refresh && $expr.refresh()\\\"\\r\\n\\t\\t       [placeholder]=\\\"$expr.placeholderText\\\" />\\r\\n\\t</mat-form-field>\\r\\n</ng-template><ng-template key=\\\"plugin-eb-label.tpl.html\\\"\\r\\n             let-$expr>\\r\\n\\t<label class=\\\"q-grid-query-builder-label\\\">\\r\\n\\t\\t{{$expr.text}}\\r\\n\\t</label>\\r\\n</ng-template><ng-template key=\\\"plugin-eb-multiselect.tpl.html\\\"\\r\\n             let-$expr>\\r\\n    <mat-chip-list #chipList\\r\\n                   class=\\\"q-grid-query-builder-multiselect\\\"\\r\\n                   [ngClass]=\\\"$expr.classes\\\">\\r\\n        <mat-chip *ngFor=\\\"let value of $expr.values; let $index = index;\\\"\\r\\n                  class=\\\"mat-basic-chip\\\"\\r\\n                  selectable=\\\"false\\\"\\r\\n                  removable=\\\"true\\\"                  \\r\\n                  (removed)=\\\"$expr.values.splice($index, 1)\\\">\\r\\n            {{value}}\\r\\n            <mat-icon class=\\\"q-grid-icon\\\"\\r\\n                      matChipRemove>\\r\\n                close\\r\\n            </mat-icon>\\r\\n        </mat-chip>\\r\\n    </mat-chip-list>\\r\\n    <mat-form-field [floatLabel]=\\\"'never'\\\">\\r\\n        <input matInput\\r\\n               #chipInput\\r\\n               [placeholder]=\\\"$expr.placeholderText\\\"\\r\\n               [matChipInputFor]=\\\"chipList\\\"\\r\\n               matChipInputAddOnBlur=\\\"true\\\"\\r\\n               (matChipInputTokenEnd)=\\\"$expr.add($event.value);$event.input.value = '';\\\" />\\r\\n    </mat-form-field>\\r\\n</ng-template><ng-template key=\\\"plugin-eb-select.tpl.html\\\"\\r\\n             let-$expr>\\r\\n    <mat-select [(value)]=\\\"$expr.value\\\"\\r\\n                (selectionChange)=\\\"$expr.change && $expr.change($event)\\\"\\r\\n                (openedChange)=\\\"$expr.open && $expr.open($event)\\\"\\r\\n                [q-grid-eb-class]=\\\"$expr.classes\\\"\\r\\n                [q-grid-eb-class-model]=\\\"$expr\\\">\\r\\n        <mat-option *ngFor=\\\"let option of ($expr.options || $expr.getOptions())\\\"\\r\\n                    [value]=\\\"option\\\"\\r\\n                    [disabled]=\\\"$expr.disabled && $expr.disabled(option)\\\">\\r\\n            <mat-icon *ngIf=\\\"$expr.icon\\\">{{$expr.icon(option)}}</mat-icon>\\r\\n            {{($expr.getLabel && $expr.getLabel(option)) || option}}\\r\\n        </mat-option>\\r\\n    </mat-select>\\r\\n</ng-template><ng-template key=\\\"plugin-edit-form-trigger.tpl.html\\\"\\n\\t\\t\\t let-$trigger>\\n\\t<button mat-icon-button\\n\\t\\t\\t#trigger=\\\"matMenuTrigger\\\"\\n\\t\\t\\t[matMenuTriggerFor]=\\\"menu\\\"\\n\\t\\t\\taria-label=\\\"Edit form\\\">\\n\\t\\t<mat-icon class=\\\"q-grid-icon\\\">edit</mat-icon>\\n\\t</button>\\n\\t<mat-menu #menu=\\\"matMenu\\\"\\n\\t\\t\\t  class=\\\"q-grid-edit-form q-grid-menu\\\">\\n\\t\\t<q-grid-edit-form q-grid-menu\\n\\t\\t\\t\\t\\t\\t  *ngIf=\\\"trigger.menuOpen\\\"\\n\\t\\t\\t\\t\\t\\t  [caption]=\\\"$trigger.caption\\\"\\n\\t\\t\\t\\t\\t\\t  [cell]=\\\"$trigger.cell\\\"\\n\\t\\t\\t\\t\\t\\t  (cancel)=\\\"trigger.closeMenu()\\\"\\n\\t\\t\\t\\t\\t\\t  (submit)=\\\"trigger.closeMenu()\\\">\\n\\t\\t</q-grid-edit-form>\\n\\t</mat-menu>\\n</ng-template><ng-template key=\\\"plugin-edit-form.tpl.html\\\"\\n             let-$editForm>\\n\\t<mat-card class=\\\"mat-elevation-z\\\" (keydown)=\\\"$event.stopPropagation()\\\">\\n\\t\\t<mat-card-header>\\n\\t\\t\\t<mat-card-title>{{$editForm.caption}}</mat-card-title>\\n\\t\\t</mat-card-header>\\n\\t\\t<mat-card-content class=\\\"q-grid-edit-form-body\\\">\\n\\t\\t\\t<q-grid-edit-form-control *ngFor=\\\"let editor of $editForm.editors\\\"\\n\\t\\t\\t                          class=\\\"q-grid-edit-form-control\\\"\\n\\t\\t\\t                          [ngClass]=\\\"'q-grid-edit-form-control-' + (editor.cell.column.editor || editor.cell.column.type)\\\"\\n\\t\\t\\t                          [editor]=\\\"editor\\\">\\n\\t\\t\\t</q-grid-edit-form-control>\\n\\t\\t</mat-card-content>\\n\\t\\t<mat-card-actions>\\n\\t\\t\\t<button mat-button\\n\\t\\t\\t        q-grid-focus\\n\\t\\t\\t        (click)=\\\"$editForm.cancel.execute($event)\\\">\\n\\t\\t\\t\\tCancel\\n\\t\\t\\t</button>\\n\\t\\t\\t<button mat-button\\n\\t\\t\\t        color=\\\"primary\\\"\\n\\t\\t\\t        (click)=\\\"$editForm.submit.execute($event)\\\">\\n\\t\\t\\t\\tSave\\n\\t\\t\\t</button>\\n\\t\\t</mat-card-actions>\\n\\t</mat-card>\\n</ng-template><ng-template key=\\\"plugin-export.tpl.html\\\"\\r\\n\\t\\t\\t let-$export>\\r\\n\\t<div class=\\\"q-grid-export\\\">\\r\\n\\t\\t<button mat-button\\r\\n\\t\\t\\t\\t*ngIf=\\\"$export[$export.type] && $export[$export.type].canExecute()\\\"\\r\\n\\t\\t\\t\\t(click)=\\\"$export[$export.type].execute()\\\">\\r\\n\\t\\t\\t<mat-icon class=\\\"q-grid-icon\\\">file_download</mat-icon>\\r\\n\\t\\t\\tExport to {{$export.type}}\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n</ng-template><ng-template key=\\\"plugin-pager-target.tpl.html\\\"\\n             let-$target>\\n\\n\\t<mat-menu #menu=\\\"matMenu\\\"\\n\\t          class=\\\"q-grid-mat-menu\\\">\\n\\t\\t<mat-card *ngIf=\\\"trigger.menuOpen\\\">\\n\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t<input id=\\\"q-grid-menu-input\\\"\\n\\t\\t\\t\\t       matInput\\n\\t\\t\\t\\t       type=\\\"number\\\"\\n\\t\\t\\t\\t       #input\\n\\t\\t\\t\\t       (click)=\\\"$event.stopPropagation()\\\"\\n\\t\\t\\t\\t       [(ngModel)]=\\\"$target.value\\\"\\n\\t\\t\\t\\t       [max]=\\\"$target.total\\\"\\n\\t\\t\\t\\t       [min]=\\\"1\\\"\\n\\t\\t\\t\\t       q-grid-focus\\n\\t\\t\\t\\t       (keydown)=\\\"$target.keyDown($event)\\\"\\n\\t\\t\\t\\t       (keyup.enter)=\\\"trigger.closeMenu()\\\"\\n\\t\\t\\t\\t       placeholder=\\\"Go to page:\\\" />\\n\\t\\t\\t</mat-form-field>\\n\\t\\t</mat-card>\\n\\t</mat-menu>\\n\\n\\t<button #trigger=\\\"matMenuTrigger\\\"\\n\\t        [matMenuTriggerFor]=\\\"menu\\\"\\n\\t        tabindex=\\\"-1\\\"\\n\\t        mat-button\\n\\t        (click)=\\\"$target.value = $target.current\\\"\\n\\t        class=\\\"q-grid-pager-target-trigger mat-icon-button\\\">\\n\\t\\t<mat-icon class=\\\"q-grid-icon-class\\\">location_searching</mat-icon>\\n\\t</button>\\n\\n</ng-template><ng-template key=\\\"plugin-pager.tpl.html\\\"\\n\\t\\t\\t let-$pager>\\n\\t<div class=\\\"q-grid-pager\\\"\\n\\t\\t [ngSwitch]=\\\"$pager.scroll.mode\\\">\\n\\t\\t<div *ngSwitchCase=\\\"'virtual'\\\">\\n\\t\\t\\t<label class=\\\"q-grid-pager-page\\\"\\n\\t\\t\\t\\t   [ngSwitch]=\\\"$pager.mode\\\">\\n\\t\\t\\t\\t<span *ngSwitchCase=\\\"'row'\\\">{{$pager.from}}-{{$pager.to}} of {{$pager.total}}</span>\\n\\t\\t\\t\\t<span *ngSwitchDefault>{{$pager.current + 1}} of {{$pager.totalPages}}</span>\\n\\t\\t\\t</label>\\n\\t\\t</div>\\n\\t\\t<div *ngSwitchDefault>\\n\\t\\t\\t<label class=\\\"q-grid-pager-page-size hide-xs\\\">Rows per page:</label>\\n\\t\\t\\t<mat-select tabindex=\\\"-1\\\"\\n\\t\\t\\t\\t\\t\\taria-label=\\\"Page Size List\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"q-grid-pager-page-size hide-xs\\\"\\n\\t\\t\\t\\t\\t\\t[panelClass]=$pager.theme\\n\\t\\t\\t\\t\\t\\t[(value)]=\\\"$pager.size\\\">\\n\\t\\t\\t\\t<mat-option *ngFor=\\\"let size of $pager.sizeList\\\"\\n\\t\\t\\t\\t\\t\\t\\t[value]=\\\"size\\\">{{size}}</mat-option>\\n\\t\\t\\t</mat-select>\\n\\t\\t\\t<label class=\\\"q-grid-pager-page hide-xs\\\"\\n\\t\\t\\t\\t   ng-switch=\\\"::$pager.mode\\\">\\n\\t\\t\\t\\t<span *ngSwitchCase=\\\"'row'\\\">{{$pager.from}}-{{$pager.to}} of {{$pager.total}}</span>\\n\\t\\t\\t\\t<span *ngSwitchDefault>{{$pager.current + 1}} of {{$pager.totalPages}}</span>\\n\\t\\t\\t</label>\\n\\t\\t\\t<button tabindex=\\\"-1\\\"\\n\\t\\t\\t\\t\\tmat-button\\n\\t\\t\\t\\t\\tclass=\\\"mat-icon-button q-grid-prev-page\\\"\\n\\t\\t\\t\\t\\t[disabled]=\\\"!$pager.prev.canExecute()\\\"\\n\\t\\t\\t\\t\\t(click)=\\\"$pager.prev.execute();\\\">\\n\\t\\t\\t\\t<mat-icon class=\\\"q-grid-icon\\\">keyboard_arrow_left</mat-icon>\\n\\t\\t\\t</button>\\n\\t\\t\\t<q-grid-pager-target></q-grid-pager-target>\\n\\t\\t\\t<button tabindex=\\\"-1\\\"\\n\\t\\t\\t\\t\\tmat-button\\n\\t\\t\\t\\t\\tclass=\\\"mat-icon-button q-grid-next-page\\\"\\n\\t\\t\\t\\t\\t[disabled]=\\\"!$pager.next.canExecute()\\\"\\n\\t\\t\\t\\t\\t(click)=\\\"$pager.next.execute();\\\">\\n\\t\\t\\t\\t<mat-icon class=\\\"q-grid-icon\\\">keyboard_arrow_right</mat-icon>\\n\\t\\t\\t</button>\\n\\t\\t</div>\\n\\t</div>\\n</ng-template><ng-template key=\\\"plugin-persistence-panel.tpl.html\\\"\\n             let-$persistence>\\n\\t<mat-card class=\\\"mat-elevation-z\\\">\\n\\t\\t<mat-card-header>\\n\\t\\t\\t<mat-card-title>Save/Load</mat-card-title>\\n\\t\\t</mat-card-header>\\n\\t\\t<mat-card-content>\\n\\t\\t\\t<div class=\\\"flex-none layout-row\\\">\\n\\t\\t\\t\\t<div class=\\\"flex-100 q-grid-persistence-title\\\">\\n\\t\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t\\t<input matInput\\n\\t\\t\\t\\t\\t\\t       type=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\t       q-grid-focus\\n\\t\\t\\t\\t\\t\\t       placeholder=\\\"Save As...\\\"\\n\\t\\t\\t\\t\\t\\t       [(ngModel)]=\\\"$persistence.title\\\" />\\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"flex-none q-grid-persistence-save\\\">\\n\\t\\t\\t\\t\\t<button mat-button\\n\\t\\t\\t\\t\\t        color=\\\"primary\\\"\\n\\t\\t\\t\\t\\t        [disabled]=\\\"!$persistence.create.canExecute()\\\"\\n\\t\\t\\t\\t\\t        (click)=\\\"$persistence.create.execute()\\\">\\n\\t\\t\\t\\t\\t\\tSave\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<mat-list class=\\\"q-grid-persistence-list\\\">\\n\\t\\t\\t\\t<mat-list-item [ngClass]=\\\"{'q-grid-persistence-selected': $persistence.isActive($persistence.blank)}\\\"\\n\\t\\t\\t\\t               class=\\\"q-grid-persistence-list-item\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"q-grid-persistence-default-icon\\\"></div>\\n\\t\\t\\t\\t\\t<button mat-button\\n\\t\\t\\t\\t\\t\\t\\t  matTooltip=\\\"No settings\\\"\\n\\t\\t\\t\\t\\t\\t\\t  [disabled]=\\\"!$persistence.reset.canExecute()\\\"\\n\\t\\t\\t\\t\\t        (click)=\\\"$persistence.reset.execute()\\\">\\n\\t\\t\\t\\t\\t\\t<mat-list dense>\\n\\t\\t\\t\\t\\t\\t\\t<mat-list-item>\\n\\t\\t\\t\\t\\t\\t\\t\\t<h3 matLine>{{$persistence.blank.title}}</h3>\\n\\t\\t\\t\\t\\t\\t\\t\\t<span matLine></span>\\n\\t\\t\\t\\t\\t\\t\\t</mat-list-item>\\n\\t\\t\\t\\t\\t\\t</mat-list>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</mat-list-item>\\n\\t\\t\\t\\t<ng-container *ngFor=\\\"let group of $persistence.groups\\\">\\n\\t\\t\\t\\t\\t<h3 mat-subheader>{{group.key}}</h3>\\n\\t\\t\\t\\t\\t<mat-list-item *ngFor=\\\"let item of group.items\\\"\\n\\t\\t\\t\\t\\t               [ngClass]=\\\"{'q-grid-persistence-selected': $persistence.isActive(item)}\\\"\\n\\t\\t\\t\\t\\t               class=\\\"q-grid-persistence-list-item\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"q-grid-persistence-default-icon\\\">\\n\\t\\t\\t\\t\\t\\t\\t<mat-icon class=\\\"q-grid-icon\\\"\\n\\t\\t\\t\\t\\t\\t\\t          *ngIf=\\\"item.isDefault\\\">star</mat-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<button mat-button\\n\\t\\t\\t\\t\\t\\t        matTooltip=\\\"{{$persistence.stringify(item)}}\\\"\\n\\t\\t\\t\\t\\t\\t        *ngIf=\\\"$persistence.state.editItem !== item\\\"\\n\\t\\t\\t\\t\\t\\t        (click)=\\\"$persistence.load.execute(item)\\\">\\n\\t\\t\\t\\t\\t\\t\\t<mat-list dense>\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-list-item>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<h3 matLine>{{item.title}}</h3>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span matLine\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t      class=\\\"q-grid-selected-item-modified\\\">{{item.modified | qGridDate: 'yyyy/MM/dd h:mm a'}}</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t</mat-list-item>\\n\\t\\t\\t\\t\\t\\t\\t</mat-list>\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t<mat-form-field *ngIf=\\\"$persistence.state.editItem === item\\\"\\n\\t\\t\\t\\t\\t\\t                class=\\\"q-grid-persistence-item-edit\\\">\\n\\t\\t\\t\\t\\t\\t\\t<input matInput\\n\\t\\t\\t\\t\\t\\t\\t       #input\\n\\t\\t\\t\\t\\t\\t\\t       (blur)=\\\"$persistence.edit.commit.canExecute(item) && $persistence.edit.commit.execute(item)\\\"\\n\\t\\t\\t\\t\\t\\t\\t       [(ngModel)]=\\\"item.title\\\"\\n\\t\\t\\t\\t\\t\\t\\t       q-grid-focus/>\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"q-grid-more\\\">\\n\\t\\t\\t\\t\\t\\t\\t<button mat-button\\n\\t\\t\\t\\t\\t\\t\\t        [matMenuTriggerFor]=\\\"menu\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon>more_vert</mat-icon>\\n\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t\\t<mat-menu #menu=\\\"matMenu\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<button mat-menu-item\\n\\t\\t\\t\\t\\t\\t\\t\\t        (click)=\\\"$persistence.setDefault.execute(item)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t        [disabled]=\\\"!$persistence.setDefault.canExecute(item)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon class=\\\"q-grid-icon\\\">star</mat-icon>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tDefault\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t<button mat-menu-item\\n\\t\\t\\t\\t\\t\\t\\t\\t        (click)=\\\"$persistence.edit.enter.execute(item)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t        [disabled]=\\\"!$persistence.edit.enter.canExecute(item)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon class=\\\"q-grid-icon\\\">mode_edit</mat-icon>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tEdit\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t<button mat-menu-item\\n\\t\\t\\t\\t\\t\\t\\t\\t        (click)=\\\"$persistence.remove.execute(item)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t        [disabled]=\\\"!$persistence.remove.canExecute(item)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon class=\\\"q-grid-icon\\\">close</mat-icon>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tRemove\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t\\t</mat-menu>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</mat-list-item>\\n\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t</mat-list>\\n\\t\\t</mat-card-content>\\n\\t</mat-card>\\n</ng-template>\\n<ng-template key=\\\"plugin-persistence.tpl.html\\\">\\r\\n\\t<button mat-icon-button\\r\\n\\t        tabindex=\\\"-1\\\"\\r\\n\\t        #trigger=\\\"matMenuTrigger\\\"\\r\\n\\t        [matMenuTriggerFor]=\\\"menu\\\"\\r\\n\\t        aria-label=\\\"Persistence\\\">\\r\\n\\t\\t<mat-icon class=\\\"q-grid-icon\\\">history</mat-icon>\\r\\n\\t</button>\\r\\n\\t<mat-menu #menu=\\\"matMenu\\\"\\r\\n\\t          class=\\\"q-grid-menu q-grid-persistence-panel\\\">\\r\\n\\t\\t<q-grid-persistence-panel q-grid-menu\\r\\n\\t\\t                          *ngIf=\\\"trigger.menuOpen\\\">\\r\\n\\t\\t</q-grid-persistence-panel>\\r\\n\\t</mat-menu>\\r\\n</ng-template>\\r\\n<ng-template key=\\\"plugin-progress.tpl.html\\\"\\r\\n             let-$progress>\\r\\n\\t<mat-progress-bar class=\\\"q-grid-progress-linear\\\"\\r\\n\\t                  *ngIf=\\\"$progress.isBusy\\\"\\r\\n\\t                  mode=\\\"indeterminate\\\">\\r\\n\\t</mat-progress-bar>\\r\\n</ng-template>\\r\\n<ng-template key=\\\"plugin-query-builder-panel.tpl.html\\\"\\r\\n             let-$builder>\\r\\n\\t<mat-card class=\\\"mat-elevation-z\\\">\\r\\n\\t\\t<mat-card-header>\\r\\n\\t\\t\\t<mat-card-title>\\r\\n\\t\\t\\t\\tQuery Builder\\r\\n\\t\\t\\t</mat-card-title>\\r\\n\\t\\t</mat-card-header>\\r\\n\\t\\t<mat-card-content>\\r\\n\\t\\t\\t<div class=\\\"q-grid-query-builder-toolbar\\\">\\r\\n\\t\\t\\t\\t<mat-toolbar>\\r\\n\\t\\t\\t\\t\\t<button mat-button\\r\\n\\t\\t\\t\\t\\t        (click)=\\\"$builder.addGroup.execute()\\\"\\r\\n\\t\\t\\t\\t\\t        [disabled]=\\\"!$builder.addGroup.canExecute()\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-icon>playlist_add</mat-icon>Add Group\\r\\n\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t<button mat-button\\r\\n\\t\\t\\t\\t\\t        (click)=\\\"$builder.addRule.execute()\\\"\\r\\n\\t\\t\\t\\t\\t        [disabled]=\\\"!$builder.addRule.canExecute()\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-icon>add</mat-icon>Add Rule\\r\\n\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t<button mat-button\\r\\n\\t\\t\\t\\t\\t        (click)=\\\"$builder.remove.execute()\\\"\\r\\n\\t\\t\\t\\t\\t        [disabled]=\\\"!$builder.remove.canExecute()\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-icon>delete_forever</mat-icon>Remove\\r\\n\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t</mat-toolbar>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"q-grid-query-builder-expression\\\">\\r\\n\\t\\t\\t\\t<q-grid-eb-node [model]=\\\"$builder.node\\\">\\r\\n\\t\\t\\t\\t</q-grid-eb-node>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"q-grid-query-builder-expression-line\\\"\\r\\n\\t\\t\\t     [innerHTML]=\\\"$builder.node | qGridQueryBuilderMarkup: $builder.queryService\\\">\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</mat-card-content>\\r\\n\\t\\t<mat-card-actions>\\r\\n\\t\\t\\t<button mat-button\\r\\n\\t\\t\\t        (click)=\\\"$builder.cancel.execute()\\\">\\r\\n\\t\\t\\t\\tCancel\\r\\n\\t\\t\\t</button>\\r\\n\\t\\t\\t<button mat-button\\r\\n\\t\\t\\t        (click)=\\\"$builder.reset.execute()\\\">\\r\\n\\t\\t\\t\\tClear\\r\\n\\t\\t\\t</button>\\r\\n\\t\\t\\t<button mat-button\\r\\n\\t\\t\\t        color=\\\"primary\\\"\\r\\n\\t\\t\\t\\t(click)=\\\"$builder.submit.execute()\\\"\\r\\n\\t\\t\\t\\t[disabled]=\\\"!$builder.submit.canExecute()\\\">\\r\\n\\t\\t\\t\\tApply\\r\\n\\t\\t\\t</button>\\r\\n\\t\\t</mat-card-actions>\\r\\n\\t</mat-card>\\r\\n</ng-template><ng-template key=\\\"plugin-query-builder.tpl.html\\\">\\r\\n\\t<button mat-icon-button\\r\\n\\t        tabindex=\\\"-1\\\"\\r\\n\\t        #trigger=\\\"matMenuTrigger\\\"\\r\\n\\t        [matMenuTriggerFor]=\\\"menu\\\"\\r\\n\\t        aria-label=\\\"Query Builder\\\">\\r\\n\\t\\t<mat-icon class=\\\"q-grid-icon\\\">filter_list</mat-icon>\\r\\n\\t</button>\\r\\n\\t<mat-menu #menu=\\\"matMenu\\\"\\r\\n\\t          class=\\\"q-grid-menu q-grid-query-builder-panel\\\">\\r\\n\\t\\t<q-grid-query-builder-panel q-grid-menu\\r\\n\\t\\t                            (close)=\\\"trigger.closeMenu()\\\"\\r\\n\\t\\t                            *ngIf=\\\"trigger.menuOpen\\\">\\r\\n\\t\\t</q-grid-query-builder-panel>\\r\\n\\t</mat-menu>\\r\\n</ng-template><ng-template key=\\\"plugin-reference-editor.tpl.html\\\"\\n             let-$editor>\\n    <mat-card class=\\\"q-grid-reference-card\\\">\\n        <mat-card-header>\\n            <mat-card-title>{{$editor.caption}}</mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content>\\n            <q-grid-reference [cell]=\\\"$editor.cell\\\"\\n                              [(value)]=\\\"$editor.value\\\"\\n                              [autofocus]=\\\"true\\\"\\n                              (modelChange)=\\\"$editor.model = $event\\\"\\n                              (referenceChange)=\\\"$editor.reference = $event\\\">\\n            </q-grid-reference>\\n        </mat-card-content>\\n        <mat-card-actions>\\n            <button mat-button\\n                    [disabled]=\\\"!$editor.cancel.canExecute()\\\"\\n                    (click)=\\\"$editor.cancel.execute()\\\">Cancel</button>\\n            <button mat-button\\n                    color=\\\"primary\\\"\\n                    [disabled]=\\\"!$editor.submit.canExecute()\\\"\\n                    (click)=\\\"$editor.submit.execute()\\\">Save</button>\\n        </mat-card-actions>\\n    </mat-card>\\n</ng-template><ng-template key=\\\"plugin-reference.tpl.html\\\"\\n             let-$reference>\\n    <q-grid class=\\\"q-grid-embed\\\"\\n            [model]=\\\"$reference.model\\\"\\n            [q-grid-autofocus]=\\\"$reference.autofocus\\\">\\n        <q-grid-toolbar>\\n            <ng-template for=\\\"top\\\">\\n                <div class=\\\"q-grid-progress\\\">\\n                    <q-grid-progress></q-grid-progress>\\n                </div>\\n            </ng-template>\\n        </q-grid-toolbar>\\n    </q-grid>\\n</ng-template><ng-template key=\\\"plugin-status-bar.tpl.html\\\" let-$statusBar>\\n\\t<div class=\\\"q-grid-status-bar\\\">\\n\\t\\t{{$statusBar.columnIndex}}:{{$statusBar.rowIndex}}\\n\\t</div>\\n</ng-template>\\n<ng-template key=\\\"plugin-tab-trap.tpl.html\\\"\\n             let-$tabTrap>\\n    <div q-grid-tab-trap-in=\\\"start\\\"\\n         [q-grid-tab-trap-host]=\\\"$tabTrap\\\">\\n    </div>\\n    <ng-container [ngTemplateOutlet]=\\\"$tabTrap.template\\\">\\n    </ng-container>\\n    <div q-grid-tab-trap-in=\\\"end\\\"\\n         [q-grid-tab-trap-host]=\\\"$tabTrap\\\">\\n    </div>\\n</ng-template><ng-template key=\\\"plugin-title.tpl.html\\\" let-$title>\\r\\n\\t<div class=\\\"q-grid-title\\\">\\r\\n\\t\\t<h3 class=\\\"mat-card-title\\\">\\r\\n\\t\\t\\t{{$title.value}}\\r\\n\\t\\t</h3>\\r\\n\\t</div>\\r\\n</ng-template><ng-template key=\\\"plugin-validator.tpl.html\\\" let-$validator>\\n\\t<ul>\\n\\t\\t<li *ngFor=\\\"let error of $validator.errors; let $index = index\\\">\\n\\t\\t\\t<span *ngIf=\\\"error\\\">{{error}}</span>\\n\\t\\t\\t<span *ngIf=\\\"error && $validator.type === 'array'\\\">: \\\"{{$validator.value[$index]}}\\\"</span>\\n\\t\\t</li>\\n\\t</ul>\\n</ng-template>\\n<ng-template key=\\\"toolbar-bottom.tpl.html\\\">\\r\\n\\t<div class=\\\"layout-row\\\">\\r\\n\\t\\t<div class=\\\"flex\\\">\\r\\n\\t\\t\\t<q-grid-legend></q-grid-legend>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"flex-none\\\">\\r\\n\\t\\t\\t<q-grid-pager></q-grid-pager>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</ng-template>\\r\\n<ng-template key=\\\"toolbar-left.tpl.html\\\">\\r\\n</ng-template>\\r\\n<ng-template key=\\\"toolbar-right.tpl.html\\\">\\r\\n</ng-template>\\r\\n<ng-template key=\\\"toolbar-top.tpl.html\\\">\\r\\n\\t<div class=\\\"layout-row\\\">\\r\\n\\t\\t<div class=\\\"flex-100\\\"\\r\\n\\t\\t     style=\\\"padding: 16px 0;\\\">\\r\\n\\t\\t\\t<q-grid-caption></q-grid-caption>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"flex-auto layout-row\\\"\\r\\n\\t\\t     style=\\\"padding: 12px 0;\\\">\\r\\n\\t\\t\\t<div class=\\\"flex-100\\\">\\r\\n\\t\\t\\t\\t<q-grid-action-bar></q-grid-action-bar>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"flex-auto\\\">\\r\\n\\t\\t\\t\\t<button mat-icon-button\\r\\n\\t\\t\\t\\t        tabindex=\\\"-1\\\"\\r\\n\\t\\t\\t\\t        #trigger=\\\"matMenuTrigger\\\"\\r\\n\\t\\t\\t\\t        [matMenuTriggerFor]=\\\"menu\\\"\\r\\n\\t\\t\\t\\t        aria-label=\\\"Column chooser\\\">\\r\\n\\t\\t\\t\\t\\t<mat-icon class=\\\"q-grid-icon\\\">more_vert</mat-icon>\\r\\n\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t<mat-menu #menu=\\\"matMenu\\\"\\r\\n\\t\\t\\t\\t          class=\\\"q-grid-column-chooser q-grid-menu\\\">\\r\\n\\t\\t\\t\\t\\t<q-grid-column-chooser q-grid-menu\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   q-grid-theme-overlay\\r\\n\\t\\t\\t\\t\\t                       *ngIf=\\\"trigger.menuOpen\\\"\\r\\n\\t\\t\\t\\t\\t                       (cancel)=\\\"trigger.closeMenu()\\\"\\r\\n\\t\\t\\t\\t\\t                       (submit)=\\\"trigger.closeMenu()\\\">\\r\\n\\t\\t\\t\\t\\t</q-grid-column-chooser>\\r\\n\\t\\t\\t\\t</mat-menu>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"q-grid-progress\\\">\\r\\n\\t\\t<q-grid-progress></q-grid-progress>\\r\\n\\t</div>\\r\\n</ng-template>\\r\\n\"","import { Component, ChangeDetectionStrategy, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'q-grid-theme',\n\tstyleUrls: ['./index.scss'],\n\ttemplateUrl: './theme.component.gen.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ThemeComponent {\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ThemeComponent } from './theme.component';\r\nimport { SelectModule } from './components/select/select.module';\r\nimport { ChipsModule } from './components/chips/chips.module';\r\nimport { MenuModule } from './components/menu/menu.module';\r\nimport { ThemeOverlayModule } from './components/theme-overlay/theme-overlay.module';\r\nimport {\r\n\tMatCardModule,\r\n\tMatIconModule,\r\n\tMatButtonModule,\r\n\tMatCheckboxModule,\r\n\tMatSelectModule,\r\n\tMatTooltipModule,\r\n\tMatProgressBarModule,\r\n\tMatInputModule,\r\n\tMatDatepickerModule,\r\n\tMatNativeDateModule,\r\n\tMatChipsModule,\r\n\tMatMenuModule,\r\n\tMatDialogModule,\r\n\tMatListModule,\r\n\tMatAutocompleteModule,\r\n\tMatToolbarModule\r\n} from '@angular/material';\r\nimport {\r\n\tPluginModule,\r\n\tCommonModule as GridCommonModule,\r\n\tTemplateModule,\r\n\tPipeModule,\r\n\tGridModule,\r\n\tVscrollModule,\r\n\tThemeService\r\n} from 'ng2-qgrid';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tThemeComponent\r\n\t],\r\n\texports: [\r\n\t\tThemeComponent\r\n\t],\r\n\timports: [\r\n\t\tChipsModule,\r\n\t\tCommonModule,\r\n\t\tFormsModule,\r\n\t\tGridCommonModule,\r\n\t\tGridModule,\r\n\t\tMatAutocompleteModule,\r\n\t\tMatButtonModule,\r\n\t\tMatCardModule,\r\n\t\tMatCheckboxModule,\r\n\t\tMatChipsModule,\r\n\t\tMatDatepickerModule,\r\n\t\tMatDialogModule,\r\n\t\tMatIconModule,\r\n\t\tMatInputModule,\r\n\t\tMatListModule,\r\n\t\tMatMenuModule,\r\n\t\tMatNativeDateModule,\r\n\t\tMatProgressBarModule,\r\n\t\tMatSelectModule,\r\n\t\tMatToolbarModule,\r\n\t\tMatTooltipModule,\r\n\t\tMenuModule,\r\n\t\tPipeModule,\r\n\t\tPluginModule,\r\n\t\tSelectModule,\r\n\t\tTemplateModule,\r\n\t\tThemeOverlayModule,\r\n\t\tVscrollModule,\r\n\t],\r\n\tentryComponents: [\r\n\t\tThemeComponent\r\n\t]\r\n})\r\nexport class ThemeModule {\r\n\tconstructor(theme: ThemeService) {\r\n\t\ttheme.name = 'material';\r\n\t\ttheme.component = ThemeComponent;\r\n\t}\r\n}\r\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":""}